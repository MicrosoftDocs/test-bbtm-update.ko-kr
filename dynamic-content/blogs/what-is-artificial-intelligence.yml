### YamlMime:Yaml
ms.openlocfilehash: 33f9f489a672a691be41465a5d60581b172e1b25
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900081"
Slug: what-is-artificial-intelligence
Title: AI란 무엇일까요?
Summary: 인공 지능은 차세대 소프트웨어 솔루션을 정의할 것이라고 합니다. 당신은 심지어 원격으로 기술에 참여하는 경우, 당신은 거의 확실히 지난 몇 년 동안 증가 규칙과 용어를 들었을 것이다.
Content: >-
  <p><br>

  인공 지능은 차세대 소프트웨어 솔루션을 정의할 것이라고 합니다. 당신은 심지어 원격으로 기술에 참여하는 경우, 당신은 거의 확실히 지난 몇 년 동안 증가 규칙과 용어를 들었을 것이다. 다음과 같이 제공되는 인공 지능에 대한 다른 정의도 들어보셨을 것입니다.</p>


  <p><em>&ldquo;디지털 컴퓨터 또는 컴퓨터 제어 로봇이 지능형 존재와 일반적으로 관련된 작업을 수행할 수 있는 기능입니다.&rdquo;</em> &ndash; 백과사전 브리타니카</p>


  <p><em>&ldquo;인간이 표시하는 자연 지능과는 달리 기계가 보여주는 지능.&rdquo;</em> &ndash; 키 피 디 아</p>


  <p>이러한 정의는 얼마나 유용한가요? 지능형 존재&rdquo;와 일반적으로 연관된 작업은 정확히 &ldquo;무엇인가요? 많은 사람들에게 이러한 정의는 너무 광범위하거나 성운으로 보일 수 있습니다. 결국, 우리는 인간과 연결할 수있는 많은 작업이 있습니다! 컴퓨터의 컨텍스트에서 인텔리전스 <strong></strong>&rdquo; 를 &ldquo;통해 정확히 무엇을 의미하며, 많은 기존 컴퓨터 시스템이 수행할 수 있는 작업과 어떻게 다른가요? 오늘날의 <strong>인공 지능</strong> 시스템이 과거의 정교한 소프트웨어 시스템과 정확히 다른 점은 무엇인가요?</p>


  <p><br>

  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/39886bca-8962-43fa-ac95-1ba2413dc8ae.png"><img alt="image" border="0" height="442" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/bd67746a-83de-4f46-84b7-ef82d735d8e9.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="698"></a></p>


  <p>인공 지능을 정의&ldquo;하려는 모든 시도는 다소 쓸모가 없다고 주장 할 수 있습니다, 우리는 먼저 제대로 지능&rdquo;을 정의&ldquo;해야하기 때문에, 단어는 다양한 의미를&rdquo; 연상. 그럼에도 불구하고 이 문서에서는 현재 언어에서 인공 지능으로 전달되는 내용에 대한 보다 접근성 있는 정의와 오늘날의&rsquo; AI 시스템의 특성에 대한 몇 가지 설명과 이전 화신보다 지능적인&rdquo; 것으로 더 적절하게 언급&ldquo;되는 이유를 제공하려고 합니다.</p>


  <p>첫째, 20년 전에 인공 지능이라고 불렸던 것과 기존의 컴퓨터 시스템 간의 기술적 차이는 0에 가깝다는 점에 유의해야 합니다. 당시 <strong>전문가 시스템으로</strong> 알려진 지능형 시스템을 만들려는 이전에는<strong> 지능형 동작</strong>을 근사화하기 위한 복잡한 철저한 규칙 구현이 포함되었습니다. 모든 의도와 목적을 위해 이러한 시스템은 수천 줄의 코드를 사용하는 것 외에 다른 과감한 방식으로 기존 컴퓨터와 다르지 않았습니다. 이러한 방식으로 인간의 지능을 복제하려고 할 때의 문제는 너무 많은 규칙이 필요하고 <strong>지능형 존재가</strong> <strong>의사 결정을 내리는</strong> 방식에 매우 근본적인 것을 무시한다는 것이었습니다. 이는 기존 컴퓨터가 정보를 처리하는 방식과는 매우 다릅니다.</p>


  <p>간단한 예제로 설명하겠습니다. 내가 당신의 사무실에 걸어 내가 좋은 주말 단어를 &ldquo;말한다 가정?&rdquo; 당신의 즉각적인 응답은 예&rdquo; 또는 &ldquo;좋은 감사&rdquo;와 같은 것 일 &ldquo;가능성이 높습니다. 이 동작은 매우 사소한 동작처럼 보일 수 있지만 이 간단한 작업에서는 기존 컴퓨터 시스템이 완전히 사용할 수 없는 동작을 즉시 보여 줍니다. 내 질문에 응답, 당신은 효과적으로 응답하는 올바른 방법에 대한 예측을함으로써 모호성을 처리했습니다. 좋은 주말을 말 &ldquo;함으로써 나는 실제로 당신이 좋은 주말&rdquo; 을 했는지 여부를 물어볼 의도가 확실하지 않습니다. 다음은 해당 발언의 몇<strong> 가지 가능한 의도</strong> 입니다.</p>


  <ul>
   <li>좋은 주말이 있었나요?</li>
   <li>주말은 (일반적으로) 좋습니다.</li>
   <li>나는 좋은 주말을 했다.</li>
   <li>그것은 주말에 좋은 축구 게임이었다, 그렇지?&rsquo;</li>
   <li>다가오는 주말은 당신에게 좋은 주말이 될 것인가?</li>
  </ul>


  <p>기타</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09ee32b0-64eb-42f6-9451-6cf5a6d32948.png"><img alt="image" border="0" height="531" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2c0b3d39-0cfe-41f0-b446-2599d9ca9458.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="670"></a></p>


  <p>가장 가능성이 의도 된 의미는 분명 보일 수 있습니다., 하지만 당신이 예&rdquo;로 &ldquo;응답 할 때, 나는 아니오로 &ldquo;응답했다고 가정, 나는 주말에 좋은 축구 게임이었다 의미, 그것은 아니었다&rsquo;?&rdquo;. 그것은 놀라운 것, 하지만 심지어 생각 하지 않고, 당신은 정신 모델에 그 정보를 흡수 할 것 이다, 내가 좋은 주말 말했다 &ldquo;사실과 지난 주말 중요 한 게임이 있었다는 사실을 상관?&rdquo; 그리고 그에 따라 다음 번에 예상된 응답의 확률을 조정 그래서 당신은 제대로 다음 번에 같은 질문을 받을 수 있도록. 당연히, 그 머리를 통해 통과 할 생각되지 않습니다&rsquo;! 이 정보를 자동으로 흡수하고 다음에 다르게 반응하는 <strong>법을 배우는</strong> 신경망(뇌&rdquo;라고도 합니다&ldquo;)이 있습니다.</p>


  <p>핵심은 다음에 응답하는 경우에도 응답하는 올바른 방법에 대한 예측을 계속 수행한다는 것입니다. 이전과 같이 확실하지는&rsquo; 않지만 예측이 다시 실패하면 새 데이터를 수집하여 현재와 같이 인공 지능에 대한 내 제안된 정의로 이어집니다.</p>


  <p>&ldquo;인공 지능은 컴퓨터 시스템이 이전에 수집한 <strong>데이터를</strong> 사용하여 예측을 수행하고 이러한 예측의 오류를 학습하여 미래에&rdquo; 동작하는 방법에 대한 보다 새롭고 정확한 예측을 생성함으로써 모호성을 처리할 수 있는 기능입니다.</p>


  <p>이것은 AI 시스템이 현재 수행하는 것과 정확히 일치하기 때문에 인공 지능에 대한 다소 적절한 정의이며, 더 중요한 것은 인간을 전통적인 컴퓨터 시스템과 분리시키는 인간의 중요한 특성을 반영합니다: 인간은 예측 머신입니다. 위와 같은 매우 사소한 시나리오부터 더 큰 규모로 <strong>배당률을 플레이하는</strong> 것과 관련된 복잡한 시나리오에 이르기까지 하루 종일 모호성을 처리합니다. 이것은 어떤 의미에서 추론의 본질 <strong>입니다</strong>. 다양한 시나리오에 응답하는 방식이 절대적으로 올바른지 거의 알지 못하지만 과거 경험을 기반으로 합리적인 예측을 합니다.</p>


  <p>그냥 재미를 위해, R의 일부 코드와 함께 이전 예제를 설명 할 수 있습니다&rsquo;! R에 익숙하지 않지만 따라가려면 <a href="https://mran.microsoft.com/documents/rro/installation" target="_blank">설치 지침을 참조하세요</a>. 첫째, 특정 사람이 좋은 주말&rdquo;을 말한 &ldquo;시기에 대한 정보를 나타내는 일부 데이터로 시작해보겠습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/38144078-0b56-4e64-95e4-964539b36429.png"><img alt="image" border="0" height="139" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/56429508-0943-4fb9-bd85-9269d34334d5.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="436"></a></p>


  <p>이 예제에서는 <strong>GoodWeekendResponse</strong> 가 <strong>점수 레이블</strong> 이라고 말합니다(즉, 예측하려는 적절한 응답을 나타냅니다). 모델링을 위해 이 경우 &ldquo;예&rdquo; 와 &ldquo;아니요에서 가능한 값이 두 개 이상 있어야 합니다&rdquo;. 간결하게 말하면 대부분의 경우 응답은 '예'&rdquo;입니다&ldquo;.</p>


  <p>데이터를 로지스틱 회귀 모델에 맞출 수 있습니다.</p>


  <pre>

  library(VGAM)

  greetings=read.csv(&#39;c:/AI/greetings.csv&#39;,header=TRUE)

  fit &lt;- vglm(GoodWeekendResponse~., family=multinomial, data=greetings)</pre>


  <p>이제 예상 응답이 이전에 기록한 것과 다른 해당 모델을 예측하려고 하면 어떻게 되나요? 이 경우, 나는 응답이 영국 이동 될 &ldquo;것으로 기대하고있다!&rdquo;. 아래에서 예측을 추가하기 위한 몇 가지 코드가 더 있습니다. 그림에서는 새 입력 데이터를 하드코딩하기만 하면 출력이 굵게 표시됩니다.</p>


  <pre>

  response &lt;- data.frame(FootballGamePlayed=&quot;Yes&quot;, WorldCup=&quot;Yes&quot;, EnglandPlaying=&quot;Yes&quot;, GoodWeekendResponse=&quot;Go England!!&quot;)

  greetings &lt;- rbind(greetings, response)

  fit &lt;- vglm(GoodWeekendResponse~., family=multinomial, data=greetings)

  prediction &lt;- predict(fit, response, type=&quot;response&quot;)

  prediction

  index &lt;- which.max(prediction)

  df &lt;- colnames(prediction)

  df[index]

             <strong> No Yes Go England!!
  1 3.901506e-09 0.5          0.5

  &gt; index &lt;- which.max(prediction)

  &gt; df &lt;- colnames(prediction)

  &gt; df[index]

  [1] &quot;Yes&quot;</strong></pre>


  <p>초기 예측 &ldquo;예&rdquo; 가 잘못되었지만 새 데이터에 대해 예측하는 것 외에도 실제 응답을 기존 모델에 다시 통합했습니다. 또한 현재 데이터를 기준으로 50%의 확률로 새 응답 값 &ldquo;Go England!&rdquo; 가 <strong>학습</strong>되었습니다. 동일한 코드 조각을 다시 실행하면 Go England!&rdquo;가 &ldquo;이전 데이터 증가에 따라 올바른 응답이 될 확률이 높으므로 이번에는 모델이 Go England!로 &ldquo;응답<strong>하기로 결정</strong>했습니다.&rdquo;이 응답이 가장 가능성이 높다는 것을 마침내 알게 되었기 때문입니다!</p>


  <pre>
            <strong>  No       Yes Go England!!
  1 3.478377e-09 0.3333333    0.6666667

  &gt; index &lt;- which.max(prediction)

  &gt; df &lt;- colnames(prediction)

  &gt; df[index]

  [1] &quot;Go England!!&quot;</strong></pre>


  <p>여기에 인공 지능이 있습니까? 글쎄, 분명히 지능의 다른 <strong>수준이</strong> 있다, 인간과 마찬가지로. 물론, 여기에 누락 될 수 있습니다 뉘앙스의 좋은 거래가 있다, 하지만 그럼에도 불구 하 고이 매우 간단한 프로그램 반응 할 수 있을 것입니다., 제한 된 정확도, 하나의 매우 구체적인 항목에 관련 된 데이터에, 뿐만 아니라 그 실수에서 학습 하 고 예측에 따라 조정, 데이터의 다른 조합에 대 한 예상 되는 다른 응답을 고려 하는 철저 한 규칙을 개발할 필요 없이. 이는 오늘날 인간과 마찬가지로 대부분 정교한 예측 머신인 많은 AI 시스템을 뒷받침하는 동일한 원칙입니다. 기계가 더 정교할수록 다양한 모델을 <strong>학습</strong> 하는 데 사용되는 복잡한 데이터 배열을 기반으로 정확한 예측을 수행할 수 있으며, 가장 정교한 AI 시스템은 예측의 정확도를 향상시키기 위해 잘못된 어설션에서 지속적으로 학습할 수 있으므로 인간 <strong>지능</strong>에 근접한 무언가를 나타낼 수 있습니다.</p>


  <h2>기계 학습</h2>


  <p>이 정의에 따라 <strong>기계 학습</strong> 과 <strong>인공 지능</strong>의 차이점이 무엇인지 궁금할 수 있습니다. 결국, 이것이 기계 학습 알고리즘이 수행하는 것과 정확히 일치하지 않고&rsquo; 통계 모델을 사용하여 데이터를 기반으로 예측을 수행합니까? 이는 <strong>기계 학습</strong>의 정의에 따라 크게 달라지지만, 궁극적으로 대부분의 기계 학습 알고리즘은 예측 모델을 생성하기 위해 정적 데이터 집합에 대해<strong> 학습</strong> 되므로 기계 학습 알고리즘은 위에서 제공하는 AI 정의에서 동적의 일부만 용이하게 합니다. 또한 위에서 설명한 예제와 마찬가지로 기계 학습 알고리즘은 <strong>일반적으로 지능형 시스템의</strong> 일부로 <strong>모호성을</strong> 처리하는 기능을 만들기 위해 함께 작업하는 대신 특정 시나리오에 초점을 맞춥니다. 여러 가지 면에서 기계 학습은 뇌에 어떤 뉴런이 있는지 AI에 대한 것입니다. 신중한 작업을 수행할 수 있지만 <strong>지능형 동작</strong>과 유사할 수 있는 동작 배열에서 모호성을 처리하는 기능을 실제로 나타내려면 예측 모델의 복합 <strong>시스템에</strong> 속해야 할 수도 있는 인텔리전스의 구성 요소입니다.</p>


  <h2>유용한 팁</h2>


  <p>AI 시스템을 빌드하는 데는 여러 가지 실질적인 이점이 있지만, 위에서 설명하고 설명한 것처럼 이러한 장점 중 상당수는 출시&rdquo; 시기에 맞춰 피벗&ldquo;됩니다. AI 시스템은 기존의 조달, 엔지니어링 및 유지 관리에 매우 시간이 많이 걸릴 수 있는 철저한 규칙을 빌드할 필요 없이 복잡한 의사 결정을 포함할 수 있습니다. 자체 규칙을&rdquo; 학습&rdquo;하고 &ldquo;빌드할 수 &ldquo;있는 시스템을 개발하면 조직의 성장을 크게 가속화할 수 있습니다.</p>


  <p>Microsofts&rsquo; Azure 클라우드 플랫폼은 <a href="https://docs.microsoft.com/en-us/azure/#pivot=products&amp;panel=ai" target="_blank">AI 및 Machine Learning 도메인</a>에서 신중하고 세분화된 서비스 배열을 제공하므로 AI 개발자와 데이터 엔지니어가 휠을 다시 발명하지 않고 재사용 가능한 API를 사용할 수 있습니다. 이러한 API를 통해 AI 개발자는 위에서 설명한 <strong>지능형 동작</strong> 유형을 표시하는 시스템을 빌드할 수 있습니다.</p>


  <p>Cognitive Services 및 Bot Framework와 같은 미리 학습된 AI 서비스뿐만 아니라 Azure Machine Learning, Visual Studio Code Tools for AI 및 Cognitive Toolkit <a href="https://aischool.microsoft.com/learning-paths" target="_blank">같은 딥 러닝 도구를 포함하여 Microsoft AI 플랫폼을 사용하여 솔루션에 인텔리전스 빌드를 시작하는 방법을 알아보려면 AI School을 방문하세요</a>.</p>
