### YamlMime:Yaml
ms.openlocfilehash: a200f99b95458c8da5f08b82a65dd054807c0247
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900807"
Slug: securing-your-pre-production-environment-in-the-cloud
Title: 클라우드에서 사전 프로덕션 환경 보호
Summary: 이 게시물에서는 매우 간단하지만 강력한 시나리오를 살펴보고 프로덕션에 릴리스하기 전에 코드를 배포하는 데 사용할 웹 애플리케이션 및 스테이징 슬롯을 만듭니다.
Content: >-
  <a href="https://azure.microsoft.com/en-us/documentation/services/app-service/">Azure App Service</a>에서 가장 좋아하는 기능 중 하나는 개발자에게 제공하는 모든 멋진 시간 절약 시나리오의 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-staged-publishing/">배포 슬롯</a> 을 사용하는 것입니다. 간단히 말해서, 사이트 슬롯을 사용하면 개발자가 애플리케이션에 대한 스테이징 환경을 설치한 다음 가동 중지 시간 없이 프로덕션 코드와 원활하게 교환할 수 있습니다. 이 기능에 대해 자주 묻는 질문 중 하나는 출시 준비가 되기 전에 웹에 표시되지 않도록 사전 프로덕션 환경을 보호할 수 있는지 여부입니다.


  좋은 소식은 이 시나리오를 몇 번의 단추 클릭으로 구현할 수 있다는 것입니다. Azure <a href="https://azure.microsoft.com/blog/2014/11/13/azure-websites-authentication-authorization/">App Service 인증 \ 권한 부여</a> 기능은 기본적으로 완벽하게 작동하는 웹앱이므로 사이트 슬롯을 보호하는 데 활용할 수 있습니다.


  이 블로그에서는 매우 간단하면서도 강력한 시나리오를 안내합니다. 프로덕션으로 릴리스하기 전에 코드를 배포하는 데 사용되는 웹 애플리케이션 및 스테이징 슬롯을 만듭니다. 그런 다음 인증 \ 권한 부여 기능을 사용하여 스테이징 슬롯을 보호하므로 <a href="https://azure.microsoft.com/en-us/documentation/services/active-directory/">Azure Active Directory</a> 사용자만 사용할 수 있습니다.소스 코드 리포지토리 및 CI에 대한 GitHub 활용합니다. GitHub 리포지토리는 내 스테이징 환경에 매핑됩니다.


  결과? 안전하게 코드를 개발할 수 있는 안전한 스테이징 환경을 갖춘 Azure 웹앱.

  <h2>시스템 요구 사항</h2>

  아래 단계에서는 사용자가 소유하거나 다음에 액세스할 수 있다고 가정합니다.

  <ul>
   <li>Azure 구독( <a href="https://azure.microsoft.com/en-us/pricing/free-trial/">여기에서</a> 가져오기)</li>
   <li><a href="https://github.com/">GitHub</a> 계정</li>
   <li>Azure App Service에 배포할 수 있는 하나 이상의 리포지토리</li>
   <li>주로 <a href="https://portal.azure.com">Azure Preview 포털</a>(Ibiza라는 코드) 및 기존 <a href="https://manage.windowsazure.com">관리 포털</a>을 사용합니다.</li>
  </ul>

  <h2>설정</h2>

  새 웹 애플리케이션을 만듭니다. 표준 가격 책정 계층을 선택해야 합니다(배포 슬롯은 표준 및 Premium 계층에서만 지원됨).


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Create.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="만들기" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Create_thumb.jpg" alt="Create" width="672" height="776" border="0" /></a>


  &nbsp;


  다음으로 새 웹앱에 대한 스테이징 슬롯을 설정합니다. 웹앱 블레이드까지 아래로 스크롤하고 배포 슬롯을 클릭합니다. 배포 슬롯 블레이드에서 "+" 단추를 클릭하고 슬롯 추가 블레이드에서 슬롯의 이름을 선택합니다(이 샘플에서는 "stage"라고 함). "기존 슬롯에서 구성 복제 안 함" 옵션을 선택해야 합니다. 사이트 슬롯 구성에 대한 자세한 내용은 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-staged-publishing/#configuration-for-deployment-slots">이</a> 문서를 확인하세요.


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Deployment.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="배포" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Deployment_thumb.jpg" alt="Deployment" width="1254" height="690" border="0" /></a>


  &nbsp;


  이제 Github와 새 준비 사이트 간에 연속 통합을 설정해야 합니다. 스테이징 슬롯 블레이드에서 "지속적인 배포 설정"을 클릭한 다음, 원본 리포지토리를 선택하고 CI 원본을 구성합니다(CI 설정에 대한 자세한 내용은 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-publish-source-control/">여기</a>).


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Set-up-continuous-deployment.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="연속 배포 설정" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Set-up-continuous-deployment_thumb.jpg" alt="Set up continuous deployment" width="1366" height="658" border="0" /></a>


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Config.-Source-Control.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="구성. 소스 제어" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Config.-Source-Control_thumb.jpg" alt="Config. Source Control" width="1376" height="682" border="0" /></a>


  &nbsp;


  이제 CI 연결이 있는 스테이징 환경 사이트가 있으므로 Azure Active Directory(<a href="https://azure.microsoft.com/en-us/documentation/services/active-directory/">AAD</a>)를 사용하여 보호합니다. 준비 사이트에서 "모든 설정" 링크를 사용하고 인증/권한 부여 옵션을 선택하고 "Active Directory 인증" 아래의 "켜기" 단추를 클릭합니다.


  <b>참고: </b>Active Directory는 관리 포털에 로그인한 사용자와 연결된 테넌트에 따라 선택됩니다. 사용자 고유의 디렉터리를 만들려면 <a href="https://azure.microsoft.com/en-us/documentation/videos/active-directory-common-sign-up/">이</a> 문서의 지침을 따릅니다.


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Active-Directory-Authentication.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="Active Directory 인증" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Active-Directory-Authentication_thumb.jpg" alt="Active Directory Authentication" width="1275" height="632" border="0" /></a>


  &nbsp;


  이제 갈 준비가 되었습니다! 스테이징 슬롯의 웹 사이트 블레이드에서 찾아보기 단추를 클릭합니다(스테이징 슬롯의 URL은 https://&lt; site nameslot&lt;&gt;- name.azurewebsites.net/&gt;). AAD 사용자 이름을 관리 포털에 사용된 Microsoft ID와 연결한 경우 스테이징 슬롯에 대한 로그인 페이지가 표시되지 않을 수 있습니다. 작동하는지 확인하려면 IE 또는 Incognito for Chrome에서 InPrivate 브라우징을 사용합니다.


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Authentication-for-Stagging.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="스태깅에 대한 인증" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Authentication-for-Stagging_thumb.jpg" alt="Authentication for Stagging" width="1027" height="609" border="0" /></a>


  &nbsp;


  스테이징 슬롯을 사용하여 CI를 설정하면 이제 코드를 프로덕션으로 교환할 수 있습니다. 스테이징 슬롯 블레이드에서 교환 단추를 클릭하여 스테이징 슬롯에서 프로덕션 슬롯으로 코드 \ 콘텐츠를 푸시합니다. <b>참고:</b> 교환할 대상 슬롯(슬롯이 두 개 이상 있는 경우)을 선택할 수 있으며 교환 작업이 시작되기 전에 변경 내용을 미리 확인하고 발생할 수 있는 경고를 해결할 수 있습니다.


  &nbsp;


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/16/Swapping.jpg"><img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="교환" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Swapping_thumb.jpg" alt="Swapping" width="1378" height="674" border="0" /></a>


  &nbsp;


  결론적으로, 사이트 슬롯의 기능과 인증 \ 권한 부여 기능을 결합하면 개발자는 다음을 수행할 수 있습니다.

  <ul>
   <li>웹 애플리케이션에 대한 사전 프로덕션 환경을 설치하고, 프로덕션 환경으로 쉽게 교체하고, 각 환경의 설정을 세부적으로 제어할 수 있습니다.</li>
   <li>사전 프로덕션 환경을 보호하여 일반 사용자에게 표시되지 않도록 합니다.</li>
  </ul>
