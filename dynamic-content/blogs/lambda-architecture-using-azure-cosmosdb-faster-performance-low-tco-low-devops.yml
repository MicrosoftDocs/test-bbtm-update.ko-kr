### YamlMime:Yaml
ms.openlocfilehash: 6e521ff5118aa5a7e39f2cb473726128b48d300d
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899704"
Slug: lambda-architecture-using-azure-cosmosdb-faster-performance-low-tco-low-devops
Title: 'Azure #CosmosDB 사용하는 람다 아키텍처: 더 빠른 성능, 낮은 TCO, 낮은 DevOps'
Summary: Azure Cosmos DB는 수집 및 쿼리를 모두 처리할 수 있는 확장 가능한 데이터베이스 솔루션을 제공하며 개발자는 낮은 TCO를 사용하여 람다 아키텍처를 구현할 수 있습니다. 람다 아키텍처는 대규모 데이터 집합의 효율적인 데이터 처리를 가능하게 합니다. 람다 아키텍처는 일괄 처리, 스트림 처리 및 서비스 계층을 사용하여 빅 데이터를 쿼리하는 데 관련된 대기 시간을 최소화합니다.
Content: >-
  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2540b617-ab4c-458c-8f96-357a73c8a433.png"><img alt="image" border="0" height="210" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fff93ee9-b5cd-4fe4-93c3-44028fc91737.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="724"></a></p>


  <p>Azure Cosmos DB는 일괄 처리 및 실시간 수집 및 쿼리를 모두 처리할 수 있는 확장 가능한 데이터베이스 솔루션을 제공하며 개발자가 낮은 TCO를 사용하여 람다 아키텍처를 구현할 수 있도록 합니다. 람다 아키텍처는 대규모 데이터 집합의 효율적인 데이터 처리를 가능하게 합니다. 람다 아키텍처는 <strong>일괄 처리</strong>, <strong>스트림 처리</strong> 및 <strong>서비스 계층</strong> 을 사용하여 빅 데이터 쿼리와 관련된 대기 시간을 최소화합니다.</p>


  <p>람다 아키텍처를 구현하려면 다음 기술의 조합을 사용하여 실시간 빅 데이터 분석을 가속화할 수 있습니다.</p>


  <ul>
   <li>업계&#39;최초의 글로벌 분산 다중 모델 데이터베이스 서비스인 <a href="https://azure.microsoft.com/services/cosmos-db/">Azure Cosmos DB</a>입니다.</li>
   <li><a href="https://azure.microsoft.com/services/hdinsight/apache-spark/">Azure HDInsight용 Apache Spark</a> - 대규모 데이터 분석 애플리케이션을 실행하는 처리 프레임워크입니다.</li>
   <li>Azure Cosmos DB <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/change-feed">변경 피드</a> - HDInsight의 일괄 처리 계층에 새 데이터를 스트리밍하여 처리합니다.</li>
   <li><a href="https://docs.microsoft.com/en-us/azure/cosmos-db/spark-connector">Spark-Azure Cosmos DB 커넥터</a></li>
  </ul>


  <p>원래의 다층 설계를 기반으로 하는 람다 아키텍처의 기본 사항과 작업을 간소화하는 다시 구조화된&quot; 람다 아키텍처의 &quot;이점을 설명하는 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/lambda-architecture">자세한 문서를</a> 작성했습니다.</p>


  <h2>람다 아키텍처란?</h2>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f18df3c0-a5b4-4daa-a68d-d59489933256.png"><img alt="image" border="0" height="377" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/cfcf8e0e-98cd-42ce-9f2c-adff8e044b77.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="646"></a></p>


  <p>람다 아키텍처의 기본 원칙은 위의 그림에 설명되어 있습니다.</p>


  <ol>
   <li>모든 <strong>데이터는</strong> 일괄 처리 계층과 속도 계층 모두에 푸시됩니다.</li>
   <li><strong>일괄 처리 계층</strong>에는 마스터 데이터 세트(변경 불가능한 추가 전용 원시 데이터 세트)가 있으며, 일괄 처리 보기가 미리 계산됩니다.</li>
   <li><strong>serving 계층</strong>에는 빠른 쿼리에 대한 일괄 처리 보기가 있습니다.</li>
   <li><strong>속도 계층</strong>은 서비스 계층에 대한 처리 시간을 보정하고 최근 데이터만 처리합니다.</li>
   <li>일괄 처리 보기와 실시간 보기의 결과를 병합하거나 개별적으로 ping하여 모든 쿼리에 응답할 수 있습니다.</li>
  </ol>


  <h2>속도 계층</h2>


  <p>속도 계층의 경우 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/change-feed">Azure Cosmos DB 변경 피드 지원을</a> 활용하여 <em>일괄 처리 계층</em>의 상태를 유지하면서 <em>속도</em> 계층에 대한 <em>변경 피드 API</em>를 통해 Azure Cosmos DB 변경 로그를 표시할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7301d4fd-c23c-4678-a515-30736fcddfb3.png"><img alt="image" border="0" height="412" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c792860c-c3ec-4c82-9afa-212a1ad23d45.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="654"></a></p>


  <p>&rsquo;이러한 계층에서 중요한 사항은 다음과 같습니다.</p>


  <ol>
   <li>모든 <strong>데이터</strong>가 Azure Cosmos DB에만 푸시됩니다. 이에 따라 멀티캐스팅 문제를 방지할 수 있습니다.</li>
   <li><strong>일괄 처리 계층</strong>에는 마스터 데이터 세트(변경 불가능한 추가 전용 원시 데이터 세트)가 있으며, 일괄 처리 보기가 미리 계산됩니다.</li>
   <li><strong>서비스 계층</strong>은 다음 섹션에서 설명합니다.</li>
   <li><strong>속도 계층</strong>은 HDInsight(Apache Spark)를 활용하여 Azure Cosmos DB 변경 피드를 읽습니다. 이렇게 하면 데이터를 유지하고 동시에 쿼리하고 처리할 수 있습니다.</li>
   <li>일괄 처리 보기와 실시간 보기의 결과를 병합하거나 개별적으로 ping하여 모든 쿼리에 응답할 수 있습니다.</li>
  </ol>


  <p>코드 예제는 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/lambda-architecture#speed-layer">여기</a>를 참조하세요.</p>


  <h2>일괄 처리 및 서비스 계층</h2>


  <p>새 데이터가 Azure Cosmos DB(속도 계층에 사용되는 변경 피드)에 로드되기 때문에 <strong>마스터 데이터 세트</strong>(변경 불가능한 추가 전용 원시 데이터 세트)가 있는 위치입니다. 이 시점부터 다음 그림과 같이 HDInsight(Apache Spark)를 사용하여 <strong>일괄 처리 계층</strong> 에서 <strong>서비스 계층</strong>까지 사전 컴퓨팅 함수를 수행할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/19cefb16-dc4c-4af7-9d42-d259f3e6b377.png"><img alt="image" border="0" height="396" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c515a38e-17eb-4136-8399-d21f59128b53.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="649"></a></p>


  <p>&rsquo;이러한 계층에서 중요한 사항은 다음과 같습니다.</p>


  <ol>
   <li>멀티캐스팅 문제를 방지하기 위해 모든 <strong>데이터</strong>가 Azure Cosmos DB에만 푸시됩니다.</li>
   <li><strong>일괄 처리 계층</strong>에는 Azure Cosmos DB에 저장되는 마스터 데이터 세트(변경 불가능한 추가 전용 원시 데이터 세트)가 있습니다. HDI Spark를 사용하면 집계를 미리 계산하여 계산된 일괄 처리 보기에 저장할 수 있습니다.</li>
   <li><strong>서버 계층</strong>은 마스터 데이터 세트 및 계산된 일괄 처리 보기에 대한 컬렉션이 있는 Azure Cosmos DB 데이터베이스입니다.</li>
   <li><strong>속도 계층</strong>은 이 문서의 뒷부분에서 설명합니다.</li>
   <li>일괄 처리 보기 및 실시간 보기의 결과를 병합하거나 개별적으로 ping하여 모든 쿼리에 응답할 수 있습니다.</li>
  </ol>


  <p>코드 예제는 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/lambda-architecture#batch-and-serving-layers">여기</a> 를 참조하세요. 전체 코드 샘플 <a href="https://github.com/Azure/azure-cosmosdb-spark/tree/master/samples/lambda">은 다음을 비롯한 azure-cosmosdb-spark/lambda/샘플을</a> 참조하세요.</p>


  <ul>
   <li>람다 아키텍처 다시 작성됨 - Batch 계층 <a href="https://github.com/Azure/azure-cosmosdb-spark/blob/master/samples/lambda/Lambda Architecture Re-architected - Batch Layer.ipynb">HTMLipynb</a> <a href="https://github.com/Azure/azure-cosmosdb-spark/blob/master/samples/lambda/Lambda Architecture Re-architected - Batch Layer.html"></a> | </li>
   <li>람다 아키텍처 다시 작성됨 - Batch에서 서비스 계층 <a href="https://github.com/Azure/azure-cosmosdb-spark/blob/master/samples/lambda/Lambda Architecture Re-architected - Batch to Serving Layer.ipynb">HTMLipynb</a> <a href="https://github.com/Azure/azure-cosmosdb-spark/blob/master/samples/lambda/Lambda Architecture Re-architected - Batch to Serving Layer.html"></a> |  로</li>
  </ul>


  <h2>속도 계층</h2>


  <p>앞에서 언급한 대로 Azure Cosmos DB 변경 피드 라이브러리를 사용하면 일괄 처리 및 속도 계층 간의 작업을 간소화할 수 있습니다. 이 아키텍처에서는 HDInsight를 통해 Apache Spark를 사용하여 데이터에 대해 <em>구조화된 스트리밍</em> 쿼리를 수행합니다. 또한 다른 시스템에서 이 데이터를 액세스할 수 있도록 구조화된 스트리밍 쿼리의 결과를 일시적으로 유지하려고 할 수도 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/abd2c517-d9d9-453e-b2eb-137532797c77.png"><img alt="image" border="0" height="375" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/dafc8294-1fef-46b0-80b9-4722c827e1ea.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="616"></a><br>

  이렇게 하려면 별도의 Azure Cosmos DB 컬렉션을 만들어 구조화된 스트리밍 쿼리의 결과를 저장합니다. 이렇게 하면 Apache Spark뿐 아니라 다른 시스템에서도 이 정보에 액세스할 수 있습니다. Azure Cosmos DB TTL(Time to Live) 기능과 함께 설정된 기간 후에 문서를 자동으로 삭제하도록 구성할 수 있습니다. Azure Cosmos DB TTL 기능에 대한 자세한 내용은 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/time-to-live">TTL 시간이 있는 Azure Cosmos DB 컬렉션의 데이터 만료를 참조</a>하세요.</p>


  <h2>Azure Cosmos DB를 사용하는 람다 아키텍처: 더 빠른 성능, 낮은 TCO, 낮은 DevOps</h2>


  <p>위에서 설명한 대로 Azure Cosmos DB, Azure Cosmos DB 변경 피드 라이브러리, HDInsight의 Apache Spark 및 Azure Cosmos DB용 네이티브 Spark 커넥터를 사용하여 원래 람다 아키텍처(일괄 처리, 서비스 및 속도 계층 포함)를 간소화할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c3200245-5a6d-4c6e-bcc2-7ace3be385bf.png"><img alt="image" border="0" height="369" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/57491d42-77ed-4aa8-888f-af5096b2679d.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="636"></a></p>


  <p>이 경우 작업뿐만 아니라 데이터 흐름도 간소화합니다.</p>


  <ol>
   <li>모든 데이터는 처리를 위해 Azure Cosmos DB에 푸시됩니다.</li>
   <li>일괄 처리 계층에는 마스터 데이터 세트(변경 불가능한 추가 전용 원시 데이터 세트)가 있으며, 일괄 처리 보기가 미리 계산됩니다.</li>
   <li>서비스 계층에는 빠른 쿼리에 대한 데이터의 일괄 처리 보기가 있습니다.</li>
   <li>속도 계층은 서비스 계층에 대한 처리 시간을 보정하고 최근 데이터만 처리합니다.</li>
   <li>일괄 처리 보기와 실시간 보기의 결과를 병합하여 모든 쿼리에 응답할 수 있습니다.</li>
  </ol>


  <h2>다음 단계</h2>


  <p>아직&#39;않은 경우 <a href="https://github.com/Azure/azure-cosmosdb-spark">azure-cosmosdb-spark</a> GitHub 리포지토리에서 Azure Cosmos DB 커넥터로 Spark를 다운로드하고 리포지토리의 추가 리소스를 탐색합니다.</p>


  <ul>
   <li><a href="https://github.com/Azure/azure-cosmosdb-spark/tree/master/samples/lambda">람다 아키텍처</a></li>
   <li><a href="https://github.com/Azure/azure-documentdb-spark/wiki/Aggregations-Examples">분산 집계 예제</a></li>
   <li><a href="https://github.com/Azure/azure-cosmosdb-spark/tree/master/samples">샘플 스크립트 및 노트북</a></li>
   <li><a href="https://github.com/Azure/azure-cosmosdb-spark/wiki/Structured-Stream-demos">구조화된 스트리밍 데모</a></li>
   <li><a href="https://github.com/Azure/azure-cosmosdb-spark/wiki/Change-Feed-demos">변경 피드 데모</a></li>
   <li><a href="https://github.com/Azure/azure-cosmosdb-spark/wiki/Stream-Processing-Changes-using-Azure-Cosmos-DB-Change-Feed-and-Apache-Spark">Azure Cosmos DB 변경 피드 및 Apache Spark를 사용하여 변경 내용 스트림</a></li>
  </ul>


  <p><a href="https://spark.apache.org/docs/latest/sql-programming-guide.html">Apache Spark SQL, DataFrames 및 데이터 세트 가이드 및</a> <a href="https://docs.microsoft.com/en-us/azure/hdinsight/spark/apache-spark-jupyter-spark-sql">Azure HDInsight의 Apache Spark</a> 문서를 검토할 수도 있습니다. <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/lambda-architecture#batch-and-serving-layers">이 문서의 전체 버전은</a> 문서에 게시됩니다. 이 블로그에 설명된 단계를 사용하면 대기업에서 개별 개발자에 이르기까지 누구나 몇 분 만에 Azure Cosmos DB를 사용하여 빅 데이터에 대한 람다 아키텍처를 빌드할 수 있습니다. 지금 <a href="https://azure.microsoft.com/try/cosmosdb/">무료로 Azure Cosmos DB를 사용해 볼</a> 수 있으며, 등록 또는 신용 카드가 필요하지 않습니다. Twitter <a href="https://twitter.com/search?q=%23cosmosDB&amp;src=typd">#CosmosDB</a><a href="https://twitter.com/AzureCosmosDB">@AzureCosmosDB</a>에서 최신 Azure Cosmos DB 뉴스 및 기능을 최신 상태로 유지하세요.</p>


  <p>-&nbsp;&nbsp;&nbsp;Azure Cosmos DB의 친구</p>
