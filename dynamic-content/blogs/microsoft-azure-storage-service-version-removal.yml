### YamlMime:Yaml
ms.openlocfilehash: 16527192971298378f7adc9e02f5c22613ca6dec
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139903168"
Slug: microsoft-azure-storage-service-version-removal
Title: Microsoft Azure Storage 서비스 버전 제거
Summary: '업데이트: 이 블로그 게시물은 더 이상 적용되지 않습니다.  Azure Storage 서비스 버전 제거 계획의 최신 정보는 다음을 방문하세요.https://azure.microsoft.com/en-us/blog/microsoft-azure-storage-service-version-removal-update-extension-to-2016/'
Content: >-
  <p><b><span style="color:#FF0000;">업데이트</span>: 이 블로그 게시물은 <span style="color:#FF0000;">더 이상 적용되지 않습니다</span>.&nbsp; Azure Storage 서비스 버전 제거 계획의 최신 정보는 다음을 방문하세요.<a href="https://azure.microsoft.com/en-us/blog/microsoft-azure-storage-service-version-removal-update-extension-to-2016/">https://azure.microsoft.com/en-us/blog/microsoft-azure-storage-service-version-removal-update-extension-to-2016/</a></b></p>


  <p>이 콘텐츠가 이제 사용되지 않는 ----------------- -------------------</p>


  <p><strong>업데이트: 지정된 버전을 제거하는 기간을 2015년 12월 9일로 연장했습니다.</strong> Storage 서비스는 2008년에 처음 도입되었으며, 그 이후로 각각 프로토콜을 구체화하고 새로운 기능을 추가하는 7개의 버전 업데이트를 릴리스했습니다.&nbsp; 일부 이전 버전의 REST API에서 곧 제거&nbsp;될 예정입니다.&nbsp; 이 게시물은 이러한 버전이 제거된 후에도 애플리케이션이 계속 잘 실행되도록 하기 위해 알아야 할 모든 사항을 간략하게 설명합니다. &nbsp;</p>


  <h1>배경: Storage 서비스 버전 관리</h1>


  <h2>버전 관리란?</h2>


  <p>Azure Storage REST API&rsquo;를 사용하여 액세스합니다.&nbsp; 이러한 API는 2008년에 처음 릴리스되었습니다.&nbsp; 추가 및 변경을 통해 서비스를 개선했으므로 기존 애플리케이션의 호환성이 손상되지 않도록 버전 지정을 사용했습니다.&nbsp; 기존 애플리케이션을 중단시킬 수 있는 변경을 수행할 때마다 애플리케이션에서 명시적으로 사용하도록 옵트인해야 하는 새 버전을 도입합니다.&nbsp; 기존 애플리케이션은 새 버전의&rsquo; 존재에 영향을 받지 않습니다.&nbsp; 스토리지에 대한 호출은 일반적으로 다음 방법 중 하나에서 사용할 버전을 지정합니다. 1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; api-version 쿼리 매개 변수: sv 및 x-ms-version이 지정되지 않았거나 지정된 경우 버전 2014를 사용하는 경우 스토리지에 대한 모든 호출에 대해 지정할 수 있습니다.&nbsp; 이 api-version 매개 변수는 사용되는 서비스 버전을 결정합니다. 2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x-ms-version 요청 헤더: 공유 키 인증을 사용하여 호출하는 데 필요합니다.&nbsp; x-ms-version 헤더는 요청을 해석하는 방법 및 해당 버전의 REST API를 사용하여 클라이언트에 대한 응답을 구성하는 방법을 서비스에 알리는 버전을 지정합니다. 3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SAS 버전 헤더: 버전 2012 및 2013에서 &ldquo;SAS(공유 액세스 서명) 토큰의 sv&rdquo; 매개 변수에 지정된 버전은 프로토콜 버전을 지정합니다.&nbsp; 버전 2014&ldquo;에서 sv&rdquo; 매개 변수는 api-version 쿼리 매개 변수가 지정되지 않은 경우에만 프로토콜 버전을 지정합니다. 4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DefaultServiceVersion: 사용자가 Blob Service의 SetServiceProperties를 사용하여 이 값을 설정하여 지정된 버전이 없는 요청(즉, 공용 Blob에 대한 요청)에 사용할 API 버전을 설정할 수 있습니다. 5)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 기본값: 공용 Blob에 대한 요청이 수행되고 DefaultServiceVersion이 설정되지 않은 경우 서비스 기본값이 사용됩니다.&nbsp; SetContainerACL이 설정되지 않은 한 이 버전은 2008년 초기 버전이었으며, 이 경우 버전 2009가 사용됩니다(SetContainerACL에 사용된 버전에 관계없이). 요청 버전을 확인하는 데 사용되는 전체 규칙은 <a href="https://msdn.microsoft.com/en-us/library/azure/dd894041.aspx">MSDN</a>에서 찾을 수 있습니다.</p>


  <h2>클라이언트 라이브러리 및 도구는 어떻습니까?</h2>


  <p>많은 사용자가 애플리케이션 개발을 위해 Microsoft에서 제공하는 Storage 클라이언트 라이브러리를 사용합니다.&nbsp; 이러한 각 클라이언트 라이브러리는 기본적으로 특정 버전의 REST API에 바인딩됩니다.&nbsp; PowerShell cmdlet 및 AzCopy에도 적용됩니다.&nbsp; Storage Emulator 해당 버전의 Storage Emulator 릴리스될 때 릴리스된 모든 버전의 REST API를 지원합니다.</p>


  <h1>무엇이&rsquo; 바뀌나요?</h1>


  <p>버전 관리 접근 방식은 변경되지 &ndash; 않습니다. 기존 애플리케이션을 중단시킬 수 있는 변경을 할 때마다 REST API의 새 버전을 계속 도입할 것입니다.&nbsp; 그러나 이제 스토리지 서비스의 수명 초기에 릴리스된 몇 가지 이전 서비스 버전을 제거할 예정입니다.</p>


  <h2>제거 세부 정보</h2>


  <h3>어떤 버전이 제거되나요?</h3>


  <p>버전 2012-02-12 이전의 모든 버전은 2015년 8월 1<sup>일에</sup> 제거됩니다.&nbsp; 여기에는 다음 버전이 포함됩니다.</p>


  <ul>
      <li>2008(GA 이전에 릴리스된 버전)</li>
      <li><a href="https://msdn.microsoft.com/en-us/library/windowsazure/dn592122.aspx">버전 2009-04-14</a> (GA 이전 릴리스)</li>
      <li><a href="https://msdn.microsoft.com/en-us/library/windowsazure/dn592117.aspx">버전 2009-07-17</a> (GA 이전 릴리스)</li>
      <li><a href="https://msdn.microsoft.com/en-us/library/windowsazure/dn592121.aspx">버전 2009-09-19</a> (GA 이전 릴리스)</li>
      <li><a href="https://msdn.microsoft.com/en-us/library/windowsazure/dn592120.aspx">버전 2011-08-18</a></li>
  </ul>


  <p>다음 버전은 영향을 받지 않으며 계속 완전히 지원됩니다.</p>


  <ul>
      <li><a href="https://msdn.microsoft.com/en-us/library/azure/dn592123.aspx">버전 12.02.12</a></li>
      <li><a href="https://msdn.microsoft.com/en-us/library/azure/dn592124.aspx">버전 15.08.13</a></li>
      <li><a href="https://msdn.microsoft.com/en-us/library/azure/dd894041.aspx">버전 2014-02-14</a></li>
  </ul>


  <h3>이러한 버전은 언제 제거되나요?</h3>


  <p>영향을 받는 5개 버전은 2015년 8월 1<sup>일에</sup> 제거됩니다.</p>


  <h3>이러한 버전이 제거되면 어떻게 될까요?</h3>


  <p>제거가 적용되는 경우 다음과 같은 변경 내용이 발생합니다.</p>


  <h4>명시적으로 버전이 지정된 요청</h4>


  <p>x-ms-version 요청 헤더(제거된 버전 중 하나로 설정됨)를 사용하여 명시적으로 버전이 지정된 요청은 실패하고 잘못된 버전 헤더로 수행된 요청과 유사한 HTTP 400(잘못된 요청) 상태 코드를 수신합니다.</p>


  <h4>sv&rdquo; 매개 변수가 없는 &ldquo;SAS 요청</h4>


  <p>버전 2012-02-12 이전에는 SAS 요청이 SAS 토큰의 sv&rdquo; 매개 변수에 &ldquo;버전을 지정하지 않았습니다.&nbsp; 이러한 요청의 SAS 토큰 매개 변수는 2009-07-17 REST 버전에 대한 규칙을 사용하여 해석되었습니다.&nbsp; 2012-02-12 이전 버전이 제거되면 x-ms-version이 지원되는 버전으로 지정되었는지 여부에 관계없이 HTTP 400(잘못된 요청) 상태 코드를 수신하여 이러한 요청이 실패합니다.&nbsp; SAS 요청이 계속 작동하려면 sv&rdquo; 매개 변수를 &ldquo;지정해야 합니다.&nbsp; 2014-02-14 버전 이상을 사용하는 것이 좋습니다.</p>


  <h4>명시적 버전이 없는 기본 서비스 버전 및 익명 요청</h4>


  <p><a href="https://msdn.microsoft.com/en-us/library/azure/hh452235.aspx">REST API(Blob Service 속성 설정)</a>를 사용하여 요청의 기본 버전을 버전 2012-02-12 이상으로 설정한 경우 버전 집합이 사용됩니다.&nbsp; 기본 버전이 설정되지 않은 경우 요청이 버전에 구애받지 않는 것으로 가정하고 앞으로 버전 2014-02-14로 응답하기 시작합니다.&nbsp; 확인되지 않은 요청이 새 서비스 버전을 가져오기 시작할 때 호환성이 손상되는 변경이 있는지 여부에 대해서는 보장하지 않으므로 버전을 제공하는 것이 항상 가장 좋습니다. 기본 서비스 버전이 이제 제거된 버전으로 설정된 경우 해당 요청은 명시적으로 버전이 지정된 것으로 간주되며 400 잘못된 요청&rdquo;으로 &ldquo;실패합니다.&nbsp; 기본 서비스 버전이 여전히 지원되는 버전으로 설정된 경우 해당 버전은 계속 사용됩니다.</p>


  <h4>명시적 버전이 없는 SharedKey/SharedKeyLite 요청</h4>


  <p>계정&rsquo; 공유 키를 사용하여 서명된 요청의 경우 x-ms-version 헤더 또는 api-version 쿼리 매개 변수(버전 2014-02-14 이상에서 지원됨)를 사용하여 명시적 버전을 지정하지 않으면 400 잘못된 요청으로 요청이 실패합니다. <b>참고: </b> 스토리지 서비스에 대한 모든 요청의 버전이 명시적으로 지정되도록 하는 것이 모범 사례로 간주됩니다.&nbsp; 버전 2014-02-14부터 요청은 api-version 쿼리 문자열 매개 변수를 사용하여 명시적으로 버전이 지정될 수 있으므로 사용자 지정 헤더를 지정할 수 없는 클라이언트도 쿼리 문자열에 이 매개 변수를 포함하여 버전을 지정할 수 있습니다.&nbsp; Azure Storage 버전 관리 및 따라야 할 모범 사례에 대한 자세한 내용은 <a href="https://msdn.microsoft.com/en-us/library/azure/dd894041.aspx">MSDN</a>을 참조하세요.</p>


  <h2>지원되는 최소 버전/라이브러리/SDK&rsquo;</h2>


  <p>사용자는 가능하면 최신 버전으로 업그레이드해야 합니다.&nbsp; 아래 표는 사용자가 제거할 버전을 대상으로 하는 구성 요소를 사용하는지 신속하게 확인할 수 있도록 하기 위해 제공됩니다.</p>


  <table border="1" cellpadding="0" cellspacing="0">
      <tbody>
          <tr>
              <td valign="top" width="119"><b>언어</b></td>
              <td valign="top" width="628"><b>서비스 버전 2012-02-12 이상을 사용하여 지원되는 초기 버전 &nbsp;</b></td>
          </tr>
          <tr>
              <td valign="top" width="119">.NET</td>
              <td valign="top" width="628">2.0. 이는 Azure SDK 버전 2.1에 처음 포함되었습니다.</td>
          </tr>
          <tr>
              <td valign="top" width="119">Java</td>
              <td valign="top" width="628">0.3</td>
          </tr>
          <tr>
              <td valign="top" width="119">C++</td>
              <td valign="top" width="628">모두</td>
          </tr>
          <tr>
              <td valign="top" width="119">Windows Phone</td>
              <td valign="top" width="628">모두</td>
          </tr>
          <tr>
              <td valign="top" width="119">WinRT</td>
              <td valign="top" width="628">모두</td>
          </tr>
          <tr>
              <td valign="top" width="119">Android</td>
              <td valign="top" width="628">모두</td>
          </tr>
          <tr>
              <td valign="top" width="119">PHP</td>
              <td valign="top" width="628">현재 릴리스된 버전이 2012-02-12 &ndash; 버전을 지원하지 않는 경우 업데이트 &nbsp; 가 곧 제공될 예정입니다.</td>
          </tr>
          <tr>
              <td valign="top" width="119">Node.js</td>
              <td valign="top" width="628">현재 릴리스된 버전은 2012-02-12를 지원합니다.</td>
          </tr>
          <tr>
              <td valign="top" width="119">Ruby</td>
              <td valign="top" width="628">현재 릴리스된 버전은 2012-02-12를 지원합니다.</td>
          </tr>
          <tr>
              <td valign="top" width="119">Python</td>
              <td valign="top" width="628">현재 릴리스된 버전은 2012-02-12를 지원합니다.</td>
          </tr>
          <tr>
              <td valign="top" width="119">PowerShell</td>
              <td valign="top" width="628">모두</td>
          </tr>
          <tr>
              <td valign="top" width="119">CLI</td>
              <td valign="top" width="628">현재 릴리스된 버전은 2012-02-12를 지원합니다.</td>
          </tr>
      </tbody>
  </table>


  <p>&nbsp;</p>


  <h1>  어떻게 해야 합니까?</h1>


  <p>제거 후에도 애플리케이션이 계속 제대로 작동하도록 하려면 다음 작업을 수행해야 합니다.</p>


  <h2>애플리케이션을 확인하여 사용 중인 버전을 찾습니다.</h2>


  <p>가장 먼저 해야 할 일은 애플리케이션에서 사용 중인 REST 버전을 확인하는 것입니다.&nbsp; 애플리케이션이 사용자의 통제 하에 있고 Azure Storage 호출하는 모든 구성 요소를 알고 있다는 확신이 있는 경우 위의 목록에 사용된 구성 요소를 확인하거나 스토리지에 대한 호출을 위해 고유한 코드를 작성한 경우 코드를 검사하여 이를 확인할 수 있습니다. 더 강력한 검사로, 또는 배포된 구성 요소의 버전이 확실하지 않은 경우 <a href="https://msdn.microsoft.com/en-us/library/hh343270.aspx">로깅을 사용하도록 설정</a>하여 스토리지 계정에 수행되는 요청을 기록할 수 있습니다.&nbsp; 로그에는 <a href="https://msdn.microsoft.com/en-us/library/hh343259.aspx">요청 버전이 포함되어</a> 있으며, 계획된 제거가 포함된 버전을 사용하여 요청이 이루어지고 있는지 확인하는 데 사용할 수 있습니다.&nbsp; 다음은 샘플 로그 항목입니다. 이 경우 사용된 버전이 강조 표시된 &ndash; 상태에서 요청은 2009-09-19 버전을 암시적으로 사용하는 익명 <b>GetBlob</b> 요청이었습니다. 1.0;2011-08-09T18:52:40.9241789Z; GetBlob; AnonymousSuccess;200;18;10;anonymous;; myaccount;Blob;&quot; &quot;https:// myaccount.blob.core.windows.net/thumbnails/lake.jpg?timeout=30000;&quot; /myaccount/thumbnails/lake.jpg&quot;;a84aa705-8a85-48c5-b064-b43bd22979c3;0;; 123.100.2.10;2009-09-19;252;0;265;100;0;;&quot; &quot;0x8CE1B6EA95033D5; 금요일, 09-8월-11 18:52:40 GMT;;;;&quot;8/ 9/2011 6:52:40 PM ba98eb12-700b-4d53-9230-33a3330571fc&quot;</p>


  <h2>변경 내용</h2>


  <p>제거될 버전을 보여 주는 로그 항목이 있으면 해당 구성 요소를 찾아서 계속 작동하는지 확인해야 합니다(해당 암시적 버전 &ndash; 이 단순히 위에 표시되므로 확인되지 않은 요청이 계속 작동할 수 있음) 사용 중인 버전을 변경하는 적절한 단계를 수행해야 합니다.&nbsp; 가장 일반적으로 다음 두 단계 중 하나가 사용됩니다. 1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 일반적으로 라이브러리/도구의 이후 버전으로 마이그레이션하여 요청에 지정된 버전을 변경합니다.&nbsp; 가능하면 최신 버전으로 마이그레이션하여 가장 향상된 기능과 수정 사항을 얻을 수 있습니다. 2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 제거 전에 동작을 확인할 수 있도록 이제 기본 서비스 버전을 지원되는 버전 중 하나로 설정합니다.&nbsp; 이는 명시적 버전이 없는 익명 요청에만 적용됩니다. 애플리케이션을 최신 버전으로 마이그레이션할 때 각 서비스 버전에 대해 위의 연결된 변경 목록을 검토하고 철저히 테스트하여 업데이트한 후&rsquo; 애플리케이션이 제대로 작동하는지 확인해야 합니다.&nbsp; 서비스 버전 업데이트에는 구문 중단(요청이 실패 또는 매우 다르게 형성된 응답을 수신함) 및 의미 체계 중단(요청이 다른 것을 의미하는 유사한 응답을 수신함)이 모두 포함되어 있습니다.</p>


  <h2>마이그레이션 후 유효성 검사</h2>


  <p>마이그레이션 후에는 더 이상 이전 버전을 찾을 수 없는 로그의 유효성을 검사해야 합니다.&nbsp; 애플리케이션에서 제거할 버전을 사용하지 않는지 확인하는 가장 확실한 방법입니다.&nbsp; 이전 버전(예: 하루에 한 번 실행되는 예약된 작업)을 사용하는 작업/워크로드가 거의 실행되지 않는지 확인하기 위해 충분한 기간 동안 로그를 확인해야 합니다.</p>


  <h1>결론</h1>


  <p>2015년 8월 1<sup>일에</sup> 이전 서비스 버전이 제거될 때 영향을 받는 것을 방지하기 위해 사용자가 지금 애플리케이션 업그레이드를 시작하는 것이 좋습니다.</p>
