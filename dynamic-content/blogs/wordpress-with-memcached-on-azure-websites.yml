### YamlMime:Yaml
ms.openlocfilehash: 7231e8c46fe8a8a522d715a9bdd9b48c6b622917
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139898786"
Slug: wordpress-with-memcached-on-azure-websites
Title: Azure 웹 사이트에서 Memcached를 사용하는 WordPress
Summary: Azure 웹 사이트 서비스에서 실행되는 WordPress 웹 사이트의 성능을 향상시키려고 합니까? 그렇다면 웹 사이트 속도를 높일 수 있는 캐시가 필요합니다. 웹 사이트가 무거우면...
Content: "Azure 웹 사이트 서비스에서 실행되는 WordPress 웹 사이트의 성능을 향상시키려고 합니까? 그렇다면 웹 사이트 속도를 높일 수 있는 캐시가 필요합니다. 웹 사이트에서 트래픽이 많은 경우 일종의 분산 메모리 캐싱 메커니즘을 설정하는 것이 최적입니다.\n\n<strong>Memcached</strong> 는 범용 분산 메모리 캐싱 시스템입니다. 일반적으로 RAM에서 데이터 및 개체를 캐싱하여 동적 데이터베이스 기반 웹 사이트를 가속화하여 외부 데이터 원본(예: 데이터베이스 또는 API)을 읽어야 하는 횟수를 줄이는 데 사용됩니다. Memcached 시스템은 클라이언트-서버 아키텍처를 사용합니다. 웹 사이트가 될 클라이언트는 클라이언트 쪽 라이브러리를 사용합니다. 이 경우 PECL memcached 라이브러리는 포트 11211에서 해당 서비스를 노출하는 서버에 연결합니다. 각 클라이언트는 모든 서버를 알고 있습니다. 서버는 서로 통신하지 않습니다.\n\n클라이언트가 특정 키에 해당하는 값을 설정하거나 읽으려는 경우 클라이언트 라이브러리는 먼저 키 해시를 계산하여 사용할 서버를 결정합니다. 그런 다음 해당 서버에 연결합니다. 서버는 키의 두 번째 해시를 계산하여 해당 값을 저장하거나 읽을 위치를 결정합니다.\n\nMemcached 클라이언트는 memcached 서버를 일시적인 캐시로 처리해야 합니다. 필요한 경우 Memcached에 저장된 데이터가 여전히 있다고 가정할 수 없습니다. <em>MemcacheDB, Couchbase Server,</em> <em>Varnish </em>및 기타 데이터베이스 서버는 Memcached 프로토콜 호환성을 유지하면서 영구 스토리지를 제공합니다.\n\n이 자습서에서는 다음 방법에 대해 알아봅니다.\n<ul>\n <li>Azure Ubuntu VM에서 Memcached 서버 설정</li>\n <li>Memcached를 사용하여 WordPress 사이트 구성</li>\n</ul>\n<h4><strong>Azure VM에서 Memcached 설정 </strong></h4>\nAzure 관리 포털에 로그인하고 Ubuntu VM을 만듭니다. 자세한 내용은 <a href=\"https://azure.microsoft.com/en-us/manage/linux/tutorials/virtual-machine-from-gallery/\">Virtual Machine 갤러리에서 Linux VM을 만드는 방법을 참조하세요</a> . Azure 계정이 없는 경우 30일 <a href=\"https://azure.microsoft.com/en-us/pricing/free-trial/\">무료 평가판을</a> 사용해 보세요(azure 리소스에 Windows $200입니다!).\n\nUbuntu VM에 액세스하려면 <a href=\"https://www.putty.org/\">Putty</a>와 같은 SSH 클라이언트를 설치합니다. 자세한 내용은 <a href=\"https://azure.microsoft.com/en-us/manage/linux/how-to-guides/ssh-into-linux/\">Linux VM에 SSH하는 방법을 참조하세요</a> . putty 클라이언트를 열고 VM 이름(예: <strong>memcachesrv.cloudapp.net</strong>)을 입력하고 <strong>열기</strong>를 클릭합니다.\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8272.graphic.png-550x526.png\"><img class=\"alignnone  wp-image-132481\" alt=\"8272.graphic.png-550x526\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8272.graphic.png-550x526.png\" width=\"495\" height=\"477\" /></a>\n\n&nbsp;\n\n머신 관리자 사용자를 사용하여 로그인한 후 다음 명령을 실행합니다(이 경우 <strong><em>azureuser</em></strong>임). 루트 사용자 권한으로 Linux 셸을 시작하고 기존 리포지토리의 패키지 목록을 최신 버전의 패키지 및 VM에 대한 종속성으로 다운로드/업데이트합니다(그림 2 참조).\n\n<span style=\"font-family: courier new,courier;\">sudo -s</span>\n\n<span style=\"font-family: courier new,courier;\">apt-get 업데이트</span>\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4377.Sunitha-Muthukrishna-WordPress-with-Memcached-on-Azure-websites-img2.PNG-550x526.png\"><img class=\"alignnone  wp-image-132471\" alt=\"4377.Sunitha Muthukrishna - WordPress with Memcached on Azure websites-img2.PNG-550x526\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4377.Sunitha-Muthukrishna-WordPress-with-Memcached-on-Azure-websites-img2.PNG-550x526.png\" width=\"550\" height=\"474\" /></a>\n\n기본적으로 포트 11211은 차단됩니다. 이 포트를 열려면 <em>Azure 관리 포털</em> 에 로그인하여 VM의 대시보드에 액세스해야 합니다. <strong>엔드포인트를</strong> 클릭하고 포트 11211에 대한 새 엔드포인트를 추가합니다.\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1385.Sunitha-Muthukrishna-WordPress-with-Memcached-on-Azure-websites-img3.png-550x526.png\"><img class=\"alignnone  wp-image-132461\" alt=\"1385.Sunitha Muthukrishna - WordPress with Memcached on Azure websites-img3.png-550x526\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1385.Sunitha-Muthukrishna-WordPress-with-Memcached-on-Azure-websites-img3.png-550x526.png\" width=\"550\" height=\"507\" /></a>\n<h4>Memcached 설치</h4>\nmemcached를 설치하려면 몇 가지 단계가 필요합니다.시작하려면 <strong>apt-get</strong>을 통해 memcached를 설치합니다.\n\n<span style=\"line-height: 125%; font-family: 'Courier New'; font-size: 10pt;\">sudo apt-get install memcached</span>\n\n&nbsp;\n\n서버에 컴파일러가 없는 경우 memcached를 설치하기 위해 <strong>build-essential</strong> 을 다운로드할 수 있습니다.\n\n<span style=\"font-family: courier new,courier;\">sudo apt-get install build-essential</span>\n\n&nbsp;\n\n다음 명령을 사용하여 <em>memcached 구성 파일(memcached.conf</em>)을 편집합니다.\n\n<span style=\"line-height: 125%; font-family: 'Courier New'; font-size: 10pt;\">sudo nano /etc/memcached.conf </span>\n\n35줄 앞에 #을 추가하여 줄 주석 처리\n\n<span style=\"font-family: courier new,courier;\">-l 127.0.0.1</span>\n\n<strong>Memcached를 사용하여 WordPress 구성 </strong>\n<ul>\n <li>FTP를 사용하여 사이트에 액세스합니다.</li>\n <li><strong>bin </strong>폴더를 만듭니다.</li>\n <li>여기에서 memcached PECL 확장을 다운로드하고 복사 <a href=\"https://windows.php.net/downloads/pecl/releases/memcache/3.0.8/php_memcache-3.0.8-5.4-nts-vc9-x86.zip\">합니다</a> . 이 확장은 PHP5.4(32비트)용입니다. 웹 사이트가 다른 구성을 사용하는 경우 <a href=\"https://pecl.php.net/package/memcache/3.0.8/windows\">여기에서</a> 적절한 DLL을 선택합니다.</li>\n <li>관리 포털에 로그인하여 WordPress 웹 사이트 구성을 업데이트합니다. <strong>구성</strong>의 <strong>앱 설정</strong> 섹션에서 다음을 설정합니다.</li>\n</ul>\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4617.Sunitha-Muthukrishna-WordPress-with-Memcached-on-Azure-websites-img4.png-550x526.png\"><img class=\"alignnone  wp-image-132451\" alt=\"4617.Sunitha Muthukrishna - WordPress with Memcached on Azure websites-img4.png-550x526\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4617.Sunitha-Muthukrishna-WordPress-with-Memcached-on-Azure-websites-img4.png-550x526.png\" width=\"550\" height=\"117\" /></a>\n<ul>\n <li>이 <a href=\"https://wordpress.org/plugins/memcached/\">링크</a>에서 <strong><em>Memcached 개체 캐시 플러그 인</em></strong> 다운로드</li>\n <li><strong>object-cache.php</strong>를 <strong>wp-content 폴더에</strong> 복사합니다.</li>\n <li><strong>wp-config.php file</strong>에서 memcached 서버 세부 정보를 지정합니다.</li>\n</ul>모두의 \n<span style=\"font-family: courier new,courier;\">/* 바로 위에 비슷한 것을 추가, 편집을 중지! 해피 블로깅. </span>\n\n<span style=\"font-family: courier new,courier;\">*/</span>\n\n<span style=\"font-family: courier new,courier;\">$memcached_servers = array(</span>\n\n<span style=\"font-family: courier new,courier;\">            'default' =&gt; array('memcachesrv.cloudapp.net:11211' )</span>\n\n<span style=\"font-family: courier new,courier;\">);</span>\n<ul>\n <li><a href=\"https://wordpress.org/plugins/batcache/\">여기에서</a> <strong><em>Batcache 플러그 인</em></strong> 다운로드</li>\n <li><strong>wp-content </strong>디렉터리에 <strong>advanced-cache.php </strong>업로드</li>\n <li>파일의 시작 부분에 있는 <strong>wp-config.php</strong> 파일에 아래 줄을 추가합니다.</li>\n</ul>\n<span style=\"font-family: courier new,courier;\"> define('WP_CACHE',true);</span>\n<h4><strong>캐시가 작동하는지 테스트하는 방법</strong></h4>\n홈페이지를 두 번 이상 다시 로드하여 캐싱이 작동하는지 테스트하고 html 원본을 봅니다. 초기 로드 시 /head&gt; 닫는 태그를 &lt;justabove하면 다음과 유사한 주석이 표시됩니다.\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2235.Screenshot-1.png-550x526.png\"><img class=\"alignnone  wp-image-132441\" alt=\"2235.Screenshot 1.png-550x526\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2235.Screenshot-1.png-550x526.png\" width=\"410\" height=\"44\" /></a>\n\nWordPress 페이지를 몇 번 새로 고치면 캐시에서 페이지가 로드됨을 나타내는 주석이 변경됩니다.\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1830.Screenshot-2.png-550x526.png\"><img class=\"alignnone  wp-image-132431\" alt=\"1830.Screenshot 2.png-550x526\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1830.Screenshot-2.png-550x526.png\" width=\"335\" height=\"90\" /></a>\n<h4><strong>Memcache Server 통계 확인 </strong></h4>\n서버의 상태를 이해하기 위해 정기적으로 memcached 서버를 추적하는 것이 좋습니다.이 작업을 수행하는 몇 가지 방법은 다음과 같습니다.\n<ol>\n <li>\"apt-get update\" 명령을 실행한 경우 Ubuntu VM에서 이미 사용할 수 있는 netcat 유틸리티를 사용할 수 있습니다. 포트 11211에서 수신 대기하는 memcached 서버에 대한 명령 \"통계\"와 함께 Netcat을 실행하면 memcached 서버의 상태가 제공됩니다.</li>\n</ol>\n<span style=\"font-family: courier new,courier;\"> 에코 \"통계\" | nc memcachesrv.cloudapp.net 11211</span>\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4682.Sunitha-Muthukrishna-WordPress-with-Memcached-on-Azure-websites-img5.PNG-550x526.png\"><img class=\"alignnone  wp-image-132421\" alt=\"4682.Sunitha Muthukrishna - WordPress with Memcached on Azure websites-img5.PNG-550x526\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4682.Sunitha-Muthukrishna-WordPress-with-Memcached-on-Azure-websites-img5.PNG-550x526.png\" width=\"401\" height=\"526\" /></a>\n\n&nbsp;\n\n2. <a href=\"https://en.wikipedia.org/wiki/Watch_(Unix)\">watch</a> 명령을 사용하여 2초마다 상태를 확인하고 상태를 나열할 수 있습니다.\n\n<code>             watch \"echo stats <span style=\"font-family: courier new,courier;\">|</span></code><span style=\"font-family: courier new,courier;\">nc memcachesrv.cloudapp.net 11211<code>\"</code></span>\n\n3. PHP memcached 확장의 <a href=\"https://www.php.net/manual/en/memcache.getstats.php\">Memcache::getStats()</a> API를 호출하여 프로그래밍 방식으로 이 작업을 수행할 수 있습니다.\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6557.new-image.png-550x526.png\"><img class=\"alignnone  wp-image-132411\" alt=\"6557.new image.png-550x526\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6557.new-image.png-550x526.png\" width=\"550\" height=\"114\" /></a>\n<h4><strong>Future 읽기 </strong></h4>\n<ul>\n <li><a href=\"https://memcached.org/\">Memcached</a></li>\n <li><a href=\"https://www.php.net/manual/en/class.memcache.php\">PHP Memcache 클래스</a></li>\n <li>NetCat 유틸리티(Linux)</li>\n <li><a href=\"https://pecl.php.net/package/memcache/3.0.8/windows\">Memcache용 PECL 패키지(Windows)</a></li>\n</ul>\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;"
