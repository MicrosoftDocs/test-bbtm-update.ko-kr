### YamlMime:Yaml
ms.openlocfilehash: ba92dfb721b8b0ec8ff6858a5f983bc9193420d2
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899456"
Slug: announcing-azure-sdk-node-2-preview
Title: Node.js 2.0 미리 보기용 Azure SDK 발표
Summary: 오늘 Node.js Azure SDK의 2.0.0 미리 보기를 발표하게 되어 기쁩니다. 이 업데이트는 생산성을 높이는 데 도움이 되는 기능으로 가득하며 SQL 및 DocumentDB 관리와 같은 서비스를 위한 20개의 새로운 모듈을 추가했습니다.
Content: >-
  <p>오늘&#39;Node.js Azure SDK의 2.0 미리 보기를 발표하게 되어 기쁩니다. 이 업데이트는 생산성을 높이는 데 도움이 되는 기능으로 가득하며 SQL 및 DocumentDB 관리와 같은 서비스를 위한 20개의 새로운 모듈을 추가할&#39;있습니다.</p>


  <p>Node.js용 Azure SDK 사용량이 계속 증가함에 따라 SDK가 Azure에서 빌드하는 데 어떻게 도움이 되는지, 그리고 일부 변경으로 생산성을 높일 수 있는 방법에 Node.js 대한 커뮤니티의 많은 피드백을&#39;. 이러한 피드백을 염두에 두고, 모듈 자체에 대한 향상된 기능과 Visual Studio Code 더 나은 작업을 위해 몇 가지 업데이트를 포함하여 개발자 환경을 크게 개선했습니다.</p>


  <p>미리 보기 릴리스이므로 여러분이 직면한 문제나 즐거운 경험에 대한 피드백을 우리와 공유하는 것이 매우 중요할&#39;있습니다. <a href="https://github.com/Azure/azure-sdk-for-node/issues">GitHub 문제를 열</a>거나 질문이나 피드백을 사용하여 <a href="https://azure-developers.azurewebsites.net/">Azure Developers Slack</a> 팀에 직접 연결하세요.</p>


  <h2>Promise</h2>


  <p>모듈을 사용하는 방식을 통해 사람들이 작성하고 유지 관리하는 코드를 개선할 수 있는 많은 기회를&#39;.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1bf46ce3-5ca6-4c40-abac-0725226c2cd4.png"><img alt="promises" border="0" height="589" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/44d7372c-005c-401c-bddb-a1b5d2919769.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="약속" width="1151"></a></p>


  <p>또한 TypeScript 또는 ES2017 환경에서 비동기 및 대기를 사용할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b257b4a6-95f2-4721-a93d-36dcfe6e456e.png"><img alt="typescript-async" border="0" height="468" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5de63db1-972c-4037-a93f-093d2f9a3ebf.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="typescript-async" width="1165"></a></p>


  <h2>업데이트된 입력</h2>


  <p>Visual Studio Code&#39;풍부한 Intellisense 지원을 통해 앱을 훨씬 빠르고 직관적으로 빌드할 수 있습니다. Azure SDK를 사용하여 빌드하는 작업도 예외는 아니고 입력이 업데이트되고 개선되어 최상의 환경을 제공합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c6112b15-ee88-4e57-81e2-ec1104fba031.png"><img alt="typings" border="0" height="450" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b400af20-4d33-4010-808a-de5527de109c.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="입력" width="1183"></a></p>


  <h2>새 모듈</h2>


  <p>기존 모듈에 대한 업데이트 외에도 이 업데이트에는 20개의 새 모듈의 미리 보기 릴리스가 포함되어 있습니다.</p>


  <ul>
   <li>Advisor Management(<a href="https://www.npmjs.com/search?q=azure-arm-advisor"><u>azure-arm-advisor</u></a>)</li>
   <li>Automation Management(<a href="https://www.npmjs.com/search?q=azure-arm-automation"><u>azure-arm-automation</u></a>)</li>
   <li>청구 관리(<a href="https://www.npmjs.com/search?q=azure-arm-billing"><u>azure-arm-billing</u></a>)</li>
   <li>Cognitive Services 관리(<a href="https://www.npmjs.com/search?q=azure-arm-cognitiveservices"><u>azure-arm-cognitiveservices</u></a>)</li>
   <li>Container Registry Management(<a href="https://www.npmjs.com/search?q=azure-arm-containerregistry"><u>azure-arm-containerregistry</u></a>)</li>
   <li>Customer Insights 관리(<a href="https://www.npmjs.com/search?q=azure-arm-customerinsights"><u>azure-arm-customerinsights</u></a>)</li>
   <li>DocumentDB 관리(<a href="https://www.npmjs.com/search?q=azure-arm-documentdb"><u>azure-arm-documentdb</u></a>)</li>
   <li>논리 관리(<a href="https://www.npmjs.com/search?q=azure-arm-logic"><u>azure-arm-logic</u></a>)</li>
   <li>Machine Learning 관리(<a href="https://www.npmjs.com/search?q=azure-arm-machinelearning"><u>azure-arm-machinelearning</u></a>)</li>
   <li>Media Services 관리(<a href="https://www.npmjs.com/search?q=azure-arm-mediaservices"><u>azure-arm-mediaservices</u></a>)</li>
   <li>운영 Insights 관리(<a href="https://www.npmjs.com/search?q=azure-arm-operationalinsights"><u>azure-arm-operationalinsights</u></a>)</li>
   <li>Recovery Services 백업 관리(<a href="https://www.npmjs.com/search?q=azure-arm-recoveryservicesbackup"><u>azure-arm-recoveryservicesbackup</u></a>)</li>
   <li>Recovery Services Management(<a href="https://www.npmjs.com/search?q=azure-arm-recoveryservices"><u>azure-arm-recoveryservices</u></a>)</li>
   <li>릴레이 관리(<a href="https://www.npmjs.com/search?q=azure-arm-relay"><u>azure-arm-relay</u></a>)</li>
   <li>Scheduler Management(<a href="https://www.npmjs.com/search?q=azure-arm-scheduler"><u>azure-arm-scheduler</u></a>)</li>
   <li>검색 관리(<a href="https://www.npmjs.com/search?q=azure-arm-search"><u>azure-arm-search</u></a>)</li>
   <li>ServiceFabric Management(<a href="https://www.npmjs.com/search?q=azure-arm-servicefabric"><u>azure-arm-servicefabric</u></a>)</li>
   <li>ServiceMap Management(<a href="https://www.npmjs.com/search?q=azure-arm-servicemap"><u>azure-arm-servicemap</u></a>)</li>
   <li>SQL 관리(<a href="https://www.npmjs.com/search?q=azure-arm-sql"><u>azure-arm-sql</u></a>)</li>
   <li>내보내기 관리 가져오기 Storage(<a href="https://www.npmjs.com/search?q=azure-arm-storageimportexport"><u>azure-arm-storageimportexport</u></a>)</li>
  </ul>


  <h2>미리 보기로 이동</h2>


  <p>미리 보기로 마이그레이션하는 것은 복잡성이 낮으며 코드를 변경하지 않고 직접 대체해야 합니다. 미리 보기로 마이그레이션할 때는 ES6 기능을 사용하는 새로운 구현으로 인해 <strong>Node.js 버전 6.x가 필요하다는</strong> 점에 유의해야&#39;. <em>모든 기존 콜백 기반 메서드는 계속 작동합니다. 그러나 최종 매개 변수를 생략하면 메서드가 프라미스를 반환합니다</em>.</p>


  <h2>사용자 지정 요청 보내기</h2>


  <p>런타임 <em>ms-rest 및 ms-rest-azure</em><strong></strong>에 <em></em>대한 새 업데이트를 사용하면 인증된 클라이언트를 사용하여 Azure에 대한 일반 요청을 수행할 수 있습니다. 이는 문제를 디버깅하거나 Azure API에 대한 사용자 지정 요청을 수행할 때 유용합니다.</p>


  <p>다음 예제에서는 구독의 모든 리소스 그룹을 가져오는 사용자 지정 장기 실행 요청을 만든 다음, 결과를 표준화에 씁니다. 자세한 설명서는 <a href="https://azure.github.io/azure-sdk-for-node/ms-rest-azure/latest/AzureServiceClient.html#sendLongRunningRequest">GitHub</a> 사용할 수 있습니다.</p>


  <pre>

  const msrest = require(&#39;ms-rest&#39;);

  const msRestAzure = require(&#39;ms-rest-azure&#39;);


  const clientId = process.env[&#39;CLIENT_ID&#39;];

  const secret = process.env[&#39;APPLICATION_SECRET&#39;];

  const domain = process.env[&#39;DOMAIN&#39;]; // Also known as tenantId.

  const subscriptionId = process.env[&#39;AZURE_SUBSCRIPTION_ID&#39;];


  msRestAzure.loginWithServicePrincipalSecret(clientId, secret, domain).then((creds) =&gt; {
    let client = new msRestAzure.AzureServiceClient(creds);

    let options = {
      method: &#39;GET&#39;,
      url: `https://management.azure.com/subscriptions/${subscriptionId}/resourcegroups?api-version=2016-09-01`,
      headers: {
        &#39;user-agent&#39;: &#39;MyTestApp/1.0&#39;
      }
    };

    return client.sendLongRunningRequest(options);
  })

  .then(console.dir.bind(console))

  .catch(console.error.bind(console));</pre>
