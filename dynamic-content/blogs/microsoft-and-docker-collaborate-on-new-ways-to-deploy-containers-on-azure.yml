### YamlMime:Yaml
ms.openlocfilehash: 411f21cbcfb0b3bc99c3a334aaad96f9a7906f4d
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902951"
Slug: microsoft-and-docker-collaborate-on-new-ways-to-deploy-containers-on-azure
Title: Microsoft 및 Docker가 Azure에서 컨테이너를 배포하는 새로운 방법에 대해 공동 작업
Summary: 이제 개발자는 그 어느 때보다 빠르게 증가하는 고객의 요구를 충족하기 위해 민첩성이 필요합니다.
Content: >-
  <p>이제 개발자는 그 어느 때보다 빠르게 증가하는 고객의 요구를 충족하기 위해 민첩성이 필요합니다. 컨테이너화는 민첩성을 높이는 한 가지 주요 방법입니다. 컨테이너화된 애플리케이션은 원하는 인프라, 종속성 및 구성을 수명 주기의 모든 단계에 대한 코드로 정의하여 보다 일관되고 반복 가능한 방식으로 빌드됩니다. 애플리케이션도 런타임 시 더 빠르게 시작 및 중지하는 경우가 많으며, 이는 클라우드에서 신속하게 시작, 중지, 규모 확장 및 업데이트하는 데 도움이 되는 경우가 많습니다.</p>


  <p>이 점을 염두에 두고 Microsoft와 Docker 간의 <a href="https://aka.ms/dockerazuremay2020" target="_blank">새로운 파트너십을</a> 오늘 발표하여 Docker Desktop을 Microsoft Azure 및 Visual Studio 제품 라인과 더 긴밀하게 통합했습니다.&nbsp;&nbsp;</p>


  <p>Docker Desktop 기본 제공 도구, 기능 및 명령줄 유틸리티는 컨텍스트를 사용하여 클라우드에서 컨테이너를 실행하고 몇 가지 간단한 명령으로 Azure 컨테이너에서 실행하는 컨텍스트로 Azure를 기본적으로 설정하는 방법을 제공합니다. 제품 통합은 오케스트레이션 없이 격리된 컨테이너에서 작동할 수 있는 모든 시나리오에 대한 솔루션인 ACI(Azure Container Instances)를 만드는 기능으로 시작됩니다.</p>


  <p>&rsquo;예제를 사용하여 새 제품 통합을 살펴보겠습니다. Docker Desktop을 사용하여 로컬 개발자 컴퓨터에서 이미 빌드 및 실행 중인 간단한 TCP 기반 Python 게임 서버 앱이 있습니다. 앱은 requirements.txt Linux 및 기타 종속성의 슬림 버전에 따라 달라집니다. Visual Studio Code Docker 도구 확장은 Docker Desktop에서 빌드 및 실행을 수행하는 쉬운 명령을 제공하고 Docker Hub의 프라이빗 컨테이너 레지스트리에 푸시합니다. WSL2의 새 릴리스를 사용하면 환경이 특히 빠릅니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ec2c30c3-ff3a-483f-a922-72832d7587a6.gif"><img alt="DockerAnnouce1" border="0" height="576" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c2dfbf4e-3ca4-42c1-acec-cd89fd674efb.gif" style="border: 0px currentcolor; margin-right: auto; margin-left: auto; display: block; background-image: none;" title="DockerAnnouce1" width="1024"></a></p>


  <p>올해 하반기에 업데이트된 버전의 Docker Desktop을 통해 Azure Container Instances에 대한 Docker 컨텍스트를 만들기 위한 네이티브 명령이 표시됩니다.</p>


  <p style="margin-left: 40px;"><code>$ docker context aci-create paulyuk/webapp-dev<br>

  $ docker context use paulyuk/webapp-dev</code></p>


  <p>컨텍스트는 Docker 호스트가 있는 하나 이상의 환경 간에 쉽게 교환하는 데 유용합니다. 예를 들어 로컬(기본값), myapp-dev, myapp-qa에 대한 컨텍스트를 가질 수 있습니다. 전체 Docker 도구 체인(Docker.exe CLI 포함)은 컨텍스트를 적용합니다. 이렇게 하면 동일한 친숙한 명령을 사용하여 Azure에서 컨테이너를 쉽고 일관되게 로컬로 실행할 수 있습니다.</p>


  <p style="margin-left: 40px;"><code>$ docker run paulyuk/pythontcpgame:1.1</code></p>


  <p>컨테이너를 Azure에 배포하는 것은 Docker Desktop의 표준 도구를 사용하는 것만큼 간단합니다. 또한 Docker Desktop + Visual Studio + WSL2 + GitHub 사용하여 전체 환경을 함께 가져와 클라우드 최적화 데스크톱을 사용할 수 있습니다. 이 <a href="https://aka.ms/dockercon2020azuresession" target="_blank">DockerCon LIVE 2020 세션</a>의 통합에 대해 자세히 설명합니다.</p>


  <p>Docker와의 협업을 확장하고 개발자를 위한 개발자 환경을 지속적으로 개선하게 되어 매우 기쁩니다.</p>


  <h2>자세한 정보</h2>


  <p>파트너 관계에 대해 자세히 알아보려면 Docker에서 이 <a href="https://aka.ms/dockerazuremay2020" target="_blank">보도 자료</a> 및 <a href="https://aka.ms/dockerblogpostmay2020" target="_blank">블로그 게시물을</a> 읽어보세요. 현재 <a href="https://code.visualstudio.com/docs/containers/overview" target="_blank">VS Code Docker 확장을</a> docker 컨텍스트, <a href="https://aka.ms/wsl2" target="_blank">현재 WSL2 통합</a><a href="https://www.docker.com/products/docker-desktop" target="_blank">이 있는 Docker Desktop</a>을 활용할 수 있습니다. Docker Desktop에서 ACI 통합이 포함된 미리 보기는 올해 하반기에 출시될 예정입니다.</p>
