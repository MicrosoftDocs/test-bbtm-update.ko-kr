### YamlMime:Yaml
ms.openlocfilehash: 480b47719a40727e6147f884c04c7f58b3d7ad77
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910940"
Slug: isv-guest-post-series-sociobridge-by-reedrex
Title: 'ISV 게스트 포스트 시리즈: 소시오브리지, 리드렉스'
Summary: Azure ISV 블로그 시리즈를 Windows 목적은 Windows Azure 애플리케이션 개발 및 deployment.& 중에 작업한 ISV&rsquo;의 성과 중 일부를 강조하는 것입니다.
Content: '<p>Windows Azure ISV 블로그 시리즈의 목적은 Windows <a target="_blank" href="https://azure.microsoft.com/en-us">Azure</a> 애플리케이션 개발 및 배포 중에 작업한 ISV&rsquo;의 성과 중 일부를 강조하는 것입니다.&nbsp; Microsoft Japan의 Azure 개발자 전도사 Windows <a target="_blank" href="https://satonaoki.wordpress.com/">Naoki Sato</a>가 작성한 Todays&rsquo; 게시물은 Azure ISV ReedRex Co. LTD와 Windows Azure를 사용하여 Facebook 페이지에 CMS 서비스를 제공하는 방법을&rsquo; Windows 관한 것입니다.</p>  <p>ReedRex는 최근 <a target="_blank" href="https://www.facebook.com">Facebook</a> 페이지를 위한 CMS(콘텐츠 관리 시스템) 서비스인 sociobridge라는 새로운 SaaS 제품을 출시했습니다. 일본 최고의 광고 회사인 덴츠 Razorfish가 배포한 소시오브리지는 덴츠와 Razorfish가 공동으로 설립했습니다.&nbsp;</p>  <p>회사 및 광고 대행사 직원은 sociobridge를 사용하여 다음을 수행할 수 있습니다.</p>  <ul>  <li>Facebook 페이지 만들기 및 유지 관리</li>  <li>게시물 예약</li>  <li>벽, 메모 및 좋아요 모니터링&nbsp;</li>  </ul>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7585.sociobridge1.png" alt="" height="414" border="0" width="639"></p>  <p>sociobridge는 <a target="_blank" href="https://facebooksdk.codeplex.com">Facebook C# SDK</a><a href="https://facebooksdk.codeplex.com/"></a>를 사용하여 ASP.NET MVC로 작성된 두 개의 다중 테넌트 웹 애플리케이션으로 구성됩니다. 한 웹 역할은 구독자(고객 회사 및 광고 기관)를 위한 콘텐츠 관리 애플리케이션인 구독자 포털을 실행합니다. 다른 하나는 최종 사용자를 위해 퍼블릭 Facebook 페이지를 호스트하는 애플리케이션 런타임을 실행합니다.</p>  <p>또한 Facebook 모니터링 및 기타 백그라운드 처리를 담당하는 작업자 역할 인스턴스도 있습니다.</p>  <p>sociobridge는 <a target="_blank" href="https://www.windowsazure.com/en-us/home/tour/storage/?WT.mc_id=cmp_pst001_blg_post0051">Windows Azure Storage</a>(테이블 및 Blob)를 영구 데이터 저장소로 사용합니다. 이는 Windows Azure Storage 훨씬 낮은 비용으로 더 높은 확장성을 제공하기 때문입니다.</p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7446.sociobridge2.png" alt="" border="0"></p>  <p>구독(테넌트), 사용자 계정, 예약된 게시물, 설문 조사 결과, 통계 등에 대한 정보는 Table Storage 저장됩니다. Azure Table Storage Windows 테이블은 두 개뿐입니다.</p>  <ul>  <li>구독 메타데이터</li>  <li>구독자 데이터</li>  </ul>  <p>Table Storage 테이블은 스토리지 노드 간에 부하 분산을 지원하기 위해 분할됩니다. 테이블&rsquo; 엔터티는 파티션별로 구성됩니다. 분할은 동일한 분할 키 값을 가지는 일련의 엔터티입니다.&nbsp;</p>  <p>SQL Azure 같은 관계형 데이터베이스 시스템은 ACID라고도 하는 속성을 사용하여 트랜잭션 지원을 제공합니다.</p>  <ul>  <li>원자성: 트랜잭션의 모든 항목이 성공하거나 롤백됩니다.</li>  <li>일관 된. 트랜잭션은 데이터베이스를 일관성 없는 상태로 둘 수 없습니다.</li>  <li>Isolated. 트랜잭션은 서로 간섭할 수 없습니다.</li>  <li>영속성 있음 트랜잭션의 결과는 영구적으로 저장됩니다.</li>  </ul>  <p>관계형 데이터베이스 시스템과 달리 Windows Azure Table Storage 일반적으로 트랜잭션 내에서 여러 작업(예: 엔터티 삽입, 업데이트 및 삭제)을 지원하지 않습니다. 그러나 트랜잭션의 일부로 작업이 적용되는 모든 엔터티의 파티션 키 값이 동일하고 동일한 파티션에 속하는 경우 엔터티 그룹 트랜잭션&rdquo; 또는 EGT라고 &ldquo;하는 일괄 업데이트에서 이러한 작업을 수행할 수 있습니다. EGT&rsquo;에 대한 자세한 내용은 <a target="_blank" href="https://msdn.microsoft.com/en-us/library/windowsazure/dd894038.aspx">여기에서</a> 확인할 수 있습니다.&nbsp;</p>  <p>스키마가 없는 데이터 모델 및 테이블 Storage EGT를 활용하기 위해 다양한 유형의 데이터가 단일 데이터 테이블에 저장됩니다. 구독 ID는 파티션 키로 사용되므로 각 구독&rsquo; 데이터는 서로 다른 파티션에 저장되고 테이블 액세스는 확장성을 위해 여러 스토리지 서버에 분산됩니다. 행 키는 데이터 형식과 일종의 고유한 행 ID의 조합입니다.</p>  <p>구독자 포털의 모든 테이블 쿼리는 파티션 키(구독 ID)를 지정하도록 신중하게 설계되어 쿼리가 단일 파티션으로 제한되고 많은 파티션에 대한 전체 테이블 검색이 발생하지 않도록 합니다.</p>  <p>단일 구독 데이터에는 두 개 이상의 데이터 형식의 트랜잭션이&rsquo; 있지만 둘 이상의 구독 데이터에 대한 트랜잭션은&rsquo; 없습니다. 따라서 이 테이블 디자인은 단일 트랜잭션의 데이터가 단일 테이블의 단일 파티션에 있기 때문에 EGT(엔터티 그룹 트랜잭션)를 사용하여 원자성 트랜잭션을 사용하도록 설정합니다.&nbsp;</p>  <p>현재 Windows Azure Storage Analytics는 스토리지 계정당 메트릭 데이터를 제공합니다. 이 테이블 디자인을 사용하면 구독자당 Table Storage 비용을 예측할 수 없습니다. 이 테이블 디자인은 위에서 설명한 혜택과 스토리지 계정 수 할당량으로 인해 선택되었습니다.</p>  <p>고객 회사 및/또는 광고 대행사의 직원은 구독자 포털에서 Facebook 페이지를 만들고 유지 관리합니다. Facebook 페이지의 정의 및 메타데이터를 만들거나 수정하면 Facebook 페이지의 실제 웹 콘텐츠가 미리 생성되고 Blob Storage 저장됩니다.</p>  <p>구독자는 단일 Facebook 페이지에서 여러 개의 사용자 지정 탭을 만들 수 있습니다. 각 사용자 지정 탭에는 자체 Blob 컨테이너가 있으며 각 탭의 웹 콘텐츠가 저장됩니다. Facebook 페이지는 기본적으로 공용이므로 Blob 컨테이너의 사용 권한은 공용으로 설정됩니다.</p>  <p>런타임 시:</p>  <ol>  <li>최종 사용자가 Facebook 페이지를 찾습니다(HTML 인라인을 사용하여 Facebook에 포함됨)</li>  <li>frame).</li>  <li>웹 브라우저는 웹 역할의 애플리케이션 런타임에 HTTP POST 요청을 보냅니다.</li>  <li>애플리케이션 런타임은 Table Storage 액세스하여 Blob Storage URL을 쿼리합니다.</li>  <li>애플리케이션 런타임은 Blob Storage URL을 반환합니다(HTTP 302 찾기 사용).</li>  <li>웹 브라우저는 Blob Storage 웹 콘텐츠로 리디렉션됩니다.</li>  </ol>  <p>이 아키텍처의 목적은 동적 웹 콘텐츠 생성을 방지하여 웹 역할의 워크로드를 줄이고 많은 Facebook 사용자의 엄청난 요청을 처리하기 위해 훨씬 더 높은 확장성을 달성하는 것입니다.</p>  <p>HTTP POST 요청을 처리하려면 Facebook 페이지가 필요합니다. &ldquo;그러나 Blob Service REST API의 Blob&rdquo; 가져오기 작업은 이름에서 알 수 있듯이 HTTP GET 요청이어야 합니다.&nbsp; 이로 인해 Blob Storage 대한 직접 액세스가 작동하지 않으며 HTTP POST를 처리하려면 애플리케이션 런타임이 필요합니다.</p>  <p>Blob Storage 대한 파티션 키는 컨테이너 이름 및 Blob 이름의 조합이므로 다른 Facebook 페이지(Blob)에 대한 액세스는 서로 다른 파티션에 분산됩니다.</p>  <p><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2010/05/10/windows-azure-storage-abstractions-and-their-scalability-targets.aspx">Windows Azure Storage 추상화 및 확장성 목표에</a>&rdquo; 따르면 &ldquo; 단일 Blob의 대상 처리량은 최대 60MB/초입니다. 성능 테스트 결과, 소시오브리지 애플리케이션 런타임(하나의 작은 인스턴스)의 처리량&nbsp;은 약 200개 요청/초입니다.</p>  <p>대략적인 추정에 따르면 Facebook 페이지가 하나만 호스팅되고 Facebook 페이지 크기가 300KB 미만이면 애플리케이션 런타임이 병목 상태가 됩니다. 300KB보다 크면 Blob Storage 병목 상태가 됩니다.&nbsp; 웹 역할 인스턴스를 더 추가하고 각각 Windows Azure CDN 활용하여 이러한 병목 상태를 제거할 수 있습니다.&nbsp; 일반적으로 여러 Facebook 페이지(Blob)가 호스트되며 Blob 액세스가 확장됩니다.&nbsp;</p>  <p>sociobridge는 Windows Azure, 특히 Windows Azure Storage 기능을 활용하도록 설계되었습니다. 정교한 테이블 디자인(테넌트 ID를 파티션 키로 사용)하고 EGT(엔터티 그룹 트랜잭션)를 사용하면 다중 테넌트 애플리케이션을 디자인하는 데 도움이 됩니다.&nbsp;</p>  <p>Windows Azure Storage 확장성에 대한 자세한 내용은 다음 블로그 게시물을 참조하세요.</p>  <ul>  <li><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2010/12/30/windows-azure-storage-architecture-overview.aspx">Windows Azure Storage 아키텍처 개요</a></li>  <li><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2010/05/10/windows-azure-storage-abstractions-and-their-scalability-targets.aspx">추상화 및 확장성 목표 Windows Azure Storage</a></li>  <li><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2010/11/06/how-to-get-most-out-of-windows-azure-tables.aspx">Windows Azure 테이블을 최대한 활용하는 방법</a>&nbsp;</li>  </ul>  <p>ReedRex의 사회 브리지 수석 건축가 인 오미 다케이카즈 (Takekazu Omi)에게 특별한 감사드립니다.</p>'
