### YamlMime:Yaml
ms.openlocfilehash: c8bded53c951b18efdc966f0155007b5824b3b12
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139898943"
Slug: improving-the-typescript-support-in-azure-functions
Title: Azure Functions에서 TypeScript 지원 개선
Summary: 'TypeScript는 JavaScript 커뮤니티에서 점점 더 인기를 끌고 있습니다. Azure Functions는 Node.js 실행되고 TypeScript는 JavaScript로 컴파일되므로 동기 부여된 사용자는 이미 Azure Functions에서 TypeScript 코드를 실행하고 실행할 수 있습니다. '
Content: >-
  <p>TypeScript는 JavaScript 커뮤니티에서 점점 더 인기를 끌고 있습니다. Azure Functions는 Node.js 실행되고 TypeScript는 JavaScript로 컴파일되므로 동기 부여된 사용자는 이미 Azure Functions에서 TypeScript 코드를 실행하고 실행할 수 있습니다. 그러나 환경이 원활하지 않았고&rsquo; 기본 폴더 구조와 같은 항목으로 인해 시작이 약간 까다로울 수 있습니다. 오늘 우리는&rsquo;이 상황을 개선하는 도구 개선의 집합을 발표 기쁘게 생각합니다. 이제 Azure Functions 사용자는 이벤트 기반 애플리케이션을 빌드할 때 TypeScript를 사용하여 쉽게 개발할 수 있습니다.</p>


  <p>익숙하지 않은 경우 TypeScript는 선택적 정적 입력, 클래스 및 인터페이스를 제공하는 JavaScript의 상위 집합입니다. 이러한 기능을 사용하면 개발 프로세스 초기에 버그를 catch하여 보다 강력한 소프트웨어 엔지니어링을 수행할 수 있습니다. TypeScript는 ECMAScript 2015와 호환되므로 TypeScript를 간접적으로 사용하여 최신 JavaScript 구문을 활용할 수 있습니다.</p>


  <p>Azure Functions Core Tools 및 Visual Studio Code 대한 Azure Functions 확장에 대한 이 변경 내용 집합을 통해 Azure Functions는 이제 TypeScript를 지원합니다. 이러한 변경 내용에는 TypeScript, 형식 정의 및 npm 스크립트에 대한 템플릿 집합이 포함됩니다. 새 환경에 대한 자세한 내용을 보려면 계속 읽어보세요.</p>


  <h2>TypeScript용 템플릿</h2>


  <p>최신 버전의 <a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local" target="_blank">Azure Functions Core Tools</a> 및 <a href="https://code.visualstudio.com/tutorials/functions-extension/getting-started" target="_blank">VS Code</a>&rsquo;용 Azure Functions 확장에서는 함수를 만들 때 TypeScript를 사용할 수 있는 옵션이 제공됩니다. 더 정확하게 말하자면, 새 함수 앱을 만들 때 언어 스택 선택 시 TypeScript를 지정하는 옵션이 표시됩니다. 이 작업은 기본 package.json 및 .tsconfig 파일로 옵트인하여 해당 앱을 TypeScript와 호환되도록 설정합니다. 그런 다음 함수를 만들 때 여러 TypeScript 특정 함수 템플릿 중에서 선택할 수 있습니다. 각 템플릿은 하나의 가능한 트리거를 나타내며 JavaScript에서 지원되는 각 템플릿에 대해 TypeScript에 해당하는 항목이 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ece30046-4277-4d34-837d-197bd86f9dc4.gif"><img alt="Select from a number of TypeScript specific function templates for different triggers" border="0" height="684" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/866935ec-b4da-414f-ab2c-82d1dc86af93.gif" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="Typescript" width="2054"></a></p>


  <p>이 새 흐름의 가장 큰 부분은 TypeScript 함수를 변환하고 실행하기 위해 Functions에 고유한 작업을 전혀 수행할 필요가 없다는&rsquo; 것입니다. 예를 들어 사용자가 F5에 도달하여 Visual Studio Code 디버깅을 시작하면 Code에서 필요한 설치 작업을 자동으로 실행하고, TypeScript 코드를 변환하고, Azure Functions 호스트를 시작합니다. 이 로컬 개발 환경은 클래스에서 가장 적합하며 사용자가 VS Code 다른 앱 디버깅을 시작하는 방법입니다.</p>


  <p><a href="https://aka.ms/ts-functions" target="_blank">설명서</a>에서 TypeScript 함수를 시작하고 실행하는 방법에 대해 자세히 알아봅니다.</p>


  <h3>Azure Functions에 대한 형식 정의</h3>


  <p><a href="https://www.npmjs.com/package/@azure/functions" target="_blank">@azure/functions</a> npm의 패키지에는 Azure Functions에 대한 형식 정의가 포함되어 있습니다. Azure Function 개체의 모양이 어떤&rsquo; 것인지 궁금한 적이 있나요? 아니면 모든 JavaScript 함수에 전달되는 컨텍스트 개체인가요? 이 패키지는 도움이 됩니다! TypeScript를 최대한 활용하려면 모든 .ts 함수에서 가져와야 합니다. JavaScript 순수주의자도 &ndash; 코드에 이 패키지를 포함하면 더 풍부한 Intellisense 환경을 제공할 수 있습니다. <a href="https://www.npmjs.com/package/@azure/functions" target="_blank">@azure/functions</a> 자세한 내용은 npm에서 패키지를 확인하세요!</p>


  <h3>Npm 스크립트</h3>


  <p>TypeScript 함수 앱에는 기본적으로 몇 가지 간단한 npm 스크립트를 포함하는 package.json 파일이 포함되어 있습니다. 이러한 스크립트를 통해 Azure Functions는 특정 Azure Functions Core Tools 명령을 호출하여 일반적인 개발 흐름에 직접 맞출 수 있습니다. 예를 들어 &lsquo;npm start&rsquo;는 자동으로 func 시작을&rsquo; 실행&lsquo;합니다. 즉, 함수 앱을 만든 후에는 다른 Node.js 프로젝트와 다르게 처리할 필요가 없습니다&rsquo;.</p>


  <p>이러한 동작을 확인하려면 <a href="https://aka.ms/ts-functions-example" target="_blank">예제 리포지토리</a>를 확인하세요!</p>


  <h2>직접 사용해 보세요!</h2>


  <p><a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local" target="_blank">Azure Functions 핵심 도구</a> 또는 <a href="https://code.visualstudio.com/tutorials/functions-extension/getting-started" target="_blank">VS Code 대한 Azure Functions 확장을</a> 사용하면 Azure 계정이 없는&rsquo; 경우에도 로컬 컴퓨터의 Azure Functions에서 TypeScript에 대한 향상된 환경을 사용해 볼 수 있습니다.</p>


  <h3>다음 단계</h3>


  <ul>
   <li><a href="https://code.visualstudio.com/tutorials/functions-extension/getting-started" target="_blank">VS Code</a> Azure Functions를 시작합니다.</li>
   <li>Azure Functions Core Tools를 사용하여 CLI에서 <a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local" target="_blank">Azure Functions</a>를 시작합니다.</li>
   <li><a href="https://aka.ms/ts-functions-example" target="_blank">샘플 TypeScript 함수 앱을 확인합니다</a>.</li>
   <li><a href="https://aka.ms/ts-functions" target="_blank">자세한 내용은 Azure Functions JavaScript 개발자 가이드</a>를 참조하세요.</li>
   <li><a href="https://azure.microsoft.com/free/serverless" target="_blank">Azure 체험 계정이</a> 없는&rsquo; 경우 등록하고 서버리스 앱을 클라우드에 배포합니다.</li>
  </ul>


  <p>언제나처럼 <a href="https://github.com/Azure/Azure-Functions" target="_blank">GitHub 또는</a> Twitter에 대한 피드백으로 팀에 자유롭게 연락할 수 <a href="https://twitter.com/AzureFunctions" target="_blank">있습니다</a>. 즐거운 코딩 작업이 되길 바랍니다!</p>
