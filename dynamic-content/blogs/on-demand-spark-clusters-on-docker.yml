### YamlMime:Yaml
ms.openlocfilehash: 06c12129778ff5fa086e4a8aa83920c552b3811f
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905318"
Slug: on-demand-spark-clusters-on-docker
Title: Azure Batch의 인프라를 사용하여 Docker에서 주문형 Spark 클러스터 프로비전
Summary: Azure Distributed Data Engineering Toolkit - 주문형 Spark 클러스터를 프로비전하고 CLI에서 직접 Spark 작업을 제출할 수 있는 오픈 소스 Python CLI 도구입니다.
Content: "<p>3년 전 출시 이후 Apache Spark는 빅 데이터 사용자들 사이에서 인기가 치솟았지만 HPC 공간에서도 점점 더 일반화되고 있습니다. 그러나 주문형 Spark 클러스터를 회전하는 것은 종종 복잡하고 느릴 수 있습니다. 대신 Spark 개발자는 종종 회사&#39;IT 팀에서 관리하는 기존 클러스터를 공유합니다. 이러한 시나리오에서 Spark 개발자는 사용률이 부족하고 용량이 부족한 정적 클러스터에서 Spark 애플리케이션을 실행합니다. 용량이 부족하거나 유휴 노드에서 달러를 다시 구울&#39;&#39;있습니다.</p>\n\n<p><strong>주문형 Spark 클러스터를 프로비전하고 CLI에서 직접 Spark 작업을 제출할 수 있는 오픈 소스 Python CLI 도구를 Toolkit -<a href=\"https://www.github.com/azure/thunderbolt\" target=\"_blank\">Azure</a> <a href=\"https://www.github.com/azure/aztk\">Distributed Data Engineering</a>의 베타 릴리스를 발표하게 되어 기쁩니다.&#39;</strong></p>\n\n<p>Spark 사용자가 클러스터와 상호 작용하는 방식을 면밀히 연구한 후 Azure Distributed Data Engineering Toolkit 설계하여 네이티브 Spark 환경을 확장하여 클러스터를 프로비전할 수 있도록 하고 Spark를 대규모로 실행하는 전체 엔드 투 엔드 환경을 제공합니다. 또한 이 도구 키트는 Azure Batch&#39;빠른 프로비전 시간을 상속하며 Spark 클러스터를 프로비전하는 데 3~5분밖에 소요하지 않습니다. Spark 네이티브 환경과 빠른 스핀업 시간을 통해 이 도구 키트를 사용하면 Spark 실험을 쉽게 실행할 수 있으므로 더 많은 작업을 쉽고 빠르게 수행할 수 있습니다.</p>\n\n<p>Spark 애플리케이션에 대해 미리 설치된 특정 소프트웨어가 필요한 사용자를 위해 이 도구 키트는<a href=\"https://github.com/Azure/thunderbolt/tree/master/docker-image\"> <strong>사용자 고유의 Docker 이미지를 가져와</strong></a> 설치를 간단하고 재현 가능하게 만드는 기능을 제공합니다.</p>\n\n<p>Azure Distributed Data Engineering Toolkit 무료로 사용할 수 있습니다. 사용하는 코어에 대해서만 요금을 지불합니다. Azure Batch를 기반으로 하므로 <a href=\"https://docs.microsoft.com/en-us/azure/batch/batch-low-pri-vms\" target=\"_blank\">우선 순위가 낮은 VM</a>을 프로비전하여 Spark 작업을 80% 할인된 가격으로 실행할 수 있으므로 실험, 테스트 및 기타 우선 순위가 낮은 작업에 유용한 도구입니다.</p>\n\n<p><em>현재 이 도구 키트는 Spark만 지원합니다. 그러나 유사한 맥락에서 다른 분산 데이터 엔지니어링 프레임워크를 지원할 계획입니다.</em></p>\n\n<h2>Spark 클러스터 만들기</h2>\n\n<p>Azure Distributed Data Engineering Toolkit 설치한 후에는 이 간단한 CLI 명령을 사용하여 Spark 클러스터를 만들어 시작할 수 있습니다.</p>\n\n<pre class=\"prettyprint\" style=\"font-size: 13px;\">\n<strong>$ aztk spark cluster create \\\n    --id &lt;my_spark_cluster_id&gt; \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n&nbsp;   --size &lt;number_of_nodes&gt; \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n&nbsp;   --vm-size &lt;vm_size&gt;</strong></pre>\n\n<p><strong>--size</strong>를 사용하는 대신 필요에 따라 <strong>우선 순위가 낮은 VM을 프로비전하는 --size-low-priorityto</strong><strong>&nbsp;</strong>를 사용할 수 있습니다.</p>\n\n<p><strong>--username</strong><b> </b>및 <strong>--ssh-key</strong> 매개 변수를 추가하여 클러스터에 대한 사용자를 만들 수도 있습니다. 이 작업은 필요에 따라 별도의 <strong>aztk spark 클러스터 추가 사용자</strong> 명령에서 수행할 수 있습니다.</p>\n\n<h2>작업 제출</h2>\n\n<p>Spark 클러스터가 준비되면 <strong>aztk</strong> Spark 클러스터 제출 명령을 사용하여 표준 <em>spark-submit 명령을</em> 사용하여 클러스터에 대한 작업을 제출합니다.</p>\n\n<pre class=\"prettyprint\" style=\"font-size: 13px;\">\n<strong style=\"font-size: 13px;\">$ aztk spark cluster submit \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n&nbsp;   --id &lt;my_spark_cluster&gt; \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n&nbsp;   --name &lt;my_spark_job_name&gt; \\\n    [options] \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n&nbsp;   &lt;app jar | python file&gt; \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n&nbsp;   [app parameters]</strong></pre>\n\n<p>표준 spark-submit 명령과 마찬가지로 출력이 콘솔로 스트리밍됩니다.</p>\n\n<h2>빠른 시작 데모</h2>\n\n<p>다음은&#39;우선 순위가 낮은 VM(80% 할인)이 있는 2TB Spark 클러스터를 약 5분 안에 가져오는 방법의 예입니다.</p>\n\n<pre class=\"prettyprint\" style=\"font-size: 13px;\">\n<strong style=\"font-size: 13px;\">$ aztk spark cluster create --id my_cluster --size-low-pri 16 --vm-size Standard_E16_v3\n\n# Grab some coffee...\n\n# BOOM! Your 2TB Spark cluster is up. Start submitting jobs!\n$ aztk spark cluster submit --id my_cluster --name my_massive_job my_pyspark_app.py\n</strong></pre>\n\n<h2>대화형 모드</h2>\n\n<p>시작하려면 대부분의 사용자가 Spark 클러스터를 대화형으로 작업하려고 합니다. Azure Distributed Data Engineering Toolkit 클러스터&#39;마스터 노드로 ssh하는 데 도움이 되는 <strong>aztk Spark 클러스터 ssh </strong>명령을 사용하여 대화형으로 작업할 수 있도록 지원하지만, Spark 웹 UI 및 Spark 작업 UI를 로컬 머신으로 포트포워드하는 데도 도움이 됩니다.</p>\n\n<pre class=\"prettyprint\" style=\"font-size: 13px;\">\n<strong>$ aztk spark cluster ssh --id &lt;my_spark_cluster_id&gt;</strong>\n</pre>\n\n<p>기본적으로 Spark 웹 UI를 localhost:8080으로, Spark 작업 UI를 localhost:4040으로, Jupyter를 localhost:8888로 전달합니다. 이러한 기본값은 필요한 경우 .thunderbolt/ssh.yaml 파일에서 구성할 수 있습니다.</p>\n\n<p>명령을 실행하면 로컬 컴퓨터에서 localhost:8080으로 이동하여 Spark 웹 UI와 상호 작용할 수 있습니다.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/87efb9c3-7ac1-4f45-9a06-fdd25ba869f7.png\"><img alt=\"spark_web_ui_screen_shot\" border=\"0\" height=\"315\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/821fd04a-7e79-4bc4-8fff-64a8225ecaa6.png\" style=\"margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"spark_web_ui_screen_shot\" width=\"562\"></a></p>\n\n<div>\n<h2>Spark 클러스터 관리</h2>\n\n<p>Spark 클러스터를 관리하는 데 사용할 수 있는 다른 명령 중 일부를 확인합니다.</p>\n\n<pre class=\"prettyprint\" style=\"font-size: 13px;\">\n<strong style=\"font-size: 13px;\"># Get a summary of all the Spark clusters you have created with Azure Thunderbolt\n$ aztk spark cluster list\n\n# Get a summary on a specific Spark cluster\n$ aztk spark cluster get --id &lt;my_spark_cluster_id&gt;\n\n# Delete a specific Spark cluster\n$ aztk spark cluster delete --id &lt;my_spark_cluster_id&gt;</strong>\n</pre>\n\n<p style=\"font-family: tahoma, &quot;Helvetica Neue&quot;, arial, helvetica, sans-serif; font-size: 13px; font-style: normal; font-weight: normal;\">&nbsp;</p>\n</div>\n\n<hr style=\"font-size: 13px;\">\n<p>이러한 기능을 사용하고 피드백을 듣기를 기대합니다. 피드백을 받으 <a target=\"_blank\">askaztk@microsoft.com</a> 시거나 <a href=\"https://www.github.com/Azure/aztk\" target=\"_blank\">Github 리포지토리</a>에 자유롭게 참여해 주시기 바랍니다.</p>\n\n<h2>추가 정보</h2>\n\n<ul>\n <li><a href=\"https://www.github.com/azure/aztk\" target=\"_blank\">Azure Distributed Data Engineering Toolkit</a> 다운로드 및 시작</li>\n <li><a href=\"https://www.github.com/Azure/thunderbolt/issues\" target=\"_blank\">Github를 통해 문제를 자유롭게 제출하세요.</a></li>\n</ul>\n\n<h2>추가 리소스</h2>\n\n<ul>\n <li>Azure Distributed Data Engineering Toolkit 사용하는 기본 Azure 서비스인 Azure <a href=\"https://www.github.com/Azure/thunderbolt/issues\" target=\"_blank\">Batch</a>를 참조하세요.</li>\n <li><a href=\"https://azure.microsoft.com/en-us/solutions/high-performance-computing\" target=\"_blank\">Azure의 범용 HPC</a></li>\n</ul>"
