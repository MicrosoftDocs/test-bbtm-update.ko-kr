### YamlMime:Yaml
ms.openlocfilehash: 5345c17351ae9ca90db395361cbabe208c6a8eea
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139907292"
Slug: azure-storage-performance-checklist
Title: Azure Storage 성능 검사 목록
Summary: '성능 지침을 쉽게 찾을 수 있는 단일 문서로 통합하는 Azure Storage 성능 검사 목록을 방금 발표했습니다. '
Content: "Azure Storage 사용할 때 뛰어난 성능을 얻는 방법은 TechEd 및 Build에서의 강연, 포럼의 스레드, 블로그 및 직접 대화하는 동안 여러 번 논의한 주제입니다. 애플리케이션의 성능을 최대한 발휘하는 데 얼마나 열정적인지 보는 것은 언제나 흥미로울 것입니다!\n\n이 목표를 더 자세히 알아보기 위해, 이제 손쉽게 찾을 수 있는 단일 문서로 성능 지침을 통합하는 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-performance-checklist/\">Azure Storage 성능 검사 목록을</a> 발표했습니다. 개발자가 약 30분 안에 읽을 수 있어야 하는 짧은 문서(약 15페이지)이며, 검사 목록으로 구성된 40가지 이상의 입증된 사례에 대한 세부 정보가 포함되어 있어 애플리케이션의 성능을 개선하는 데 도움이 됩니다. 다음은 검사 목록의 작은 선택 항목입니다.\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"47\">\n<p style=\"text-align: center;\"><b>완료</b></p>\n</td>\n<td valign=\"top\" width=\"60\">\n<p style=\"text-align: center;\"><b>영역</b></p>\n</td>\n<td valign=\"top\" width=\"134\">\n<p style=\"text-align: center;\"><b>범주</b></p>\n</td>\n<td valign=\"top\" width=\"382\">\n<p style=\"text-align: center;\"><b>질문</b></p>\n</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"47\"></td>\n<td valign=\"top\" width=\"60\">\n<p style=\"text-align: center;\">Blob</p>\n</td>\n<td valign=\"top\" width=\"134\">\n<p style=\"text-align: center;\">메타데이터 사용</p>\n</td>\n<td valign=\"top\" width=\"382\"><a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-performance-checklist/#subheading20\">자주 사용하는 메타데이터를 Blob 메타데이터에 저장하여 각 Blob을 다운로드하여 매번 추출할 필요가 없나요?</a></td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"47\"></td>\n<td valign=\"top\" width=\"60\">\n<p style=\"text-align: center;\">Blob</p>\n</td>\n<td valign=\"top\" width=\"134\">\n<p style=\"text-align: center;\">고속 업로드</p>\n</td>\n<td valign=\"top\" width=\"382\"><a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-performance-checklist/#subheading21\">하나의 Blob을 빠르게 업로드하려면 블록을 병렬로 업로드하고 있나요?</a></td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"47\"></td>\n<td valign=\"top\" width=\"60\">\n<p style=\"text-align: center;\">테이블</p>\n</td>\n<td valign=\"top\" width=\"134\">\n<p style=\"text-align: center;\">구성</p>\n</td>\n<td valign=\"top\" width=\"382\"><a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-performance-checklist/#subheading25\">테이블 요청에 JSON을 사용하고 있습니까?</a></td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"47\"></td>\n<td valign=\"top\" width=\"60\">\n<p style=\"text-align: center;\">테이블</p>\n</td>\n<td valign=\"top\" width=\"134\">\n<p style=\"text-align: center;\">반환되는 데이터 제한</p>\n</td>\n<td valign=\"top\" width=\"382\"><a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-performance-checklist/#subheading33\">불필요한 속성을 검색하지 않도록 프로젝션을 사용하고 있나요?</a></td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"47\"></td>\n<td valign=\"top\" width=\"60\">\n<p style=\"text-align: center;\">큐</p>\n</td>\n<td valign=\"top\" width=\"134\">\n<p style=\"text-align: center;\">메시지 업데이트</p>\n</td>\n<td valign=\"top\" width=\"382\"><a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-performance-checklist/#subheading43\"><b>UpdateMessage를</b> 사용하여 메시지 처리 진행률을 저장하고 처리 구성 요소에 오류가 발생하는 경우 처음부터 다시 처리할 필요가 없나요?</a></td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"47\"></td>\n<td valign=\"top\" width=\"60\">\n<p style=\"text-align: center;\">큐</p>\n</td>\n<td valign=\"top\" width=\"134\">\n<p style=\"text-align: center;\">아키텍처</p>\n</td>\n<td valign=\"top\" width=\"382\"><a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-performance-checklist/#subheading44\">큐를 사용하여 장기 실행 워크로드를 중요한 경로에서 벗어나 독립적으로 확장하여 전체 애플리케이션의 확장성을 높일 수 있나요?</a></td>\n</tr>\n</tbody>\n</table>\n개발자는 이 검사 목록을 사용하여 새 애플리케이션을 디자인하거나 기존 디자인의 유효성을 검사할 수 있으며, 모든 권장 사항이 모든 애플리케이션과 관련이 있는 것은 아니지만, 각 권장 사항은 대부분의 애플리케이션이 다음을 통해 이점을 얻을 수 있는 광범위하게 적용 가능한 사례입니다.\n\n더 검증된 사례를 파악하고 새로운 Azure Storage 기능을 도입할 때 이 검사 목록을 최신 상태로 유지합니다. 현재 검사 목록에 표시되지 않는 입증된 사례에 대한 권장 사항이 있는 경우 알려주세요.\n<h4>예제 시나리오</h4>\n검사 목록의 많은 권장 사항은 코드에서 간단하게 구현할 수 있습니다. 다음은 세 가지 예입니다. 각각은 올바른 컨텍스트에서 적용하는 경우 애플리케이션의 성능에 상당한 영향을 미칠 수 있습니다.\n\n<b>시나리오 #1: 큐: 구성</b>\n\n<a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-performance-checklist/#subheading40\">소규모 요청의 성능을 개선하기 위해 Nagle을 해제했습니까?</a>\n\nNagle 알고리즘은 기본적으로 사용하도록 설정됩니다. 큐 엔드포인트에 대해 사용하지 않도록 설정하려면 다음 코드를 사용할 수 있습니다. 큐 엔드포인트를 호출하기 전에 이 코드를 실행해야 합니다.\n<pre class=\"prettyprint\">var storageAccount = CloudStorageAccount.Parse(connStr);\nServicePoint queueServicePoint = \n  ServicePointManager.FindServicePoint(storageAccount.QueueEndpoint);\nqueueServicePoint.UseNagleAlgorithm = false; \nCloudQueueClient queueClient = storageAccount.CreateCloudQueueClient();</pre>\n<b>시나리오 #2: Blob: BlobsAre를 복사</b>\n\n<a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-performance-checklist/#subheading17\">하여 Blob을 효율적으로 복사하시겠습니까?</a>\n\n한 스토리지 계정의 컨테이너에서 다른 스토리지 계정의 컨테이너로 Blob 데이터를 복사하려면 먼저 다음과 같이 데이터를 다운로드한 다음 업로드할 수 있습니다.\n<pre class=\"prettyprint\">CloudBlockBlob srcBlob = srcBlobContainer.GetBlockBlobReference(\"srcblob\");\nsrcBlob.DownloadToFile(@\"C:\\Temp\\copyblob.dat\",System.IO.FileMode.Create);\n\nCloudBlockBlob destBlob = destBlobContainer.GetBlockBlobReference(\"destblob\");\ndestBlob.UploadFromFile(@\"C:\\Temp\\copyblob.dat\", System.IO.FileMode.Open);</pre>\n그러나 훨씬 더 효율적인 방법은 다음과 같이 <b>StartCopyFromBlob</b> 과 같은 복사 Blob 메서드 중 하나를 사용하는 것입니다.\n<pre class=\"prettyprint\">CloudBlockBlob srcBlob = srcBlobContainer.GetBlockBlobReference(\"srcblob\");\nCloudBlockBlob destBlob = destBlobContainer.GetBlockBlobReference(\"destblob\");\ndestBlob.StartCopyFromBlob(GenerateSASUri(srcBlob));</pre>\n<blockquote>이 예제에서는 SAS(공유 액세스 서명)를 사용하여 원본 컨테이너의 프라이빗 Blob에 액세스합니다.</blockquote>\n<b>시나리오 #3: Blob:</b> \n\n<a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-performance-checklist/#subheading21\">한 Blob을 빠르게 업로드하려는 FastWhen 업로드, 블록을 병렬로 업로드하고 있나요?</a>\n\n.NET Storage 클라이언트 라이브러리를 사용하는 경우 병렬 블록 업로드를 관리하는 기능이 있습니다. 다음 코드 샘플에서는 <b>BlobRequestOptions</b> 클래스를 사용하여 병렬 블록 업로드에 사용할 스레드 수를 지정하는 방법을 보여 줍니다(이 예제에서는 4개).\n<pre class=\"prettyprint\">CloudBlockBlob blob = srcBlobContainer.GetBlockBlobReference(\"uploadinparallelblob\");\nbyte[] buffer = ...\n\nvar requestOptions = new BlobRequestOptions()\n{\n  ParallelOperationThreadCount = 4\n};\nblob.UploadFromByteArray(buffer, 0, buffer.Length, null, requestOptions);</pre>\n<blockquote>Storage 클라이언트 라이브러리는 여러 블록 업로드 대신 작은 Blob을 단일 Blob 업로드로 업로드할 수 있습니다. <b>BlobRequestOptions</b> 클래스의 <b>SingleBlobUploadThresholdInBytes</b> 속성은 Storage 클라이언트 라이브러리에서 블록 업로드를 사용하는 크기 임계값을 설정합니다.<b></b></blockquote>\n<h4>요약 및 작업 호출</h4>\n다양한 소스에서 함께 가져온 40가지 이상의 검증된 사례를 포함하는 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-performance-checklist/\">Azure Storage 성능 검사 목록을</a> 개발했습니다. 이 검사 목록은 Azure Storage 서비스를 사용하는 애플리케이션의 성능에 큰 차이를 만드는 데 도움이 됩니다.\n\n지금은 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-performance-checklist/\">검사 목록을</a> 살펴보고 인쇄한 다음 애플리케이션의 성능을 개선하기 위해 수행할 수 있는 작업을 확인해야 합니다. 더 검증된 사례를 검사 목록에 통합하기 때문에 업데이트를 정기적으로 다시 확인해야 합니다.\n\n제프 어윈 Azure Storage 프로그램 관리자"
