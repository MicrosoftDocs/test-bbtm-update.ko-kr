### YamlMime:Yaml
ms.openlocfilehash: 28ef7d09776579321a8172006c8fce1ff809ea98
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900259"
Slug: streamlining-kubernetes-development-with-draft
Title: Draft를 사용하여 Kubernetes 개발 간소화
Summary: 오늘 우리 팀은 모든 Kubernetes 클러스터에 애플리케이션 개발 및 배포를 간소화하는 도구인 Draft를 발표하게 된 것을 자랑스럽게 생각합니다. 이제 개발자는 두 가지 간단한 명령을 사용하여 Docker를 요구하거나 Kubernetes 자체를 설치하지 않고도 컨테이너 기반 애플리케이션을 해킹할 수 있습니다.
Content: >-
  <p><em>Im&rsquo; Gabe Monroy, Microsoft Azure 컨테이너의 수석 PM입니다. 4월에 Deis를 인수하여 Microsoft에 입사했습니다. Deis에서 우리 팀은 항상 Kubernetes에 컨테이너를 더 쉽게 사용하고 &ndash; 배포하기 쉽게 만드는 데 레이저에 집중했습니다. 이제 Microsoft의 일원으로서 Im&rsquo;은 이 임무를 계속하고 Azure Container Service 팀의 일원으로 릴리스된 오픈 소스 소프트웨어&rsquo;의 첫 번째 부분을 공유하게 되어 기뻤습니다.</em></p>


  <p>애플리케이션 컨테이너는 지난 몇 년 동안 인기가 급증했습니다. 최근 몇 달 동안 Kubernetes는 이러한 컨테이너를 오케스트레이션하기 위한 인기 있는 솔루션으로 부상했습니다. 많은 사람들이 확장 가능한 아키텍처와 활기찬 오픈 소스 커뮤니티를 위해 Kubernetes로 전환하지만, 일부는 여전히 Kubernetes를 <a href="https://www.youtube.com/watch?v=aOQwyN0bTk4">사용하기가 너무 어렵다</a>고 봅니다.</p>


  <p>오늘 우리 팀은 모든 Kubernetes 클러스터에 애플리케이션 개발 및 배포를 간소화하는 도구인 <a href="https://aka.ms/draft">Draft</a>를 발표하게 된 것을 자랑스럽게 생각합니다. 이제 개발자는 두 가지 간단한 명령을 사용하여 Docker를 요구하거나 Kubernetes 자체를 설치하지 않고도 컨테이너 기반 애플리케이션을 해킹할 수 있습니다.</p>


  <h2>실행 중인 초안</h2>


  <p>초안은 개발자가 &ldquo;코드를 작성하고 반복하는 동안 개발자&rsquo; 워크플로 &ndash; 의 내부 루프&rdquo;를 대상으로 하지만 버전 제어에 대한 변경 내용을 커밋하기 전에 대상으로 합니다. 실행 중인 내용을 확인해 보겠습니다&rsquo;.</p>


  <p><strong><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6991cf1e-caa0-4199-9a4d-0521b771ea23.gif"><img alt="Streamlining Kubernetes" border="0" height="438" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/84aeb0f5-9f1f-4776-9d04-a49305e06b3f.gif" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Kubernetes 간소화" width="640"></a></strong></p>


  <h2>Kubernetes에 대한 항해 설정</h2>


  <p>개발자가 초안을 실행 &ldquo;&rdquo; 하면 도구가 애플리케이션 언어를 감지하고 간단한 Dockerfile 및 <a href="https://github.com/kubernetes/helm">Kubernetes Helm</a> 차트를 원본 트리에 기록합니다.&nbsp; 언어 감지는 모든 언어, 프레임워크 또는 런타임 환경을 지원할 수 있는 구성 가능한 초안 &ldquo;팩&rdquo;을 사용합니다. 기본적으로 Draft는 Node.js, Go, Java, Python, PHP 및 Ruby를 비롯한 언어를 지원합니다.</p>


  <p>Draft를 사용자 지정하여 Kubernetes에서 실행할 수 있는 모든 애플리케이션 또는 서비스의 개발을 간소화할 수 있습니다.&nbsp; 초안 팩은 단순한 검색 스크립트, Dockerfile 및 Helm 차트일 뿐입니다.</p>


  <p>개발자를 위한 이 단순하면서도 유연한 사용자 환경은 <em>빌드팩</em>의 개념을 지원하는 <a href="https://deis.com/workflow/">Deis</a> 및 <a href="https://cloudfoundry.org/">Cloud Foundry</a>와 같은 PaaS 시스템에서 영감을 받았습니다. 그러나 Draft는 빌드 및 배포 구성을 원본 트리에 기록하므로 Buildpack 지향 PaaS 시스템과는 다릅니다. 따라서 이러한 컨테이너를 프로덕션으로 가져올 수 있는 CI(연속 통합) 파이프라인을 생성하는 것은 간단합니다.</p>


  <h2>로컬로 편집, 원격으로 개발</h2>


  <p>개발자가 초안 만들기를 실행&ldquo;하면 애플리케이션을 해킹하는 것은 초안&rdquo;을 입력하는 &ldquo;것만큼&rdquo; 간단합니다. 로컬 또는 클라우드에서 실행되는 Kubernetes 클러스터에 소스 코드를 제공하고, Dockerfile을 사용하여 해당 클러스터에서 빌드하고, Helm 차트를 사용하여 개발 환경에 배포합니다.&nbsp; 그런 다음 개발자는 앱을 라이브로 테스트할 수 있으며 편집기 또는 IDE의 변경 내용은 몇 초 안에 사용할 수 있습니다. Jenkins 레지스트리 및 Kubernetes 클러스터를 사용하면 개발자는 운영 팀 또는 <a href="https://kubernetes.io/docs/getting-started-guides/minikube/">자체 랩톱</a>에서 배포를 통해 코드에서 엄격한 반복 루프를 빌드할 수 있습니다.</p>


  <p>일부 개발자는 랩톱에서 실행되는 Kubernetes 클러스터에서 Draft를 가리키며 혼자 시작하는 경우가 많지만, Draft는 원격 Kubernetes 클러스터에서도 동일하게 작동합니다. 이를 통해 개발자는 코드를 로컬로 편집할 수 있지만 클라우드에서 개발 환경을 실행하여 모든 앱&rsquo; 프로덕션 종속성에 액세스할 수 있습니다. 개발&rdquo; 및 &ldquo;신동&rdquo; 패리티에 대한 &ldquo;세 가지 환호!</p>


  <h2>오늘 시작</h2>


  <p>ACS는 고객이 자신의 ACS 클러스터를 사용자 지정하는 데 도움이 되는 여러 오케스트레이터 및 오픈 소스 ACS-Engine 프로젝트에 대한 지원을 포함하여 개방성의 오랜 역사를 가지고 있습니다.&nbsp; 우리는 개발자가 컨테이너 기술로 성공하는 데 도움이되는 새로운 프로젝트로 열린 정신을 확장하게 된 것을 자랑스럽게 생각합니다. 현재 Draft는 오픈 소스이며 .<a href="https://aka.ms/draft">https://github.com/Azure/draft</a> <a href="https://aka.ms/draftlanding">ACS에서 Kubernetes 클러스터를</a> 스핀업하고 지금 시험 사용을 위해 Draft를 사용합니다.</p>
