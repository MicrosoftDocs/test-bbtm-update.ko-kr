### YamlMime:Yaml
ms.openlocfilehash: 528d5694ea85c005094d17a02196f1a6265cbfac
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139903318"
Slug: diagnosing-modsecurity-for-azure-websites
Title: Azure Websites에서 ModSecurity 관련 문제 진단
Summary: 이 게시물은 Azure Websites에서 ModSecurity 문제를 진단하는 데 도움이 됩니다.
Content: >-
  <a href="https://azure.microsoft.com/blog/2014/09/29/modsecurity-for-azure-websites/">이전 게시물</a>에서는 Azure Websites에서 ModSecurity를 사용하는 방법에 대해 설명했습니다. ModSecurity 규칙 및 구성은 특히 외부 원본에서 조각을 복사하는 경우 매우 복잡해질 수 있습니다. 일반적으로 ModSecurity에 대한 간단한 구성으로 시작하여 테스트한 다음 더 복잡한 구성까지 진행하려고 합니다. 이렇게 하면 변경 내용을 추적하고 오류를 진단하는 데 도움이 됩니다. 다음은 잘못되었을 수 있는 것을 파악하는 데 도움이 되는 몇 가지 팁입니다.

  <h2>내 HTTP 요청 및 응답에 대해 ModSecurity가 수행하는 작업을 어떻게 알 수 있나요?</h2>

  <b>SecRuleEngine</b>을 <b>DetectionOnly</b>로 설정하면 개발자는 들어오는 요청을 차단하지 않고 규칙이 수행하는 작업을 테스트할 수 있는 좋은 방법을 제공합니다. <b>DetectionOnly</b> 출력은 일반적으로 이벤트 로그로 전송되며, Azure Websites에서 사이트의 <b>d:\home\LogFiles</b> 디렉터리로 리디렉션됩니다. FTP를 통해 이러한 로그를 다운로드하여 트리거하는 규칙에 대한 자세한 로그를 가져올 수 있습니다.


  자세한 로그를 원하는 경우 .conf 파일에 아래 구성 옵션을 추가할 수 있습니다.

  <blockquote><span style="color: #0000ff;">SecDebugLog</span> <span style="color: #ff0000;">d:\home\site\wwwroot\modsecurity\logs </span><span style="color: #0000ff;">SecDebugLogLevel</span><span style="color: #ff0000;"> 9</span></blockquote>

  이는 전역 설정이며, 보통 트래픽에 대해서도 웹 사이트에서 심각한 성능 문제를 일으킬 수 있습니다. 따라서 사이트에 대한 라이브 트래픽이 없는 한 아래 예제와 같이 조건부 디버그 설정을 사용하는 것이 좋습니다.


  특정 클라이언트 IP 주소에 대한 디버그 로깅 범위를 축소하려면 다음을 사용할 수 있습니다.

  <blockquote><span style="color: #0000ff;">SecRule</span> REMOTE_ADDR <span style="color: #ff0000;">"@ipMatch 192.168.1.1" "phase:1,id:1234,t:none,nolog,pass,ctl:debugLogLevel=9"</span></blockquote>

  요청에 특정 매개 변수가 있는 경우 디버그 로깅 범위를 축소하려면 다음을 사용할 수 있습니다.

  <blockquote><span style="color: #0000ff;">SecRule</span> ARGS:debug_log <span style="color: #ff0000;">"@streq on" "phase:1,id:1235,t:none,nolog,pass,ctl:debugLogLevel=9"</span></blockquote>

  <a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#SecDebugLog">ModSecurity 설명서를</a> 참조하여 로그 수준의 의미에 대한 자세한 내용을 확인할 수 있습니다.


  <b><i>참고:</i></b><i> 이러한 설정은 콘텐츠 디렉터리에 데이터를 기록하므로 웹 사이트에 스토리지 할당량이 있는 경우 구성 및 요청 볼륨에 따라 이를 실행할 위험이 있습니다.</i>

  <h2>ModSecurity 규칙이 트리거되지 않는 이유는 무엇인가요?</h2>

  다음은 트리거되지 않는 규칙의 문제를 진단하는 데 도움이 되는 몇 가지 단계입니다.


  1. <i><b>web.config</b> 올바른가요?</i>

  web.config 파일의 구성 섹션이 올바른지 확인하고 여러 위치에서 섹션을 복사한 경우 XML이 올바르게 병합되고 구성이 예상된 섹션에 있는지 확인합니다.


  2. <i>ModSecurity Include 파일에 대한 올바른 경로가 있나요? </i> ModSecurity 웹 사이트에서 무료로 사용할 수 있는 OWASP CRS 규칙에는 포함할 다른 .conf 파일을 가리키는 Include 지시문이 .conf 파일에 있습니다. 이러한 파일을 있는 그대로 사용하는 경우 올바른 위치를 가리키도록 Include 지시문의 위치를 편집해야 합니다(예: d:\home\sites\wwwroot 포함 <b>).\</b>


  3. <i>트리거되지 않는 특정 규칙인가요? </i> <b>SecDebugLog</b> 설정을 사용하여 각 규칙에 대한 각 HTTP 요청 또는 응답에 대해 ModSecurity가 수행하는 작업을 진단할 수 있습니다. 특정 규칙의 문제를 진단하는 데 사용합니다. 위의 예제와 같이 특정 규칙에 대해 항상 ctl:debugLogLevel=9를 설정할 수 있습니다.
