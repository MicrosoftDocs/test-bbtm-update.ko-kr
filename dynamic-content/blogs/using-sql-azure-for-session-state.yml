### YamlMime:Yaml
ms.openlocfilehash: a4710624211754877a0bde3d2dd27c96ff4cd3b9
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139903437"
Slug: using-sql-azure-for-session-state
Title: 세션 상태에 SQL Azure 사용
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] HTTP(Hypertext Transfer Protocol)는 상태 비국적 프로토콜입니다. 상태 비정상 프로토콜의 장점은 웹 서버가 유지할 필요가 없다는 것입니다.'
Content: "<p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>HTTP(<a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\">Hypertext Transfer Protocol</a>)는 상태 비국적 프로토콜입니다. 상태 비저장 프로토콜의 장점은 웹 서버가 요청 간에 사용자에 대한 정보를 유지할 필요가 없다는 것입니다. 그러나 일부 시나리오에서 웹 사이트 개발자는 웹 애플리케이션에 일관성을 제공하기 위해 페이지 요청 간에 상태를 유지하려고 합니다. 상태 비저장 프로토콜에서 상태를 만들려면 ASP.NET 사용자의 첫 번째 요청에서 웹 사이트 방문에 대한 마지막 요청까지 유지 관리되는 세션의 개념을 가지고 있습니다. 기본적으로 ASP.NET 세션은 실행 중인 웹 서버의 RAM에서 유지 관리됩니다. 그러나 Azure가 상태 비저장 플랫폼인 <a href=\"https://blogs.msdn.com/b/tims/archive/2009/03/24/overview-of-windows-azure.aspx\">Windows</a> 웹 역할 인스턴스에는 로컬 스토리지가 없습니다. 언제든지 웹 역할 인스턴스를 데이터 센터의 다른 서버로 이동할 수 있습니다. 웹 역할 인스턴스가 이동되면 세션 상태가 손실됩니다. 상태 비저장 웹 서버에서 상태 비저장 프로토콜을 사용하여 상태를 인식하려면 웹 역할 인스턴스가 이동된 경우에도 지속되는 영구 서버 쪽 스토리지가 필요합니다. 이 문서에서는 SQL Azure 사용하여 Windows Azure에서 ASP.NET 세션에 대한 영구 스토리지를 만드는 방법을 설명합니다.</p>  <p>SQL Azure 온-프레미스 SQL Server 설치용으로 개발된 Microsoft 세션 상태 공급자인 <a href=\"https://msdn.microsoft.com/en-us/library/aa478952.aspx\">SqlSessionStateStore</a>가 이미 있으므로 Windows Azure에서 세션을 유지 관리하는 데 적합합니다. SQL 서버 공급자는 컴퓨터에서 사용자의 상태를 유지하려는 웹 팜의 여러 웹 서버에서 로컬 IIS 설치용으로 개발되었습니다.</p>  <p><font color=\"#ff0000\">아래 코드는 Microsoft에서 지원되지 않습니다. SQL Azure 데이터베이스를 사용하는 세션 상태에 대한 지원 정책은 이 기술 자료 문서에서 \"Microsoft는 ASP.net 애플리케이션에 SQL Azure 데이터베이스를 사용하는 세션 상태 관리 SQL 지원하지 않습니다\" </font><a href=\"https://support.microsoft.com/kb/2006191\"><font color=\"#ff0000\"></font></a> 라고 명시되어 있습니다<font color=\"#ff0000\">.</font></p>  <h2>테이블 만들기</h2>  <p>SQL Azure 대해 Windows Azure에서 <a href=\"https://msdn.microsoft.com/en-us/library/aa478952.aspx\">SqlSessionStateStore</a><b> </b>공급자를 사용하려는 경우 적절한 테이블 및 저장 프로시저를 만들어야 합니다. 일반적으로 .NET 프레임워크(또는 Aspnet_regsql.exe <b>–sstype)</b>와 함께 제공되는 <b>InstallSqlState.sql</b> 스크립트로 수행되지만 Transact-SQL 차이로 인해 이 스크립트는 SQL Azure 작동하지 않습니다. 대신 수정된 스크립트를 사용해야 합니다(이 블로그 게시물의 맨 아래에 있는 다운로드 참조).</p>  <p>SQL Azure 세션 상태를 저장하는 데 필요한 데이터베이스, 저장 프로시저 및 테이블을 만드는 지침은 다음과 같습니다.</p>  <ol>   <li><b>ASPState</b> 데이터베이스를 만드는 <b>ASPStateInstall.sql</b>이라는 수정된 Transact-SQL 스크립트를 다운로드합니다. </li>    <li>master 데이터베이스의 SQL Server Management Studio <b>ASPStateInstall.sql</b> 스크립트를 실행하고 SQL Server Management Studio 사용하여 SQL Azure 연결하는 방법에 대해 자세히 알아보세요. </li>    <li>방금 만든 <b>ASPState</b> 데이터베이스에 SQL Server Management Studio 다시 연결합니다. </li>    <li><b>ASPState</b> 데이터베이스의 SQL Server Management Studio 다운로드에서 <b>InstallSqlState.sql</b> 스크립트를 실행합니다. </li> </ol>  <h2>web.config 수정</h2>  <p>다음으로 Windows Azure에서 세션 상태에 <b> 대한 스토리지로 SQL Azure </b> 사용하도록web.config수정합니다. <b>web.config</b> 다음과 같이 표시됩니다.</p>  <pre class=\"csharpcode\"><span class=\"kwrd\">&lt;</span><span class=\"html\">sessionState</span>    <span class=\"attr\">mode</span><span class=\"kwrd\">=&quot;SQLServer&quot;</span>    <span class=\"attr\">sqlConnectionString</span><span class=\"kwrd\">=&quot;Server=tcp:...;Trusted_Connection=False;Encrypt=True;&quot;</span>    <span class=\"attr\">cookieless</span><span class=\"kwrd\">=&quot;false&quot;</span>    <span class=\"attr\">timeout</span><span class=\"kwrd\">=&quot;20&quot;</span>    <span class=\"attr\">allowCustomSqlDatabase</span><span class=\"kwrd\">=&quot;true&quot;</span>  <span class=\"kwrd\">/&gt;</span></pre>    <p>    <p>ASPState 데이터베이스에 대한 SQL Azure <a href=\"https://sql.azure.com/\">Portal</a>의 SQL Azure 연결 문자열과 일치하도록 <b>sqlConnectionString</b>을 수정해야 합니다. IIS의 온-프레미스 설치에서 이 작업을 시도하는 경우 <b>web.config</b> 동일한 수정이 작동합니다.</p>    <h2>정리 수행</h2>    <p>온-프레미스 SQL Server ASP.NET SQL 세션 상태 관리 공급자를 설치할 때 설치는 이전 세션 데이터를 정리하는 SQL Server 에이전트가 실행하는 작업을 만듭니다. SQL Azure SQL Server 에이전트의 개념이 없습니다. 대신 Windows Azure 작업자 역할을 사용하여 SQL Azure 데이터베이스를 정리할 수 있습니다. 자세한 내용은 SQL Server 에이전트 블로그 시리즈(1부, 2부 및 3부)를 참조하세요. 데이터베이스를 설치하기 위해 실행한 <b>InstallSqlState.sql</b> 스크립트에는 <b>DeleteExpiredSessions가 포함되어 있습니다.</b> 만료된 세션을 트리밍하는 것은 작업자 역할에서 이 스크립트를 호출하는 것만큼 쉽습니다. 코드는 다음과 같습니다.</p>    <pre class=\"csharpcode\"><span class=\"kwrd\">public</span> <span class=\"kwrd\">override</span> <span class=\"kwrd\">void</span> Run()  {      <span class=\"rem\">// This is a sample worker implementation. Replace with your logic.</span>      Trace.WriteLine(<span class=\"str\">&quot;WorkerRole1 entry point called&quot;</span>, <span class=\"str\">&quot;Information&quot;</span>);        <span class=\"kwrd\">while</span> (<span class=\"kwrd\">true</span>)      {          Thread.Sleep(60000);            <span class=\"rem\">// Create a SqlConnection Class, the connection isn't established </span>          <span class=\"rem\">// until the Open() method is called</span>          <span class=\"kwrd\">using</span> (SqlConnection sqlConnection = <span class=\"kwrd\">new</span> SqlConnection(              ConfigurationManager.ConnectionStrings[<span class=\"str\">&quot;ASPState&quot;</span>].                  ConnectionString))          {              <span class=\"kwrd\">try</span>              {                  <span class=\"rem\">// Open the connection</span>                  sqlConnection.Open();                    SqlCommand sqlCommand = <span class=\"kwrd\">new</span> SqlCommand(                      <span class=\"str\">&quot;DeleteExpiredSessions&quot;</span>, sqlConnection);                    sqlCommand.CommandType =                       System.Data.CommandType.StoredProcedure;                    sqlCommand.ExecuteNonQuery();              }              <span class=\"kwrd\">catch</span> (SqlException)              {                  <span class=\"rem\">// WWB: Don't Fail On SQL Exceptions, </span>                  <span class=\"rem\">// Just Try Again After the Sleep</span>              }          }      }  }</pre>    <p>    <p>작업자 역할의 <b>app.config</b> <b>ASPState</b> 연결 문자열을 추가해야 합니다. 그렇지 않으면 Windows Azure에 배포할 때 작업자 역할이 완전히 초기화되지 않습니다. 다음과 같이 표시됩니다.</p>    <pre class=\"csharpcode\"><span class=\"kwrd\">&lt;?</span><span class=\"html\">xml</span> <span class=\"attr\">version</span><span class=\"kwrd\">=&quot;1.0&quot;</span> <span class=\"attr\">encoding</span><span class=\"kwrd\">=&quot;utf-8&quot;</span> ?<span class=\"kwrd\">&gt;</span>  <span class=\"kwrd\">&lt;</span><span class=\"html\">configuration</span><span class=\"kwrd\">&gt;</span>    <span class=\"kwrd\">&lt;</span><span class=\"html\">connectionStrings</span><span class=\"kwrd\">&gt;</span>      <span class=\"kwrd\">&lt;</span><span class=\"html\">add</span> <span class=\"attr\">name</span><span class=\"kwrd\">=&quot;ASPState&quot;</span> <span class=\"attr\">connectionString</span><span class=\"kwrd\">=&quot;Server=tcp:…;Trusted_Connection=False;Encrypt=True;&quot;</span><span class=\"kwrd\">/&gt;</span>    <span class=\"kwrd\">&lt;/</span><span class=\"html\">connectionStrings</span><span class=\"kwrd\">&gt;</span></pre>    <p>    <p>위의 코드를 잘라내어 붙여넣는 경우 SQL Azure Portal의 SQL Azure 연결 문자열과 일치하도록 <b>connectionString</b> 특성을 수정해야 <a href=\"https://sql.azure.com/\">합니다</a>.</p>    <h2>요약</h2>    <p>질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>"
