### YamlMime:Yaml
ms.openlocfilehash: 1d00fb333f047355ce7d7781b8496b9f6060b725
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139911994"
Slug: cloud-services-series-whats-new-in-windows-azure-caching
Title: 'Cloud Services 시리즈: Windows Azure 캐싱의 새로운 기능'
Summary: Windows Azure 캐싱은 Azure 애플리케이션 Windows 가속화하고 데이터베이스 부하를 줄이는 데 사용할 수 있는 분산 메모리 내의 확장 가능하고 신뢰할 수 있는 캐싱 솔루션입니다. 첫 번째 프로덕션 서비스...
Content: '<p><a target="_blank" href="https://www.windowsazure.com/en-us/home/features/caching/?WT.mc_id=cmp_pst001_blg_post0138cac">Windows Azure 캐싱</a>은 <a target="_blank" href="https://www.windowsazure.com/en-us/pricing/free-trial/?WT.mc_id=cmp_pst001_blg_post0138gen">Azure 애플리케이션 Windows</a> 가속화하고 데이터베이스 부하를 줄이는 데 사용할 수 있는 분산 메모리 내의 확장성 있는 신뢰할 수 있는 캐싱 솔루션입니다. 첫 번째 프로덕션 서비스는 2011년 5월에 출시되었습니다. 우리는 서비스를 사용하는 여러 고객이 있다는 것을 기쁘게 생각합니다. 릴리스 이후, Microsoft는 사용자로부터 귀중한 피드백을 받았으며, 새로운 캐시 사용 패턴 지원에 대한 심층적인 투자와 함께 이러한 피드백을 통합하기 위해 열심히 노력해 왔습니다.&nbsp; Windows <a href="https://go.microsoft.com/fwlink/?LinkId=254269&amp;clcid=0x409" target="_blank">Azure 2012년 6월 SDK</a>를 사용하여 이 작업의 미리 보기 릴리스를 발표하게 되어 기쁘게 생각합니다.&nbsp; 미리 보기의 내용&rsquo;에 대해 이야기해 봅시다&rsquo;.&hellip;</p>  <h3>약간의 배경</h3>  <p>현재 Windows Azure 캐싱은 여러 테넌트 간에 공유되는 Windows Azure의 머신을 사용하는 Windows Azure <i>서비스</i> &ndash; 로 제공됩니다(따라서 Azure <i>공유</i> 캐싱을 Windows 참조). 각 고객은 일정량의 메모리(128MB~4GB)를 지불하며 선택한 메모리에 따라 트랜잭션 처리량 및 네트워크 대역폭에 대한 제한이 제공됩니다. 이렇게 하면 테넌트 전체에서 모든 것이 &ldquo;공평&rdquo; 하고 이러한 제한을 초과할 때 캐시 사용량이 제한됩니다. 이는 많은 애플리케이션에 캐시를 사용하는 매우 좋은 방법이지만 고객이 정확한 리소스 요구 사항(메모리, 트랜잭션, 대역폭)을 미리 예측할 수 없으며 애플리케이션에서 미리 할당된 컴퓨터를 기반으로 일관된 동작을 수행하는 애플리케이션이 있습니다. 캐싱이 성능의 핵심 구성 요소인 경우 이러한 많은 애플리케이션에서 성능 일관성이 중요합니다.</p>  <h3>그럼...</h3>  <p>최신 Windows Azure SDK를 사용하여 고객&rsquo; 클라우드 애플리케이션의 일부로 호스트되는 Windows Azure 캐싱의 미리 보기 버전을 소개합니다. 따라서 할당량 제약 조건이 없으며 고객이 캐시에 할당한 리소스에 의해서만 제한됩니다. &nbsp;</p>  <h3>하지만 그게 다는 아니다&hellip;</h3>  <p>Windows Azure 캐싱은 이제 <i>훨씬</i> 더 나은 성능, 더 일관된 성능 및 고가용성을 줍니다. &nbsp;Windows Azure Portal에서 Visual Studio 및 관리 &amp; 모니터링 환경을 통해 보다 간단한 통합 개발 환경을 제공합니다. 이 버전의 캐싱에서는 몇 가지 새로운 기능(지역 &amp; 태그, 알림이 있는 로컬 캐시)도 사용할 수 있습니다. 마지막으로, memcached를 사용하는 애플리케이션이 있는 경우 memcached 프로토콜 &ndash; 을 지원하는 마이그레이션 경로를 제공하므로, 고가용성 같은 Windows Azure 캐싱의 차별화 기능을 사용하여 편리하게 마이그레이션할 수 있습니다. 당신이 우리만큼 흥분하고 더 많은 것을 알고 싶다면, 계속 읽으십시오!.</p>  <h3>새 배포 모델</h3>  <p>앞에서 설명한 것처럼 캐시는 이제 고객 애플리케이션의 일부입니다. 캐싱(미리 보기) &ndash; 분산 서버 및 클라이언트 라이브러리 &ndash; 는 새 Windows Azure SDK와 플러그 인으로 제공됩니다. 캐시를 사용하도록 애플리케이션을 빌드할 때 캐시 라이브러리는 다른 애플리케이션 아티팩트와 함께 cspkg 파일에 패키지되고, 애플리케이션을 Windows Azure에 배포하면 사용자가 제어하는 웹 또는 작업자 역할에 캐싱이 배포됩니다.&nbsp; 이러한 인스턴스가 얼마나 크거나 작은지, 캐시에 대한 인스턴스 수를 선택하고, 다른 Windows Azure 역할처럼 확장 또는 축소하여 런타임에 캐시 용량을 관리합니다.</p>  <h3>배포 모드</h3>  <p>캐시를 사용하기 위한 두 가지 배포 모드 중 하나를 선택할 수 있습니다.</p>  <p><img style="display: block; margin-left: auto; margin-right: auto;" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0564.CachingUpImage.png" alt="" border="0" height="285" width="611"></p>  <ol>  <li>웹/작업자 역할과 함께 배치된 캐시: 일부 사용자는 몇 개의 노드에서 캐시 없이 이미 배포된 애플리케이션이 있을 수 있습니다. 메모리, CPU 및 대역폭에서 여분의 용량을 사용하기 위해 캐시를 추가하여 애플리케이션 속도를 향상할 수 있습니다. 그것은&rsquo; 실질적으로 무료 (실제로, 당신은 이미 그것을 지불했지만, 이것은 가까운 무료 캐시입니다). 웹 또는 작업자 역할도 캐싱을 호스트하도록 설정하기만 하면 됩니다. 이제 애플리케이션 내의 모든 역할에서 캐싱을 호출할 수 있습니다.</li>  <li>격리된 노드의 일관된 캐시: 일관되고 예측 가능한 성능&rsquo;이 필요한 더 심각한 캐싱 요구 사항이 있는 경우 캐시를 호스트하는 전용 역할을 사용하는 것이 좋습니다. <a target="_blank" href="https://msdn.microsoft.com/en-us/library/hh914129.aspx">용량 계획 가이드</a>를 통해 캐시에 배치할 것으로 예상되는 부하 종류에 따라 역할의 크기와 필요한 인스턴스 수를 확인할 수 있습니다.</li>  </ol>  <h3>그게 죠?</h3>  <p>심지어 가까이하지 않습니다. 다양한 종류의 배포에서 캐시를 유연하게 사용하는 것 외에도 Azure는 시장의 다른 캐싱 솔루션과 차별화되는 기능 조합을 캐시하는 Windows. 몇 가지 이점은 &nbsp;다음과 같습니다.</p>  <ol>  <li><strong>비용 효율적</strong>&nbsp;입니다. 캐싱이 호스트되는 컴퓨팅 인스턴스의 비용만 지불하고 추가 프리미엄은 없습니다. 공동 배치 모드는 실질적으로 무료이며 컴퓨팅 VM에 있을 수 있는 여분의 CPU, 대역폭 및 메모리 리소스를 활용할 수 있습니다.</li>  <li><b>탄력적 확장은 100GB 이상의 캐시로 확장됩니다 </b>. 요구 사항에 따라 인스턴스 수를 늘리거나 줄일 수 있으며, 캐시 클라이언트는 구성 변경 없이 새 역할을 자동으로 활용하기 시작합니다. 또한 기존 데이터는 부하를 분산하기 위해 모든 노드 간에 재배포됩니다. &nbsp;캐시를 최대 10개의 XL VM으로 확장하여 100GB 이상의 캐시된 데이터를 제공할 수 있습니다. 우리는 당신이 더 큰 캐시에 대한 필요성이 있다면, 우리에게 이야기, 그래서 훨씬 더 높은 &ndash; 갈 수 있다고 생각! 또한 캐시의 처리량은 사용하는 Windows Azure 리소스에 의해서만 제한됩니다.</li>  <li><b>그것은 빠릅니다!</b> 캐싱을&rsquo; 더 빠르게 만들기 위해 여러 가지 개선 사항이 있습니다. 이제 적절하게 구성된 캐시 &ndash; 에 대한 대기 시간이 1밀리초 단위로 약 5배 향상될 것으로 예상할 수 있습니다. Windows Azure 캐싱에서 로컬 캐시 기능을 적절하게 사용하면 이 기능을 다른 크기로 축소할 수 있습니다. 또한 왕복 및 대기 시간을 줄이는 대량 작업을 지원합니다.</li>  <li><strong>새로운 기능:</strong>&nbsp; 이제 다양한 다른 기능에도 액세스할 수 있습니다. 이들 중 일부는 캐싱(Microsoft Windows Server용 AppFabric 1.1)의 온-프레미스 릴리스에서 사용할 수 있었으며 Windows Azure에서 요청되었습니다.</li>  <ol>  <li><b>여러 명명된 캐시: </b> 이제 캐시를 여러 명명된 캐시로 논리적으로 나눌 수 있습니다. 각 명명된 캐시는 사용 사례에 따라 별도의 데이터 정책 집합을 적용할 수 있습니다.</li>  <li><b>고가용성 캐시:</b> 캐시에 민감한 애플리케이션의 경우 캐시에서 고가용성을 구성할 수 있습니다. 이렇게 하면 캐시에 배치한 각 항목의 추가 복사본이 별도의 인스턴스에 유지됩니다. 이렇게 하면 데이터 손실 가능성이 크게 줄어들고 노드 오류 발생 시 캐시 적중 횟수 비율이 높습니다. HA를 사용하지 않는 경우에도 Windows Azure 캐싱은 기본 캐시 컴퓨팅 인스턴스에 영향을 주는 Windows Azure 환경의 변경으로 인해 데이터 제거를 방지하기 위해 작동합니다.</li>  <li><b>알림과 함께 로컬 캐시 사용:</b> 분산된 메모리 내 캐시에 액세스하는 것은 DB 액세스보다 훨씬 빠르지만 로컬로 액세스하는 것이 더 좋습니다. 로컬 캐시 기능을 사용하여 사용하도록 설정합니다. 이는 읽기가 많은 데이터와 일관성 요구 사항이&rsquo; 가장 중요한 경우에 유용합니다. 캐시 클라이언트 라이브러리는 기본적으로 데이터를 매우 빠르게 검색할 수 있는 로컬 캐시를 지원합니다(네트워크 홉 없음, 직렬화/역직렬화 비용 없음). 또한 알림을 등록하여 캐시 클러스터에서 정기적으로 로컬 캐시를 업데이트할 수 있습니다.</li>  <li><b>지역 및 태그 사용: </b> 이 기능을 사용하면 관련 개체를 함께 유지할 수 있습니다. 예를 들어 사용자 세션에 대한 모든 개체를 지역에 배치하여 함께 쿼리할 수 있습니다. 또한 API 호출만 사용하여 이러한 태그로 쿼리를 필터링할 수 있도록 지역의 개체에 태그를 추가할 수 있습니다.</li>  </ol>  <li><b>코드를 변경하지 않고 memcache 애플리케이션을 실행합니다. </b> 마지막으로, 캐싱 솔루션 &ndash; 중 하나를 이미 사용 중일 수 있다는 것을 알고<b> </b>있습니다. 위의 기능 중 하나 이상에 대해 Windows Azure 캐싱으로 이동할 수 있지만 전체 다시 쓰기가 걱정됩니다. Azure 캐싱에서 memcache 클라이언트를 이해하게 Windows 들어보 &ndash; 셨습니다. 따라서 memcache 클라이언트를 캐싱 클러스터로 직접 가리키면 시작할 수 있습니다. &nbsp;대부분의 경우 &ndash; 작동하지만 성능에 대해 매우 까다로운 경우 더 나은 성능을 제공하는 memcache 클라이언트 shim을 사용해야 합니다(이전 사례는 shim으로 방지되는 캐시 클러스터의 게이트웨이&rsquo;를 통해 &lsquo;라우팅됨). 어느 쪽이든 클라이언트 애플리케이션을 다시 작성하지 않고도 캐싱 기능을 활용할 수 있습니다.&nbsp;</li>  </ol>  <p>앞으로 몇 주 동안 이러한 각 항목에 대해 자세히 살펴보겠습니다. Well&rsquo;은 캐시에 대한 용량 계획, 모니터링, 디버깅 및 일반적인 문제를 해결하는 방법에 대해 블로그를 참조하세요. 우리와 같은 당신이 얘기 할 수있는 무언가가&rsquo;있는&rsquo; 경우, 의견을 남겨주세요! 한편, Windows Azure 캐싱(미리 보기)에 시험 사용을 제공하고 어떻게 진행되는지 알려주세요. 언제든지 이 블로그의 댓글을 통해 연락하거나, 당사 팀이 정기적으로 응답하는 <a href="https://social.msdn.microsoft.com/Forums/en-US/windowsazuredata/threads" target="_blank">포럼</a>에 쿼리를 게시할 수 있습니다.</p>  <p>행복한 캐싱!</p>  <p>-작성자: Prashant Kumar, Sr. Program Manager, Windows Azure</p>'
