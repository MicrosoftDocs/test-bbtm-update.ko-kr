### YamlMime:Yaml
ms.openlocfilehash: 50f5af081e83b746c1fae1ca7ae5a1c9e971627d
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910957"
Slug: isv-guest-post-series-braincredits
Title: 'ISV 게스트 포스트 시리즈: BrainCredits'
Summary: Azure ISV 블로그 시리즈를 Windows 목적은 Windows Azure 애플리케이션 개발 및 deployment.& 중에 작업한 ISV&rsquo;의 성과 중 일부를 강조하는 것입니다.
Content: '<p>Windows Azure ISV 블로그 시리즈의 목적은 Windows <a target="_blank" href="https://azure.microsoft.com/en-us/?WT.mc_id=cmp_pst001_blg_post0026">Azure</a> 애플리케이션 개발 및 배포 중에 작업한 ISV&rsquo;의 성과 중 일부를 강조하는 것입니다.&nbsp; 오늘&rsquo; 게시물은 Azure ISV BrainCredits를 Windows 방법 및 Windows Azure를 사용하여 온라인 서비스를 제공하는 방법에&rsquo; 관한 것입니다.</p>  <p target="_blank" href="https://windowsazure.com/en-u/">BrainCredits는 웹 세미나, 수업, 자습서, 서적, 회의, 블로그 또는 비디오와 같은 강사 주도 또는 자기 연구 학습을 포함하여 가상 대본에서 모든 비공식 학습을 추적하는 데 도움이 되는 시스템을 제공합니다.&nbsp; 이 시스템은 고가용성, 대용량 웹 기반 MVC(Model-View-Controller) 애플리케이션으로 설계되었으며, 작은 증분 릴리스를 프로덕션으로 푸시하는 민첩한 프로세스에 따라 빌드되었습니다. 이를 위해 팀은 빠른 읽기 작업을 지원하고 전체 애플리케이션을 다시 컴파일하거나 다시 테스트하지 않고도 매우 대상 지정된 업데이트를 허용하는 아키텍처가 필요했습니다. CQRS(명령 쿼리 책임 분리) 스타일 아키텍처를 결정했습니다. 또한 트래픽 및 백그라운드 워크로드에 따라 개별 하위 시스템(웹 역할 또는 작업자 역할)의 세분화된 크기 조정을 활용하기 위해 Windows Azure<a target="_blank" href="https://windowsazure.com/en-u/"></a>에서 애플리케이션을 호스트하기로 결정했습니다.</p>  <p>CQRS 아키텍처는 기본적으로 <i>쓰기 작업 </i>과 <i>읽기 작업을 구분합니다</i>. BrainCredits를 사용하면 강사&rsquo;가 주도하는 수업에 등록하는 등의 쓰기 작업과 온라인 이력서 보기와 같은 작업을 읽습니다. BrainCredits는 웹 역할이 요청(명령)을 수집하고 큐를 통해 작업자 역할에 비동기적으로 라우팅하도록 하여 쓰기 작업을 처리합니다. 이렇게 하면 UI 응답 시간이 매우 빨라지고 웹 역할의 부하도 줄어듭니다. 이 경우 BrainCredits는 각 인스턴스가 단일 코어를 사용하는 웹 역할에 대해 Small 인스턴스를 배포할 수 있었습니다.</p>  <p>기본 아키텍처는 다음과 같습니다.</p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4382.BrainCredits.png" alt="" border="0"></p>  <p>웹 역할과 작업자 역할 간의 비동기 통신을 달성하기 위해 다음 Windows Azure 개체가 사용되었습니다.</p>  <ul>  <li>Azure 큐를 Windows. 웹 역할 인스턴스는 큐에 메시지를 삭제하여 작업자 역할 인스턴스에 명령을 처리해야 한다고 경고합니다.</li>  <li>Azure Blob을 Windows. Blob은 직렬화된 명령을 저장하고 각 명령 큐 메시지는 특정 Blob을 가리킵니다. 참고: BrainCredits 사용자가 실행 중인 명령 중 일부에 자유 형식 텍스트를 추가할 수 있으므로 Blob을 사용하여 명령을 저장하는 데 사용되며, 이로 인해 때때로 8k를 초과하는 예기치 않은 메시지 크기(당시 큐 메시지 크기 제한)가 발생합니다. 2011년 8월에 새로운 64K 메시지 크기 제한이 발표되었으므로 이 간접 참조는 불필요한 것일 수 있습니다.</li>  <li>Azure Table Storage를 Windows. 이벤트 소싱 데이터는 Windows Azure Tables에서 캡처됩니다. 도메인에서 이벤트가 발생하면 이벤트가 테이블 스토리지에 저장되고 CQRS 프레임워크에서 후속 요청 중에 도메인 개체를 다시 초기화하는 데 사용됩니다. Windows Azure Table Storage 사용자 UI 클릭(도메인 이벤트와 관련이 없는)과 같은 명령 데이터를 저장하는 데도 사용됩니다. Domain Event 테이블을 사용하면 BrainCredits 시스템 관리자가 사이트를 방문하는 동안 수행한 모든 UI 단계(예: 검색 수행, 페이지 로드 등)를 다시 만들 수 있습니다.</li>  <li>Azure Cache를 Windows. 캐시는 사용자에게 실행 중인 명령에 대한 피드백을 제공하기 위해 요청 간에 데이터를 저장하는 데 사용되지만 아직 완료되지 않았습니다. 이를 통해 BrainCredits는 사용자에게 비동기 애플리케이션에서 동기 환경의 모양을 제공하도록 애플리케이션의 최종 일관성을 처리할 수 있습니다.</li>  </ul>  <p>VM 크기에 대한 한 가지 점: 작은 VM 인스턴스는 약 100Mbps 대역폭을 제공합니다. BrainCredits가 대규모 명령 또는 이벤트에 대한 총 왕복 처리 시간에 영향을 주는 명령 및 이벤트 콘텐츠 읽기 및 쓰기로 인해 성능 병목 상태를 발견한 경우 더 큰 VM 크기가 실행 가능한 솔루션이었을 것입니다. 그러나 테스트에 따라 Small 인스턴스는 매우 허용 가능한 고객 관련 성능을 제공했습니다. VM 크기를 작게(예: 1코어) &ldquo;로 유지하면 유휴 시간&rdquo; 비용이 최소로 유지됩니다(예: 작은 웹 역할 인스턴스 2개 + Small Worker 역할 인스턴스 1개는 약 270달러, 기준 월별 컴퓨팅 비용으로 270달러). 중간 VM은 이 최소 비용을 약 $540로 증가합니다. &rsquo;필요에 따라 여러 VM 인스턴스로 확장한 다음, 사용량이 적은 기간 동안 규모를 축소하는 것이 훨씬 더 경제적입니다.</p>  <p>BrainCredits 아키텍처에 설명된 몇 가지 주요 사항이 있습니다.</p>  <ul>  <li>최종 사용자 환경에 집중합니다. CQRS 접근 방식을 따르고 업데이트를 비동기적으로 처리하면 웹 응답 시간은 장기 실행 백그라운드 프로세스의 영향을 받지 않습니다.</li>  <li>확장성 BrainCredits는 모든 백그라운드 처리를 작업자 역할로 구분했습니다. 웹 역할 스레드에서 큐를 비동기적으로 처리하는 것은&rsquo; 전적으로 가능하지만 이는 스케일 아웃 옵션에 영향을 줍니다. 별도의 작업자 역할을 사용하면 시스템이 사용자 트래픽 및 백그라운드 처리 부하를 독립적으로 처리하도록 미세 조정될 수 있습니다.</li>  <li>비용 공간. 최소 실행 속도를 고려할 때 VM 크기 선택은 중요합니다. &rsquo;더 큰 VM을 사용하려는 경우가 많지만 메모리,&rsquo; CPU 및 네트워크 대역폭 요구 사항에 따라 가장 작은 VM 크기를 선택하는 것이 비용 효율적인 경우가 많습니다. VM 크기에 대한 자세한 내용은 이 <a target="_blank" href="https://msdn.microsoft.com/en-us/library/windowsazure/ee814754.aspx">MSDN 문서를 참조하세요</a>.</li>  </ul>  <p>특정 문제를 해결하는 방법에는 여러 가지가 있습니다. 이러한 솔루션 패턴을 사용자 고유의 애플리케이션에 통합하거나, 개선하거나, 완전히 다른 접근 방식을 취할 수 있습니다. 여기에서도 의견과 제안을 자유롭게 공유할 수 있습니다!</p>  <p>Windows Azure ISV 블로그 시리즈의 다음 게시물에 대해 계속 지켜봐 주시기 바랍니다. 다음 번에 well&rsquo;은 Windows Azure와 Digital Folios&rsquo; 환경을 공유합니다.</p>'
