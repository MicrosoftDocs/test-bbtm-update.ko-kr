### YamlMime:Yaml
ms.openlocfilehash: c27b9346cb61ea0e129382f2cf689d8900391583
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139898956"
Slug: i-miss-you-sql-server-agent-part-1
Title: '에이전트를 SQL Server 그리워요: 1부'
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] 현재 SQL Azure 클라우드에서 SQL Server 에이전트 실행을 지원하지 않습니다. SQL Azure SQL Server 에이전트 유형 기능이 필요한 경우...'
Content: '<p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>현재 SQL Azure 클라우드에서 SQL Server 에이전트 실행을 지원하지 않습니다. SQL Azure SQL Server 에이전트 유형 기능이 필요한 경우 Windows Azure 작업자 역할 및 일부 사용자 지정 코드를 사용할 수 있습니다. 이 블로그 게시물 시리즈에서 방법을 보여 하겠습니다. </p>  <blockquote>   <p><i>"비밀 요원 남자, 비밀 요원 남자</i>       <br><i>그들은 당신에게 숫자를 주었고 당신의 이름을 빼앗겼습니다" </i>- 조니 리버스</p> </blockquote>  <h2>SQL Server 에이전트</h2>  <p><a href="https://technet.microsoft.com/en-us/library/ms189237.aspx">SQL Server 에이전트</a>는 예약된 관리 작업을 실행하는 Microsoft Windows 서비스로, 작업이라고 합니다. SQL Server 에이전트는 SQL Server를 사용하여 작업 정보를 저장합니다. 작업에는 하나 이상의 작업 단계가 포함됩니다. 각 단계에는 자체 태스크(예: 데이터베이스 백업)가 포함됩니다. SQL Server 에이전트는 특정 이벤트에 대한 응답이나 요청에 따라 일정에 있는 작업을 실행할 수 있습니다. 예를 들어 평일 근무 시간 이후에 회사 서버를 모두 백업하려는 경우 이 태스크를 자동화할 수 있습니다. 월요일부터 금요일까지 밤 10시 이후 백업이 실행되도록 일정을 만듭니다. 이 백업에 문제가 발생하면 SQL Server 에이전트가 이 이벤트를 기록하여 사용자에게 알릴 수 있습니다. SQL Server 에이전트는 온-프레미스 Enterprise, Datacenter 및 Standard 버전의 SQL Server 설치되지만 Express 또는 Compact 버전에서는 사용할 수 없습니다. </p>  <h2>작업자 역할</h2>  <p>작업자 역할은 기본적으로 클라우드의 Windows 서비스로, 새로 고침 시작, 중지 및 구성의 개념을 이해합니다. 시작되면 잘 설계된 작업자 역할이 다음과 같은 무한 루프에 들어갑니다.</p>  <ul>   <li>처리를 알리는 이벤트를 확인합니다. </li>    <li>작업을 수행합니다. </li>    <li>이벤트를 다시 확인해야 할 때까지 절전 모드입니다. </li> </ul>  <p>여러 용도로 사용할 수 있도록 의도적으로 추상적입니다.</p>  <p>고지 사항: 작업자 역할은 의도적으로 추상적이고 SQL Server 에이전트는 수년 동안 잘 개발된 잘 둥근 제품이므로 에이전트가 작업자 역할로 기능을 완료할 SQL Server 복제하지 않습니다. 대신 에이전트가 Windows Azure 작업자 역할에서 수행하는 많은 SQL Server 작업을 수행할 수 있다는 생각을 전달하는 간단한 코드를 제공합니다(일부 코딩 포함).</p>  <h2>시작하기</h2>  <p>시작하기 위해 Visual Studio 작업자 역할을 포함하는 클라우드 프로젝트를 만듭니다. 이 작업의 기본 사항에 대한 자세한 내용은 여기에서 확인할 수 있습니다.</p>  <p><a href=""><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="이미지" border="0" alt="image" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4118.image_5F00_thumb_5F00_79D11C66.png" width="644" height="409"></a> </p>  <p>그러면 <b>다음과 같은 WorkerRole.cs</b> 라는 파일에서 몇 가지 샘플 코드가 생성됩니다.</p>  <pre class="csharpcode"><span class="kwrd">public</span> <span class="kwrd">override</span> <span class="kwrd">void</span> Run()  {      <span class="rem">// This is a sample worker implementation. Replace with your logic.</span>      Trace.WriteLine(<span class="str">&quot;WorkerRole1 entry point called&quot;</span>, <span class="str">&quot;Information&quot;</span>);        <span class="kwrd">while</span> (<span class="kwrd">true</span>)      {          Thread.Sleep(10000);          Trace.WriteLine(<span class="str">&quot;Working&quot;</span>, <span class="str">&quot;Information&quot;</span>);      }  }</pre>      <p>가장 먼저 수행하려는 작업은 SQL Azure 데이터베이스에서 저장 프로시저를 실행하는 코드를 작성하는 것입니다. 이는 SQL Server 에이전트 작업 내의 단계에서 Transact-SQL 스크립트를 실행하는 것과 같습니다.</p>    <p><a href=""><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="이미지" border="0" alt="image" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0702.image_5F00_thumb_5F00_71C95437.png" width="644" height="580"></a> </p>    <p>내 코드는 다음과 같습니다.</p>    <pre class="csharpcode"><span class="kwrd">protected</span> <span class="kwrd">void</span> ExecuteTestJob()  {      <span class="kwrd">using</span> (SqlConnection sqlConnection = <span class="kwrd">new</span> SqlConnection(          ConfigurationManager.ConnectionStrings[<span class="str">&quot;AdventureWorksLTAZ2008R2&quot;</span>].              ConnectionString))      {          <span class="kwrd">try</span>          {              <span class="rem">// Open the connection</span>              sqlConnection.Open();                SqlCommand sqlCommand = <span class="kwrd">new</span> SqlCommand(                  <span class="str">&quot;spTest&quot;</span>, sqlConnection);                sqlCommand.CommandType =                  System.Data.CommandType.StoredProcedure;                sqlCommand.ExecuteNonQuery();          }          <span class="kwrd">catch</span> (SqlException)          {              Trace.WriteLine(<span class="str">&quot;SqlException&quot;</span>,<span class="str">&quot;Error&quot;</span>);              <span class="kwrd">throw</span>;          }      }  }</pre>      <p>일반적으로 <b>SqlCommand.ExecuteNonQuery()</b> 메서드를 사용하여 데이터를 반환하지 않는 SQL Azure 저장 프로시저를 실행합니다. 반환 결과 집합이 갈 곳이 없습니다. 즉, 출력이 없습니다. SQL Server 에이전트와 비슷합니다. </p>    <h2>예외 처리</h2>    <p>위의 코드는 예외를 처리하는 작업이 매우 좋지 않습니다. 이는 Windows Azure 작업자 역할에서 고유한 버전의 SQL Server 에이전트를 작성할 때 알아내야 하는 첫 번째 장애물입니다. SQL Server 에이전트를 사용하면 단계가 다음 단계로 이동하거나 단계가 실패하면 작업을 종료하고 실패를 보고하는 논리적 선택이 제공됩니다. 작업자 역할에서 try/catch를 사용하여 SQL Server 에이전트의 옵션을 시뮬레이션할 수 있습니다. 이 시리즈의 세 번째 블로그 게시물에서 오류 처리 문제 중 일부를 해결합니다.</p>    <p>SQL Server 에이전트에 대한 <b><i></i></b> 옵션은 실패에서 실행을 중지하는 것입니다. 이는 작업자 역할과 동일합니다. 처리되지 않은 예외에서 작업자 역할이 재활용되고 다시 시작되는 경우 <a href="https://msdn.microsoft.com/en-us/library/ff431732.aspx">여기에서</a> 이에 대해 자세히 알아볼 수 있습니다. 블로그 시리즈의 3부에서 다루는 오류 처리에서 작업자 역할 재활용 및 다시 시작 기능을 사용할 예정입니다.</p>    <h2>요약</h2>    <p>이 블로그 시리즈의 2부에서는 하루 중 특정 시간에 저장 프로시저를 실행하는 방법을 설명합니다. 질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>'
