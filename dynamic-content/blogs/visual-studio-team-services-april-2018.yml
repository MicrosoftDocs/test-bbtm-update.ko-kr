### YamlMime:Yaml
ms.openlocfilehash: 19640c02cd26ddb2e8e8e24cd41fa49e368d71fa
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139907456"
Slug: visual-studio-team-services-april-2018
Title: 'Visual Studio Team Services 양조하는 내용: 2018년 4월 다이제스트'
Summary: 이 게시물 시리즈는 Visual Studio Team Services 대한 최신 업데이트 및 뉴스를 제공하며 Azure 사용자가 3주마다 릴리스되는 새로운 기능을 최신 상태로 유지할 수 있는 좋은 방법입니다. Visual Studio Team Services 효율적인 연속 통합을 만들고 Azure에 파이프라인을 릴리스하는 최상의 DevOps 도구를 제공합니다.
Content: >-
  <p>이 게시물 시리즈는 <a href="https://visualstudio.com/team-services/?utm_source=AzureCOM&amp;utm_medium=Blog&amp;utm_campaign=Oct2016Digest">Visual Studio Team Services</a> 대한 최신 업데이트 및 뉴스를 제공하며 Azure 사용자가 3주마다 릴리스되는 새로운 기능을 최신 상태로 유지할 수 있는 좋은 방법입니다. Visual Studio Team Services 효율적인 연속 통합을 만들고 Azure에 파이프라인을 릴리스하는 최상의 DevOps 도구를 제공합니다. Team Services의 기능 목록이 빠르게 확장되면 팀은 Azure 워크플로의 모든 영역, 모든 언어로 작성되고 모든 OS에 배포된 앱에 보다 효율적으로 활용할 수 있습니다.</p>


  <h2>빌드 완료 트리거를 사용하여 관련 빌드 연결</h2>


  <p>대형 제품에는 서로 종속된 여러 구성 요소가 있습니다. 이러한 구성 요소는 종종 독립적으로 빌드됩니다. 업스트림 구성 요소(예: 라이브러리)가 변경되면 다운스트림 종속성을 다시 빌드하고 유효성을 다시 검사해야 합니다. Teams 일반적으로 이러한 종속성을 수동으로 관리합니다.</p>


  <p>이제 다른 빌드가 성공적으로 완료되면 빌드를 트리거할 수 있습니다. 업스트림 빌드에서 생성된 Artifacts 다운로드하여 이후 빌드에서 사용할 수 있으며, Build.TriggeredBy.BuildId, Build.TriggeredBy.BuildDefinitionId, Build.TriggeredBy.BuildDefinitionName 등의 변수에서 데이터를 가져올 수도 있습니다. 자세한 내용은 <a href="https://docs.microsoft.com/en-us/vsts/build-release/concepts/definitions/build/triggers">빌드 트리거</a> 설명서를 참조하세요.</p>


  <p>이 기능은 현재 1,129표로 두 번째로 높은 투표 <a href="https://visualstudio.uservoice.com/forums/330519-visual-studio-team-services/suggestions/2165043-provide-build-configuration-dependencies-in-tfs-bu">제안을</a> 기반으로 우선 순위가 지정되었습니다.</p>


  <p><img alt="Setup build chaining" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/132_03.png"></p>


  <p>경우에 따라 단일 <a href="https://docs.microsoft.com/en-us/vsts/build-release/concepts/process/phases">다단계 빌드</a> 가 요구 사항을 충족할 수 있습니다. 그러나 빌드 완료 트리거는 요구 사항에 종속 프로세스를 소유하기 위한 다른 구성 설정, 옵션 또는 다른 팀을 포함하는 경우에 유용합니다.</p>


  <h2>YAML에서 CI 빌드 트리거</h2>


  <p>이제 YAML 빌드 정의 파일의 일부로 CI(연속 통합) 트리거 설정을 정의할 수 있습니다. 기본적으로 Git 리포지토리에 새 <code>.vsts-ci.yml</code> 파일을 푸시하면 모든 분기에 대해 CI가 자동으로 구성됩니다.</p>


  <p>트리거하려는 분기를 제한하려면 파일에 다음을 추가하여 마스터에 대한 푸시 또는 릴리스/* 패턴과 일치하는 모든 분기에 대한 빌드를 트리거하기만 하면 됩니다.</p>


  <p>YAMLCopy</p>


  <pre>

  <code>trigger:

  - master

  - releases/*

  </code></pre>


  <p>트리거를 사용하지 않도록 설정하거나 YAML 파일에서 트리거 설정을 재정의하려면 정의에서 트리거 설정을 재정의할 수 있습니다.</p>


  <p>자세한 내용은 <a href="https://github.com/Microsoft/vsts-agent/blob/master/docs/preview/yamlgettingstarted-triggers.md">YAML 빌드 트리거</a> 설명서를 참조하세요.</p>


  <p><img alt="ci triggers from yaml" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/133_04.png"></p>


  <h2>Helm을 사용하여 Kubernetes에 배포 간소화</h2>


  <p><a href="https://github.com/kubernetes/helm/">Helm</a> 은 Kubernetes 애플리케이션 설치 및 관리를 간소화하는 도구입니다. 또한 작년에 많은 인기와 지역 사회 지원을 얻고있다. 이제 <strong>릴리스</strong> 의 Helm 작업을 <a href="https://azure.microsoft.com/services/container-service/">사용하여 AKS(Azure Container Service)</a> 또는 다른 Kubernetes 클러스터에 Helm 차트를 패키징하고 배포할 수 있습니다.</p>


  <p>VSTS는 이미 Kubernetes 및 Docker 컨테이너를 지원합니다. 이 Helm 태스크를 추가하여 이제 컨테이너를 Kubernetes 클러스터로 배달하기 위한 Helm 기반 CI/CD 파이프라인을 설정할 수 있습니다. 자세한 내용은 <a href="https://docs.microsoft.com/en-us/vsts/build-release/apps/cd/azure/deploy-container-kubernetes?view=vsts">Kubernetes를 사용하여 Azure Container Service에 배포</a> 설명서를 참조하세요.</p>


  <p><img alt="helm tasks" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/133_09.png"></p>


  <h2>Azure Database for MySQL에 지속적으로 배포</h2>


  <p>이제 <a href="https://azure.microsoft.com/services/mysql/">Azure Database for MySQL Azures</a>&rsquo; MySQL - 데이터베이스에 서비스로 지속적으로 배포할 수 있습니다. 버전 제어에서 MySQL 스크립트 파일을 관리하고 PowerShell 스크립트가 아닌 네이티브 작업을 사용하여 릴리스 파이프라인의 일부로 지속적으로 배포합니다.</p>


  <h2>Azure DevOps Projects를 사용하여 Go 및 Ruby 애플리케이션 구성</h2>


  <p>Azure DevOps Projects를 사용하면 Azure를 쉽게 시작할 수 있습니다. 몇 단계만 수행하면 선택한 Azure 서비스에서 애플리케이션을 시작하는 데 도움이 됩니다. DevOps Projects는 앱을 개발, 배포 및 모니터링하는 데 필요한 모든 것을 설정합니다. 이제 Go 및 Ruby 애플리케이션에 대한 전체 DevOps 파이프라인을 설정할 수 있습니다. 자세한 내용은 <a href="https://docs.microsoft.com/en-us/vsts/deploy-azure">Azure에 배포</a> 설명서를 참조하세요.</p>


  <h2>Ruby on Rails 애플리케이션 배포</h2>


  <p>이제 새 <strong>Azure App Service</strong> 릴리스 정의 템플릿에는 Ruby on Rails 애플리케이션을 <strong>Linux의 Azure WebApp에</strong> 배포하는 데 필요한 작업이 포함됩니다. 이 릴리스 정의 템플릿을 사용하는 경우 <strong>App Service 배포</strong> 태스크는 번들(종속성 관리자)이 애플리케이션 종속성을 설치하게 하는 인라인 배포 스크립트로 미리 채워집니다.</p>


  <h2>Go로 작성된 애플리케이션 빌드</h2>


  <p>이제 VSTS에서 Go 애플리케이션을 빌드할 수 있습니다. <strong>Go 도구 설치 관리자</strong> 작업을 사용하여 하나 이상의 Go Tool 버전을 즉시 설치합니다. 이 작업은 프로젝트에 필요한 특정 버전의 Go Tool을 획득하고 빌드 에이전트의 PATH에 추가합니다. 대상 Go 도구 버전이 에이전트에 이미 설치된 경우 이 작업은 다운로드하고 다시 설치하는 프로세스를 건너뜁니다. <strong>Go</strong> 작업은 종속성을 다운로드하거나, 애플리케이션을 빌드하거나, 테스트하는 데 도움이 됩니다. 이 작업을 사용하여 원하는 사용자 지정 Go 명령을 실행할 수도 있습니다.</p>


  <h2>배포 그룹은 일반적으로 사용할 수 있습니다.</h2>


  <p>배포 그룹이 미리 보기 상태가 되었으며 이제 일반 공급된다는 사실을 발표하게 되어 기쁩니다. 배포 그룹은 VSTS/TFS에서 Release Management 강력한 기본 다중 머신 배포 기능입니다.</p>


  <p>배포 그룹을 사용하면 전체적으로 애플리케이션의 고가용성을 보장하면서 여러 서버에서 배포를 오케스트레이션하고 롤링 업데이트를 수행할 수 있습니다. 온-프레미스나 Azure 또는 클라우드의 가상 머신에 서버를 배포할 수도 있으며, 배포된 아티팩트 버전을 서버 수준까지 통합 추적할 수 있습니다.</p>


  <p><img alt="" height="901" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/deploymentPools.png" width="1567"></p>


  <p>에이전트 기반 배포는 빌드 및 릴리스에서 사용하는 것과 동일한 에이전트를 사용하므로 대상 컴퓨터에서 전체 작업 카탈로그를 사용할 수 있습니다. 확장성 관점에서 프로그래밍 방식 액세스에 대해 <a href="https://docs.microsoft.com/en-us/rest/api/vsts/distributedtask/deploymentgroups">배포 그룹</a> 및 <a href="https://docs.microsoft.com/en-us/rest/api/vsts/distributedtask/targets">대상</a>의 REST API를 사용할 수도 있습니다.</p>


  <p>에이전트 기반 배포 기능은 이미 사용 가능한 동일한 빌드 및 배포 에이전트에 의존합니다. 배포 그룹 단계에서 대상 컴퓨터의 전체 작업 카탈로그를 사용할 수 있습니다. 확장성 관점에서 프로그래밍 방식 액세스에 대해 <a href="https://docs.microsoft.com/en-us/rest/api/vsts/distributedtask/deploymentgroups">배포 그룹</a> 및 <a href="https://docs.microsoft.com/en-us/rest/api/vsts/distributedtask/targets">대상</a>의 REST API를 사용할 수도 있습니다.</p>


  <p><a href="https://blogs.msdn.microsoft.com/devops/2018/03/26/deployment-groups-is-now-generally-available-sharing-of-targets-and-more/">GA 공</a>지 사항에서 자세히 읽어보세요.</p>


  <h2>SonarSource의 최신 확장을 사용하여 코드 품질 향상</h2>


  <p>SonarSource는 최근 업데이트된 <a href="https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarqube">SonarQube 확장</a> 및 다양한 언어에 대한 정적 코드 분석을 가능하게 하는 새로운 <a href="https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarcloud">SonarCloud 확장을</a> 출시했습니다. VSTS Gradle 및 Maven 작업은 특히 Java 빌드에 대해 이러한 확장을 활용합니다. Gradle 또는 Maven 작업의 버전 2.*에서 <strong>SonarQube 또는 SonarCloud 분석 실행을</strong> 사용하도록 설정한 다음 아래와 같이 SonarQube/SonarCloud <strong>준비</strong> 및 <strong>게시</strong> 작업을 추가합니다. 자세한 내용은 <a href="https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Extension+for+VSTS-TFS">SonarQube를 사용한 분석</a> 설명서를 참조하세요.</p>


  <p><img alt="Tasks for Gradle and Maven" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/131_03.png"></p>


  <h2>Git 리포지토리에서 Markdown 파일을 Wiki로 게시</h2>


  <p>개발자는 API&rdquo;, SDK&ldquo;&rdquo;에 대한 &ldquo;설명서를 만들고 코드 리포지토리의 코드를&rdquo; 설명하는 도움말 문서를 만듭니&ldquo;다. 그런 다음 독자는 올바른 설명서를 찾기 위해 코드를 검색해야 합니다. 이제 코드 리포지토리에서 markdown 파일을 게시하고 Wiki에서 호스트할 수 있습니다.</p>


  <p><img alt="public code as wiki action" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/132_04.png"></p>


  <p>Wiki 내에서 코드 <strong>게시를 위키로</strong> 클릭하여 시작합니다. 다음으로 승격해야 하는 Git 리포지토리에 폴더를 지정할 수 있습니다.</p>


  <p><img alt="publish pages dialog" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/132_05.png"></p>


  <p><strong>게시</strong>를 클릭하면 선택한 폴더 아래의 모든 markdown 파일이 wiki로 게시됩니다. 또한 Git 리포지토리에 대한 변경 내용이 즉시 반영되도록 분기의 헤드를 wiki에 매핑합니다.</p>


  <p><a href="https://blogs.msdn.microsoft.com/devops/2018/03/25/announcement-publish-markdown-files-from-your-git-repository-to-vsts-wiki/">공지</a> 사항에서 자세히 알아볼 수 있습니다. 또한 wiki REST API는 이제 공개됩니다. 자세한 내용은 <a href="https://docs.microsoft.com/en-us/rest/api/vsts/wiki/wikis/create">Wiki 함수</a> 및 <a href="https://docs.microsoft.com/en-us/rest/api/vsts/search/wiki%20search%20results/fetch%20wiki%20search%20results">Wiki 검색</a> 설명서를 참조하세요.</p>


  <h2>뷰를 사용하여 VSTS Analytics와 Power BI 통합</h2>


  <p><a href="https://docs.microsoft.com/en-us/vsts/report/analytics/what-is-analytics?view=vsts">VSTS Analytics</a> 확장과 Power BI 통합하기 위한 <a href="https://blogs.msdn.microsoft.com/devops/2018/04/16/power-bi-and-vsts-integration-made-easy/">사용하기 쉬운 솔루션을 발표</a>하게 되어 기쁩니다. &rsquo;더 이상 OData 쿼리를 작성하는 방법을 알 필요가 없습니다! 새로운 기능 <a href="https://docs.microsoft.com/en-us/vsts/report/analytics/what-are-analytics-views?view=vsts">분석 보기를</a> 통해 VSTS 작업 추적 데이터를 Power BI 간단하게 가져오며 가장 큰 계정에서 작동합니다. 작업 항목 쿼리와 마찬가지로 분석 뷰는 작업 항목 데이터 및 열의 결과 범위를 지정하는 필터를 지정합니다. 또한 보기를 사용하면 작업 항목의 이전 수정 내용을 보고하고 추세 보고서를 쉽게 만들 수 있습니다.</p>


  <p>더 작은 계정 및 기본 시나리오를 사용하는 고객에게 적합한 <a href="https://docs.microsoft.com/en-us/vsts/report/analytics/analytics-default-views">기본 분석 보기</a> 집합을 제공합니다. 더 큰 계정은 Power BI 끌어들이는 데이터의 범위를 축소해야 할 수 있습니다. 분석 뷰를 통해 이 작업을 수행할 수 있습니다. 데이터 및 기록의 범위를 Power BI 보고하려는 항목으로 정확하게 지정합니다. VSTS의 분석 허브에서 만드는 분석 뷰는 <a href="https://docs.microsoft.com/en-us/vsts/report/powerbi/data-connector-connect?view=vsts">VSTS Power BI Data Connector</a>에서 즉시 선택할 수 있습니다. 이제 기본 보기를 편집하고 <a href="https://go.microsoft.com/fwlink/?linkid=870160">새 보기를 만들어</a> Power BI 반환된 레코드, 필드 및 기록을 미세 조정할 수 있습니다.</p>


  <p><img alt="Work item tab showing a view filtered to Priority 1 bugs on the Fiber Suite App team and the Fiber Suite report team." src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1WorkItem-927x1024.png"></p>


  <h2>요약</h2>


  <p>언제나처럼 릴리스 정보에서 기능의 전체 목록을 찾을 수 있습니다. VSTS에 대한 최신 계획 및 개발을 따라가려면 <a href="https://blogs.msdn.microsoft.com/devops/">DevOps 블로그</a>를 구독해야 합니다.</p>


  <ul>
   <li><a href="https://docs.microsoft.com/en-us/vsts/release-notes/2018/mar-05-vsts">3월 5일</a></li>
   <li><a href="https://docs.microsoft.com/en-us/vsts/release-notes/2018/apr-03-vsts">4월 3일</a></li>
   <li><a href="https://docs.microsoft.com/en-us/vsts/release-notes/2018/apr-16-vsts">4월 16일</a></li>
  </ul>


  <p>즐거운 코딩 작업이 되길 바랍니다!</p>


  <p><a href="https://twitter.com/tfsbuck">@tfsbuck</a></p>
