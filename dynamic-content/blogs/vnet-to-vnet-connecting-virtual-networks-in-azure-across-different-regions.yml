### YamlMime:Yaml
ms.openlocfilehash: 186a16142858dbccae6145da066b73b04fa158cd
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139907451"
Slug: vnet-to-vnet-connecting-virtual-networks-in-azure-across-different-regions
Title: 'VNet 간: 여러 지역에 걸쳐 Azure의 가상 네트워크 연결'
Summary: VNet-VNet과 가상 네트워크를 연결하는 방법을 알아봅니다.
Content: "<h3>개요</h3>\nTechEd 2014에서는 다중 사이트 VPN, 지역 내 VNet 간 VNet 및 지역 간 VNet 간 기능을 릴리스했습니다. 이 블로그는 VNet-VNet 기능을 사용하여 가상 네트워크를 함께 연결할 수 있는 방법의 구성 단계 및 예제를 안내하는 미니 시리즈의 첫 번째 블로그입니다.\n\nVNet 간 연결은 Azure VPN 게이트웨이를 활용하여 둘 이상의 가상 네트워크를 IPsec/IKE S2S VPN 터널과 안전하게 연결합니다. 다중 사이트 VPN과 함께 비즈니스 요구 사항에 맞는 토폴로지에서 가상 네트워크와 온-프레미스 사이트를 함께 연결할 수 있습니다. 아래 다이어그램에서는 가상 네트워크와 온-프레미스 사이트 간에 완전히 연결된 토폴로지의 간단한 예를 보여 줍니다.\n\n<img style=\"float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; padding-right: 0px; margin-right: auto; border-width: 0px;\" title=\"이미지\" alt=\"image\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/image11.png\" width=\"610\" height=\"310\" border=\"0\" />\n\n이 연결을 사용할 수 있는 몇 가지 시나리오가 있습니다. 다음은 부분 목록입니다.\n<ol>\n <li>지역 간 지역 중복성 및 지역 존재 예를 들어 여러 Azure 지역에서 AlwaysOn을 SQL</li>\n <li>Azure의 구독 간/조직 간 통신</li>\n <li>강력한 격리 경계가 있는 지역 다중 계층 애플리케이션; 또는 다른 VNet의 기존 워크로드를 함께 연결하여 새 애플리케이션을 구성합니다.</li>\n</ol>\n<h3>고려 사항</h3>\n여기에 설명된 VNet-VNet 기능에 대한 여러 요구 사항 및 고려 사항이 있습니다. 다음은 핵심 사항의 짧은 목록입니다.\n<ol>\n <li>가상 네트워크를 연결하려면 Azure 동적 라우팅 VPN 게이트웨이를 만들거나 사용해야 합니다. 고정 라우팅 VPN 게이트웨이는 VNet-VNet에 대해 지원되지 않습니다.</li>\n <li>각 가상 네트워크에 대해 최대 10개의 \"네트워크\"를 연결할 수 있습니다. <i>즉</i>, 가상 네트워크와 온-프레미스 사이트를 모두 결합하면 10을 초과할 수 없습니다.</li>\n <li>주소 접두사에서 연결된 모든 네트워크 간에 겹치지 않도록 해야 합니다.</li>\n <li>VNet 간 기능은 단일 또는 구독 간에 동일하거나 다른 지역과 구독에서 작동합니다.</li>\n</ol>\n이 점을 염두에 두고 VNet을 연결하기 위한 간단한 예제를 처음부터 빌드해 보겠습니다.\n<h3>동일한 구독에서 두 개의 VNet 연결</h3>\nAzure 가상 네트워크에서 다른 가상 네트워크에 연결하는 것은 기본적으로 S2S(사이트 간) VPN을 통해 온-프레미스 네트워크에 연결하는 것과 동일합니다. 이 블로그에서는 처음부터 시작하여 가상 네트워크, VPN 게이트웨이를 만든 다음, 모두 동일한 Azure 구독 내에서 함께 연결합니다. 아래에는 수행할 단계가 나열됩니다.\n<ol>\n <li>크로스 프레미스 연결을 사용하여 가상 네트워크 및 일치하는 로컬 네트워크 만들기</li>\n <li>가상 네트워크에 대한 Azure 동적 라우팅 VPN 게이트웨이 만들기</li>\n <li>가상 네트워크를 함께 커넥트</li>\n</ol>\n다음 다이어그램을 예로 사용하여 두 가상 네트워크인 VNet1 및 VNet2를 함께 만들고 연결합니다.\n<ul>\n <li>VNet1: 주소 공간 = 10.1.0.0/16; 선호도 그룹 = WestUS</li>\n <li>VNet2: 주소 공간 = 10.2.0.0/16; 선호도 그룹 = NorthEurope</li>\n</ul>\n<img class=\"aligncenter size-medium wp-image-152061\" alt=\"V-to-V\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/V-to-V-636x111.png\" width=\"636\" height=\"111\" />\n\n아래 예제에서는 Azure PowerShell cmdlet을 사용합니다. PowerShell 환경을 설치하고 구성하려면 Azure PowerShell 지침 페이지를 참조하세요.\n<ul>\n <li>MSDN의 Azure PowerShell:<a href=\"https://msdn.microsoft.com/en-us/library/azure/jj156055.aspx\">https://msdn.microsoft.com/en-us/library/azure/jj156055.aspx</a></li>\n <li>Windows Azure PowerShell 설치 및 구성하는 방법:<a href=\"https://azure.microsoft.com/en-us/documentation/articles/install-configure-powershell/\">https://azure.microsoft.com/en-us/documentation/articles/install-configure-powershell/</a></li>\n</ul>\n여기에 설명된 간단한 VNet 간 설정의 경우 Azure 관리 포털을 사용하여 아래의 1단계와 2단계를 수행할 수 있습니다. VNet(예: 다중 사이트 VPN),Azure PowerShell cmdlet 또는 REST API에 대한 연결을 계속 추가할 때 현재 이러한 기능을 구성하는 유일한 옵션이므로 PowerShell을 사용합니다.\n<h3>[1단계] VNet1 및 VNet2 및 해당 로컬 네트워크 만들기</h3>\n첫 번째 단계는 두 가상 네트워크와 일치하는 로컬 네트워크를 만드는 것입니다. 각 가상 네트워크(예: VNet1, 다른 가상 네트워크, VNet2)의 관점에서 Azure 플랫폼에 정의된 또 다른 VPN 연결입니다. 따라서 고객은 다음 연결을 만들고 정의해야 합니다.\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"144\"><b>Virtual Network</b></td>\n<td valign=\"top\" width=\"240\"><b>가상 네트워크 사이트 정의</b></td>\n<td valign=\"top\" width=\"240\"><b>커넥트 로컬 네트워크 사이트</b></td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"144\"><b>VNet1</b></td>\n<td valign=\"top\" width=\"240\">VNet1(10.1.0.0/16)</td>\n<td valign=\"top\" width=\"240\">VNet2(10.2.0.0/16)</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"144\"><b>VNet2</b></td>\n<td valign=\"top\" width=\"240\">VNet2(10.2.0.0/16)</td>\n<td valign=\"top\" width=\"240\">VNet1(10.1.0.0/16)</td>\n</tr>\n</tbody>\n</table>\n각 가상 네트워크를 두 번 정의해야 합니다. 먼저 Azure 가상 네트워크로, 다른 가상 네트워크에 연결된 로컬 네트워크 사이트로 정의해야 합니다. 두 정의에 지정된 주소 공간 요소가 동일하거나 두 가상 네트워크 간에 통신이 제대로 작동하지 않는지 확인해야 합니다. 쉽게 읽을 수 있도록 이 예제에서는 가상 네트워크와 로컬 네트워크의 정의 모두에 동일한 이름을 사용합니다. 이는 요구 사항이 아니지만 정의를 더 쉽게 읽을 수 있도록 합니다.\n\n다음 PowerShell cmdlet은 두 가상 네트워크에 대한 두 선호도 그룹을 만듭니다. 원하는 경우 동일한 지역의 기존 선호도 그룹을 다시 사용할 수 있습니다.\n<pre class=\"prettyprint\">PS D:\\&gt; New-AzureAffinityGroup -Name WestUS -Location \"West US\"\nPS D:\\&gt; New-AzureAffinityGroup -Name NorthEurope -Location \"North Europe\"</pre>\n선호도 그룹이 만들어지면 다음 cmdlet을 사용하여 현재 네트워크 구성 파일(NETCFG.XML)을 내보낼 수 있습니다.\n<pre class=\"prettyprint\">PS D:\\&gt; Get-AzureVNetConfig -ExportToFile \"D:\\MyCurrentNETCFG.XML\"</pre>\n두 개의 새 가상 네트워크와 해당 로컬 네트워크를 만들려면 Notepad.exe 같은 텍스트 편집기를 사용하여 NETCFG 파일에 다음 세그먼트를 삽입합니다. 이 경우 MyCurrentNETCFG.XML.\n<pre class=\"prettyprint\">&lt;LocalNetworkSites&gt;\n  &lt;LocalNetworkSite name=\"VNet1\"&gt;\n    &lt;AddressSpace&gt;\n      &lt;AddressPrefix&gt;10.1.0.0/16&lt;/AddressPrefix&gt;\n    &lt;/AddressSpace&gt;\n    &lt;VPNGatewayAddress&gt;1.0.0.1&lt;/VPNGatewayAddress&gt;\n  &lt;/LocalNetworkSite&gt;\n  &lt;LocalNetworkSite name=\"VNet2\"&gt;\n    &lt;AddressSpace&gt;\n      &lt;AddressPrefix&gt;10.2.0.0/16&lt;/AddressPrefix&gt;\n    &lt;/AddressSpace&gt;\n    &lt;VPNGatewayAddress&gt;2.0.0.2&lt;/VPNGatewayAddress&gt;\n  &lt;/LocalNetworkSite&gt;\n&lt;/LocalNetworkSites&gt;\n&lt;VirtualNetworkSites&gt;\n  &lt;VirtualNetworkSite name=\"VNet1\" AffinityGroup=\"WestUS\"&gt;\n    &lt;AddressSpace&gt;\n      &lt;AddressPrefix&gt;10.1.0.0/16&lt;/AddressPrefix&gt;\n    &lt;/AddressSpace&gt;\n    &lt;Subnets&gt;\n      &lt;Subnet name=\"Subnet-1\"&gt;\n        &lt;AddressPrefix&gt;10.1.0.0/24&lt;/AddressPrefix&gt;\n      &lt;/Subnet&gt;\n      &lt;Subnet name=\"GatewaySubnet\"&gt;\n        &lt;AddressPrefix&gt;10.1.200.0/29&lt;/AddressPrefix&gt;\n      &lt;/Subnet&gt;\n    &lt;/Subnets&gt;\n    &lt;Gateway&gt;\n      &lt;ConnectionsToLocalNetwork&gt;\n        &lt;LocalNetworkSiteRef name=\"VNet2\"&gt;\n          &lt;Connection type=\"IPsec\" /&gt;\n        &lt;/LocalNetworkSiteRef&gt;\n      &lt;/ConnectionsToLocalNetwork&gt;\n    &lt;/Gateway&gt;\n  &lt;/VirtualNetworkSite&gt;\n  &lt;VirtualNetworkSite name=\"VNet2\" AffinityGroup=\"NorthEurope\"&gt;\n    &lt;AddressSpace&gt;\n      &lt;AddressPrefix&gt;10.2.0.0/16&lt;/AddressPrefix&gt;\n    &lt;/AddressSpace&gt;\n    &lt;Subnets&gt;\n      &lt;Subnet name=\"Subnet-1\"&gt;\n        &lt;AddressPrefix&gt;10.2.0.0/24&lt;/AddressPrefix&gt;\n      &lt;/Subnet&gt;\n      &lt;Subnet name=\"GatewaySubnet\"&gt;\n        &lt;AddressPrefix&gt;10.2.200.0/29&lt;/AddressPrefix&gt;\n      &lt;/Subnet&gt;\n    &lt;/Subnets&gt;\n    &lt;Gateway&gt;\n      &lt;ConnectionsToLocalNetwork&gt;\n        &lt;LocalNetworkSiteRef name=\"VNet1\"&gt;\n          &lt;Connection type=\"IPsec\" /&gt;\n        &lt;/LocalNetworkSiteRef&gt;\n      &lt;/ConnectionsToLocalNetwork&gt;\n    &lt;/Gateway&gt;\n  &lt;/VirtualNetworkSite&gt;\n&lt;/VirtualNetworkSites&gt;</pre>\n&nbsp;\n\n위의 세그먼트는 VNet1 및 VNet2라는 두 개의 가상 네트워크와 VNet1 및 VNet2라고도 하는 두 개의 로컬 네트워크를 정의합니다. 계속 진행하기 전에 다음 사항에 유의하세요.\n<ol>\n <li>간단히 하기 위해 각 가상 네트워크의 \"GatewaySubnet\" 외에 서브넷(\"서브넷-1\")이 하나뿐이며, 위의 예제에서는 DNSServersRef 요소를 건너뜁니다. \"VPNClientAddressPool\" 요소도 건너뜁니다. 필요에 따라 해당 요소를 NETCFG에 추가할 수 있습니다.</li>\n <li>NETCFG에 \"LocalNetworkSites\" 및 \"VirtualNetworkSites\" 섹션이 이미 있는 경우 해당 \"LocalNetworkSite\" 요소와 \"VirtualNetworkSite\" 요소를 해당 두 섹션에 복사하세요.</li>\n <li>LocalNetworkSite의 \"VPNGatewayAddress\"는 가상 네트워크의 해당하는 Azure VPN 게이트웨이 VIP(공용 IP) 주소입니다. 실제 주소는 Azure VPN 게이트웨이를 만들어야 사용 가능합니다. 지금은 두 주소에 대한 임시 자리 표시자로 \"1.0.0.1\" 및 \"2.0.0.2\"를 사용합니다.</li>\n</ol>\n이 작업이 완료되면 새 NETCFG를 \"MyNewNETCFG.XML\"로 저장하고 다음 PowerShell cmdlet을 사용하여 업데이트된 NETCFG 파일을 Azure 구독에 업로드합니다.\n<pre class=\"prettyprint\">PS D:\\&gt; Set-AzureVNetConfig -ConfigurationPath D:\\MyNewNETCFG.XML</pre>\n이 단계를 완료하는 데 몇 분 정도 걸립니다. 완료되면 Azure Portal에서 가상 네트워크 및 로컬 네트워크를 볼 수 있습니다.\n<h3>[2단계] 각 가상 네트워크에 대한 동적 라우팅 VPN 게이트웨이 만들기</h3>\n해당하는 VPN 연결을 사용하여 가상 네트워크를 만든 후에는 다음 단계로 각 가상 네트워크에 대해 Azure VPN 게이트웨이를 만듭니다. 이 작업은 Azure 관리 포털 또는 Azure REST API를 통해 수행할 수 있습니다. 동적 라우팅 게이트웨이 유형만 지원됩니다. 현재 Azure PowerShell cmdlet \"New-AzureVNetGateway\"는 동적 라우팅 게이트웨이 만들기를 지원하지 않습니다. (우리는 Azure PowerShell 이 격차를 메우기 위해 노력하고 있습니다. 계속 지켜봐 주시기 바랍니다 ...)\n\nAzure Portal에서 \"네트워크\" 페이지로 이동한 다음 VNet1 및 VNet2의 \"대시보드\" 페이지로 이동합니다. 각 페이지의 아래쪽에서 \"게이트웨이 만들기\"를 클릭하고 아래와 같이 \"동적 라우팅\"을 선택합니다.\n\n<img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border: 0px;\" title=\"clip_image004\" alt=\"clip_image004\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image004_thumb.png\" width=\"244\" height=\"118\" border=\"0\" />\n<h3>[3단계] VPN 게이트웨이 커넥트</h3>\n두 게이트웨이가 모두 만들어지면 포털에서 또는 다음 cmdlet을 사용하여 이러한 두 VPN 게이트웨이의 공용 IP 주소를 가져올 수 있습니다.\n<pre class=\"prettyprint\">PS D:\\&gt; Get-AzureVNetGateway -VNetName VNet1 | ft VIPAddress\nVIPAddress\n----------\n191.xxx.82.62\n\nPS D:\\&gt; Get-AzureVNetGateway -VNetName vnet2 | ft VIPAddress\nVIPAddress \n---------- \n191.yyy.135.20</pre>\nxxx와 yyy는 명백한 보안상의 이유로 마스크된 실수입니다. 게이트웨이 공용 IP 주소를 사용할 수 있게 되면 NETCFG 파일의 IP 주소와 일치하도록 VNet1 및 VNet2 LocalNetworkSite 정의에 대한 NETCFG 세그먼트를 업데이트합니다. MyNewNETCFG.XML.\n<pre class=\"prettyprint\">  &lt;LocalNetworkSite name=“VNet1”&gt;\n    &lt;AddressSpace&gt;&lt;AddressPrefix&gt;10.1.0.0/16&lt;/AddressPrefix&gt;&lt;/AddressSpace&gt;\n    &lt;VPNGatewayAddress&gt;191.xxx.82.62&lt;/VPNGatewayAddress&gt;\n  &lt;/LocalNetworkSite&gt;\n  &lt;LocalNetworkSite name=“VNet2”&gt;\n    &lt;AddressSpace&gt;&lt;AddressPrefix&gt;10.2.0.0/16&lt;/AddressPrefix&gt;&lt;/AddressSpace&gt;\n    &lt;VPNGatewayAddress&gt;191.yyy.135.20&lt;/VPNGatewayAddress&gt;\n  &lt;/LocalNetworkSite&gt;</pre>\n업데이트된 NETCFG 파일을 다시 업로드합니다.\n<pre class=\"prettyprint\">PS D:\\&gt; Set-AzureVNetConfig -ConfigurationPath D:\\MyNewNETCFG.XML</pre>\n마지막 단계는 IPsec/IKE 사전 공유 키를 동일하게 설정하는 것입니다. 이 작업은 Azure REST API 또는 Azure PowerShell cmdlet을 통해 수행할 수 있습니다. 아래 예제에서는 PowerShell cmdlet을 사용하여 키 값을 A1b2C3d4로 설정합니다.\n<pre class=\"prettyprint\">PS D:\\&gt; Set-AzureVNetGatewayKey -VNetName VNet1 -LocalNetworkSiteName VNet2 -SharedKey A1b2C3d4\nPS D:\\&gt; Set-AzureVNetGatewayKey -VNetName VNet2 -LocalNetworkSiteName VNet1 -SharedKey A1b2C3d4</pre>\n이러한 단계가 완료되면 IPsec/IKE가 S2S VPN 터널을 설정한 후 VNet1 및 VNet2가 함께 연결됩니다. 다음 cmdlet은 연결 상태를 표시합니다.\n<pre class=\"prettyprint\">PS D:\\&gt; Get-AzureVNetConnection -VNetName VNet1 | ft LocalNetworkSiteName, ConnectivityState\n\nLocalNetworkSiteName                       ConnectivityState \n--------------------                       ----------------- \nVNet2                                      Connected</pre>\n<pre class=\"prettyprint\">PS D:\\&gt; Get-AzureVNetConnection -VNetName VNet2 | ft LocalNetworkSiteName, ConnectivityState\nLocalNetworkSiteName                       ConnectivityState \n--------------------                       ----------------- \nVNet1                                      Connected</pre>\n이제 VNet1이 VNet2에 연결되어 있음을 보여 드립니다. 가상 네트워크 내에 VM이 이미 있는 경우 트래픽이 두 가상 네트워크 간에 흐르기 시작합니다.\n\n연결 상태는 Azure 플랫폼에서 5분마다 새로 고쳐집니다. 따라서 일반적으로 키가 올바르게 설정된 후 1분 이내에 연결이 설정되더라도 연결 상태를 업데이트하여 \"연결된\" 상태를 표시하는 데 최대 5~7분이 걸릴 수 있습니다.\n<h3>개봉박두...</h3>\n이 간단한 토폴로지를 기반으로 계속 빌드하여 여러 구독에서 VNet 간을 시연하고 다중 사이트 VPN 기능도 소개합니다."
