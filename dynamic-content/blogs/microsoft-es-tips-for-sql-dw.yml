### YamlMime:Yaml
ms.openlocfilehash: 18db4b7ac95071685e64ccf3fc827f4a1596074a
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139897602"
Slug: microsoft-es-tips-for-sql-dw
Title: Microsoft Enterprise Services는 SQL Data Warehouse를 효과적으로 사용할 팁 있습니다.
Summary: Microsoft ES는 SQL Data Warehouse를 효과적으로 사용하기 위한 8가지 팁을 공유합니다.
Content: >-
  <p><em>이 게시물은 Thakur Harsh Raj Singh, 선임 SWE 리드, Enterprise Service BI가 공동 저술했습니다.</em></p>


  <p>Azure SQL Data Warehouse는 데이터 웨어하우징을 위한 SQL 기반 완전 관리형 페타바이트 규모의 클라우드 솔루션입니다. 다른 Azure 제품 간의 긴밀한 통합을 통해 SQL Data Warehouse는 Azure의 모든 주요 클라우드 데이터 웨어하우징 솔루션의 중추를 나타냅니다. 분리된 컴퓨팅 및 스토리지, 탄력적 스케일 아웃 기능, 수요를 충족하기 위해 일시 중지 및 재개할 수 있는 기능을 통해 SQL Data Warehouse는 필요할 때 고객에게 필요한 유연성, 비용 절감 및 성능을 제공합니다.</p>


  <p>Microsoft ES(Enterprise Services)는 세계에서 가장 큰 컨설팅 및 지원 비즈니스 중 하나입니다. Microsoft ES는 클라우드 생산성, 모바일 솔루션, 채택 서비스 등과 같은 공간에서 운영되는 전 세계 100개 이상의 자회사에서 운영됩니다. 클라이언트&rsquo; 작업이 변환되고 증가하는 속도와 규모로 인해 ES가 향후 수요를 충족하기 위해 곡선보다 앞서가는 것이 가장 중요합니다.</p>


  <p>적절한 시기에 적절한 데이터를 통해 ES는 리소스 자금을 조달할 위치와 고객에게 가장 적합한 서비스를 제공하는 방법에 대해 최상의 결정을 내릴 수 있습니다. 기존의 데이터 웨어하우스 보고 스택은 보고서를 배달하는 데 너무 오래 걸렸으며 모델을 변경하는 데 너무 유연하지 않았습니다. 증가하는 데이터에 맞게 복잡성, 유지 관리 및 크기 조정 비용을 더한 기존 온-프레미스 데이터 웨어하우스는 유지 관리 및 개발 비용보다 적은 가치를 창출하여 인사이트를 제공하는 핵심 비즈니스 가치를 방해했습니다.</p>


  <p>최신 데이터 웨어하우스 솔루션으로의 전환이 쉽게 명백해졌습니다. ES 분석은 워크로드를 데이터 처리 및 배포로 분할합니다. ES의 핵심 요구 사항에는 간편한 확장성, 높은 IO, 다중 테라바이트 스토리지, 행 수준 데이터 보안 및 200명 이상의 동시 사용자 지원이 포함되었습니다. ES는 Azure 서비스 제품의 호스트를 통해 데이터 처리 및 IaaS SQL Server 2016 Always On 인스턴스를 데이터 배포 계층으로 사용하는 임시 분석 워크로드로 Azure SQL Data Warehouse를 사용하여 솔루션에 착륙했습니다.</p>


  <h2>구현</h2>


  <p>높은 수준의 ES 구현은 먼저 Azure Storage Blob에 진입하는 온-프레미스의 다양한 원본에서 감사 및 기록 데이터를 가져옵니다. 그런 다음 Polybase를 사용하여 데이터를 Azure SQL Data Warehouse에 신속하게 로드한 다음, 처리되고 차원 및 팩트 테이블로 변환됩니다. 그 후 이러한 차원 및 팩트 테이블이 Analysis Services로 이동되고 IaaS 인스턴스를 SQL Server 다양한 비즈니스 사용자에게 빠르고 동시 액세스를 지원합니다. 이 솔루션 전체에서 Azure Data Factory는 오케스트레이션 ELT 프레임워크 역할을 하므로 단일 인터페이스가 대부분의 파이프라인에 대한 데이터 흐름을 제어할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1d121357-3e60-4d50-a715-2a46ad01b3df.png"><img alt="esanalytics" border="0" height="304" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/244ea48a-a5b1-496a-9e69-dad9bdfb05a1.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="esanalytics" width="701"></a></p>


  <h2>SQL Data Warehouse에 대한 8개 팁</h2>


  <p>이와 같은 솔루션을 함께 배치하는 것은 성능이 좋지만 사소한 작업이 아닙니다. 다음은 Azure SQL Data Warehouse를 사용하여 솔루션을 설계하는 ES 팀의 몇 가지 지침입니다.</p>


  <p><strong>1.Azure SQL DW에서 데이터를 스테이징합니다.</strong></p>


  <blockquote>

  <p>웨어하우스의 기본 원칙 중 하나는 데이터를 원본에서 사용할 수 있는 방식과 같이 기본 형식으로 준비하는 것이었습니다. 성능, 데이터 품질, 유효성 검사를 위한 데이터 지속성 등과 같은 원본 복사본을 유지하는 이유는 여러 가지가 있습니다. 데이터를 준비하기 때문에 필요에 따라 데이터를 배포하고 데이터 기울이기를 최소화할 수 있습니다. 데이터 저장을 위해 라운드 로빈 메커니즘을 사용한 경우는 거의 없습니다.</p>

  </blockquote>


  <p><strong>2. 일반적인 배포 키에 도착:</strong></p>


  <blockquote>

  <p>Azure SQL Data Warehouse 인스턴스로 준비된 데이터는 3NF 데이터 원본에서 수집되었습니다. 이렇게 하면 원본에서 스키마를 약간 변경하고 동일한 키에 배포되는 모든 테이블의 일부로 기본 테이블&rsquo; 외래 키를 포함할 수 있습니다. 실제로 로드하는 동안 이러한 키 집합의 테이블을 조인하여 모든 DMS 작업을 최소화하고 경우에 따라 DMS 작업이 발생하지 않습니다. 따라서 성능 측면에서 우위를 제공합니다. 예를 들어 원본 시스템의 데이터는 테이블 간의 많은 관계를 가지고&nbsp; 있습니다. 그러나 SQL DW에서는 비즈니스 논리를 기반으로 하고 ELT가 실행될 때 이 키가 로드되기 때문에 모든 테이블에 공통 배포 키를 삽입했습니다.</p>

  </blockquote>


  <blockquote>

  <p>그러나 이 접근 방식을 진행하기 전에 데이터 기울이기를 확인하는 것이 좋습니다. 배포 키는 볼 수 있는 기울이기를 기반으로 완전히 선택해야 합니다. 데이터 기울이기는 높거나 조인이 호환되지 않는 경우 다른 조인 테이블과 동일한 키에 배포되는 중간 테이블을 만듭니다. 모든 키를 가져오기 위해 하나의 DMS 작업이 발생하지만 복잡한 조인이 있을 때 성능을 향상시키는 CTAS를 수행합니다.</p>

  </blockquote>


  <p><strong>3. 와이드 테이블의 수직 분할:</strong></p>


  <blockquote>

  <p>Azure SQL DW에서 행 크기 제한은 32KB입니다. 150개 이상의 열이 있고 varchar(4000)가 있는 여러 개의 넓은 테이블이 있었기 때문에 동일한 배포 키에서 테이블을 수직으로 분할하는 방법을 마련했습니다. 이를 통해 32KB의 과제를 극복하고 동시에 배포 키가 동일한 두 테이블을 조인하면서 필요한 성능을 제공할 수 있었습니다.</p>

  </blockquote>


  <p><strong>참고: SQL Data Warehouse는 이제 1MB 너비의 행을 지원합니다.</strong></p>


  <p><strong>4. 올바른 리소스 클래스를 사용합니다.</strong></p>


  <blockquote>

  <p>몇 가지 경우에 팩트 로드 프로세스를 가속화하기 위해 더 많은 리소스(메모리 및 CPU)가 필요한 복잡한 팩트가 있었습니다. 사실뿐만 아니라 복잡한 비즈니스 규칙과 유형 2 종류의 구현이 있는 차원도 있었습니다. 보다 복잡한 팩트 및 차원이 smallrc 리소스 클래스에서 실행되어 더 많은 병렬 처리를 제공하는 반면, 더 많은 리소스가 필요한 더 복잡한 팩트에서는 더 큰 리소스 클래스를 사용하여 실행되도록 ETL을 설계했습니다.</p>

  </blockquote>


  <p><strong>5. 기본 키를 마스터 테이블의 배포 열로 사용합니다.</strong></p>


  <blockquote>

  <p>데이터를 SQL DW로 수집한 원본에는 SQL DW에서 팩트를 작성하기 위해 이러한 테이블을 조회하는 데 사용하는 많은 마스터 테이블이 있습니다. 이 경우 기본 키에 분산되는 적절한 양의 데이터(&gt;1백만 행)를 사용하여 이러한 테이블을 만들었습니다. 이 테이블은 고유한 정수입니다. 이로 인해 데이터 분산(데이터 오차가 최소화 또는 없음)이 있다는 이점이 있으므로 쿼리 조회가 매우 빨라질 수 있습니다.</p>

  </blockquote>


  <p><strong>6. 비용 절감을 위해 동적 스케일 업 및 스케일 다운 사용:</strong></p>


  <blockquote>

  <p>ADF를 사용하는 ELT는 예약된 ELT가 시작되기 전에 인스턴스를 100DWU에서 600DWU로 확장하는 방식으로 설계되었습니다. 이로 인해 막대한 비용 절감이 발생했습니다. ELT는 이 시간 동안 거의 4-5시간 동안 실행되며 DWU 사용량은 600 DWU로 제한됩니다. 처리가 더 빨라지고 비즈니스에 데이터가 더 빠르게 필요한 월말에는 1,000DWU로 확장할 수 있습니다. 이 모든 작업은 ELT&rsquo;의 일부로 수행되며 수동 개입이 필요하지 않습니다.</p>

  </blockquote>


  <p><strong>7. 정기 유지 관리:</strong></p>


  <blockquote>

  <p>이 경우 ELT 프로세스의 일부로 통계 및 인덱스 다시 작성 업데이트를 포함했습니다. 차원 및 팩트 로드가 더 빨리 완료되지 않으면 조각화 &gt; 가 5%인 모든 CCI&rsquo;를 확인하고 인덱스를 다시 빌드합니다. 마찬가지로 주요 테이블의 경우 최상의 성능을 보장하기 위해 통계를 업데이트하고 있습니다.</p>

  </blockquote>


  <p><strong>8.데이터 마트에 SQL Server 2016을 활용합니다.</strong></p>


  <blockquote>

  <p>Azure SQL DW는 기본 데이터 처리 엔진인 반면, DS 14 IAAS VM&rsquo;에서 SQL Server 2016을 실행하도록 선택한 것은 데이터 배포의 기본 원본입니다. 이를 통해 SQL Server 제공하는 높은 동시성을 활용하고 처리에 Azure SQL DW의 기능을 사용할 수 있습니다. Azure SQL DW에서 프로비전된 데이터를 사용하는 1,000명 이상의 사용자가 있습니다.</p>

  </blockquote>


  <p>솔루션의 일부로 Azure SQL Data Warehouse를 사용하여 Microsoft Enterprise Services는 런타임을 <strong>최대 40%까지</strong> 줄이고 대기 시간을 줄여 비즈니스 사용자에게 인사이트를 제공할 수 있었습니다.</p>


  <p>완전 관리형 페타바이트 규모의 클라우드 데이터 웨어하우스 서비스를 아직 살펴보지 않은 경우 아래 링크에서 자세히 알아보세요.</p>


  <h2 align="left">자세한 정보</h2>


  <p align="left"><a href="https://azure.microsoft.com/documentation/articles/sql-data-warehouse-overview-what-is/">Azure SQL Data Warehouse란?</a><br>

  <a href="https://azure.microsoft.com/documentation/articles/sql-data-warehouse-best-practices/">데이터 웨어하우스 모범 사례 SQL</a><br>

  <a href="https://azure.microsoft.com/documentation/videos/index/?services=sql-data-warehouse">비디오 라이브러리</a><br>

  <a href="https://social.msdn.microsoft.com/Forums/en-US/home?forum=AzureSQLDataWarehouse">MSDN 포럼</a><br>

  <a href="https://stackoverflow.com/questions/tagged/azure-sqldw">Stack Overflow 포럼</a></p>
