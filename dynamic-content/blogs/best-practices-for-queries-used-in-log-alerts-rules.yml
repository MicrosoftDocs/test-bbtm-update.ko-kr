### YamlMime:Yaml
ms.openlocfilehash: ca8b7a025cc0f8077319db9d03bdd254495147e5
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139898704"
Slug: best-practices-for-queries-used-in-log-alerts-rules
Title: 로그 경고 규칙에 사용되는 쿼리에 대한 모범 사례
Summary: 쿼리는 검색 또는 공용 구조체 연산자 같은 테이블 이름으로 시작할 수 있습니다. 이러한 명령은 데이터 탐색 중 및 전체 데이터 모델에서 용어를 검색하는 데 유용합니다. 그러나 이러한 연산자는 경고의 제품화에 효율적이지 않습니다.
Content: >-
  <p>쿼리는 SecurityEvent 및 Perf와 같은 테이블 이름 또는 &ldquo;다중 테이블/다중 열 검색 환경을 제공할 수 있는 검색&rdquo; 및 &ldquo;공용 구조체&rdquo; 연산자를 사용하여 시작할 수 있습니다. 이러한 연산자는 데이터 탐색 중에 전체 데이터 모델에서 용어를 검색하는 데 유용합니다. 그러나 이러한 연산자는 경고의 제품화에 효율적이지 않습니다. Log Analytics 및 애플리케이션 Insights 로그 경고 규칙 쿼리는 항상 테이블로 시작하여 쿼리 실행에 대한 명확한 범위를 정의해야 합니다. 쿼리 성능과 결과의 관련성을 모두 향상시킵니다. 설명서,&nbsp;&ldquo; <a href="https://docs.microsoft.com/azure/kusto/query/best-practices" target="_blank">쿼리 모범 사례를</a> 방문하여 자세히 알아볼 수 있습니다.&rdquo;</p>


  <p>공용 구조&rdquo;체 연산자를 사용하더라도 &ldquo;로그 경고 규칙에서 <a href="https://docs.microsoft.com/azure/azure-monitor/log-query/cross-workspace-query" target="_blank">리소스 간 쿼리</a>를 사용하는 것은 비효율적인 것으로 간주되지 않습니다. 리소스 간 쿼리의 공용 구조&rdquo;체&ldquo;는 이 예제와 같이 특정 리소스 및 테이블로 범위가 지정되고 union *&rdquo;의 &ldquo;쿼리 범위는 전체 데이터 모델입니다.</p>


  <pre>

  Union


  app(&#39;Contoso-app1&#39;).requests,


  app(&#39;Contoso-app2&#39;).requests,


  workspace(&#39;Contoso-workspace1&#39;).Perf</pre>


  <p>데이터 탐색 및 쿼리 작성 후 이 쿼리를 사용하여 로그 경고를 만들 수 있습니다. 다음 예제에서는 쿼리를 수정하고 <strong>검색</strong>&rdquo; 및 &ldquo;<strong>통합 *</strong>&rdquo; 연산자를 방지하는 &ldquo; 방법을 보여 줍니다.</p>


  <h3>예 1</h3>


  <p>다음 쿼리에서 로그 경고를 만들려고 합니다.</p>


  <pre>

  search ObjectName == &#39;Memory&#39; and (CounterName == &#39;% Committed Bytes In Use&#39; or CounterName == &#39;% Used Memory&#39;) and TimeGenerated &gt; ago(5m)


  | summarize Avg_Memory_Usage =avg(CounterValue) by Computer


  | where Avg_Memory_Usage between(90 .. 95)


  | count</pre>


  <p>검색&rdquo; 연산자를 사용하지 &ldquo;않고 유효한 경고 쿼리를 작성하려면 다음 단계를 수행합니다.</p>


  <p>1. 속성이 호스트되는 테이블을 식별합니다.</p>


  <pre>

  search ObjectName == &#39;Memory&#39; and (CounterName == &#39;% Committed Bytes In Use&#39; or CounterName == &#39;% Used Memory&#39;)


  | summarize by $table</pre>


  <p>결과는 이러한 속성이 Perf 테이블에 속한다는 것을 나타냅니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5c8bb1fa-cee3-4da7-b821-67c57f81976d.png"><img align="left" alt="Perf table screenshot" border="0" height="81" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a8ad7036-9260-4668-a08f-5c82222e9f24.png" style="border-image: none; float: left; display: inline; background-image: none;" title="성능 테이블 스크린샷" width="128"></a></p>


  <blockquote>

  <p>&nbsp;</p>

  </blockquote>


  <p>&nbsp;</p>


  <p>&nbsp;</p>


  <p>2. 쿼리에 사용되는 속성은 Perf 테이블에서 생성되므로 쿼리는 해당 테이블로 시작하고 쿼리 실행 범위를 해당 테이블로 지정해야 합니다.</p>


  <pre>

  Perf


  | where ObjectName == &#39;Memory&#39; and (CounterName == &#39;% Committed Bytes In Use&#39; or CounterName == &#39;% Used Memory&#39;) and TimeGenerated &gt; ago(5m)


  | summarize Avg_Memory_Usage=avg(CounterValue) by Computer


  | where Avg_Memory_Usage between(90 .. 95)


  | count</pre>


  <h2>예제 2</h2>


  <p>다음 쿼리에서 로그 경고를 만들려고 합니다.</p>


  <pre>

  search (ObjectName == &#39;Processor&#39; and CounterName == &#39;% Idle Time&#39; and InstanceName == &#39;_Total&#39;)


  | where Computer !in ((union * | where CounterName == &#39;% Processor Utility&#39; | summarize by Computer)) | summarize Avg_Idle_Time = avg(CounterValue) by Computer, CounterPath | where Avg_Idle_Time &lt; 5 | count</pre>


  <p>쿼리를 수정하려면 다음 단계를 수행합니다.</p>


  <p>1.쿼리는 검색&rdquo; 및 &ldquo;공용 구조체 *&rdquo; 연산자를 모두 &ldquo;사용하므로 두 단계로 속성을 호스팅하는 테이블을 식별해야 합니다.</p>


  <pre>

  search (ObjectName == &#39;Processor&#39; and CounterName == &#39;% Idle Time&#39; and InstanceName == &#39;_Total&#39;)


  | summarize by $table</pre>


  <p>쿼리의 첫 번째 부분의 속성은 Perf 테이블에 속합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b3252def-9f92-4e70-9825-c5ee77a212a1.png"><img align="left" alt="Perf table screenshot 2" border="0" height="81" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1480292a-e6c8-47dd-a4da-96af5dd489bc.png" style="border: 0px currentcolor; border-image: none; float: left; display: inline; background-image: none;" title="성능 테이블 스크린샷 2" width="128"></a></p>


  <p>&nbsp;</p>


  <p>&nbsp;</p>


  <p>&nbsp;</p>


  <p>참고로 &ldquo;withsource = table&rdquo; 명령은 속성을 호스트하는 테이블 이름을 지정하는 열을 추가합니다.</p>


  <pre>

  union withsource = table * | where CounterName == &#39;% Processor Utility&#39;


  | summarize by table</pre>


  <p>쿼리의 두 번째 부분에 있는 속성도 Perf 테이블에 속합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/98abdc3d-a836-44d1-92b5-5d2ee63980d3.png"><img alt="Perf table screenshot 3" border="0" height="84" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/63ae442e-f020-4adb-b85e-c24b30c6db19.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="성능 테이블 스크린샷 3" width="131"></a>&nbsp;</p>


  <p>2. 쿼리에 사용되는 속성은 Perf 테이블에서 생성되므로 외부 및 내부 쿼리는 모두 이 테이블로 시작하고 쿼리 실행 범위를 이 테이블로 지정합니다.</p>


  <pre>

  Perf


  | where ObjectName == &#39;Processor&#39; and CounterName == &#39;% Idle Time&#39; and InstanceName == &#39;_Total&#39;


  | where Computer !in ((Perf | where CounterName == &#39;% Processor Utility&#39; | summarize by Computer))


  | summarize Avg_Idle_Time = avg(CounterValue) by Computer, CounterPath


  | where Avg_Idle_Time &lt; 5


  | count</pre>
