### YamlMime:Yaml
ms.openlocfilehash: 06427fadd4a8c1a6083c6e530f254c1302a48e55
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905460"
Slug: maven-deploy-java-apps-to-azure-with-tomcat-on-linux
Title: 'Maven: Linux에서 Tomcat을 사용하여 Azure에 Java 앱 배포'
Summary: Azure App Service용 Maven 플러그 인에서 새로운 기능을 발표하게 되어 기쁘게 생각합니다. 플러그 인은 Maven 프로젝트에 Azure 서비스를 원활하게 통합합니다. 한 단계만 사용하여 배포할 수 있습니다.
Content: "<p><a href=\"https://github.com/Microsoft/azure-maven-plugins/blob/develop/azure-webapp-maven-plugin/README.md\" target=\"_blank\">Azure App Service용 Maven 플러그 인</a>에서 새로운 기능을 발표하게 되어 기쁘게 생각합니다. 플러그 인은 Maven 프로젝트에 Azure 서비스를 원활하게 통합합니다. 단 한 단계로 Java 8 및 Tomcat 8.5 또는 9.0의 기본 제공 실행 스택을 사용하여 LINux의 Azure Web Apps에 WAR 파일을 배포할 수 있습니다. Maven을 활용하여 Azure App Service 플러그 인은 이식 가능하며 IDE 및 CI/CD 파이프라인과 쉽게 통합할 수 있습니다.</p>\n\n<h2>Linux에서 Tomcat을 사용하는 웹앱</h2>\n\n<p>몇 달 전, Linux의 Web Apps에서 Java 8 및 Tomcat 8.5/9.0에 대한 기본 제공 지원 <a href=\"https://azure.microsoft.com/en-us/blog/public-preview-of-java-on-app-service-built-in-support-for-tomcat-and-openjdk/\" target=\"_blank\">의 미리 보기 릴리스</a> 를 발표했습니다. 이를 통해 개발자는 관리되는 환경에서 Java 앱을 실행하여 자동 크기 조정 및 고가용성을 활용할 수 있습니다.</p>\n\n<h2>Maven 시작</h2>\n\n<p>새 Azure Web App을 만든 후 OS용 Linux 및 Tomcat을 스택으로 선택합니다. 이 새 웹앱의 정보를 저장하여 Maven 플러그 인을 구성합니다. pom.xml 파일을 열고 <em>구성</em>&gt; 섹션에서 다음 설정을 &lt; 추가합니다.</p>\n\n<pre>\n   &lt;!-- Web App information --&gt;\n   &lt;resourceGroup&gt;your-resource-group&lt;/resourceGroup&gt;\n   &lt;appName&gt;your-app-name&lt;/appName&gt;\n             \n   &lt;!-- Java Running Stack for Web App on Linux--&gt;\n   &lt;linuxRuntime&gt;tomcat 8.5-jre8&lt;/linuxRuntime&gt;\n \n   &lt;!-- Deployment Type --&gt;\n   &lt;deploymentType&gt;war&lt;/deploymentType&gt;</pre>\n\n<p>자세한 구성은 <a href=\"https://github.com/Microsoft/azure-maven-plugins/tree/develop/azure-webapp-maven-plugin\" target=\"_blank\">GitHub</a> 사용할 수 있습니다.&nbsp;&nbsp;</p>\n\n<h2>스크립트를 실행합니다.</h2>\n\n<p>명령줄 도구를 열고 <a href=\"https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest\" target=\"_blank\">Azure CLI 2.0</a>으로 로그인합니다. 다음 명령을 입력하면 .war 파일에 프로젝트를 빌드하고 Azure Web App에 자동으로 배포합니다.</p>\n\n<pre>\n$ mvn clean package azure-webapp:deploy</pre>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7f31b3cc-6080-4ff9-8ae9-2a0ce080d79c.png\"><img alt=\"Terminal\" border=\"0\" height=\"413\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d45609d5-aa94-4610-84a3-a73d7fde83a0.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"터미널\" width=\"1018\"></a></p>\n\n<p>그것은&rsquo; 완료! 이제 앱의 URL에 대한 브라우저를 열어 Azure에서 실행되는 Java 웹 사이트를 방문할 수 있습니다.</p>\n\n<p><a href=\"https://github.com/Microsoft/azure-maven-plugins\" target=\"_blank\">GitHub 프로젝트를</a> 확인하고 Azure App Service용 Maven 플러그 인의 고급 기능에 대해 알아봅니다.</p>\n\n<h2>다음 단계</h2>\n\n<p>Azure에서 Java 앱을 빌드하는 방법에 대한 자세한 정보:</p>\n\n<ul>\n <li>GitHub: <a href=\"https://github.com/Microsoft/azure-maven-plugins/blob/develop/azure-webapp-maven-plugin/README.md\" target=\"_blank\">Azure App Service용 Maven 플러그 인</a>&nbsp;</li>\n <li>GitHub: <a href=\"https://github.com/Microsoft/azure-maven-plugins/blob/develop/azure-functions-maven-plugin/README.md\" target=\"_blank\">Azure Functions용 Maven 플러그 인</a></li>\n <li>자습서: <a href=\"https://docs.microsoft.com/en-us/java/azure/spring-framework/\" target=\"_blank\">Azure 개발자 센터의 Spring</a></li>\n <li>자습서: <a href=\"https://docs.microsoft.com/en-us/java/azure/\" target=\"_blank\">Azure 개발자 센터의 Java</a></li>\n</ul>\n\n<h2>피드백</h2>\n\n<p>피드백을 공유하고 아래 또는 <a href=\"https://github.com/Microsoft/azure-maven-plugins/issues\" target=\"_blank\">GitHub</a> 개선하는 데 도움이 되는 질문을 하세요.</p>"
