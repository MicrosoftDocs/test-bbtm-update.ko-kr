### YamlMime:Yaml
ms.openlocfilehash: 0c9ec24d0df271c181b449c9cfc7b778bd7954f5
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139907996"
Slug: unifying-monitoring-and-security-for-kubernetes-on-azure-container-service
Title: Azure Container Service에서 Kubernetes에 대한 모니터링 및 보안 통합
Summary: Azure Container Service에서 Kubernetes에 대한 모니터링 및 보안 통합
Content: >-
  <p>Weve&rsquo;는 프로덕션 환경에서 실행되는 컨테이너 워크로드의 증가와 컨테이너 배포를 중심으로 잘린 새로운 도구&rsquo; 물결을 보았습니다. Microsoft Azure 컨테이너 공간에 다양한 파트너가 있으며 오늘날&rsquo; Sysdig의 새로운 제품이 등장합니다. <a href="https://sysdig.com/product/secure">Sysdig Secure</a>, 런타임 컨테이너 보안&nbsp; 및 포렌식.</p>


  <p>컨테이너 및 마이크로 서비스 기반 애플리케이션을 프로덕션 환경으로 푸시하면 환경을 모니터링하고 보호하는 방식이 근본적으로 바뀝니다. 이 게시물&rsquo;에서는 이 새로운 인프라의 과제를 검토하고 Sysdig를 사용하여 Azure 컨테이너 서비스에서 Kubernetes를 모니터링하고 보호하는 다양한 예제를 제공합니다.</p>


  <ul>
   <li>
   <p>Sysdig에서 <a href="https://github.com/bencer/charts/commit/41f40daf84d201ad9d1ad6f264bdebb5995cdf2a">helm</a> 을 사용하여 Azure 환경을 계측하는 방법</p>
   </li>
   <li>
   <p>Kubernetes 메타데이터를 활용하여 컨테이너를 최적화하고 보호하는 모범 사례</p>
   </li>
   <li>
   <p>컨테이너화된 환경에서 문제 해결 및 포렌식이 변경된 방법</p>
   </li>
  </ul>


  <h3>모니터링 보안을 통합하는 이유는 &amp; 무엇인가요?</h3>


  <blockquote>

  <p>&ldquo;<strong>DevSecOps</strong>의 목적과 의도는 <strong>&#39;<em>everyone이 보안&#39;책임 </em> </strong>지고 보안 결정을 신속하게 배포하고 필요한 안전을 희생하지 않고 가장 높은 수준의 컨텍스트를 유지하는 사람들에게 확장한다는 목표를 가지고 사고 방식을 구축하는 것입니다.&rdquo; - DevSecOps</p>

  </blockquote>


  <p>DevSecOps의 등장으로 자체 개발 팀을 위한&nbsp; 서비스로 컨테이너 기반 플랫폼을 제공하는 새로운 플랫폼 foroperator가 생성되었습니다. 여기에는 팀이 실행하는 서비스가 안정적이고 안전한지 확인하는 데 필요한 모든 성능 도구를 팀에 제공하는 것이 포함됩니다.</p>


  <p>이러한 플랫폼 운영자는 다음 두 가지 주요 개념을 중심으로 워크플로를 집중합니다.</p>


  <ul>
   <li>
   <p><strong>가시성</strong> &ndash; 내 서비스의 성능은 어떻게&rsquo; 됩니까? 인프라가 안전한가요?</p>
   </li>
   <li>
   <p><strong>법의학</strong> - 충돌한 배포는 어떻게 되었나요? 예기치 않은 아웃바운드 연결이 생성되었으며 디스크에 기록된 데이터는 무엇인가요?</p>
   </li>
  </ul>


  <p>모니터링 및 보안에 대해 묻는 질문은 서로 다르지만 워크플로는 동일합니다. Sysdig는 낮은 시스템 및 인지 오버헤드로 단일 계측 지점에서 데이터와 상호 작용하기 위한 통합된 환경을 개발자에게 제공합니다.</p>


  <h3>ACS(Azure Container Service) &amp; Sysdig에서 Kubernetes 시작</h3>


  <p><a>ACS </a> 를 새로 사용하는 경우&rsquo; <a href="https://docs.microsoft.com/en-us/azure/container-service/kubernetes/container-service-tutorial-kubernetes-deploy-cluster">이 게시물</a>&nbsp;<a href="#_msocom_1" id="_anchor_1" name="_msoanchor_1" uage="JavaScript">[SD1]</a>&nbsp;<a href="#_msocom_2" id="_anchor_2" name="_msoanchor_2" uage="JavaScript">[KA2]</a>&nbsp;을 확인하여 Kubernetes 또는 즐겨 찾는 오케스트레이터를 몇 분 안에 배포하고 실행하기 위한 단계별 지침을 확인하세요.</p>


  <p>Well&rsquo;은 <a href="https://github.com/bencer/charts/commit/41f40daf84d201ad9d1ad6f264bdebb5995cdf2a">Helm 차트</a> 를 사용하여 Kubernetes 클러스터의 각 호스트에서 Sysdig 에이전트를 시작하는 환경을 계측합니다. Sysdig가 사용자 환경에서 데이터를 수집하는 방법에 대한 자세한 내용은 작동 방식 페이지를 확인하세요.</p>


  <h3>Kubernetes Services에 대한 가시성</h3>


  <h4>성능 모니터링</h4>


  <p>Kubernetes의 가장 좋은 부분 중 하나는 내부 레이블 지정이 얼마나 광범위한지입니다. Sysdig Monitor의 그룹화 내에서 이를 활용합니다. &rsquo;실제 계층 구조(예&gt;: 호스트 &gt; Pod &gt; 컨테이너)를 기반으로 하거나 논리적 마이크로 서비스 계층 구조(예: 네임스페이스 &gt; 복제본 세트 Pod &gt; 컨테이너)를 기반으로 컨테이너를 그룹화 &gt; 하고 탐색할 수 있습니다.</p>


  <p><img alt="Screen Shot 2017-10-09 at 4.02.29 PM.png" border="0" height="248" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/55c7f795-a4c4-454c-8c34-60564b0b0a86.jpeg" width="494"></p>


  <p><img alt="Screen Shot 2017-10-09 at 4.03.00 PM.png" border="0" height="248" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/75824483-3a56-46c8-ac9e-b4643f1fbbbe.gif" width="496"></p>


  <p><em>이러한 각 이미지를 클릭하고 Kubernetes 컨텍스트를 사용하여 Docker 컨테이너를 모니터링하기 위한 물리적 그룹화와 논리적 그룹화 간의 차이점을 확인합니다.</em></p>


  <p>기본 물리적 리소스의 사용률에 관심이 있는 경우&rsquo;(예: 노이즈 이웃을 식별) 다음 물리적 계층은 중대하다. 그러나 애플리케이션 및 마이크로 서비스의 성능을 탐색하려는 경우&rsquo; 논리 계층 구조를 시작하는 것이 가장 좋은 위치인 경우가 많습니다.</p>


  <p>일반적으로 인프라를 즉시 다시 그룹화할 수 있는 기능은 일반적인 대시보드에 비해 환경 문제를 해결하는 더 강력한 방법입니다.</p>


  <h4>Kubernetes Services 보안</h4>


  <p>동일한 메타데이터를 사용하여 Kubernetes 서비스를 보호할 수 있습니다. kubernetes.deployment.name 같은 레이블을 사용하여 배포가 실행되는 컨테이너, 호스트 또는 Azure 지역의 수에 관계없이 논리 서비스를 보호하는 정책을 적용할 수 있습니다.</p>


  <p>&rsquo;아래의 내용은 해당 논리 서비스에서 예기치 않은 아웃바운드 연결을 검색하여 반출 이벤트로부터 Redis Kubernetes 배포를 보호하는 정책입니다. 여기에서 모든 데이터가 Redis 서비스를 떠나기 전에 컨테이너를 중지하기 위해 정책 위반에 대한 조치를 취할 수도 있습니다.</p>


  <p><strong><img alt="Adaptive run time defense .png" border="0" height="308" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ad9ea3d4-c8d1-4544-ad73-78474ff1d214.jpeg" width="491"></strong></p>


  <h3>컨테이너 환경의 포렌식</h3>


  <p>문제 해결 및 인시던트 대응을 위한 포렌식 작업을 수행하는 것은 모두 동일한 문제에 직면합니다. 컨테이너는 임시이며 원하는 데이터는 오래 전에 사라집니다. 또한, 그들은&rsquo; 본질적으로 블랙 박스와 그것은&rsquo; 종종 실제로 그들 안에 실행 하는 것을&rsquo; 말하기 어렵다.</p>


  <p>&rsquo;Kubernetes가 컨테이너를 종료하는 경우 호스트에 ssh하고 코어 덤프를 실행할 시간이 없습니다. Microsoft 시스템은 프로덕션 외부에서 해당 데이터의 문제를 해결할 수 있는 기능을 사용하여 모든 활동을 사전에 캡처해야 합니다.</p>


  <p>Sysdigs&rsquo; 고유 계측을 사용하면 사용자, 시스템 호출, 네트워크, 프로세스 및 파일에 기록되거나 네트워크 <strong>사전 및 사후</strong> 정책 위반으로 전달된 콘텐츠의 모든 활동을 캡처할 수 있습니다. 이것은 빠른 1 분 비디오를 통해 가장 잘 설명 된 많은 데이터가&rsquo;있는 것입니다. 사용자가 컨테이너에서 셸을 생성할 때 발생할 수 있는 작업과 후속 작업에 대해 수집할 수 있는 모든 데이터에 대한 이 분석을 확인합니다.</p>


  <p><iframe allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/QqNRNhOcpgo" width="560"></iframe></p>


  <h3>결론</h3>


  <p>분석의 최종 결과는 모니터링 플랫폼과 보안 플랫폼 간에 다를 수 있지만 데이터와 워크플로는 종종 동일합니다. Kubernetes 렌즈를 통해 인프라를 보고 호스트에서 일어나는 모든 일에 대한 풍부한 활동을 볼 수 있어야 합니다. 이 <a href="https://attendee.gotowebinar.com/rt/4884195963262902018">웨비나</a>에서 호스트&nbsp;당 단일 컨테이너 에이전트가 있는 Sysdigs&rsquo; 전체 가시성&nbsp; 및 포렌식 기능을 참조하거나 <a href="https://github.com/bencer/charts/commit/41f40daf84d201ad9d1ad6f264bdebb5995cdf2a">helm</a>을 사용하여 3분 이내에 시작하세요.</p>
