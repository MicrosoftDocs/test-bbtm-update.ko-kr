### YamlMime:Yaml
ms.openlocfilehash: 7e955e484c1451f5280b6ab0d688b39d1777ca5f
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139907147"
Slug: isv-guest-post-series-softlibrary-and-kern4cloud-on-windows-azure
Title: 'ISV 게스트 포스트 시리즈: Windows Azure의 Softlibrary 및 Kern4Cloud'
Summary: '편집자&rsquo; 주: Softlibrary의 CTO 미겔 파레호(Miguel Parejo)가 작성한 오늘의&rsquo; 게시물은 회사가 Windows Azure 및 Windows Azure Marketplace를 사용하여 다중 테넌트 실행 및 판매하는 방법을 설명합니다...'
Content: '<p><b><i>편집기&rsquo; 참고:</i></b><i> Softlibrary의 CTO인 Miguel Parejo가 작성한 Todays&rsquo; 게시물은 회사가 Windows Azure 및 Windows Azure Marketplace를 사용하여 다중 테넌트 정보 관리 서비스를 실행하고 판매하는 방법을 설명합니다.<img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2275.MiquelParejo.jpg" alt="" style="float: right;" height="114" border="0" width="97"></i></p>  <p>Softlibrary는 1988년 바르셀로나(스페인)에서 시작된 회사입니다. 그 이후로 항상 정보 관리에 관여하고 고객에게 최첨단 사용자 지정 솔루션을 제공해 왔습니다. 이를 위해 회사는 처음부터 Microsoft 플랫폼 및 아키텍처를 채택했습니다.</p>  <p>Kern4Cloud는 회사 특성에서 비롯되었는지 여부에 관계없이 정보 관리에 중점을 둔 다중 테넌트 서비스입니다. 게시, 분류 및 분류, 어휘 의미 체계 및 동의어 사전 시스템, 버전 제어, 다국어, 라이브 번역 및 워크플로 프로세스를 위한 도구 집합을 제공하는 모든 정보 수명 주기를 처리할 수 있습니다.</p>  <p>정보 및 서비스가 안정적이고 안전한 방식으로 유지되는 <a target="_blank" href="https://www.bsigroup.com/en/Assessment-and-certification-services/Client-directory/CertificateClient-Directory-Search-Results/?pg=1&amp;licencenumber=IS+533913&amp;searchkey=standardXeqXISO/IEC%2027001XandXcompanyXeqXMicrosoft">인증된</a> 데이터 센터에 있기 때문에 <a target="_blank" href="https://www.windowsazure.com/en-us/pricing/free-trial/?WT.mc_id=cmp_pst001_blg_post0109gen">Windows Azure</a>를 선택했습니다. Windows Azure 리소스도 고성능 솔루션을 제공하기 위해 확장할 수 있습니다.</p>  <p>시스템 내의 모든 기존 정보는 XML 형식으로 저장되므로 이질적인 원본을 표준 및 국제화된 원본으로 변환하는 블랙박스로 Kern4cloud를 볼 수도 있습니다.</p>  <p>Kern4Cloud를 사용하여 일반적인 흐름을 수행하는 방법을 살펴보겠습니다&rsquo;. 회사에 <i>개인 정보 취급 방침</i> 이 있을 수 있으며 시간이 지남에 따라 변경될 수 있습니다. 첫 번째 버전을 가져온 후에는 솔루션의 일부로 사용할 수 있는 기본 번역 엔진을 사용하여 새 버전을 만들고, 기존 버전을 복제하고, 즉석에서 버전을 번역할 수 있습니다. 시스템에서 파일을 순수 XML로 변환할 수도 있으므로 나중에 <a target="_blank" href="https://en.wikipedia.org/wiki/WYSIWYM">WYSIWYM</a> 편집기인 X.Edit라는 자체 편집기를 사용하여 파일을 편집할 수 있습니다. 이 모든 작업은 K4C라는 웹 구성 요소를 사용하여 수행할 수 있습니다. 직장. 회사는 일부 부서가 게시하기 전에 동의해야 하는 방식으로 구조화되어 있습니다. 이를 감안할 때 먼저 게시 프로세스에 관련된 부서와 해당 부서만 문을 읽고 수정하고, 법률을 준수하는지 검토하고, 번역을 수정하고, 마지막으로 동의를 부여하여 문서를 게시하고 사용할 준비가 되도록 하는 워크플로를 만들 수 있습니다.</p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3113.Softlibrary1.png" alt="" border="0"></p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6064.Softlibrary2.png" alt="" height="344" border="0" width="553"></p>  <h3>해결 과제</h3>  <p>Azure를 처음 Windows 때 아키텍처 및 디자인 단계에 비용 효율적인 전략이 포함되어야 한다는 것을 깨달았습니다. Windows Azure에서 솔루션을 마이그레이션하거나 처음부터 만들 때 고려해야 하는 몇 가지 청구 드라이버가 있습니다. 다행히 Microsoft는 이 프로세스를 훨씬 쉽게 수행할 수 있는 몇 가지 추가 기능과 기능을 제공했습니다. 몇 가지를 언급하려면:</p>  <ul>  <li><a target="_blank" href="https://msdn.microsoft.com/en-us/library/windowsazure/ff394114.aspx">동적 관리 뷰</a>: <a target="_blank" href="https://www.windowsazure.com/en-us/home/features/sql-azure/?WT.mc_id=cmp_pst001_blg_post0109sql">SQL Azure</a> 사용하여 데이터베이스의 규모와 크기를 늘리고 줄이는 방법을 결정하여 비용을 안정시켰습니다.</li>  <li><a target="_blank" href="https://blogs.msdn.com/b/windowsazurestorage/archive/2011/08/03/windows-azure-storage-metrics-using-metrics-to-track-storage-usage.aspx">Storage 메트릭</a><b>:</b> 스토리지를 추적하여 트랜잭션 및 용량 메트릭을 확인합니다.<b></b></li>  </ul>  <p>다른 도구도 있지만 비용 효율적인 전략을 살펴볼 수도 있습니다. 따라서 개발자가 이전에 해본 적이 없는 방식으로 코드를 디자인, 마이그레이션, 적응 및 작성하는 것이 주요 과제였습니다. 이제 프로젝트의 모든 관련자는 비용이라는 하나의 새로운 매개 변수를 고려해야 합니다. &rsquo;Azure에 Windows 비용이 많이 드는 것은 아닙니다.</p>  <p>핵심 구성 요소를 다시 디자인한 후에는 또 다른 과제에 직면했습니다. 다중 테넌트 서비스에서 사용자를 인증하려면 어떻게 해야 할까요? Windows Azure에는 ACS(Access Control Service)가 함께 제공됩니다. ACS를 사용하면 ID를 투명한 방식으로 처리하고 권한 부여 프로세스에 집중할 수 있습니다.</p>  <h3>아키텍처</h3>  <p>이제 Kern4cloud가 수행하는 작업을 알고 있으며,&rsquo; 이 작업을 수행하는 사용자를 보여 줄 수 있으며 나중에&rsquo; Windows Azure 구성 요소와 매핑합니다.</p>  <p>주요 구성 요소 목록은 다음과&rsquo; 같습니다.</p>  <ul>  <li><b>K4C. 작업 공간: </b>UI의 핵심입니다. 사용자는 단일 창으로 데이터를 쉽게 버전 관리, 편집, 게시, 삭제, 일괄 처리 작업, 정렬, 검색, 필터링할 수 있습니다. 모든 항목은 가시성을 높이고 유용성을 높이기 위해 그리드로 구성됩니다. 아이디어를 보려면 첫 번째 그림을 참조하세요.<b></b></li>  <li><b>K4C. 관리자</b>: 관리자가 모든 속성, X.Edit 스타일 및 매핑, 사용자 그룹, 사용자 권한, 워크플로 등을 관리할 수 있는 위치입니다.<b></b></li>  <li><b>저장소: </b> 세 개의 리포지토리가 있습니다. 하나는 이진 문서(Office, 이미지, 비디오 등), XML 파일(추출된 정보 및 메타 데이터를 포함하는 문서) 및 마지막으로 K4C에서 처리하는 모든 정보에 대한 문서입니다. 두 데이터베이스에 저장된 빠른 검색에 사용되는 관리자 및 인덱싱된 데이터입니다.<b></b></li>  <li><b>워크플로: </b> 이 구성 요소는 사용자가 정의한 모든 워크플로 프로세스를 처리합니다.<b></b></li>  </ul>  <p>이것은 건축의 독수리 눈보기입니다. Windows Azure 구성 요소와 매핑되는 방법을&rsquo; 살펴보겠습니다&rsquo;.</p>  <p>세부 사항에&rsquo; 들어가기 전에 설명해야 할 한 가지가 있습니다. Kern4Cloud 모델링 서비스는 두 개의 주요 대상 그룹에 대해 제공됩니다.</p>  <ul>  <li><b>개별 사용자</b>: 디스크 할당량 공간이 제한되어 있고 일부 기능이 비활성화되어 스토리지 리소스를 공유합니다.</li>  <li><b>비즈니스 사용자</b>: 회사에서 이 모델을 구독하면 개인 리소스 집합으로 자동으로 프로비전됩니다. 회사 내의 모든 사용자는 K4C를 통해 공용 리포지토리에 액세스합니다. 직장. 그러나 K4C. 관리자는 관리자가 조직 내에서 정보를 격리하도록 도울 수 있습니다.</li>  </ul>  <p>아래는 아키텍처에서 Azure 구성 요소 및 서비스에 Windows 가장 중요한 4가지 수치를 보여 줍니다. 가독성을 위해 생략된 상호 작용이 있습니다.</p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4520.Softlibrary3.png" alt="" border="0"></p>  <ul>  <li><b>그림 1:</b> 웹 역할 K4C를 표시합니다. Workplace 및 K4C.Admin. 둘 다 동일한 호스트된 서비스에 배포됩니다. 시스템의 진입점이며 일부 UI가 있는 유일한 진입점입니다. 인덱싱 엔진 및 K4C 때문에 SQL Azure 최신 정보를 검색합니다. 작업 공간 구성 요소는 사용자가 데이터를 상호 작용하고 수정할 때 해당 구성 요소가 존재할 수 있음을 보장합니다. Full-Text 인덱싱 지원은 현재 SQL Azure 사용할 수 없으므로 인덱싱 엔진에는 약간의 추가 작업이 있습니다. 최근에 Weve&rsquo;는 좋은 대안이 될 수 있다고 믿기 때문에 <a target="_blank" href="https://www.hadooponazure.com/">Hadoop</a> 을 살펴보기 시작했습니다.</li>  <li><b>그림 2:</b> 현재 이러한 모든 역할은 동일한 호스팅 서비스에 배포됩니다(그림 1의 역할과는 다름).  <ul>  <li><b>워크플로 및 인덱스: </b> 작업자 역할입니다. 첫 번째 메시지는 워크플로 큐에서 메시지를 팝하고 처리합니다. 작업자 역할 인덱싱은 모든 정보를 인덱싱하고 일관된 상태로 유지하는 서비스입니다. 또한 워크플로 큐에 메시지를 푸시하기 위한 문서 변경 내용도 검색합니다. 병목 현상을 최소화하기 위해 둘 다 다중 스레드입니다. 그러나 단일 인스턴스의 리소스는 제한되어 있으므로 크기 조정이 필요합니다. 현재 이 구성 요소는 수동으로 크기 조정되지만 Windows Azure용 Enterprise <a target="_blank" href="https://entlib.codeplex.com/wikipage?title=EntLib5Azure">Library 5.0 통합 팩</a>의 구성 요소인 WASABi(Windows Azure Autoscaling Application Block)를 포함하는 새 버전을 준비하고 있습니다. CPU 및 메모리 사용량 및 네트워크 부하에 따라 이 구성 요소 및 기타 K4C 구성 요소를 자동으로 크기 조정할 계획입니다.</li>  <li><b>K4C. FileProperties</b>:<b> </b>이진 파일을 처리하여 XML로 변환하는 웹 서비스입니다. <i>개인 정보 취급 방침 </i>샘플에 따라 제목, 바닥글 등에 사용되는 일부 스타일을 K4C와 매핑할 수 있는 사용자 환경의 Word 파일로 구성한다고 상상해 보십시오. XML 태그로 관리자. 새 버전을 저장한 후 매핑이 제대로 설정되면 인덱싱 역할은 이 서비스에 파일을 보내고 결과는 추가 편집에 사용할 수 있는 XML이 됩니다. 이렇게 하면 많은 플랫폼 및 디바이스에서 정보를 표시할 수 있습니다.</li>  <li><b>K4C. 백오프:</b>&rsquo; 웹 사이트와 K4C 시스템 간의 중간 계층을 나타냅니다. 웹 사이트에&rsquo; <i>개인 정보 취급 방침</i>을 표시하려면 다른 고객이 공유하는 이 서비스에 요청해야 하지만 데이터 격리를 보장하기 위해 Access Control Service에 의존하므로&rsquo;&rsquo; 요청을 하기 전에 먼저 ACS에 인증해야 합니다.<br> 시스템의 각 역할에는 고유한 크기 조정 매개 변수가 있습니다. 일부는 CPU 사용량에만 따라 크기를 조정해야 하고, 다른 일부는 네트워크 사용량 등에 따라 조정해야 합니다. 크기 조정 매개 변수가 이전에 배포된 것과 유사한 경우 특정 호스티드 서비스에 역할을 배포합니다(우리가 따르는 유일한 규칙은 아니지만). K4C. 백오프는 나중에 타사 사용자가 사용하는 척하므로 크기 조정 매개 변수가 상당히 다를 것으로 가정합니다. 따라서 이 구성 요소의 새 버전을 자체 호스팅 서비스에 배포할 계획입니다.</li>  <li><b>그림 3: </b>SQL Azure 서버는 모든 단일 고객에 대한 데이터를 보유합니다. 개별 사용자는 두 개의 데이터베이스를 공유하지만 비즈니스에는 고유한 쌍이 있습니다. 모든 중요한 정보는 데이터 계층에서 올바르게 암호화됩니다.</li>  <li><b>그림 4: </b> 두 개의 스토리지 계정이 있습니다. 하나는 고객용이고 다른 하나는 배포, 진단 및 백업용입니다. XML 데이터는 각 고객 ID에 대한 파티션 키를 사용하여 테이블에 저장되므로 <a href="https://msdn.microsoft.com/en-us/library/windowsazure/hh508997.aspx">여기에</a> 설명된 대로 데이터가 서로 다른 서버에서 제공됩니다. Weve&rsquo;는 TableServiceContext 클래스를 재정의 <i>하고 WritingEntity 및 ReadingEntitity </i>이벤트를 가로채므로 테이블에 쓰기 전에 xml 데이터를 암호화하고 압축하고 테이블에서 사용한 후 다른 방법으로 압축합니다. <b></b></li>  </ul>  </li>  </ul>  <h3>Azure Marketplace 통합 Windows</h3>  <p>마지막으로 <a target="_blank" href="https://www.windowsazure.com/en-us/home/features/marketplace/?WT.mc_id=cmp_pst001_blg_post0109mkt">Windows Azure Marketplace</a>에 게시할 애플리케이션을 제출하여 Kern4Cloud의 권한을 부여하기로 결정했습니다. 고객이 서비스를 안전하게 구독할 수 있고 청구를 과거의 걱정으로 만들 수 있는 플랫폼이기 때문에&rsquo; 클라우드 기반 솔루션에 완벽한 대상이라는 것을 알게 되었습니다. 고객이 서비스를 구독하려는 경우 Windows Azure Marketplace를 방문하여 <a target="_blank" href="https://datamarket.azure.com/application/aafe31b8-4859-4a93-ad49-ffe69baeec82">Kern4Cloud</a>를 검색하기만 하면 됩니다. 가장 적합한 제품을 선택한 후 Windows Azure Marketplace는 Windows Live ID 계정으로 로그인하고 일부 청구 정보(예: 신용 카드 번호)를 제공하도록 요청합니다. Windows Azure Marketplace에서는 구독 요금이 매월 청구되므로 첫 번째 달은 즉시 청구됩니다. Microsoft 및 ISV에서 제공하는 청구 프로세스는 일부 규칙을 따르고 Windows Azure Marketplace에 제품 가격을 제공해야 하기 때문에&rsquo; 고객은 청구 프로세스를 신뢰합니다. 전체 프로세스는 빠르고 안전하며 고객과 공급자에게 안정적입니다.</p>  <p>또한 모든 솔루션을 Marketplace에 통합하는 것은 매우 쉽습니다. 기본적으로 WINDOWS WATK(Azure Training Kit)에 있는 적절한 샘플에 표시된 단계를 따라야 합니다. Microsoft는 Azure 기반 솔루션을 빌드하기 위해 좋은 샘플과 모범 사례를 Windows 큰 작업을 수행했습니다. Windows Azure Marketplace 통합 프로젝트를 별도로 찾을 수 있지만 전체 키트를 다운로드하는 것이 좋습니다.</p>  <p>샘플에서 작동하는 방식을 살펴보겠습니다&rsquo;.</p>  <ol>  <li>고객은 Windows Azure Marketplace에서 솔루션을 찾고 구독하고자 합니다. 청구 및 구독 정보가 제공되면 Marketplace는 고객을 웹 사이트의 AzureMarketplaceOAuthHandler.ashx 처리기로 리디렉션하여 새 고객이 구독했음을 알려줍니다.</li>  <li>웹 사이트는 요청이 Windows Azure Marketplace에서 실제로 들어오는지 확인해야 합니다. 이 작업은 WATK에서 찾을 수 있는&rsquo; AzureMarketplace.OAuthUtility라는 프로젝트에 의해 처리됩니다. 프로젝트를 연결하거나 DLL을 참조할 수 있습니다. 위에서 언급한 처리기가 포함되어 있으므로 <i>web.config</i>다음 줄도 추가해야 합니다.</li>  </ol>  <p><span style="color: #0000ff;">&lt;</span><span style="color: #993300;">처리기</span><span style="color: #0000ff;">&gt;</span><br>&lt;<span style="color: #993300;">추가</span>&nbsp; <span style="color: #ff0000;">name</span><span style="color: #0000ff;">="AzureMarketplaceOAuthHandler"</span>&nbsp;<span style="color: #ff0000;">verb</span><span style="color: #0000ff;">="*"</span><br> <span style="color: #ff0000;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path</span><span style="color: #0000ff;">="AzureMarketplaceOAuthHandler.ashx"</span> <span></span><span style="color: #ff0000;"></span><br><span style="color: #ff0000;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type<span style="color: #0000ff;">="Microsoft.AzureMarkeplace.OAuthUtility.AuthorizationResponseHandler, Microsoft AzureMarketplace.OAuthUtility"/&gt; </span></span></p>  <p><span style="color: #0000ff;">&lt;</span>/<span style="color: #993300;">처리기</span><span style="color: #0000ff;">&gt;</span></p>  <p>이 프로젝트는 Microsoft.IdentityModel 및 Microsoft.IdentityModel.Protocols.OAuth 라이브러리도 사용합니다.</p>  <ol>  <li>요청의 원본이 Windows Azure Marketplace에서 제공된 것으로 확인되면 솔루션에서 고객이 구독 중이라는 메시지가 표시되므로 필요한 경우 추가 정보를 요청할 수 있습니다. 이렇게 하려면 웹 사이트에 5개의 클래스를 추가해야 합니다. 그 중 하나는 웹 사이트를 Windows Azure Marketplace 클라이언트로 정의하는 정보를 읽는 데 사용됩니다. 이 정보는 다음과 같이 <i>web.config</i> 저장해야 합니다.</li>  </ol>  <p><span style="color: #0000ff;">&lt;</span><span style="color: #993300;">azureMarketplaceConfiguration</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #ff0000;">appSpecificAzureMarketplaceOAuthClientId</span><span style="color: #0000ff;">="YOUR_CLIENT_ID"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #ff0000;">appSpecificAzureMarketplaceOAuthClientSecret&nbsp;</span> <span style="color: #0000ff;">=&nbsp;&ldquo;CLIENT_ECRET_KEY"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #ff0000;">appSpecificPostConsentRedirectUrl&nbsp;</span><span style="color: #0000ff;">=&nbsp;</span><br><span style="color: #0000ff;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ""</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #ff0000;">appSpecificWellKnownPostConsentUseUri</span>&nbsp;<span style="color: #0000ff;">=&nbsp;</span><br><span style="color: #0000ff;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ""/&gt;</span></p>  <p>이 정보는 Marketplace에 정의된 정보(플레이그라운드인지 여부)와 동일해야 합니다.</p>  <p>물론 섹션 요소도 추가해야 합니다.</p>  <p><span style="color: #0000ff;">&lt;</span><span style="color: #993300;">섹션</span>&nbsp; <span style="color: #ff0000;">name</span><span style="color: #0000ff;">="azureMarketplaceConfiguration"&nbsp;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #ff0000;">type</span><span style="color: #0000ff;">="YOURNAMESPACE. AzureMarketplaceConfiguration,YOURASSEMBLY&nbsp;"&nbsp;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #ff0000;">requirePermission</span><span style="color: #0000ff;">="false"/&gt;</span></p>  <p>프로덕션 환경에서 테스트 URL을 교체해야 합니다.</p>  <p>다른 중요한 클래스는 SubcriptionUtils.cs입니다<b>. </b> Marketplace 요청의 최종 대상이 됩니다. 여기서는 모든 요청을 처리하기 위해 <i>CreateSubscription </i>및<i> 구독 </i>&nbsp;취소 메서드를 만듭니다. <i>Global.asax(Application_Start </i>메서드)에 이 줄을 추가하기만 하면 <i>됩니다</i>.</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #008080;">AzureMarketplaceProvider.ConfigureOAuth</span>(<span style="color: #008080;">newSubscriptionUtils</span><span style="color: #0000ff;"></span>&nbsp;());</p>  <p>그리고 당신은&rsquo; 완료. 이제 웹 사이트에서 Marketplace에서만 구독 요청을 받고 필요에 따라 처리할 수 있습니다.</p>  <h3>간단명료하게</h3>  <p>온-프레미스 시스템에서 마이그레이션하는 것은 쉬운 일이 아니라 스릴 넘치는 작업이었습니다. Windows Azure는 임무를 수행하는 데 필요한 모든 서비스를 제공합니다. 우리는 단지 전에 몇 가지 고려를했다. 그 중 하나는 클라우드가 IT의 사망을 의미하는지 여부를 말하려고 웹에 존재하는 몇 가지 토론을 고려합니다. 우리의 경험은 IT 부서가 사라지지 않을&rsquo; 것이라는 결론을 내렸고,&rsquo; 이러한 플랫폼에 익숙해져야 합니다. 또한 하이브리드 클라우드를 주류에 도입하면서 논쟁이 곧 끝날 것으로 믿습니다.</p>  <p>Wed&rsquo;는 이 블로그 시리즈를 위해 글을 쓰는 최초의 스페인 회사가 될 수 있는 기회에 대해 Microsoft에 감사드립니다. 여기에 표시된 몇 가지 측면에 대한 자세한 정보를 원하는 경우 자유롭게 <a target="_blank" href="mailto:masinfo@softlibrary.es">문의하세요</a>.</p>'
