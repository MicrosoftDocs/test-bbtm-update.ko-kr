### YamlMime:Yaml
ms.openlocfilehash: 8e9255aeddc4f64b0324aa4b15e74fff014cfe6d
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139901163"
Slug: introduction-to-data-sync-service-for-sql-azure
Title: 데이터 동기화 Service for SQL Azure 소개
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] SQL Azure 데이터 동기화 서비스를 사용하면 둘 이상의 SQL Azure 데이터베이스 간에 양방향 동기화를 수행할 수 있습니다. 이 블로그 게시물은 ...'
Content: '<p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p><a href="https://www.sqlazurelabs.com/">데이터 동기화 Service for SQL Azure</a> 사용하면 둘 이상의 SQL Azure 데이터베이스 간에 양방향 동기화를 수행할 수 있습니다. 이 블로그 게시물에서는 SQL Azure 데이터 동기화 서비스의 기본 사항을 설명합니다.</p>  <h2>표지 아래</h2>  <p>SQL Azure 데이터 동기화 서비스는 <a href="https://msdn.microsoft.com/en-us/sync/default.aspx">Microsoft Sync Framework</a>를 사용하여 웹 및 작업자 역할을 사용하는 Windows Azure에서 실행됩니다. Windows Azure 계정은 Microsoft Sync 팀이 소유하고 관리되는 계정입니다. 데이터 동기화 Service for SQL Azure Azure 계정에서 역할 내에 설치하는 애플리케이션이 Windows. 이 서비스는 현재 미국 중남부의 데이터 센터에서 호스트됩니다. 동기화 집합의 구성을 관리하는 온라인 웹 인터페이스가 있으므로 어떤 서버에서 동기화할 데이터베이스, 데이터 센터 및 동기화할 빈도를 구성할 수 있습니다. 현재 SQL Azure 데이터 동기화 서비스는 CTP에 있으며 <a href="https://www.sqlazurelabs.com/">SQL Azure Labs</a>에서 사용할 수 있습니다.</p>  <h2>시작하기</h2>  <p>모든 동기화 시나리오에는 단일 허브 데이터베이스와 많은 멤버 데이터베이스가 있습니다. 동기화 그룹을 설정할 때 허브 데이터베이스를 선언하고 빈 멤버 데이터베이스를 원하는 만큼 할당합니다.</p>  <p><a href=""><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="이미지" border="0" alt="image" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2626.image_5F00_thumb_5F00_121C0999.png" width="643" height="333"></a> </p>  <p>첫 번째 동기화에서 데이터 동기화 Service for SQL Azure 허브 데이터베이스 스키마를 복사하여 멤버 데이터베이스를 프로비전합니다. 즉, 멤버 데이터베이스에 스키마를 생성할 필요가 없습니다. 이 작업은 SQL Azure 데이터 동기화 Service에서 수행합니다. 또한 데이터 변경 내용을 효율적으로 추적하기 위해 허브 데이터베이스를 변경합니다.</p>  <p>스키마가 허브 데이터베이스에서 멤버 데이터베이스로 복사되면 외래 키 제약 조건이 복사되지 않습니다. 이렇게 하면 멤버 데이터베이스에서 테이블 데이터를 순서대로 삽입할 수 있습니다. 멤버 데이터베이스에 외래 키 제약 조건을 적용하지 않음으로써 SQL Azure 데이터 동기화 Service는 첫 번째 동기화에서 허브 데이터베이스를 읽기 전용으로 변환할 필요가 없으며 순환 외래 키 참조가 있는 데이터 스키마와 함께 작동합니다(순환 참조에 대한 자세한 내용은 이 블로그 게시물 참조).</p>  <p>멤버 데이터베이스가 프로비전된 후 첫 번째 동기화에서 허브 데이터베이스의 모든 데이터가 테이블별로 멤버 데이터베이스 테이블에 복사됩니다. 멤버 데이터베이스에 외래 키 제약 조건이 없으므로 삽입 순서는 중요하지 않습니다.</p>  <h2>데이터 전송 가격 책정</h2>  <p>멤버 데이터베이스는 데이터 동기화 Service(미국 중남부)와 동일한 데이터베이스 센터에 없는 서버에 있을 수 있습니다. 모든 데이터베이스가 다른 데이터 센터에 있는 경우 데이터베이스를 동기화할 때(데이터 전송) 미국 중남부에 있지 않은 데이터베이스의 양방향에 대한 대역폭에 대한 요금이 청구됩니다.</p>  <p>미국 중남부에서만 데이터 동기화 서비스를 실행할 수 있다는 제한은 CTP의 제한 사항입니다. 다른 Windows Azure Platform 서비스와 마찬가지로 모든 데이터베이스가 동일한 데이터 센터에 있고 데이터 동기화 서비스가 실행 중인 경우 데이터 교환에 대한 요금이 부과되지 않습니다. </p>  <p>변경된 데이터만 동기화할 때 전송되며 전체 데이터베이스는 전송되지 않습니다. 그러나 해당 데이터를 모든 멤버 데이터베이스 및 허브와 동기화해야 하므로 멤버 수는 데이터 전송 비용의 승수입니다.</p>  <p>가격 책정에 대한 자세한 내용은 여기를 클릭하십시오.</p>  <h2>부분 동기화</h2>  <p>SQL Azure 데이터 동기화 서비스를 사용하면 동기화하려는 테이블을 선택할 수 있습니다. 전체 데이터베이스를 동기화할 필요는 없습니다. 이렇게 하면 멤버 데이터베이스가 허브의 하위 집합인 동기화 그룹을 만들 수 있습니다. 이렇게 하면 허브 데이터베이스에 대한 사용 권한과 다른 멤버 데이터베이스에 권한을 부여하여 사용자가 데이터의 하위 집합에 액세스할 수 있는 흥미로운 시나리오가 만들어집니다. PowerPivot 사용하여 이후 블로그 게시물에서 이 작업을 수행하는 방법을 설명합니다.</p>  <h2>스키마 변경</h2>  <p>데이터 동기화 Service for SQL Azure 멤버 데이터베이스에 스키마를 만들면 허브 데이터베이스의 스키마 복사본입니다. 동기화 그룹이 설정된 후에는 허브 데이터베이스 스키마를 변경할 수 없습니다. 허브 데이터베이스의 스키마를 변경하려면 동기화 그룹을 제거하고 멤버 데이터베이스를 다시 할당할 새 동기화 그룹을 다시 만들어야 합니다. 스키마를 다시 생성하고 데이터를 다시 이동합니다.</p>  <h2>주문형 또는 예약된 동기화</h2>  <p>동기화는 실시간 동기화가 없는 병합 복제와 달리 요청 시 또는 설정된 일정에 따라 수행할 수 있습니다. 일정 복제에 대한 가장 작은 증가는 현재 CTP에서 한 시간이며 릴리스 버전에서 동기화가 더 자주 수행됩니다. 요청 시 동기화를 수행할 수도 있습니다.</p>  <h2>Bi-Direction 동기화</h2>  <p>데이터 동기화 서비스의 동기화는 양방향으로 수행되며 멤버 데이터베이스에 쓸 수 있으며 동기화가 발생하면 허브 및 모든 멤버 데이터베이스가 업데이트됩니다. 또는 허브 데이터베이스에 쓰고 멤버 데이터베이스를 동기화할 수 있습니다. 즉, 모든 데이터베이스는 읽기 쓰기입니다.</p>  <p>데이터 동기화 Service for SQL Azure <a href="https://msdn.microsoft.com/en-us/sync/bb887608.aspx">Microsoft Sync Framework</a>와 비교하여 충돌 해결 처리를 프로그래밍할 수 없습니다. 따라서 <b>int</b> IDENTITY 데이터 형식 대신 uniqueidentifier 데이터 형식을 테이블의 기본 키로 사용하는 여러 멤버 데이터베이스에 행을 삽입하는 것이 가장 좋습니다. 이렇게 하면 양방향 동기화 중에 ID 충돌이 방지됩니다. 레거시 데이터베이스로 작업하거나 uniqueidentifier 데이터 형식을 사용하지 않으려는 경우 모든 데이터베이스에서 고유한 기본 키를 확인하는 다른 몇 가지 방법이 있습니다. 나는 이것에 대해 나중에 더 많은 블로그를 할 것이다.</p>  <h2>요약</h2>  <p>질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>'
