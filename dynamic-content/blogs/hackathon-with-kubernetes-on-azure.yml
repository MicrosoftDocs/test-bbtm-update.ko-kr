### YamlMime:Yaml
ms.openlocfilehash: 15ca0398ed70b604e558ef08202528fcc2f149b3
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139911038"
Slug: hackathon-with-kubernetes-on-azure
Title: Azure에서 Kubernetes를 사용하는 Hackathon
Summary: 최근 Microsoft 전체 직원 해커톤 이벤트의 일환으로 Azure에서 Kubernetes 배포를 위한 시각화 도우미를 만들었습니다.
Content: >-
  Microsoft는 최근 첫 <a href="https://blogs.microsoft.com/blog/2014/07/28/microsoft-kicks-oneweek-wont-believe-hacks/">번째 회사 차원의 해커톤</a>을 개최하여 Azure에서 Kubernetes 배포를 위한 새로운 시각화 도우미 도구를 만들었습니다. Kubernetes를 사용하여 Microsoft Azure Docker 컨테이너를 관리할 수 있다는 오늘 발표와 함께, 오늘 <a href="https://github.com/Azure/azure-kubernetes-visualizer">Azure Kubernetes 시각화 도우미 GitHub 리포지토리</a>에서 찾을 수 있는 시각화 도우미 도구에 대한 코드도 릴리스했습니다.

  <h3>해커톤 Project</h3>

  이 프로젝트는 Azure에서 Docker를 관리할 때 Kubernetes가 수행하는 작업에 대한 시각화 시스템을 빌드하는 것이었습니다. <a href="https://googlecloudplatform.blogspot.com/2014/06/an-update-on-container-support-on-google-cloud-platform.html">Kubernetes</a> 는 <a href="https://www.docker.com/">Docker</a>라는 컨테이너화 기술에 대한 선언적 클러스터 관리 시스템입니다. <a href="https://www.docker.com/whatisdocker/">여기에</a> 설명된 대로 Docker는 "이식 가능한 경량 런타임 및 ... 앱을 빠르게 어셈블할 수 있습니다..." 목표는 컨테이너, Pod, 레이블, 미니언 및 복제 컨트롤러와 같은 일부 Docker 및 Kubernetes 개념을 시각적으로 보여 주는 것이었습니다. 아래 스크린샷에서 결과를 볼 수 있습니다.


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/08/AzureKubeVisualizer.png"><img style="float: none;padding-top: 0px;padding-left: 0px;margin-left: auto;padding-right: 0px;margin-right: auto;border-width: 0px" title="AzureKubeVisualizer" alt="AzureKubeVisualizer" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/AzureKubeVisualizer_thumb.png" width="610" height="250" border="0" /></a>


  Kubernetes 클러스터는 마스터 및 수의 하수인으로 구성됩니다. 마스터는 전체 클러스터를 관리하고, 하수인에 의해 수행될 요청을 발급하고, Kubernetes에 대한 API 계층을 제공합니다. 미니언은 실제로 Docker를 실행하므로 최종 사용자 워크로드입니다. Pod는 컨테이너 내의 미니언에서 실행되며 마스터가 하수인 간에 균형을 이루게 됩니다. Kubernetes 시각화 도우미를 사용하면 이름을 할당하고 만들려는 Pod의 복사본 수를 지정하여 Pod를 만들 수 있습니다.


  "만들기!" 클릭 시 단추 사용자는 JSON "Pod 템플릿"을 업데이트할 수 있습니다. 이 템플릿은 Pod와 연결되어야 하는 컨테이너, 각 컨테이너에서 실행되어야 하는 이미지 및 외부 세계에서 이러한 서비스를 사용할 수 있도록 모든 포트 매핑을 정의합니다.


  이 시각화 도우미 도구의 목표는 Kubernetes를 이해하는 데 도움이 되므로 백 엔드에서 자동으로 만들어진 Pod 템플릿을 편집할 수 있었습니다. 이렇게 하려면 "Pod 원본" 및 RC 원본 단추를 클릭합니다. 보듯이 Pod 원본은 포트 번호가 자동으로 할당된 Nginx 인스턴스를 표시합니다.


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/08/AzureKubeVisualizer-1.png"><img style="float: none;padding-top: 0px;padding-left: 0px;margin-left: auto;padding-right: 0px;margin-right: auto;border-width: 0px" title="AzureKubeVisualizer-1" alt="AzureKubeVisualizer-1" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/AzureKubeVisualizer-1_thumb.png" width="610" height="312" border="0" /></a>


  이 Pod 템플릿을 편집하는 경우 시각화 도우미의 첫 번째 스크린샷과 같은 다른 구성을 만들 수 있습니다. 여기서 Nginx 및 Redis를 모두 실행하는 파란색 및 분홍색 Pod를 볼 수 있습니다. 아래와 같이 동일한 Pod 템플릿을 포함하지만 Pod에서 원하는 복사본 수를 지정하는 해당하는 복제 컨트롤러의 원본을 볼 수도 있습니다.


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/08/AzureKubeVisualizer-2.png"><img style="float: none;padding-top: 0px;padding-left: 0px;margin-left: auto;padding-right: 0px;margin-right: auto;border-width: 0px" title="AzureKubeVisualizer-2" alt="AzureKubeVisualizer-2" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/AzureKubeVisualizer-2_thumb.png" width="610" height="211" border="0" /></a>


  시각화 도우미가 수행하는 마지막 작업은 레이블의 Kubernetes 개념을 표시하는 데 도움이 되는 것입니다. Pod에 임의의 키-값 쌍을 할당하여 Kubernetes 내에서 실행 중인 모든 항목을 구성할 수 있습니다. 이는 시각화 도우미가 해당 Pod에 연결된 레이블에 저장된 이름(사용자가 지정한 이름)을 확인하여 Pod에 색을 지정하는 방법입니다. 각 고유 이름은 다른 색을 가져옵니다.

  <h4>Kubernetes 및 Docker의 학습</h4>

  Kubernetes 및 Docker로 플레이한 후 빠르게 명백해진 한 가지는 Docker가 Pod 생성을 캐시하여 반복 컨테이너의 속도를 향상한다는 점입니다. 우리가 하수인에 Pod를 처음 만들 때, 그것은 올 때까지 몇 분까지 걸립니다. 이는 주로 Docker가 Ubuntu 및 Nginx 이미지를 다운로드하기를 기다리고 있기 때문입니다. 그러나 다음에 해당 미니언에 Pod를 만들면 이미지가 이미 캐시되어 있으므로 훨씬 더 빠릅니다. Kubernetes에서 실행되는 애플리케이션의 아키텍처가 자주 핵심 구성 요소이므로 이는 유망합니다. 예를 들어 이 샘플에서는 소스 코드만 변경하여 항상 Ubuntu 및 Nginx를 기반으로 합니다. 즉, Kubernetes는 일반적으로 Docker의 캐싱에 따라 애플리케이션을 가져오고 다시 만드는 데 매우 빠릅니다.


  마지막으로 클러스터를 스트레스 테스트하고 Kubernetes가 많은 수의 Pod를 회전하는 데 어떻게 반응할지 확인하기로 결정했습니다. 주위에 몇 가지 재생 후 우리는 아주 잘 한 번에 30-50 포드의 우리의 첫 번째 시도를 처리 발견, 최대 확장 할 수 있습니다 200 포드. 아래 스크린샷에서는 200개의 Nginx 복사본을 만드는 방법의 약 3분의 1에 대한 데모가 작동하는 것을 볼 수 있습니다. 파란색 스피너가있는 블랙 박스는 시작하는 과정에있는 포드입니다. 첫 번째 행에는 Pod 만들기 요청이 진행되었지만 아직 하수인에 할당되지 않은 Pod가 표시됩니다. 그러면 열에 이미 하수인에 할당된 Pod가 표시됩니다. 마지막으로, 색이 지정된 Pod는 켜기를 완료하고 준비된 포드입니다.


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/08/AzureKubeVisualizer-3.png"><img style="float: none;padding-top: 0px;padding-left: 0px;margin-left: auto;padding-right: 0px;margin-right: auto;border-width: 0px" title="AzureKubeVisualizer-3" alt="AzureKubeVisualizer-3" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/AzureKubeVisualizer-3_thumb.png" width="610" height="401" border="0" /></a>

  <h4>추가 정보</h4>

  자세한 내용을 알아보려면 <a href="https://channel9.msdn.com/Shows/Cloud+Cover/Cloud-Cover-Tip-of-the-Week-Kubernetes-Visualizer">Channel 9의 최신 Cloud Cover 쇼에서</a> 이 도구의 비디오 데모를 놓치지 말고 <a href="https://github.com/Azure/azure-kubernetes-visualizer">GitHub 코드를 확인하고</a> Azure에서 사용자 고유의 클러스터를 사용하여 시각화 도우미를 실행하세요. 이 도구가 Kubernetes, Docker 또는 Azure에 대한 첫 번째 타이머에게 유용할 수 있기를 바랍니다.


  읽어 주셔서 감사합니다.


  마이클 블루인과 마단 아루무짐 라마크리슈난 (해커톤 팀을 대신하여)
