### YamlMime:Yaml
ms.openlocfilehash: ed6ddbbcff72e22517cfe507595a2cf6c55664ed
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139901538"
Slug: the-importance-of-azure-stack-for-devops
Title: DevOps Azure Stack의 중요성
Summary: DevOps 문화, 사람, 프로세스 및 기술을 조정하는 데 중점을 둡니다. 때로는 기술 부분이 DevOps 중요한 역할을하지 않는다고 생각됩니다. 이것은 잘못된 것입니다! 도구와 기술은 DevOps 방법론 및 프로세스를 용이하게 합니다.
Content: >-
  <p><em>이 블로그 게시물은 <a href="https://mvp.microsoft.com/en-us/PublicProfile/4039736?fullName=Steve%20Buchanan" target="_blank">Cloud &amp; Datacenter MVP인 Steve Buchanan</a>이 공동 저술했습니다.</em></p>


  <p>DevOps 문화, 사람, 프로세스 및 기술을 조정하는 데 중점을 둡니다. 때로는 기술 부분이 DevOps 중요한 역할을하지 않는다고 생각됩니다. 이것은 잘못된 것입니다! 도구와 기술은 DevOps 방법론 및 프로세스를 용이하게 합니다. DevOps 배포하려고 할 때 잘못된 도구와 기술을 사용하면 문제가 될 수 있으며 심지어 방해가 될 수도 있습니다. 클라우드 플랫폼은 DevOps 지원하며 종종 DevOps 롤아웃을 위한 촉매제가 됩니다. 최근 Gartner 보고서에 따르면 <a href="https://azure.microsoft.com/en-us/resources/gartner-research-note-azure-stack/en-us/" target="_blank">조직의 75%가 하이브리드 클라우드 전략을 추구할 계획이라고 합니다</a>. 하이브리드 클라우드 전략을 구현하는 조직은 온-프레미스 및 퍼블릭 클라우드 모두에서 일관된 DevOps 모델이 필요합니다. Microsoft Azure Stack은 Azure 클라우드 서비스 및 기능을 온-프레미스 환경으로 확장하므로 DevOps 매우 유용합니다. 이제&#39;Azure Stack의 DevOps 어떻게 표시되는지 알아보겠습니다.</p>


  <p>Azure Stack 및 Azure는 하이브리드 CI/CD(연속 통합/지속적인 개발) 파이프라인을 견딜 수 있는 기능을 제공합니다. 하이브리드 CI/CD를 사용하면 워크로드가 온-프레미스 또는 퍼블릭 클라우드에 배치될 수 있으며 이동할 수 있습니다. &rsquo;Azure Stack용으로 작성된 코드는 서로 교환할 수 있으므로 퍼블릭 및 온-프레미스 클라우드에서 앱과 서비스를 일관된 방식으로 개발할 수 있습니다.</p>


  <p>Azure Stack은 IaaS, PaaS, SQL 서비스, 컨테이너 기술, 마이크로 서비스 기술 및 IoT 기능을 제공합니다. Azure Stack에도 존재하는 Azure PaaS에 있는 서비스에는 App Service, Azure Functions, Service Fabric 및 AKS(Azure Kubernetes Service)가 포함됩니다. 이러한 서비스는 일반적으로 CI/CD를 사용하여 DevOps 팀에서 개발 및 유지 관리하는 최신 애플리케이션을 개발하고 실행할 때 사용됩니다. Azure Stack은 Git, GitHub, Visual Studio, Bitbucket, OneDrive 및 Dropbox 포함하여 Azure에서 수행하는 것과 동일한 비 Microsoft 및 Microsoft 기반 DevOps 도구를 지원합니다. GitLab, Octopus Deploy, Jenkins 등과 같은 Azure Stack에서 다른 DevOps 도구를 사용할 수도 있습니다. 다음은 하이브리드 클라우드 CI/CD 파이프라인의 예입니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/85458ce6-1e31-47d0-91e4-733a460028c0.png"><img alt="image" border="0" height="390" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fcebf662-6e80-4a9f-9d2f-585c3ea5e923.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="912"></a></p>


  <p>또한 Azure Stack은 IaC(Infrastructure as Code) 및 CaC(구성)에 적합한 하이브리드 플랫폼으로도 사용됩니다. IaC는 종종 ARM(Azure Resource Manager)을 사용하여 IaaS 및 PaaS에 인프라를 배포하는 것을 용이하게 합니다. IaaS와 관련하여 ARM을 사용하여 VM(가상 머신), 네트워킹 및 스토리지와 같은 애플리케이션에 필요한 인프라를 배포할 수 있습니다. 최근에 Azure Stack을 지원하도록 발표된 Terraform과 같은 비 Microsoft IaC 도구를 사용할 수도 있습니다. CaC 도구를 활용하여 해당 서버에서 실행되는 서버 및 애플리케이션을 추가로 구성할 수 있습니다. CaC의 경우 microsoft 및 Microsoft 이외의 도구(예: Desired State Configuration(Microsoft 기반) 또는 Chef, Puppet 및 Ansible(비 Microsoft)을 사용할 수 있습니다.</p>


  <p>환경을 관리한 경험에서 IaC 온-프레미스는 일반적으로 어려운 일이었습니다. 처음에는 서버 관리를 위해 설계되지 않은 스크립팅에 의존해야 하므로 하이퍼바이저가 도입되어도 문제가 되었습니다. PowerShell을 사용하면 서버 수준에서 이 작업을 더 쉽게 수행할 수 있지만 네트워크 및 스토리지를 자동화하려면 다른 방법이 필요했습니다. 마찬가지로, Chef, Puppet 및 PowerShell DSC와 같은 도구가 도입되면서 CaC가 좀 더 쉬워졌습니다.</p>


  <p>AZURE Stack 온-프레미스와 같은 진정한 클라우드는 ARM 온-프레미스에서 보완되므로 매우 흥미롭습니다. ARM 온-프레미스를 활용하여 세 가지 수준의 서버, 스토리지 및 네트워킹을 모두 자동화할 수 있습니다. CAC 도구와 ARM의 결합된 기능을 사용하면 그림이 완성됩니다. 퍼블릭 클라우드에서와 마찬가지로 실제 엔드 투 엔드 클라우드 온-프레미스를 사용할 수 있게 되면 개발자와 IT 전문가가 모두 기다려온 IT 열반에 더 가까이 다가갈 수 있습니다.</p>


  <p>Azure Stack을 사용하는 하이브리드 CI/CD 외에도 전체 하이브리드 주기를 위해 Azure 및 Azure Stack에서 다른 서비스를 공유할 수 있습니다. 이러한 서비스에는 ID에 대한 Azure Active Directory, 연결용 VPN/ExpressRoute 및 DR용 Azure Site Recovery가 포함됩니다.</p>


  <p>하이브리드 CI/CD의 일반적인 사용은 Azure 또는 Azure Stack을 테스트 환경으로 사용하고 다른 하나는 프로덕션 환경으로 사용하는 것입니다. 예를 들어 테스트를 위해 웹 애플리케이션을 개발하고 Azure App Service에 배포하고, 준비가 되면 프로덕션을 위해 Azure Stack에서 실행되는 App Service로 이동할 수 있습니다. Kubernetes에서 실행되는 컨테이너화된 애플리케이션이 있는 경우 비슷한 작업을 수행할 수 있습니다. 테스트할 준비가 되면 컨테이너를 Azure Stack으로 푸시한 다음 프로덕션을 위해 Azure로 푸시하여 로컬로 개발할 수 있습니다. 모든 Kubernetes에서 변경 없이 전체 시간을 실행합니다.</p>


  <p>개발을 위해 IaaS 웹 서버 가상 머신, Blob Storage, SQL 데이터베이스, 가상 네트워크, 서브넷 및 부하 분산 장치 집합을 Azure에 배포하는 동시에 프로덕션을 위해 Azure Stack에 배포할 수 있습니다. 그런 다음 웹앱 코드를 IIS에 배포하고 Azure 및 Azure Stack의 Azure SQL SQL DAC 패키지를 배포할 수 있습니다.</p>


  <p>현재 역할에서 디지털 변환을 찾고 있지만 모든 워크로드를 퍼블릭 클라우드에 배치할 수 없는 조직을 도울 수 있는 기회를 얻게 되어 다행입니다. 이제 데이터 센터에 직접 DevOps 육성할 클라우드 플랫폼을 가져올 수 있기 때문에 더 이상 방해가 되지 않습니다.</p>


  <p>현재 조직에서 온-프레미스(Azure Stack) 및 퍼블릭 클라우드(Azure) 환경에 걸쳐 있는 하이브리드 앱을 설계하도록 돕는 초기 단계에 있습니다. 이렇게 하면 조직에서 애플리케이션의 규제가 높은 부분을 온-프레미스로 유지하면서 퍼블릭 클라우드에 대부분의 애플리케이션을 배포할 수 있습니다. 여기서&rsquo;의 아름다움은 둘 다에서 동일한 정확한 플랫폼을 사용하고 개발자는 코드를 한 번만 작성해야 한다는 것입니다.</p>


  <p>&rsquo;Azure Stack은 온-프레미스 및 퍼블릭 클라우드 환경을 함께 연결하므로 DevOps 데 유용합니다. 이를 통해 조직은 원하는 위치에 최신 애플리케이션을 배치할 수 있는 궁극적인 민첩성과 필요에 따라 최신 애플리케이션을 이동할 수 있습니다.</p>


  <h2>오늘 시작</h2>


  <p>다음 유용한 링크를 사용하여 Azure Stack에서 DevOps 사용해 보세요.</p>


  <ul>
   <li><a href="https://azure.microsoft.com/en-us/solutions/architecture/?query=Azure+Stack" target="_blank">하이브리드 CI/CD 패턴: Azure Stack용 Azure 솔루션 아키텍처</a>.</li>
   <li><a href="https://docs.microsoft.com/en-us/azure/azure-stack/user/azure-stack-solution-pipeline" target="_blank">자습서: Azure 및 Azure Stack에 앱을 배포</a>합니다.</li>
   <li>Visual Studio 및 Azure Stack을 사용하여 CI/CD 파이프라인을 설정합니다.</li>
  </ul>
