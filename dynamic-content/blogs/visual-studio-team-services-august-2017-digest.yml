### YamlMime:Yaml
ms.openlocfilehash: 34f5d0f4669c574d2f108dbb1da6b38712eb4d4b
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899560"
Slug: visual-studio-team-services-august-2017-digest
Title: 'Visual Studio Team Services 양조하는 내용: 2017년 8월 다이제스트'
Summary: 이 게시물 시리즈는 Visual Studio Team Services 대한 최신 업데이트 및 뉴스를 제공하며 Azure 사용자가 3주마다 릴리스되는 새로운 기능을 최신 상태로 유지할 수 있는 좋은 방법입니다. Visual Studio Team Services 효율적인 연속 통합을 만들고 Azure에 파이프라인을 릴리스하는 최상의 DevOps 도구를 제공합니다.
Content: >-
  <p>이 게시물 시리즈는 <a href="https://visualstudio.com/team-services/?utm_source=AzureCOM&amp;utm_medium=Blog&amp;utm_campaign=Oct2016Digest" target="_blank">Visual Studio Team Services</a>(VSTS)에 대한 최신 업데이트 및 뉴스를 제공하며 Azure 사용자가 3주마다 릴리스되는 새로운 기능을 최신 상태로 유지할 수 있는 좋은 방법입니다. Visual Studio Team Services 효율적인 연속 통합을 만들고 Azure에 파이프라인을 릴리스하는 최상의 DevOps 도구를 제공합니다.</p>


  <p>이번 달에는&rsquo; 새 릴리스 정의 편집기, 새 wiki에 대한 업데이트, 끌어오기 요청의 개선 사항 및 VSTS에 대한 사용자 고유의 확장 빌드를 빠르게 시작할 수 있는 방법을 살펴보겠습니다. &rsquo;최신 릴리스 환경 개선 사항을 살펴보겠습니다.</p>


  <h2>새 릴리스 정의 편집기</h2>


  <p>새 <strong>릴리스 정의 편집기가</strong> 미리 보기로 전환됩니다. 이는 얼마 전에 릴리스된 새 CI 편집기를 기반으로 하며&rsquo;, 전체 방향의 좋은 예입니다. &rsquo;더 깨끗한 환경뿐만 아니라 릴리스 프로세스를 시각화할 수 있다는 측면에서 구조적으로 다릅니다. 시스템에 대해 생각하는 방식으로 릴리스를 사용할 수 있습니다. 릴리스가 진행됨에 따라 시각화할 수 있도록 런타임 보기에도 이와 동일한 접근 방식을 도입할 예정입니다. 보다 풍부하고 쉽게 시각화를 사용하여 모든 데이터의 잠금을 해제하는 것은 제품 전체에서 수행하려고 하는 작업입니다.</p>


  <h2>파이프라인의 시각화</h2>


  <p>편집기의 파이프라인은 릴리스에서 배포가 진행되는 방식에 대한 그래픽 뷰를 제공합니다. 아티팩트는 해당 릴리스에서 사용되며 환경에 배포됩니다. 환경의 레이아웃 및 연결은 각 환경에 대해 정의된 트리거 설정을 반영합니다.</p>


  <p><img alt="release pipeline visualization" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/07_14_08.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="릴리스 시각화"></p>


  <h2>상황에 맞는 구성 UI</h2>


  <p>아티팩트, 릴리스 트리거, 배포 전 및 배포 후 승인, 환경 속성 및 배포 설정은 이제 상황에 맞게 제공되며 쉽게 구성할 수 있습니다.</p>


  <p><img alt="Relesae in-context configuration" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/07_14_09.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="릴리스 구성 "></p>


  <h2>배포 템플릿 적용</h2>


  <p>새 환경을 만들 때 주요 템플릿 목록이 표시됩니다.</p>


  <p><img alt="Release templates" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/07_14_10.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="릴리스 템플릿"></p>


  <h2>향상된 작업 및 단계 편집기</h2>


  <p>이제 새 빌드 정의 편집기에서 향상된 모든 기능을 릴리스 정의 편집기에서도 사용할 수 있습니다. <strong>추가</strong> 단추를 사용하거나 끌어서 놓기를 사용하여 작업을 검색하고 추가할 수 있습니다. 끌어서 놓기를 사용하여 작업의 순서를 다시 지정하거나 복제할 수 있습니다.</p>


  <p><img alt="Release task and phase editor" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/07_14_11.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="릴리스 작업 편집기"></p>


  <h2>Jenkins CI를 사용하여 릴리스의 코드 정보</h2>


  <p><strong>릴리스</strong>에서는 Jenkins와 같은 인기 있는 CI 시스템과 더 잘 통합하려고 합니다. 현재 <strong>릴리스 요약</strong> 탭에는 CI 빌드가 VSTS에서 제공되는 경우에만 코드 커밋이 표시됩니다. 이 기능을 사용하면 Jenkins CI 아티팩트뿐만 아니라 릴리스를 실행하는 에이전트가 Jenkins 서버에 연결할 수 있는 경우에도 코드 정보를 사용할 수 있습니다.</p>


  <p><img alt="Code info in Release with Jenkins" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/07_14_03.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="릴리스의 Jenkins"></p>


  <h2>코드 허브의 릴리스 상태 배지</h2>


  <p>현재 커밋이 고객 프로덕션 환경에 배포되는지 여부를 확인하려면 먼저 커밋을 사용하는 빌드를 식별한 다음 이 빌드가 배포되는 모든 릴리스 환경을 확인합니다. 이제 코드가 배포되는 환경 목록을 보여 주는 <strong>코드</strong> 허브 상태 배지에 배포 상태를 통합할 수 있으므로 이러한 확인이 훨씬 쉬워졌습니다. 모든 배포에서 배포에 속하는 최신 커밋에 상태가 게시됩니다. 커밋이 여러 릴리스 정의(여러 환경 포함)에 배포되면 배지에 각각에 대한 항목이 표시되며 각 환경에 대한 상태가 표시됩니다. 이를 통해 배포에 대한 코드 커밋을 쉽게 추적할 수 있습니다.</p>


  <p><img alt="release status badge" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_04_16.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="릴리스 상태 배지"></p>


  <h2>Ansible 확장</h2>


  <p><a href="https://docs.ansible.com/ansible/latest/index.html" target="_blank">Ansible</a>과 통합하고 명령줄 인터페이스를 통해 지정된 <strong>인벤토리</strong> 노드 목록에서 지정된 <strong>플레이북</strong>을 실행하는 빌드 및 릴리스 작업이 포함된 새 <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscs-rm.vss-services-ansible" target="_blank">확장을</a> 릴리스했습니다. Ansible은 구성, 배포 및 오케스트레이션 단계를 YAML 형식으로 표현하는 <strong><a href="https://docs.ansible.com/ansible/latest/playbooks.html" target="_blank">플레이북</a></strong> 을 사용합니다. 각 <strong>플레이북</strong> 은 호스트 그룹을 역할 집합에 매핑합니다. 각 역할은 Ansible 작업에 대한 호출로 표시됩니다. <strong><a href="https://docs.ansible.com/ansible/latest/intro_inventory.html" target="_blank">인벤토리</a></strong> 파일은 Ansible에서 액세스할 수 있는 호스트 노드에 대한 설명입니다.</p>


  <p>이 작업을 수행하려면 <strong>플레이북</strong> 및 <strong>인벤토리</strong> 파일이 개인 Linux 에이전트 또는 Ansible 자동화 엔진이 설치된 원격 컴퓨터에 있어야 합니다. Ansible이 원격 컴퓨터에 있는 경우 SSH 엔드포인트를 설정해야 합니다. <strong>인</strong> 라인, <strong>동적 인벤토리</strong> 또는 <strong>호스트</strong> 목록으로 인벤토리를 지정할 수도 있습니다.</p>


  <p><img alt="configure Ansible extension" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_04_18.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="Ansible 구성"></p>


  <h2>Wiki 편집 환경의 향상된 기능</h2>


  <p>지난 달에 언급했듯이 VSTS의 각 프로젝트는 이제 자체 Wiki를 지원하며 모든 스프린트를 계속 개선하고 있습니다. &rsquo;몇 가지 최신 향상된 기능을 살펴보겠습니다.</p>


  <p>이제 새로운 Wiki 편집 환경은 markdown에서 HTML 태그를 지원합니다.</p>


  <p><img alt="Wiki HTML tags" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_04_29.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="wiki html"></p>


  <p>markdown 폴더의 이미지 크기를 편리하게 조정할 수도 있습니다.</p>


  <p><img alt="Wiki resize image" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_04_30.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="wiki 크기 조정"></p>


  <h2>Wiki 수정 내용 되돌리기</h2>


  <p>Wiki를 더 많이 사용하면 의도하지 않은 변경 내용을 저장할 수 있습니다&rsquo;. 이제 수정 세부 정보를 클릭하고 <strong>되돌리기</strong> 단추를 클릭하여 수정 버전을 Wiki 페이지로 되돌릴 수 있습니다.</p>


  <p><img alt="revert wiki edit confirmation" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_04_12.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="wiki 편집 되돌리기"></p>


  <p><a href="https://www.visualstudio.com/docs/collaborate/add-edit-wiki#create-your-wiki-and-first-wiki-page" target="_blank">Wiki 시작</a>에 대해 자세히 알아봅니다.</p>


  <h2>공개 미리 보기에서 Git 끌어오기 요청 상태 확장성</h2>


  <p><a href="https://www.visualstudio.com/en-us/docs/git/branch-policies" target="_blank">분기 정책을</a> 사용하면 코드 검토뿐만 아니라 자동화된 빌드 및 테스트를 통해 코드의 품질을 높일 수 있습니다. 지금까지 이러한 정책은 VSTS에서 기본적으로 제공하는 통합으로만 제한되었습니다. 새 PR 상태 API 및 해당 분기 정책을 사용하여 타사 서비스는 네이티브 VSTS 기능과 마찬가지로 PR 워크플로에 참여할 수 있습니다.</p>


  <p>서비스가 끌어오기 요청에 대한 상태 API에 게시되면 새 <strong>상태</strong> 섹션의 <strong>PR 세부 정보</strong> 보기에 바로 나타납니다. 상태 섹션은 해당 설명을 표시하고 서비스에서 제공하는 URL에 대한 링크를 만듭니다. 상태 항목은 웹 확장에서 새 작업을 추가할 수 있는 작업 메뉴도 지원합니다.</p>


  <p><img alt="pull request" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_04_07.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="끌어오기 요청"></p>


  <p>상태만으로는 정책이 들어오는 PR&rsquo; 완료를 차단하지 않습니다. PR 상태가 게시되면 정책을 구성할 수 있습니다. 분기 정책 환경에서 <strong>외부 서비스의 승인을 요구</strong>할 때 새 정책을 사용할 수 있습니다. 서비스 추가를 선택하여 <strong>+</strong> 프로세스를 시작합니다.</p>


  <p><img alt="add service status for pull request" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_04_08.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="끌어오기 요청의 상태"></p>


  <p>대화 상자에서 목록에서 상태를 게시하는&rsquo; 서비스를 선택하고 원하는 정책 옵션을 선택합니다.</p>


  <p><img alt="branch policy status dialog" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_04_09.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="분기 정책 상태"></p>


  <p>정책이 활성화되면 <strong>정책</strong> 섹션의 <strong>필수</strong> 또는 <strong>옵션</strong>에 상태가 적절히 표시되고 PR 완료가 적절히 적용됩니다.</p>


  <p>상태 API에 대해 자세히 알아보고 직접 사용해 보려면 <a href="https://go.microsoft.com/fwlink/?linkid=854107" target="_blank">설명서</a> 및 <a href="https://go.microsoft.com/fwlink/?linkid=854108" target="_blank">샘플</a>을 확인해 보세요.</p>


  <h2>끌어오기 요청을 완료할 때 작업 항목 자동 완료</h2>


  <p>작업 항목을 PR에 연결하는 경우&rsquo;(맞습니다.) 모든 항목을 최신 상태로 유지하는 것이 더 간단해졌습니다. 이제 PR을 완료하면 PR&rsquo;이 성공적으로 병합된 후 연결된 작업 항목을 자동으로 완료하는 옵션이 제공됩니다. 정책을 사용하고 PR을 자동 완성&rsquo;으로 설정하면&rsquo; 동일한 옵션이 표시됩니다. PR이 완료되면 상태를 업데이트하기 위해 작업 항목을 다시 방문해야 합니다. VSTS에서 작업을 수행합니다.</p>


  <p><img alt="Complete work items via pull request" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/07_14_16.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="작업 항목 완료"></p>


  <h2>끌어오기 요청 설명 및 주석의 작업 목록</h2>


  <p>PR 또는 주석 작성을 준비할 때 추적하려는 항목의 짧은 목록이 있는 경우가 있지만 결국 텍스트를 편집하거나 여러 개의 메모를 추가하게 됩니다. 간단한 작업 목록은 설명 또는 단일 통합 주석에서 PR 작성자 또는 검토자 자격으로 할 일 목록의 진행 상태를 추적하는 유용한 방법입니다. Markdown 도구 모음을 클릭하여 시작하거나 선택한 텍스트에 서식을 적용합니다.</p>


  <p><img alt="pull request task list" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/07_14_13.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="작업 목록"></p>


  <p>&rsquo;작업 목록을 추가한 후에는 상자를 선택하여 항목을 완료된 것으로 표시할 수 있습니다. 이러한 사항은 Markdown에서 <code>[ ]</code> 및 <code>[x]</code>로 주석 내에 표시되고 저장됩니다. 자세한 내용은 <a href="https://www.visualstudio.com/docs/reference/markdown-guidance#checklist-or-task-list" target="_blank">Markdown 지침</a>을 참조하세요.</p>


  <p><img alt="Pull request task list complete" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/07_14_14.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="작업 목록"></p>


  <h2>끌어오기 &ldquo;요청에서 주석을 좋아하는&rdquo; 기능</h2>


  <p><strong>좋아요</strong> 단추를 한 번 클릭하여 PR 주석에 대한 지원을 표시합니다. 단추 위로 마우스를 가져가 주석에 좋아요를 표시한 모든 사용자의 목록을 볼 수 있습니다.</p>


  <p><img alt="Like pull request comments" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/07_14_15.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="댓글처럼"></p>


  <h2>오래된 분기 정리</h2>


  <p>더 이상 필요하지 않은 분기를 삭제하여 리포지토리를 정리하면 팀에서 관심 있는 분기를 찾고 적절한 세분성으로 즐겨찾기를 설정할 수 있습니다. 그러나 리포지토리에 분기가 많은 경우 비활성 상태이고 삭제할 수 있는 분기를 파악하기 어려울 수 있습니다. 이제 Weve&rsquo;를 사용하면 부실&rdquo; 분기(3개월보다 오래된 커밋을 가리키는 분기)를 더 쉽게 식별&ldquo;할 수 있습니다. 부실 분기를 보려면 <strong>분기</strong> 페이지의 <strong>부실</strong> 피벗으로 이동합니다.</p>


  <p><img alt="Stale branches" border="0" height="179" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_04_04.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="부실 분기" width="240"></p>


  <h2>삭제된 분기 검색 및 다시 만들기</h2>


  <p>서버에서 실수로 분기가 삭제된 경우 어떤 상황인지 파악하기 어려울 수 있습니다. 이제 삭제된 분기를 검색하고, 삭제한 사용자 및 시간을 확인하고, 원할 경우 다시 만들 수 있습니다.</p>


  <p>삭제된 분기를 검색하려면 분기 검색 상자에 전체 분기 이름을 입력합니다. 해당 텍스트와 일치하는 기존의 모든 분기가 반환됩니다. 삭제된 분기 목록에서 정확한 일치 항목을 검색하는 옵션도 제공됩니다. 링크를 클릭하여 삭제된 분기를 검색합니다.</p>


  <p><img alt="Search deleted branches" border="0" height="223" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_04_05.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="삭제된 분기 검색" width="1024"></p>


  <p>일치 항목이 있는 경우 삭제한 사용자 및 시간을 확인합니다. 분기를 복원할 수도 있습니다.</p>


  <p><img alt="Restore deleted branch" border="0" height="102" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_04_06.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="삭제된 분기 복원" width="640"></p>


  <p>분기를 복원하면 마지막으로 가리켰던 커밋에서 분기를 다시 만듭니다. 그러나 정책 및 사용 권한은 복원되지 않습니다.</p>


  <h2>작업 항목 프로세스 복사</h2>


  <p>이제 상속된 프로세스의 복사본을 만들어 새 프로세스의 시작점으로 사용하거나 프로세스 변경을 준비하고 테스트할 수 있습니다.</p>


  <p><img alt="copy work item process" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/08_04_31.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="프로세스 복사"></p>


  <p>하나 이상의 팀 프로젝트에서 사용하는 프로세스를 변경하는 경우 이러한 각 팀 프로젝트에는 이러한 변경 내용이 즉시 표시됩니다. 종종, 그것은 당신이 원하는 것이 아닙니다. 대신 변경 내용을 프로세스에 번들로 묶고 변경 내용을 모든 팀 프로젝트에 롤아웃하기 전에 테스트하려고 합니다. 다음 단계를 수행하여 이 작업을 수행할 수 있습니다.</p>


  <ol>
   <li>변경하려는 프로세스의 복사본을 만듭니다.</li>
   <li>중복된 프로세스를 변경합니다. 이 프로세스를 사용하는 팀 프로젝트가 없으므로 이러한 변경 내용은 누구에게도 영향을 주지 않습니다.</li>
   <li>변경 내용을 테스트하려면 아직 없는 경우 이 중복된 프로세스를 기반으로 테스트 프로젝트를&#39;. 이전에 테스트 프로젝트를 이미 만든 경우 상황에 맞는 메뉴에서 프로세스 <strong>이름&gt; 옵션을 사용하도록 &lt;팀 프로젝트 변경을 사용하여 테스트 프로젝트의 프로세스를</strong> 변경할 수 있습니다.</li>
   <li>이제 변경 내용을 배포할 차례입니다. 이렇게 하려면 새 변경이 필요한 팀 프로젝트의 프로세스를 변경합니다. 상황에 맞는 메뉴에서 <strong>프로세스 이름&gt; 옵션을 사용&lt;하려면 팀 프로젝트 변경을</strong> 선택합니다.</li>
   <li>필요에 따라 원래 프로세스를 사용하지 않도록 설정하거나 삭제할 수 있습니다.</li>
  </ol>


  <h2>Kanban 보드의 마지막 열 순서가 업데이트됨</h2>


  <p>작업 항목 유형에 사용자 지정 상태를 추가한 경우 Kanban 보드의 마지막 열에 항상 가장 일찍 닫힌 카드가 표시되었을 수 있습니다. Weve&rsquo;는 가장 최근에 닫힌 카드를 보는 것이 종종 더 도움이된다는 것을 발견했습니다.</p>


  <p>이 동작의 근본 원인은 Kanban 보드의 마지막 열이 <strong>닫힌 날짜</strong> 필드에서 내림차순으로 정렬된다는 것입니다. 프로세스(스크럼, Agile, CMMI)에서 각 작업 항목 유형에는 프로세스 및 작업 항목 유형에 따라 <strong>닫힘</strong> 또는 <strong>완료</strong> 상태로 전환될 때 이 필드를 설정하는 규칙이 포함됩니다. 그러나 사용자 지정 상태를 추가하는 경우 새 상태를 지원하도록 <strong>닫힌 날짜</strong> 필드를 설정하는 규칙을 자동으로 추가하지&#39;. &rsquo;작업 항목을 <strong>새</strong> 상태에서 <strong>닫힘</strong> 또는 <strong>완료</strong> 상태로 이동하면 <strong>닫힌 날짜</strong>에 빈 값이 있습니다. 쿼리 엔진은 내림차순으로 정렬할 때 빈 값을 맨 위에 배치합니다. 그래서 Kanban 보드에, 당신은 가장 일찍 폐쇄 된 상단에 카드를 볼 수 있습니다.</p>


  <p>먼저 사용자 지정 상태를 추가하는 경우 작업 항목에 올바른 규칙 집합을 추가하는지 확인했습니다. 작업 항목을 닫을 때 더 이상 비어 있는 <strong>닫힌 날짜</strong> 가 표시되지 않습니다. 기존 닫힌 작업 항목을 백필하지 않습니다. Kanban 보드의 맨 위에 가장 최근에 닫힌 카드가 표시되도록 하기 위해 Kanban 보드의 마지막 열에 있는 순서 논리를 업데이트하여 <strong>마감 날짜</strong> 필드의 빈 값이 있는 카드를 맨 아래에 배치했습니다.</p>


  <h2>분석용 속도 위젯</h2>


  <p>이제 <a href="https://marketplace.visualstudio.com/items?itemName=ms.vss-analytics" target="_blank">Analytics</a> 확장에는 <strong>속도</strong> 위젯이 포함됩니다.</p>


  <p>이 강력한 위젯을 사용하면 스토리 포인트, 작업 항목 수 또는 사용자 지정 필드를 통해 팀&rsquo; 속도를 차트로 작성할 수 있습니다. 고급 옵션을 사용하면 팀이 계획과 비교하여 제공한 내용을 비교하고 늦게 완료된 작업을 강조 표시할 수 있습니다.</p>


  <p><img alt="Velocity Widget" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/07_14_12.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="속도 위젯"></p>


  <p>속도 위젯은 백로그 보기에 표시되는 속도 차트에서 사용할 수 없는 기능을 제공합니다. 예를 들면 다음과 같습니다.</p>


  <ul>
   <li>현재 팀뿐만 아니라 모든 팀의 속도 표시</li>
   <li>스토리 백로그뿐만 아니라 백로그 수준 또는 작업 항목 유형에 대한 속도를 표시합니다.</li>
   <li>스토리 포인트뿐만 아니라 모든 필드의 합계로 속도를 계산합니다. 또는 작업 항목 유형의 개수로 지정합니다.</li>
   <li>계획된 결과와 실제 표시를 표시합니다. 실제로 계획한 것을 제공했나요?</li>
   <li>스프린트 후 늦게 완료된 작업을 강조 표시합니다.</li>
   <li>타일이 평균 속도를 표시하도록 하려면 크기 조정을 11&times;로 지원합니다.</li>
  </ul>


  <p>아직 설치하지 않은&rsquo; 경우 <a href="https://marketplace.visualstudio.com/items?itemName=ms.vss-analytics" target="_blank">Analytics 확장을</a> 설치하여 리드 타임, 주기 시간 및 누적 Flow 다이어그램의 위젯뿐만 아니라 속도 위젯에 액세스할 수 있습니다.</p>


  <p>번다운, 번업 및 추세 같은 분석 확장에 대한 더 많은 위젯을 앞으로 몇 달 안에 게시할 예정입니다.</p>


  <h2>월의 확장: SpecFlow+LivingDoc</h2>


  <p><a href="https://marketplace.visualstudio.com/items?itemName=techtalk.techtalk-specflow-plus" target="_blank">이제 Marketplace에서 SpecFlow+LivingDoc</a>를 사용할 <a href="https://marketplace.visualstudio.com/vsts" target="_blank"></a>수 있습니다. 살아있는 설명서는 최신 상태이고 쉽게 이해할 수 있는 시스템 설명서를 설명하는 데 사용되는 용어입니다. 이 예제의 대표적인 예는 <a href="https://cucumber.io/docs/reference" target="_blank">Gherkin</a>으로 작성된 기능 파일로, 자연어를 사용하여 지정된 시나리오에서 애플리케이션이 어떻게 동작해야 하는지 설명합니다. 자연어로 사양을 설명하면 모든 관련자(비즈니스, 개발, 테스트, 요구 사항 등)가 동일한 근거로 사양을 이해하고 논의할 수 있습니다. 이러한 사양은 시스템 설명서의 중요한 부분을 구성하며 BDD 및 예제별 사양과 같은 민첩한 개발 메서드에서 일반적으로 사용됩니다.</p>


  <p>많은 .NET 개발자에게 오픈 소스 프로젝트 <a href="https://specflow.org/" target="_blank">SpecFlow</a>는 Visual Studio 사용하여 Gherkin으로 작성된 테스트 시나리오를 자동화하기 위한 도구입니다. 그러나 이러한 Gherkin 파일은 일반 텍스트 파일이며 일반적으로 코드 리포지토리에 저장되며 많은 팀 구성원이 액세스할 수 없습니다. SpecFlow Visual Studio 확장은 Visual Studio Gherkin에 대한 구문 강조 표시를 지원하지만 모든 이해 관계자가 Visual Studio, 특히 비즈니스 이해 관계자에 액세스할 수 있는 것은 아닙니다.</p>


  <p>SpecFlow+ LivingDoc는 이러한 격차를 해소하여 Gherkin으로 작성된 사양을 VSTS의 모든 팀 구성원이 액세스할 수 있도록 합니다. SpecFlow+ LivingDoc는 <a href="https://specflow.org/plus/" target="_blank">SpecFlow+</a>의 일부이며, SpecFlow에 대한 일련의 (선택 사항) 유료 확장입니다. SpecFlow+ LivingDoc는 기능 파일을 가져와서 구문 강조 표시 및 서식 지정을 사용하여 VSTS에 표시할 수 있도록 구문 분석합니다. 이렇게 하면 서식 없이 일반 텍스트보다 기능 파일을 훨씬 쉽게 탐색할 수 있습니다.</p>


  <p>서식에는 다음이 포함됩니다.</p>


  <ul>
   <li>Gherkin 키워드 구문 강조 표시</li>
   <li>테이블</li>
   <li>지정된/다음/시기 섹션의 배경색을 번갈아 가며</li>
   <li>Markdown을 통해 포함된 이미지 지원</li>
  </ul>


  <p><img alt="spec flow" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/specflowss1.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="사양 흐름"></p>


  <h2>사용자 고유의 확장 프로그램 작성을 빠르게 시작합니다.</h2>


  <p>지난 몇 년 동안 VSTS를 확장하고 통합하는 다양한 방법을 도입했습니다. 예를 들어 <a href="https://www.visualstudio.com/docs/integrate/get-started/client-libraries/dotnet" target="_blank">.NET</a>용 클라이언트 라이브러리(.NET Framework 및 .NET Core 앱 둘 다에서 작동함) 및 <a href="https://github.com/Microsoft/vsts-node-api" target="_blank">Node.js</a>. 또한 웹 환경을 확장할 수 있는 확장성 모델도 있습니다.</p>


  <p>이러한 모든 훌륭한 옵션을 사용하면 어떤 부분을 시작하고 올바른 방법으로 조립해야 하는지 알 수 있습니다. 통합 문서를 많이 개선했으며 곧 문서에 대한 개선의 또 다른 물결을 계획하고 있지만 때로는 문서보다 더 많은 것이 필요합니다.</p>


  <p>새 블로그 게시물인 <a href="https://blogs.msdn.microsoft.com/devops/2017/07/17/fastest-path-new-team-services-extension/" target="_blank">새 VSTS 확장에 대한 가장 빠른 경로</a>에서는 사용자 고유의 확장 빌드를 빠르게 시작하는 방법을 보여 줍니다.</p>


  <p><img alt="yeoman command line" border="0" height="417" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/yo-start-1024x667.png" style="border: 0px currentcolor; border-image: none; float: none; display: inline; background-image: none;" title="yeoman 명령줄" width="640"></p>


  <p>각 릴리스에는 항상 제가 여기서 다룰 수 있는 것보다 훨씬 더 많은 것이 있습니다. 자세한 내용은 <a href="https://www.visualstudio.com/en-us/articles/news/2017/jul-14-team-services" target="_blank">7월 14일</a> 및 <a href="https://www.visualstudio.com/en-us/articles/news/2017/aug-04-team-services" target="_blank">8월 4일</a> 릴리스 정보를 확인하세요. VSTS에 대한 최신 계획 및 개발을 따라가려면 <a href="https://blogs.msdn.microsoft.com/devops/" target="_blank">DevOps 블로그</a>를 구독해야 합니다.</p>


  <p>즐거운 코딩 작업이 되길 바랍니다!</p>


  <p><a href="https://twitter.com/tfsbuck" target="_blank">@tfsbuck</a></p>
