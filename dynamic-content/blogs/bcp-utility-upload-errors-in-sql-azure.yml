### YamlMime:Yaml
ms.openlocfilehash: 0e59cf639d77026d5a8c4251a9f4ddf66418cd10
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908558"
Slug: bcp-utility-upload-errors-in-sql-azure
Title: SQL Azure BCP 유틸리티 업로드 오류
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] SQL Azure bcp 유틸리티 업로드 오류의 한 가지 원인은 단일 일괄 처리로 너무 많은 데이터를 업로드하려고 하는 것입니다. 테이블의 각 행 일괄 처리는 다음과 같습니다.'
Content: '<p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>SQL Azure <a href="https://msdn.microsoft.com/en-us/library/ms162802(SQL.105).aspx">bcp 유틸리티</a> 업로드 오류의 한 가지 원인은 단일 일괄 처리로 너무 많은 데이터를 업로드하려고 하는 것입니다. 테이블의 각 행 배치는 단일 트랜잭션이며, SQL Azure BCP가 해당 제약 조건을 위반하는 경우 bcp 유틸리티 업로드가 실패할 수 있는 트랜잭션에 대한 제약 조건이 있습니다. 이 문서에서는 제약 조건 위반을 방지하는 방법을 설명합니다.</p>  <p>bcp 유틸리티는 Microsoft SQL Server 함께 제공되는 명령줄 유틸리티입니다. SQL Azure(또는 SQL Server) 및 데이터 파일 간에 사용자가 지정한 형식으로 데이터를 대량 복사합니다. SQL Server 2008 R2와 함께 제공되는 bcp 유틸리티는 SQL Azure 완전히 지원됩니다. 이 블로그 게시물에서 SQL Azure BCP를 사용하는 방법에 대해 자세히 알아볼 수 있습니다.</p>  <p>업로드할 때 발생할 수 있는 오류 유형은 다음과 같습니다.</p>  <p><i><font color="#ff0000">SQLState = 08S01, NativeError = 10054</font></i></p>  <p><i><font color="#ff0000">오류 = [Microsoft][SQL Native Client]TCP 공급자: 기존 연결이 원격 호스트에 의해 강제로 닫혔습니다.</font></i></p>  <p><i><font color="#ff0000">SQLState = 08S01, NativeError = 10054</font></i></p>  <p><i><font color="#ff0000">오류 = [Microsoft][SQL Native Client]통신 링크 오류</font></i></p>  <p>트랜잭션이 1GB의 데이터를 초과해서는 안 된다는 규칙을 포함하여 트랜잭션 제약 조건으로 인해 연결을 닫는 SQL Azure 예입니다.</p>  <p>기본 일괄 처리 크기는 BCP의 경우 1000입니다. 즉, 트랜잭션당 1000개의 행이 업로드됩니다. 이러한 행이 트랜잭션 제약 조건을 초과하면 위의 오류가 발생할 수 있습니다. 일괄 처리의 행 수를 줄이려면 –b 플래그를 사용하여 bcp 유틸리티를 구현하고 행 수를 나타낼 수 있습니다.</p>  <p><i>bcp AdventureWorksLTAZ2008R2.SalesLT.Customer in C:\Users\user\Documents\MoveDataToSQLAzure.txt <b>-b100</b> -c -U username@servername -S tcp:servername.database.windows.net -P password</i></p>  <p>행 수를 줄이면 전송이 더 수다스럽고 행/초 전송 속도가 느려집니다. 그러나 bcp 유틸리티를 사용하여 행 크기가 큰 테이블을 SQL Azure 가져오는 유일한 방법일 수 있습니다.</p>  <h2>성능 향상을 위해</h2>  <p>트랜잭션당 더 많은 행이 삽입되도록 일괄 처리 크기를 늘려 성능을 향상시킬 수 있습니다. 이는 각 행의 데이터 길이가 작은 경우에만 작동하며 위의 오류를 제공하는 행과 반대입니다. 특히 열이 4개뿐인 많은 테이블의 경우 좋은 결과를 가진 10,000개 행의 일괄 처리를 업로드했습니다.</p>  <p>질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>'
