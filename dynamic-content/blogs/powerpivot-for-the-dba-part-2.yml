### YamlMime:Yaml
ms.openlocfilehash: 36e6d2dca4f7038765f8b6ca42ae91e753e90a1d
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908762"
Slug: powerpivot-for-the-dba-part-2
Title: 'DBA에 대한 PowerPivot: 2부'
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] 이 문서에서는 Transact-SQL 비즈니스 인텔리전스의 간단한 용어와 방법론을 계속 연결하겠습니다.'
Content: '<p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>이 문서에서는 Transact-SQL 비즈니스 인텔리전스의 몇 가지 간단한 용어와 방법론을 DBA를 위해 지구로 끌어올릴 것입니다. 이것은 Transact-SQL PowerPivot 동일시하는 일련의 블로그 게시물의 연속입니다.</p>  <h2>측정값</h2>  <p>OLAP 전문가가 아니라면 PowerPivot <i>측정값</i>에 대한 빈번한 참조에 당황할 수 있습니다. 기본적으로 PowerPivot 측정값은 계산되는 셀의 범위를 이해하는 미리 정의된 계산입니다. <a href="https://msdn.microsoft.com/en-us/library/bb675163.aspx">Transact-SQL Table-Value 매개 변수</a>가 있는 함수와 비슷합니다. 개념적으로 입력을 사용하고 해당 입력을 기반으로 출력을 생성하는 미리 정의된 계산인 모든 언어의 함수와 같습니다. 측정값의 언어는 <a href="https://technet.microsoft.com/en-us/library/ee835613.aspx">DAX(데이터 분석 식)</a>입니다.</p>  <p>측정값이 정의된 대화 상자에는 여러 진입점이 있습니다.</p>  <ul>   <li>PowerPivot 리본 메뉴의 "새 측정값" 단추</li>    <li>"새 측정값 추가..."라는 필드 목록의 각 테이블에 대한 메뉴 항목을 마우스 오른쪽 단추로 클릭합니다.</li>    <li>"수식 편집"이라는 필드 목록의 각 측정값에 대한 메뉴 항목을 마우스 오른쪽 단추로 클릭합니다.</li>    <li>"측정값 편집..."이라는 필드 목록 바로 아래의 값에서 각 측정값에 대한 메뉴 항목을 마우스 오른쪽 단추로 클릭합니다.</li> </ul>  <p>이러한 진입점을 선택하면 측정값의 이름과 수식을 지정할 수 있는 측정값 설정 대화 상자가 표시되고 해당 대화 상자는 다음과 같습니다.</p>  <p><a href=""><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="clip_image001" border="0" alt="clip_image001" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3250.clip_5F00_image001_5F00_thumb_5F00_50AEF856.png" width="628" height="312"></a></p>  <p>그런 다음, 이 측정값은 만든 테이블(<b>테이블 이름</b> 드롭다운 위)과 연결됩니다.</p>  <p>DAX는 Excel 식과 매우 유사합니다. 그러나 범위를 처리하기 위한 추가 특성이 있습니다. 실제로 피벗 테이블에만 범위 개념이 있으므로 피벗 테이블에서만 측정값을 사용할 수 있습니다.</p>  <h2>Scope</h2>  <p>범위 이해는 측정값을 이해하는 열쇠입니다. 범위에 대해 이야기할 때는 PowerPivot 측정값으로 전송된 행의 수를 사용합니다. 예를 들어 이전 블로그 게시물에서 Adventure Works 데이터베이스를 사용하여 다음과 같은 PowerPivot 예제를 만들었습니다.</p>  <p><a href=""><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="clip_image003" border="0" alt="clip_image003" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4274.clip_5F00_image003_5F00_thumb_5F00_41F426A4.jpg" width="644" height="480"></a></p>  <p><b>OrderDate</b>와 ProductCategory.Name 모두 포함된 GROUP BY 문이 포함된 이 <b>Transact-SQL</b> 문과 동일한 데이터입니다.</p>  <pre class="csharpcode"><span class="kwrd">SELECT</span>    ProductCategory.Name, SalesOrderHeader.OrderDate, <span class="kwrd">SUM</span>(LineTotal)  <span class="kwrd">FROM</span>    Sales.SalesOrderHeader      <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Sales.SalesOrderDetail <span class="kwrd">ON</span>           SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID      <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Production.Product <span class="kwrd">ON</span>           Product.ProductID = SalesOrderDetail.ProductID      <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Production.ProductSubcategory <span class="kwrd">ON</span>           Product.ProductSubcategoryID = ProductSubcategory.ProductSubcategoryID      <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Production.ProductCategory <span class="kwrd">ON</span>           ProductSubcategory.ProductCategoryID = ProductCategory.ProductCategoryID  <span class="kwrd">GROUP</span> <span class="kwrd">BY</span> ProductCategory.Name, SalesOrderHeader.OrderDate  <span class="kwrd">ORDER</span> <span class="kwrd">BY</span> SalesOrderHeader.OrderDate</pre>      <p>측정값을 사용하는 경우 이 경우 측정값으로 전송된 범위는 GROUP BY와 일치하는 모든 행과 SELECT *가 반환할 내부 조인의 모든 열입니다. 그런 다음 피벗 테이블의 모든 셀에 대해 측정값을 평가합니다. 따라서 2001년 7월 1일 및 위의 예제에서 범주 액세서리의 경우 다음과 같은 37개의 행이 됩니다. </p>    <p><a href=""><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="clip_image005" border="0" alt="clip_image005" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8311.clip_5F00_image005_5F00_thumb_5F00_62D7737E.jpg" width="644" height="233"></a></p>    <p>이 셀을 평가하기 위해 37개 행이 모두 측정값으로 전송됩니다. 내 예제 <b>Sales</b> 측정값은 LineTotal 열의 합계만 계산합니다. 이 열은 첫 번째 예제에서 PowerPivot 열을 합산하는 것과 동일한 결과입니다.</p>    <p>PowerPivot 테이블 위에서 만든 <b>Sales</b> 측정값을 사용한 경우 다음과 같습니다.</p>    <p><a href=""><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="clip_image007" border="0" alt="clip_image007" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0827.clip_5F00_image007_5F00_thumb_5F00_01318E9B.jpg" width="644" height="426"></a></p>    <p>다른 언어와 마찬가지로 측정값(또는 함수)을 변경할 수 있으며 모든 셀이 자동으로 업데이트됩니다. 측정값은 PowerPivot 계산 간의 명명 추상화로 간주할 수 있습니다. 실제로 여러 피벗 테이블 또는 피벗 차트에서 Sales 측정값을 사용할 수 있습니다.</p>    <h2>범위 변경</h2>    <p>DAX 언어는 측정값 내에서 결과의 범위를 변경하는 함수를 기본 제공합니다. 결과를 필터링하거나 범위를 확장하여 더 많은 행을 포함할 수 있습니다. 이것은 실제로 측정값의 힘이며 셀 범위를 확장되거나 축소된 범위와 비교할 수 있는 기능입니다.</p>    <h2>요약</h2>    <p>이 시리즈의 다음 블로그 게시물에서 PowerPivot 범위를 취하고 확장하는 방법을 보여주고 셀 범위와 셀이 있는 제품 범주 간의 비율을 계산하는 측정값을 만듭니다. 또한 Transact-SQL 동일한 결과를 제공합니다.</p>    <p>질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>'
