### YamlMime:Yaml
ms.openlocfilehash: 978198b0828b7cd288ee937a87fac0fa0dc4b6cc
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900272"
Slug: streaming-blobs-to-and-from-sql-azure
Title: SQL Azure 간에 Blob 스트리밍
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] SQL Azure 원격으로 인해 큰 이진 개체를 처리하기 위해 코딩 도구 상자에 몇 가지 트릭을 사용하는 것이 좋습니다.'
Content: <p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>SQL Azure 원격으로 인해 큰 이진 개체, <b>varbinary(max)</b> 데이터 형식을 SQL Azure 처리하기 위한 코딩 도구 상자에 몇 가지 요령이 있는 것이 좋습니다. 이 중 하나는 BLOB(큰 이진 개체)를 한 번에 읽거나 쓸 수 있는 것입니다.</p>  <p>이 문서에서는 C# 코드로 작성된 <b>SqlStream</b> 클래스를 제공합니다. 클래스는 SQL Azure <b>varbinary(max)</b> 데이터 형식에 대한 추상 <b>Stream</b> 클래스를 구현합니다. <b>Stream</b>은 .NET CLR에 정의된 추상 클래스로, 잘 지원되고 매우 다양합니다. SQL Azure 사용할 때 제공되는 <b>SqlStream</b> 클래스를 사용하면 한 번에 단일 Blob을 조작할 수 있습니다.</p>  <p>제공된 <b>SqlStream</b> 클래스를 사용하여 다음을 수행할 수 있습니다.</p>  <ul>  <li>전체 BLOB을 메모리에 로드하지 않고도 명령줄에서 SQL Azure BLOB 데이터 파일을 복사하는 콘솔 애플리케이션을 만듭니다. </li>  <li>SQL Azure BLOB을 읽고 Windows Azure Storage 저장하는 Windows Azure 역할을 만듭니다. </li>  <li>BLOB을 SQL Azure Winform 애플리케이션으로 한 번에 한 청크씩 스트리밍합니다. 진행률 표시줄이 있는 양선 상태 대화 상자를 제공할 수 있다는 이점이 추가되었습니다. </li>  <li>CLR의 <b>BinaryWriter</b>, <b>BinaryReader</b>, <b>FileStream 및 MemoryStream</b> 클래스를 사용하여 모든 데이터를 메모리에 로드하지 않고<b>도 varbinary(max)</b> 데이터 형식을 읽고 씁니다.<b></b> </li>  </ul>  <p>블로그 게시물은 시리즈의 시작이며 앞으로 위에 나열된 애플리케이션 중 일부를 빌드할 예정입니다. 지금은 <b>SqlStream</b> 클래스를 사용하기 위한 몇 가지 샘플이 있습니다. 게시물 맨 아래에 <b>있는 SqlStream </b>클래스 자체 .cs 파일을 다운로드합니다.</p>  <h4>샘플</h4>  <p>첫 번째 샘플에서는 <b>SqlStream </b>클래스를 사용하여 SQL Azure 배포된 Adventure Works 데이터베이스에서 이미지를 읽고 파일에 저장합니다. SQL Server 데이터베이스 샘플에서 Adventure Works <a href="https://msftdbprodsamples.codeplex.com/releases/view/37304">데이터베이스를</a> 다운로드할 수 있습니다.</p>  <pre class="csharpcode"><span class="kwrd">using</span> (SqlConnection sqlConnection = <span class="kwrd">new</span> SqlConnection(      <span class="str">"Server=tcp:yourServer.database.windows.net;"</span> +       <span class="str">"Database=AdventureWorksLTAZ2008R2;"</span> +      <span class="str">"User ID=yourLogin@yourServer;Password=yourPassword;"</span> +      <span class="str">"Trusted_Connection=False;Encrypt=True;"</span>))  {      sqlConnection.Open();        <span class="kwrd">using</span> (SqlStream sqlStream = <span class="kwrd">new</span> SqlStream(          sqlConnection, <span class="str">"SalesLT"</span>, <span class="str">"Product"</span>,          <span class="str">"ThumbNailPhoto"</span>, <span class="str">"ProductID"</span>, SqlDbType.Int, 884))      {          Byte[] buffer = <span class="kwrd">new</span> Byte[1024];          Int32 read = 0;            <span class="kwrd">using</span> (BinaryReader binaryReader =                           <span class="kwrd">new</span> BinaryReader(sqlStream))          {              <span class="kwrd">using</span> (FileStream fileStream = <span class="kwrd">new</span> FileStream(                  <span class="str">"c:\\temp\\image.jpg"</span>, FileMode.Create))              {                  <span class="kwrd">using</span> (BinaryWriter binaryWriter =                          <span class="kwrd">new</span> BinaryWriter(fileStream))                  {                      <span class="kwrd">do</span>                      {                          read = binaryReader.Read(buffer, 0, 1024);                          binaryWriter.Write(buffer, 0, read);                      } <span class="kwrd">while</span> (read &gt; 0);                  }              }          }      }  }</pre>  <p>    </p>  <p>이 샘플에서는 <b>SqlStream</b> 클래스를 사용하여 파일의 데이터를 SQL Azure 배포된 Adventure Works 데이터베이스에 정의된 <b>varbinary(max)</b> 열에 씁니다.</p>  <pre class="csharpcode"><span class="kwrd">using</span> (SqlConnection sqlConnection = <span class="kwrd">new</span> SqlConnection(      <span class="str">"Server=tcp:yourServer.database.windows.net;"</span> +      <span class="str">"Database=AdventureWorksLTAZ2008R2;"</span> +      <span class="str">"User ID=yourLogin@yourServer;Password=yourPassword;"</span> +      <span class="str">"Trusted_Connection=False;Encrypt=True;"</span>))  {      sqlConnection.Open();        <span class="kwrd">using</span> (SqlStream sqlStream = <span class="kwrd">new</span> SqlStream(sqlConnection,           <span class="str">"SalesLT"</span>,          <span class="str">"Product"</span>,          <span class="str">"ThumbNailPhoto"</span>,           <span class="str">"ProductID"</span>,           SqlDbType.Int, 884))      {          Byte[] buffer = <span class="kwrd">new</span> Byte[1024];          Int32 read = 0;            <span class="kwrd">using</span> (BinaryWriter binaryWriter =                           <span class="kwrd">new</span> BinaryWriter(sqlStream))          {              <span class="kwrd">using</span> (FileStream fileStream = <span class="kwrd">new</span> FileStream(                  <span class="str">"c:\\temp\\image.jpg"</span>,                  FileMode.Open))              {                  <span class="kwrd">using</span> (BinaryReader binaryReader =                           <span class="kwrd">new</span> BinaryReader(fileStream))                  {                      <span class="kwrd">do</span>                      {                          read = binaryReader.Read(buffer, 0, 1024);                          binaryWriter.Write(buffer, 0, read);                      } <span class="kwrd">while</span> (read &gt; 0);                  }              }          }      }  }</pre>  <p>    </p>  <h4>&nbsp;</h4>  <h4>요약</h4>  <p>질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>
