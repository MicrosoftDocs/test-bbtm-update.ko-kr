### YamlMime:Yaml
ms.openlocfilehash: 373adc6262d8451dd4a0e1b3d26ee4211b240ac3
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139906027"
Slug: container-tooling-for-service-fabric
Title: 2017년 Visual Studio Service Fabric 컨테이너 도구
Summary: 'Visual Studio 2017 업데이트 7(15.7)의 일부인 최신 버전의 Service Fabric 도구에는 Service Fabric 기능을 위한 새로운 컨테이너 도구가 포함되어 있습니다. '
Content: >-
  <p>Visual Studio 2017 업데이트 7(15.7)의 일부인 최신 버전의 Service Fabric 도구에는 Service Fabric 기능을 위한 새로운 컨테이너 도구가 포함되어 있습니다. 이 새로운 기능을 사용하면 이전보다 Service Fabric 컨테이너에서 기존 애플리케이션을 디버깅하고 배포할 수 있습니다.</p>


  <h2>.NET Framework 및 .NET Core 애플리케이션을 컨테이너화하고 Service Fabric</h2>


  <p>이제 기존 콘솔 또는 ASP.NET 애플리케이션을 가져와서 컨테이너 이미지에 배포하고 로컬 개발자 워크스테이션의 컨테이너로 Service Fabric 실행 및 디버그할 수 있습니다. 몇 번의 클릭으로 기존 .NET 애플리케이션을 Service Fabric 환경의 컨테이너에서 실행할 수 있습니다. 솔루션 탐색기에서 프로젝트를 마우스 오른쪽 단추로 클릭하고<strong> 추가 --&gt; 컨테이너 오케스트레이터 지원을</strong> 선택하기만 하면 됩니다. 그러면 <strong>Service Fabric</strong> 선택하고 <strong>확인을</strong> 클릭하는 대화 상자가 표시됩니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2a6fd520-75d3-4045-8f04-fbe4c0b2dbc5.gif"><img alt="Container-Tools" border="0" height="720" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0b3bbcc5-dfd3-4524-8ec3-31135a10d2c0.gif" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Container-Tools" width="1026"></a></p>


  <p>이렇게 하면 프로젝트에 Docker 파일이 만들어지고 필요한 Service Fabric 파일이 추가되고 솔루션에 새 Service Fabric 애플리케이션 프로젝트가 만들어질 수 있습니다. 프로젝트가 기존 Service Fabric 애플리케이션을 사용하는 솔루션의 일부인 경우 해당 애플리케이션에 자동으로 추가됩니다. 이 작업은 Service Fabric 위해 컨테이너화하려는 솔루션의 각 프로젝트에 대해 수행해야 합니다.</p>


  <h2>Service Fabric 실행되는 디버그 컨테이너</h2>


  <p>몇 번의 클릭만으로 기존 .NET 프로젝트를 쉽게 컨테이너화할 수 있을 뿐만 아니라 Service Fabric 실행되는 컨테이너 인스턴스 내에서 실행되는 코드를 디버그할 수도 있습니다. F5 키를 누르면 컨테이너에서 실행되는 경우에도 각 서비스에 대한 Visual Studio 내에서 전체 디버깅 지원이 제공됩니다. 최상의 디버깅 환경을 위해 하나의 노드 클러스터와 &ldquo;애플리케이션&rdquo; 모드 새로 고침을 사용합니다.</p>


  <h2>컨테이너화된 애플리케이션을 Service Fabric 게시</h2>


  <p>애플리케이션을 Azure에 게시하는 시간이&#39;때 Visual Studio 게시 대화 상자에서 클러스터 연결 정보뿐만 아니라 이미지를 푸시하는 ACR(Azure Container Registry)을 묻는 메시지를 표시합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/96d657ed-c6a7-416e-98d1-0e5fa3e6b989.png"><img alt="image" border="0" height="456" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6a1b0493-5773-4c2b-b0fd-6fc10a1ef522.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="600"></a></p>


  <p>또한 위의 시나리오인 배포: Service Fabric 애플리케이션 배포를 지원하기 위해 <a href="https://docs.microsoft.com/en-us/vsts/build-release/tasks/deploy/service-fabric-deploy?view=vsts">Service Fabric Visual Studio Team Services</a> 작업을 업데이트했습니다.</p>


  <p>최신 도구를 얻으려면 <a href="https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-get-started#install-the-sdk-and-tools">Service Fabric SDK</a> 버전 3.1 및 최신 <a href="https://www.visualstudio.com/vs/">Visual Studio 2017</a> 릴리스를 설치합니다.</p>


  <p>도구를 설치하고 사용하는 방법에 대해 자세히 알아보려면 다음 문서를 참조하세요.</p>


  <ul>
   <li><a href="https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-how-to-debug-windows-containers">방법: Visual Studio 2017을 사용하여 Azure Service Fabric에서 Windows 컨테이너 디버깅</a></li>
   <li><a href="https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-host-app-in-a-container">자습서: Azure Service Fabric에 Windows 컨테이너로 .NET 애플리케이션 배포</a></li>
   <li><a href="https://github.com/MikkelHegn/ContainersSFLab">컨테이너 및 Service Fabric 랩을 사용하여 리프트 앤 시프트 ASP.NET</a></li>
  </ul>


  <p>우리 모두로부터 ...</p>


  <p>Service Fabric 및 Visual Studio 팀</p>
