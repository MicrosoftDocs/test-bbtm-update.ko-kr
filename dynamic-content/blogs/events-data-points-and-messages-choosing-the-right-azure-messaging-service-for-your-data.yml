### YamlMime:Yaml
ms.openlocfilehash: 0a7bdd78afceb77909140464312c8b87fbc16fb3
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139906800"
Slug: events-data-points-and-messages-choosing-the-right-azure-messaging-service-for-your-data
Title: 이벤트, 데이터 포인트 및 메시지 - 데이터에 적합한 Azure 메시징 서비스 선택
Summary: >+
  Event Grid가 도입되면서 Microsoft Azure 이제 더 많은 메시징 인프라 옵션을 제공합니다. 확장된 메시징 서비스 플릿은 Service Bus 메시지 브로커, Event Hubs 스트리밍 플랫폼 및 새 Event Grid 이벤트 배포 서비스로 구성됩니다.

Content: >-
  <p><a href="https://azure.microsoft.com/services/event-grid/">Event Grid</a>가 도입되면서 Microsoft Azure 이제 더 많은 메시징 인프라 옵션을 제공합니다. 확장된 메시징 서비스 플릿은 <a href="https://azure.microsoft.com/services/service-bus">Service Bus</a> 메시지 브로커, <a href="https://azure.microsoft.com/services/event-hubs/">Event Hubs</a> 스트리밍 플랫폼 및 새 Event Grid 이벤트 배포 서비스로 구성됩니다. 데이터그램 이동에 중점을 둔 이러한 서비스는 양방향 지점 및 지점간 네트워크 연결 브리징을 가능하게 하는 <a href="https://docs.microsoft.com/azure/service-bus-relay/">Azure Relay</a> 를 통해 보완됩니다.</p>


  <p>언뜻 보기에 Service Bus, Event Hubs 및 Event Grid가 서로 경쟁하는 것처럼 보일 수 있습니다. 이들은 모두 이벤트 또는 메시지라고 하는 데이터그램을 수락하고 소비자가 이를 획득하고 처리할 수 있도록 합니다.</p>


  <p>그러나 게시된 정보의 종류와 해당 정보가 어떻게 사용 및 처리되는지 자세히 살펴보면 세 서비스의 사용 시나리오가 다소 작고 매우 보완적이라는 것을 알 수 있습니다. 단일 애플리케이션은 각각 서로 다른 기능적 측면에 대해 세 가지 서비스를 모두 함께 사용할 수 있으며, 많은 Azure 솔루션이 이를 수행할 것으로 예상합니다.</p>


  <p>차이점&rsquo;을 이해하려면 먼저 게시자의 의도를 살펴보겠습니다.</p>


  <p>게시자가 게시된 정보 항목을 처리하는 방법과 대상 그룹을 수신해야 하는 방법에 대한 특정 기대가 있는 경우 <em>명령을</em> 실행하거나,&rsquo; 작업을 할당하거나<em>, </em>공동 작업 작업의 제어를 넘겨주며<em>, </em>그 중 하나는 <em>메시지에</em> 표현됩니다.</p>


  <h2>메시지 교환</h2>


  <p><em>메시지는</em> 종종 워크플로 또는 처리 체인의 특정 단계를 처리하는 지휘봉을 시스템 내의 다른 역할로 전달하는 정보를 전달합니다. 구매 주문 또는 현금 계좌 이체 기록과 같은 메시지는 상당한 내재된 통화 가치를 나타낼 수 있습니다. 이러한 메시지가 전송 시 손실된 경우 해당 값이 손실되거나 복구하기가 매우 어려울 수 있습니다. 이러한 메시지 전송은 특정 기한에 따라 달라질 수 있으며 특정 시간에 발생해야 할 수 있으며 특정 순서로 처리해야 할 수도 있습니다. 메시지는 특정 작업을 수행하기 위한 철저한 명령을 표현할 수도 있습니다. 또한 게시자는 메시지의 수신자가 처리 결과를 다시 보고하고 해당 보고서를 다시 보낼 수 있는 경로를 만들 것으로 예상할 수 있습니다.</p>


  <p>이러한 종류의 계약 메시지 처리는 처리 방법에 대한 구체적인 기대 없이 대상 그룹에 사실을 제공하는 게시자와는 매우 다릅니다. 이러한 사실의 분포는 가장 좋은 <em>이벤트</em>입니다.</p>


  <h2>이벤트 배포 및 스트리밍</h2>


  <p><em>이벤트는</em> 메시지이기도 하지만 일반적으로 알리는 것 외에는 게시자 의도를 전달하지 않습니다&rsquo;. 이벤트는 사실을 캡처하고 해당 사실을 전달합니다. 이벤트의 소비자는 게시자가 보유한 특정 기대치를 충족하지 않고&rsquo; 기쁘게 팩트를 처리할 수 있습니다.</p>


  <p>이벤트는 크게 두 가지 큰 범주로 나뉘며, 게시 애플리케이션에서 수행한 특정 작업에 대한 정보를 보유하거나 지속적으로 게시된 스트림의 요소로 정보 데이터 요소를 전달합니다.</p>


  <p>&rsquo;먼저 활동을 기반으로 전송된 이벤트의 예를 살펴보겠습니다. 영업 지원 애플리케이션이 새 판매 잠재 고객에 대한 데이터 레코드를 만든 후에는 이 사실을 알리는 이벤트를 내보 낼 수 있습니다. 이 이벤트에는 수신기가 자세한 내용에 관심이 있는지 여부를 결정하기에 충분한 것으로 생각되는 새 잠재 고객에 대한 몇 가지 요약 정보와 이러한 세부 정보를 가져올 수 있는 링크 또는 참조 형식이 포함됩니다.</p>


  <p>원본을 구독하여 이벤트를 가져오고 이후에 참조된 정보를 가져오는 기능은 분명히 액세스 제어 검사의 대상이 됩니다. 이러한 권한 있는 당사자는 자체 논리를 사용하여 이벤트에 반응하여 전체 시스템의 기능을 확장할 수 있습니다.</p>


  <p>예를 들어 새 판매 잠재 고객&rdquo; 이벤트의 구독자는 &ldquo;뉴스레터 배포를 처리하는 애플리케이션일 수 있으며, 잠재 고객이 자신의 관심사와 일치하고 받기로 합의한 뉴스레터에 등록할 수 있습니다. 같은 이벤트의 다른 구독자는 다음 달에 해당 지역에서 열리는 무역 박람회의 초대 목록에 잠재 고객을 배치하고 일반 메일을 통해 초대 편지를 보내기 시작할 수 있습니다. 후자의 시스템 확장은 이벤트 전에 몇 주 동안 지역 사무소를 대신하여 생성되고 실행되고 이후에 제거되는 함수&rsquo;일 수 있습니다.</p>


  <p>영업 지원 애플리케이션의 핵심은 두 구독자에게 무엇을 해야 할지 알려주지 않으며&rsquo; 이를 인식하지도 못합니다&rsquo;. 원본 애플리케이션에서 게시한 이벤트의 권한이 부여된 소비자이지만 결합은 매우 느슨하며 이러한 소비자를 제거해도 원본 애플리케이션&rsquo; 기능 무결성에 영향을 주지 않습니다&rsquo;. 핵심 애플리케이션의 상태 변경 내용에 대한 투명도를 만들면 전체 시스템 기능을 영구 또는 임시로 쉽게 확장할 수 있습니다.</p>


  <p>불연속 &ldquo;비즈니스 논리 활동에&rdquo; 대해 알리는 이벤트는 통계 평가를 주시하여 내보내고 해당 이벤트를 내보내는 값이 파생된 인사이트에 있는 이벤트와 다릅니다. 이러한 통계는 애플리케이션 및 장비 상태 및 부하 모니터링, 사용자 환경 및 사용 메트릭 및 기타 여러 용도로 사용될 수 있습니다. 통계 생성을 지원하는 이벤트는 매우 자주 내보내지고 일반적으로 특정 순간에 이루어진 데이터 요소 관찰을 캡처합니다.</p>


  <p>데이터 요소를 전달하는 이벤트의 가장 일반적인 예는 로그 데이터 이벤트가 웹 서버에서 생성되거나 다른 영역에서 현장 장비의 환경 센서에 의해 생성되는 로그 데이터 이벤트입니다. 일반적으로 애플리케이션은&rsquo; 이러한 점 관찰을 기반으로 하는 작업을 트리거하지 않고 파생된 추세에 따라 작업을 트리거합니다. 문 근처의 온도 센서가 잠시 동안 쌀쌀한 온도를 나타내는 경우 난방을 즉시 켜는 것은 과잉 반응일 수 있습니다. 그러나 온도가 1~2분 동안 낮게 유지되면 열을 한 단계 높이고 문이 닫혀 있지 않을 수 있다는 경고를 높이는 것이 좋은 반응입니다. 이러한 예제는 지점 관찰뿐만 아니라 시간에 따른 온도 추세를 계산하는 일련의 이벤트를 기반으로 합니다.</p>


  <p>특히 거의 실시간 인사이트가 필요한 경우 데이터 요소를 전달하는 이러한 이벤트 스트림을 분석하려면 원하는 기간과 원하는 수의 이벤트에 걸쳐 있는 버퍼에 데이터를 누적한 다음 일부 통계 함수 또는 기계 학습 알고리즘을 사용하여 처리해야 합니다. 이러한 버퍼의 이벤트를 가져오는 가장 좋은 패턴은 버퍼쪽으로 끌어오고, 계산을 수행하고, 시간 창을 이동하고, 다음 이벤트 일괄 처리를 끌어와 시간 창을 채우고, 다음 계산을 수행하는 것입니다.</p>


  <h2>Azure Messaging Services 플릿</h2>


  <p>애플리케이션은 작업 이벤트 및 데이터 요소 이벤트를 메시지로 내보내서 수행하는 작업 및 해당 작업이 진행되는 방식에 대한 인사이트를 제공합니다. 다른 메시지는 공동 작업 당사자 간에 명령, 작업 또는 제어 전송을 표현하는 데 사용됩니다. 이러한 메시지는 모두 메시지이지만 사용 시나리오는 매우 다르기 때문에 Microsoft Azure 차별화되고 구성 가능한 서비스 포트폴리오를 제공합니다.</p>


  <h3>Azure Event Hubs</h3>


  <p><strong><a href="https://azure.microsoft.com/services/event-hubs/">Azure Event Hubs</a></strong> 는 데이터 요소 이벤트 시나리오에 중점을 두고 설계되었습니다. 이벤트 허브는 &ldquo;이벤트 데이터를 허용하고 저장하며 해당 이벤트 데이터를 빠른 &ldquo;끌어오기&rdquo; 검색에 사용할 수 있게 하는 이벤트 수집기&rdquo;입니다. 특정 분석 작업을 담당하는 스트림 분석 프로세서는 이벤트 허브까지&rdquo; 이동하고, 시간 오프셋을 선택하고, 수집된 이벤트 시퀀스를 필요한 속도와 모든 권한으로 재생할 수 &ldquo;있습니다. 동일한 시퀀스를 여러 번 재생해야 하는 분석 작업을 수행할 수 있습니다. 대부분의 최신 시스템은 여러 게시자의 많은 데이터 스트림을 병렬로 처리하므로 Event Hubs는 이벤트 허브를 통해 멀티플렉싱되는 개별 스트림의 빠르고 병렬 처리가 가능하면서 관련 이벤트를 함께 유지할 수 있는 분할 모델을 지원합니다. 각 이벤트 허브 인스턴스는 일반적으로 동일한 종류의 게시자에서 매우 유사한 모양 및 데이터 콘텐츠의 이벤트에 사용되므로 분석 프로세서는 건너뛰지 않고 적시에 적절한 콘텐츠를 얻을 수 있습니다.</p>


  <p>예: 웹 팜을 구성하는 서버 집합은 트래픽 로그 데이터를 하나의 이벤트 허브로 푸시할 수 있으며 관련 이벤트를 함께 유지하기 위해 해당 이벤트의 파티션 배포가 해당 클라이언트 IP 주소에 고정될 수 있습니다. 트래픽 로그 이벤트를 캡처하는 이벤트 허브는 해당 이벤트의 모양과 컨텍스트가 다르기 때문에 동일한 서버 집합에서 애플리케이션 추적 이벤트를 수신하는 다른 Event Hub와 구별됩니다.</p>


  <p>앞에서 설명한 온도 센서는 각각 디바이스의 ID를 분할 키로 사용하여 이벤트 허브 분할 모델을 사용하여 함께 유지되는 고유한 스트림을 내보낸다. 동일한 분할 논리와 호환되는 소비 모델도 Azure IoT Hubs에서 사용됩니다.</p>


  <p><a href="https://docs.microsoft.com/azure/event-hubs/event-hubs-capture-overview">Event Hubs 캡처</a> 기능은 캡처된 이벤트의 일괄 처리를 Azure Storage Blob 컨테이너 또는 Azure Data Lake에 자동으로 쓰고 전체 원시 데이터 기록을 기반으로 이벤트 및 &ldquo;<a href="https://docs.microsoft.com/azure/architecture/patterns/event-sourcing">이벤트 소싱</a>&rdquo;을 적시에 일괄 처리할 수 있도록 합니다.</p>


  <h3>Azure Event Grid</h3>


  <p><strong><a href="https://azure.microsoft.com/services/event-grid/">Azure Event Grid</a></strong> 는 독립 실행형이며 스트림 컨텍스트 외부에서 중요한 개별 &ldquo;비즈니스 논리 활동&rdquo; 이벤트에 대한 배포 패브릭입니다. 이러한 이벤트는 강력한 상관 관계가 아니며 일괄 처리로 처리할 필요가 없&rsquo;으므로 해당 이벤트가 처리를 위해 디스패치되는 방법에 대한 모델은 매우 다릅니다.</p>


  <p>모델에 대한 첫 번째 가정은 애플리케이션 또는 플랫폼 서비스에서 내보내는&rsquo; 다양한 컨텍스트에 대해 매우 많은 수의 다른 이벤트가 있으며, 소비자는 하나의 특정 이벤트 유형 또는 하나의 특정 컨텍스트에만 관심이 있을 수 있습니다. 이렇게 하면 소비자가 배달할 내보낸 이벤트의 정확한 하위 집합을 선택할 수 있는 필터링된 구독자 모델에 동기를 부여합니다. &nbsp;</p>


  <p>두 번째 가정은 독립 이벤트가 일반적으로 웹 서비스 호출 또는 &ldquo;서버리스&rdquo; 함수를 사용하여 고도로 병렬화된 방식으로 처리될 수 있다는 것입니다. 이러한 처리기에 &ldquo;이벤트를 디스패치하는 가장 효율적인 모델은 이벤트를 푸시&rdquo; 아웃하고 웹 사이트, Azure Functions 또는 Azure Logic Apps 필요한 처리 용량을 관리하는 기존 자동 크기 조정 기능을 보유하는 것입니다. Azure Event Grid에서 대상이 너무 사용 중임을 나타내는 오류가 발생하면 잠시 후 다시 해제되므로 더 많은 리소스가 작동할 수 있습니다. 플랫폼의 기존 서비스 기능을 사용하여 Azure Event Grid를 구성하면 고객이&rsquo; 앞서 언급한 뉴스레터 서비스를 &ndash; 호스팅하는 사용자 지정 VM/컨테이너와 같은 유휴&rdquo; 기능 실행에 &ldquo;대한 비용을 지불할 필요가 없으며, 이러한 이벤트가 발생할 때 처리 용량이 밀리초 단위로 준비되는 동안 다음 이벤트를 기다리는 것 외에는 아무 작업도 수행하지 않습니다&rsquo;.</p>


  <h3>Azure Service Bus</h3>


  <p><strong><a href="https://azure.microsoft.com/services/service-bus">Azure Service Bus</a> </strong>&ldquo; 다른 모든 일반 메시징 작업에 대한 스위스 육군 칼&rdquo; 서비스. Azure Event Grid 및 Azure Event Hubs는 대규모로 이벤트의 수집 및 배포에 매우 집중하며 속도가 매우 빠른 반면, Azure Service Bus 네임스페이스는 중요한 비즈니스 가치의 작업을 보유하는 큐의 호스트입니다. 애플리케이션과 애플리케이션 모듈 간에 이동해야 하는 메시지에 대한 경로를 만들 수 있습니다. 워크플로 및 트랜잭션 처리를 위한 견고한 플랫폼이며 많은 애플리케이션 오류 조건을 처리할 수 있는 강력한 기능을 갖추고 있습니다.</p>


  <p>판매 시점 솔루션에 기록된 판매는 단순한 이벤트가 아니라 재무 기록과 재고 추적 기록입니다. 원장에 기록된 Its&rsquo;는 여러 통합 브리지를 통해 중앙 집중식 회계 시스템에 병합되며, 도중에 정보를 손실해서는 안 됩니다. 판매 시점 및 판매 지역 전체에서 재고 수준을 추적하기 위해 별도의 메시지로 표현될 수 있는 판매 정보는 주문 상태가 판매 시점으로 다시 흐르는 자동 재보급 주문을 시작하는 데 사용될 수 있습니다.</p>


  <p>Service Bus 특히 강점은 하이브리드 클라우드 솔루션의 요소와 지점 또는 회사 사이트 시스템을 포함하는 시스템 간의 브리지로서의 기능이기도 합니다. 방화벽 뒤에 배치&ldquo;되거나, 네트워크를 통해 로밍되거나, 경우에 따라 푸시 메시징을 통해&rdquo; &ldquo;직접 오프라인으로 연결할 수&rsquo; 없지만 지정된 수신자가 가져올 수 있는 합의된 픽업 위치로 메시지를 보내야&rdquo; 합니다.</p>


  <p>Service Bus 큐 또는 토픽 구독은 비즈니스 애플리케이션의 핵심이 클라우드 또는 온사이트 데이터 센터, 지점, 회사 사이트 또는 서비스 테넌트에 있는 이 사용 사례에 이상적입니다. 이 모델은 건강 관리, 세금 및 법률 컨설팅, 레스토랑 서비스 및 소매에서 SaaS 공급자에게 특히 인기가 있습니다.</p>


  <h2>구성</h2>


  <p>&rsquo;다양한 사용 사례 간에 선명도를 그리는 것은 종종 어렵기 때문에 세 가지 서비스를 구성할 수도 있습니다. (Event Grid는 아직 초기 미리 보기 상태이며 여기에 설명된 컴퍼지션 기능 중 일부는 향후 몇 개월 내에 제공될 예정입니다.)</p>


  <p>첫째, Service Bus 및 Event Hub는 모두 이벤트 그리드로 이벤트를 내보내 애플리케이션이 유휴 시간에 리소스를 낭비하지 않으면서 변경 내용에 신속하게 대응할 수 있도록 합니다. 일정 기간 동안 유휴 상태로 앉아 있는 후 메시지에 의해 큐 또는 구독 &ldquo;이 활성화&rdquo; 되면 Grid 이벤트가 내보내집니다. 그런 다음 Grid 이벤트는 작업 프로세서를 회전하는 함수를 트리거할 수 있습니다.</p>


  <p>이렇게 하면 고가용성 메시지가 매우 산발적으로, 하루에 소수의 메시지 속도로 흐르고, 유휴 큐에서 서비스를 유지하는 데 불필요하게 비용이 많이 드는 경우를 해결합니다. 해당 메시지를 처리하는 데 상당한 리소스가 필요하더라도 해당 리소스의 스핀업은 Event Grid 이벤트 트리거에 고정될 수 있습니다. 그러면 사용 가능한 큐 메시지가 처리되고 리소스가 다시 축소될 수 있습니다.</p>


  <p>Event Hub는 캡처 패키지가 Azure Storage 컨테이너에 삭제될 때 Grid 이벤트를 내보내며, 이 경우 패키지를 처리하거나 이동하는 함수를 트리거할 수 있습니다.</p>


  <p>둘째, Event Grid를 사용하면 구독자가 이벤트를 Service Bus 큐 또는 토픽으로, Event Hubs에 삭제할 수 있습니다.</p>


  <p>&rsquo;Azure Storage 컨테이너에 나타나는 특정 파일에 관심이 있는 하이브리드 클라우드 솔루션에 온-프레미스 서비스가 있는 경우 즉시 다운로드할 수 있도록 NAT 및 방화벽을 통해 클라우드에 연결하고 Azure Storage 해당 이벤트를 구독하는 Service Bus 큐에서 수신 대기할 수 있습니다.</p>


  <p>이벤트에 대응하는 것이 특히 시간 및/또는 리소스 측면에서 비용이 많이 들거나 실패 위험이 높은 경우&rsquo; 그리드 이벤트를 큐로 라우팅하는 동일한 모델이 적용됩니다. Event Grid는 이벤트가 긍정적으로 승인될 때까지 최대 60초 동안 기다립니다. 처리 시간이 더 오래&rsquo; 걸릴 가능성이 있는&rsquo; 경우 메시지에 대한 잠금을 유지하면서 처리 시간이 훨씬 더 오래 걸릴 수 있는 Service Bus 끌어오기 모델로 전환하는 것이 좋습니다.</p>


  <p>많은 Event Grid 이벤트도 시간이 지남에 따라 통계적으로 보고 예상하는 것이 흥미로울 수 있으므로 추가 코드를 작성하지 않고도 Event Hub를 사용하도록 설정된 다양한 분석 채널로 선택적으로 라우팅할 수 있습니다. 이벤트 허브 캡처는 이 쉽게 구성된 경로를 통해 Grid 이벤트에 대한 훌륭한 보관 시설이기도 합니다.</p>


  <h2>요약</h2>


  <p>Azure Messaging은 애플리케이션 빌더가 특정 시나리오에 대한 요구 사항에 가장 적합한 완전 관리형 서비스를 선택할 수 있는 서비스를 제공합니다. 이 서비스는 일반적인 원칙을 따르며 개발자가 서비스 중에서 선택하는 어려운 결정을 내리도록 강요하지 않는&rsquo; 구성성을 제공합니다. Event Hubs, Event Grid, Service Bus 및 Relay로 구성된 핵심 메시징 플릿은 <a href="https://azure.microsoft.com/services/logic-apps/">Logic Apps</a>, <a href="https://azure.microsoft.com/services/iot-hub">IoT Hub</a> 및 <a href="https://azure.microsoft.com/services/notification-hubs/">Notification Hubs</a>와 같은 보다 구체적인 시나리오에 대한 추가 메시징 기반 또는 메시지 기반 Azure 서비스로 보완됩니다.</p>


  <p>단일 애플리케이션이 컴퍼지션에서 여러 메시징 서비스에 의존하는 것이&rsquo; 매우 일반적이며, 각 시나리오에 가장 적합한 핵심 서비스 중 어느 것이 적합한지 몇 가지 방향을 제공할 수 있기를 바랍니다.</p>
