### YamlMime:Yaml
ms.openlocfilehash: 953ed5656941261f4f4ff6a0b2692a387e0c44cb
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908838"
Slug: new-for-developers-azure-cosmos-db-net-sdk-v3-now-available
Title: '개발자를 위한 새로운 기능: Azure Cosmos DB .NET SDK v3 사용 가능'
Summary: 'Azure Cosmos DB 팀은 7월에 릴리스된 Azure Cosmos DB .NET SDK 버전 3의 일반 공급에 대해 발표합니다. 미리 보기 중에 피드백을 주신 모든 분들께 감사드립니다. '
Content: >-
  <p style="margin: 0px 0px 10.66px;"><a href="https://azure.microsoft.com/services/cosmos-db/" target="_blank">Azure Cosmos DB</a> 팀은 7월에 릴리스된 <strong>Azure Cosmos DB .NET SDK</strong><strong>&nbsp;</strong> 버전 3의 일반 공급에 대해 발표합니다. 미리 보기 중에 피드백을 주신 모든 분들께 감사드립니다.&nbsp;</p>


  <p style="margin: 0px 0px 10.66px;">이 게시물&rsquo;에서는 .NET SDK v3의 개발자 환경을 향상시키기 위해 만든 최신 개선 사항을&rsquo; 살펴봅니다.</p>


  <p style="margin: 0px 0px 10.66px;"><a href="https://www.nuget.org/packages/Microsoft.Azure.Cosmos/" target="_blank">NuGet</a> 통해 최신 버전의 SDK를 가져와<a href="https://github.com/Azure/azure-cosmos-dotnet-v3" target="_blank">서 GitHub</a> 기여할 수 있습니다.</p>


  <pre>

  //Using .NET CLI

  dotnet add package Microsoft.Azure.Cosmos


  //Using NuGet

  Install-Package Microsoft.Azure.Cosmos</pre>


  <h2>Azure Cosmos DB란?</h2>


  <p><a href="https://docs.microsoft.com/azure/cosmos-db/introduction">Azure Cosmos DB</a>는 모든 Azure 지역에서 데이터를 읽고 쓸 수 있는 전역적으로 분산된 다중 모델 데이터베이스 서비스입니다. <a href="https://docs.microsoft.com/azure/cosmos-db/distribute-data-globally" target="_blank">턴키 글로벌 배포</a>를 제공하고, 99<sup>번째</sup> 백분위수에서 <a href="https://azure.microsoft.com/support/legal/sla/cosmos-db/v1_3/" target="_blank">한 자리 밀리초</a> 대기 시간을 보장하며, 99.999%의 <a href="https://docs.microsoft.com/azure/cosmos-db/high-availability" target="_blank">고가용성</a> 및 <a href="https://docs.microsoft.com/azure/cosmos-db/request-units" target="_blank">처리량 및 스토리지</a>의 <a href="https://docs.microsoft.com/azure/cosmos-db/scaling-throughput" target="_blank">탄력적 크기 조정을</a> 보장합니다.</p>


  <h2>Azure Cosmos DB .NET SDK 버전 3의 새로운 기능</h2>


  <p>SDK 버전 3에는 새로운 직관적인 프로그래밍 모델, 스트림 API 지원, 변경 피드 프로세서 API에 대한 기본 제공 지원, 분할되지 않은 컨테이너 크기를 조정하는 기능 등 다양한 유용성 및 성능 향상이 포함되어 있습니다. SDK는 .NET Standard 2.0을 대상으로 하며 GitHub 오픈 소스입니다.</p>


  <p>새 워크로드의 경우 최상의 환경을 위해 최신 버전 3.x SDK부터 시작하는 것이 좋습니다. .NET SDK 버전 2.x를 즉시 사용 중지할 계획은 없습니다.</p>


  <h3>대상 .NET Standard 2.0</h3>


  <p>Weve&rsquo;는 기존 Azure Cosmos DB .NET Framework 및 .NET Core SDK를 <a href="https://docs.microsoft.com/dotnet/standard/net-standard" target="_blank">.NET Standard 2.0</a>을 대상으로 하는 단일 SDK로 통합했습니다. 이제 .NET Framework 4.6.1 이상 및 .NET Core 2.0+ 애플리케이션을 포함하여 .NET Standard 2.0을 구현하는 모든 플랫폼에서 .NET SDK를 사용할 수 있습니다.</p>


  <h3>GitHub의 오픈 소스</h3>


  <p>Azure Cosmos DB .NET v3 SDK는 오픈 소스이며, 우리 팀은 오픈 소스에서 개발을 수행할 계획입니다. 이를 위해 끌어오기 요청을 환영하며 문제를 로깅하고 <a href="https://github.com/Azure/azure-cosmos-dotnet-v3/" target="_blank">GitHub</a> 대한 피드백을 추적합니다.</p>


  <h3>흐름 API 표면이 있는 새 프로그래밍 모델</h3>


  <p>미리 보기 이후 Weve&rsquo;는 보다 직관적인 개발자 환경을 위해 개체 모델을 계속 개선했습니다. Weve&rsquo;는 <b>DocumentClient</b>를 대체하고 해당 메서드를 모듈식 <a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.database?view=azure-dotnet" target="_blank"><b>데이터베이스</b></a> 및 <a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.container?view=azure-dotnet" target="_blank"><b>컨테이너</b></a> 클래스로 분할하는 새로운 최상위 <a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.cosmosclient?view=azure-dotnet" target="_blank"><b>CosmosClient</b></a> 클래스를 만들었습니다. 유용성 연구에서&rsquo; 개발자가 API 표면을 더 쉽게 학습하고 검색할 수 있도록 이 계층 구조를 살펴보셨습니다.</p>


  <p><iframe height="780" src="data:text/html;charset=utf-8,%3Cbody%3E%3Cscript%20src%3D%22https%3A%2F%2Fgist.github.com%2Fdeborahc%2F9d877d51328fa39f6bda45c992778126.js%22%3E%3C%2Fscript%3E%3C%2Fbody%3E" width="1000"></iframe></p>


  <p>또한 Weve&rsquo;는 사용자 지정 옵션을 사용하여 <strong>CosmosClient</strong>, <strong>Container</strong> 및 <strong><a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.changefeedprocessor?view=azure-dotnet" target="_blank">ChangeFeedProcessor </a></strong>클래스를 더 쉽게 만들 수 있도록 유창한 작성기 API에 추가되었습니다.</p>


  <p><iframe height="870" src="data:text/html;charset=utf-8,%3Cbody%3E%3Cscript%20src%3D%22https%3A%2F%2Fgist.github.com%2Fdeborahc%2F57b996e5f1dd82fcc1aacf00621c2459.js%22%3E%3C%2Fscript%3E%3C%2Fbody%3E" width="1000"></iframe></p>


  <p>GitHub 모든 <a href="https://github.com/Azure/azure-cosmos-dotnet-v3/tree/master/Microsoft.Azure.Cosmos.Samples/CodeSamples" target="_blank">샘플을 봅니다</a>.</p>


  <h3>고성능을 위한 스트림 API</h3>


  <p>이전 버전의 Azure Cosmos DB .NET SDK는 항상 네트워크를 통해 데이터를 직렬화하고 역직렬화했습니다. ASP.NET Web API 컨텍스트에서 이로 인해 성능 오버헤드가 발생할 수 있습니다. 이제 새 스트림 API를 사용하여 항목 또는 쿼리를 읽을 때 새 <strong><a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.container.getitemquerystreamiterator?view=azure-dotnet" target="_blank">GetItemQueryStreamIterator</a></strong> 및 <strong><a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.container.readitemstreamasync?view=azure-dotnet" target="_blank">ReadItemStreamAsync</a> </strong>메서드를 사용하여 역직렬화 오버헤드 없이 스트림을 가져와 응답에 전달할 수 있습니다. 자세한 내용은 <a href="https://aka.ms/cosmosDotnetStreamAPI" target="_blank">GitHub 샘플을</a> 참조하세요.</p>


  <h3>테스트가 더 쉽고 확장 가능</h3>


  <p>.NET SDK 버전 3에서는 모든 API를 모의하여 더 쉽게 단위 테스트할 수 있습니다.</p>


  <p>서비스에 요청을 보낼 때 실행되는 사용자 지정 처리기를 전달할 수 있도록 <a href="https://aka.ms/CosmosDotnetSDKV3Handler" target="_blank">확장 가능한 요청 파이프라인</a>도 도입했습니다. 예를 들어 이러한 처리기를 사용하여 <a href="https://github.com/Azure/azure-cosmos-dotnet-v3/blob/0603747640efde2b40c4768d6e01bc7e0d4826a0/Microsoft.Azure.Cosmos.Samples/CodeSamples/Handlers/LoggingHandler.cs" target="_blank">Azure 애플리케이션 Insights 요청 정보를 기록하고</a><a href="https://github.com/Azure/azure-cosmos-dotnet-v3/blob/0603747640efde2b40c4768d6e01bc7e0d4826a0/Microsoft.Azure.Cosmos.Samples/CodeSamples/Handlers/ThrottlingHandler.cs" target="_blank">, 사용자 지정 재시도 정책을</a> 정의할 수 있습니다. 이제 일반적으로 요청되는 또 다른 개발자 기능인 <a href="https://aka.ms/cosmosDotnetSDKV3Serializer" target="_blank">사용자 지정 직렬 변환기를</a> 전달할 수도 있습니다.</p>


  <h3>SDK에서 직접 변경 피드 프로세서 API 사용</h3>


  <p>Azure Cosmos DB의 가장 인기 있는 기능 중 하나는 이벤트 소싱 아키텍처, 스트림 처리, 데이터 이동 시나리오 및 구체화된 뷰를 빌드하는 데 일반적으로 사용되는 <a href="https://docs.microsoft.com/azure/cosmos-db/change-feed" target="_blank">변경 피드</a>입니다. 변경 피드를 사용하면 컨테이너의 변경 내용을 수신 대기하고 레코드를 만들거나 업데이트할 때 해당 레코드의 증분 피드를 가져올 수 있습니다.</p>


  <p>새 SDK에는 변경 피드 프로세서 API에 대한 <a href="https://docs.microsoft.com/azure/cosmos-db/change-feed-processor" target="_blank">기본 제공 지원이</a> 있습니다. 즉, 애플리케이션을 빌드하고 피드 프로세서 구현을 변경하는 데 동일한 SDK를 사용할 수 있습니다. 이전에는 별도의 변경 피드 프로세서 라이브러리를 사용해야 했습니다.</p>


  <p>시작하려면 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/change-feed-processor" target="_blank">Azure Cosmos DB의</a> 설명서 &quot; 변경 피드 프로세서를 참조하세요.&quot;</p>


  <h3>분할되지 않은 컨테이너 크기를 조정하는 기능</h3>


  <p>Weve&rsquo;는 분할되지 않거나 고정&rdquo;된 &ldquo;컨테이너가 있는 많은 고객으로부터 10GB 스토리지 및 10,000RU/s 프로비전된 처리량 제한을 초과하여 크기를 조정하려고 한다는 소식을 들었습니다. 이제 SDK 버전 3을 사용하면 새 컨테이너를 만들고 데이터를 이동하지 않고도 <a href="https://docs.microsoft.com/azure/cosmos-db/migrate-containers-partitioned-to-nonpartitioned" target="_blank">이 작업을 수행할 수</a> 있습니다.</p>


  <p>분할되지 않은 모든 컨테이너에는 이제 새 항목을 작성할 때 값으로 설정할 수 있는 시스템 파티션 키 &ldquo;<b>_partitionKey</b>&rdquo; 있습니다. _partitionKey 값을 사용하기 시작하면 Azure Cosmos DB는 스토리지 볼륨이 10GB를 초과하여 증가함에 따라 컨테이너 크기를 조정합니다. 컨테이너를 있는 그대로 유지하려는 경우 <strong>PartitionKey.None</strong> 값을 사용하여 파티션 키 없이 기존 데이터를 읽고 쓸 수 있습니다.</p>


  <p><iframe height="700" src="data:text/html;charset=utf-8,%3Cbody%3E%3Cscript%20src%3D%22https%3A%2F%2Fgist.github.com%2Fdeborahc%2F6a8139b7307d723a621594fba5bfc5e5.js%22%3E%3C%2Fscript%3E%3C%2Fbody%3E" width="1000"></iframe></p>


  <h3>처리량 크기 조정을 위한 보다 쉬운 API</h3>


  <p>Weve&rsquo;는 <a href="https://docs.microsoft.com/azure/cosmos-db/request-units" target="_blank">프로비전된 처리량(RU/s)</a> 을 확장 및 축소하기 위해 API를 다시 디자인했습니다. 이제 <strong><a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.container.readthroughputasync?view=azure-dotnet" target="_blank">ReadThroughputAsync</a></strong> 메서드를 사용하여 현재 처리량을 얻고 <strong><a href="https://docs.microsoft.com/dotnet/api/microsoft.azure.cosmos.container.replacethroughputasync?view=azure-dotnet" target="_blank">ReplaceThroughputAsync</a></strong> 를 사용하여 변경할 수 있습니다. 샘플 보기</p>


  <h2>시작</h2>


  <p>새 Azure Cosmos DB .NET SDK 버전 3을 시작하려면 프로젝트에 새 <a href="https://www.nuget.org/packages/Microsoft.Azure.Cosmos/" target="_blank">NuGet 패키지를</a> 추가합니다. 시작하려면 새 <a href="https://docs.microsoft.com/azure/cosmos-db/sql-api-dotnet-application" target="_blank">자습서</a> 및 <a href="https://docs.microsoft.com/azure/cosmos-db/create-sql-api-dotnet" target="_blank">빠른 시작을 따르세요</a>. Wed&rsquo; love to hear your feedback! <a href="https://aka.ms/CosmosDotnetSDKV3" target="_blank">GitHub 리포지토리</a>에서 문제를 기록할 수 있습니다.</p>


  <p>Twitter<a href="https://twitter.com/azurecosmosdb" target="_blank">@AzureCosmosDB</a>에서 팔로우하여 최신 Azure <a href="https://twitter.com/search?q=%23cosmosdb">#CosmosDB</a> 뉴스 및 기능을 최신 상태로 유지하세요. Azure Cosmos DB 및 새 .NET SDK를 사용하여 빌드할 항목을 확인할&#39;있습니다.</p>
