### YamlMime:Yaml
ms.openlocfilehash: ef0ba53bc2ff4273035ef1ae08fa3347e295fc85
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139906553"
Slug: auto-update-your-azure-site-extension
Title: Azure 사이트 확장 자동 업데이트
Summary: 이 게시물에서는 Azure 사이트 확장을 자동으로 업데이트할 수 있는 한 줄 코드 변경을 검토합니다.
Content: >-
  <a href="https://azure.microsoft.com/blog/2014/06/20/azure-web-sites-extensions/" target="_blank">Azure 사이트 확장을</a> 사용하면 모든 Azure Web App을 매우 쉽게 확장하고 사이트의 기능을 향상시킬 수 있습니다.예를 들어 <a href="https://docs.newrelic.com/docs/agents/net-agent/azure-installation/azure-web-apps" target="_blank">New Relic</a> 및 Visual Studio Online을 모든 Azure Web App에 통합하는 확장이 있습니다.직접 작성하고 <a href="https://github.com/projectkudu/kudu/wiki/Azure-Site-Extensions#site-extension-gallery" target="_blank">사이트 확장 갤러리</a>에 게시할 수도 있습니다.사이트 확장을 만들고 갤러리에 게시하는 방법을 모르는 경우 여기에서 지침을 찾을 수 있습니다.


  그러나 이러한 사이트 확장을 업데이트하는 것은 약간 번거로울 수 있습니다. 이전에는 사이트 확장의 새 버전을 게시할 때 사용자가 사이트 확장 갤러리를 찾아 최신 버전을 가져온 다음 업데이트 단추를 통해 업데이트를 수동으로 배포해야 했습니다.이제 사이트 확장이 한 줄의 코드만으로 <a href="https://github.com/projectkudu/SiteExtensionUpdater" target="_blank">자동으로 업데이트되도록</a> 하는 방법을 소개합니다.

  <h2>자동 업데이트 사용</h2>

  <h3>하나의 라이너</h3>

  사이트 확장을 자동으로 업데이트하려면 사이트 확장의 홈페이지(또는 사용자가 자주 방문하는 페이지)에 다음 스크립트 태그를 포함하기만 하면 됩니다.

  <pre class="prettyprint">&lt;script src=""&gt;&lt;/script&gt;</pre>

  이러기만 하면 됩니다.


  이제 누구나 사이트 확장으로 이동할 때마다 스크립트가 백그라운드에서 실행되고 사용 가능한 최신 버전의 확장이 있는지 확인합니다. 있는 경우 스크립트는 사용자의 사이트 확장 복사본을 업데이트하고 새 비트를 가져오기 위해 페이지를 새로 고치도록 요청합니다. 몇 초 만에 모두!

  <blockquote><strong>참고:</strong> 자동 업데이트 기능은 UI를 사용하는 사이트 확장에서 작동합니다.</blockquote>

  <h3>Bower를 통해 설치</h3>

  Bower를 사용하는 것을 선호한다면, 우리는 당신이 거기에 덮여있어. 다음을 실행하여 bower를 통해 스크립트를 설치할 수 있습니다.

  <pre class="prettyprint">bower install  azure-site-extension-updater</pre>

  <h2></h2>

  <h2>사용자 지정 applicationHost.xdt 파일 사용</h2>

  사이트 확장에 applicationHost.xdt 파일을 사용하지 않는 경우 이 섹션을 건너뛸 수 있습니다.그렇게 하면 알아야 할 사항이 있습니다.


  자동 업데이트 프로그램이 필요로 하는 한 가지는 사이트 확장의 *.nuspec 파일에 게시하는 ID가 applicationHost.xdt 파일의 사이트 확장에 대해 나열하는 경로와 일치해야 한다는 것입니다.

  <blockquote><em><strong>참고:</strong> 사이트 확장명에서 applicationHost.xdt 파일을 포함하지 않으면 Kudu에서 올바른 경로로 기본 파일을 생성합니다.</em></blockquote>

  예제 *.nuspec 파일:

  <pre class="prettyprint">&lt;?xml version="1.0"?&gt;

  &lt;package &gt;
    &lt;metadata&gt;
      &lt;id&gt;MySiteExtension&lt;/id&gt;
      &lt;version&gt;7.0.0&lt;/version&gt;
      &lt;authors&gt;ZainRizvi&lt;/authors&gt;
      &lt;owners&gt;ZainRizvi&lt;/owners&gt;
      &lt;licenseUrl&gt;https://www.github.com/zainrizvi/mysite/license&lt;/licenseUrl&gt;
      &lt;projectUrl&gt;https://www.github.com/zainrizvi/mysite&lt;/projectUrl&gt;
      &lt;iconUrl&gt;https://www.github.com/zainrizvi/mysite/image.ico&lt;/iconUrl&gt;
      &lt;requireLicenseAcceptance&gt;false&lt;/requireLicenseAcceptance&gt;
      &lt;description&gt;Package description&lt;/description&gt;
      &lt;releaseNotes&gt;Summary of changes made in this release of the package.&lt;/releaseNotes&gt;
      &lt;copyright&gt;Copyright 2015&lt;/copyright&gt;
      &lt;tags&gt;Tag1 Tag2&lt;/tags&gt;
    &lt;/metadata&gt;
    &lt;files&gt;
      &lt;file src="\**\*.*" target="content" /&gt;
    &lt;/files&gt;
  &lt;/package&gt;

  </pre>

  applicationHost.xdt 파일 예제:

  <pre class="prettyprint">&lt;?xml version="1.0"?&gt;

  &lt;configuration xmlns:xdt=""&gt;
    &lt;system.applicationHost&gt;
      &lt;sites&gt;
        &lt;site name="%XDT_SCMSITENAME%" xdt:Locator="Match(name)"&gt;
          &lt;application path="/MySiteExtension" xdt:Locator="Match(path)" xdt:Transform="Remove" /&gt;
          &lt;application path="/MySiteExtension" applicationPool="%XDT_APPPOOLNAME%" xdt:Transform="Insert"&gt;
            &lt;virtualDirectory path="/" physicalPath="%XDT_EXTENSIONPATH%" /&gt;
          &lt;/application&gt;
        &lt;/site&gt;
      &lt;/sites&gt;
    &lt;/system.applicationHost&gt;
  &lt;/configuration&gt;</pre>

  <h2>제한 사항</h2>

  자동 업데이트 스크립트에는 다음과 같은 두 가지 주의 사항이 있습니다.

  <ol>
   <li>자동 업데이트 스크립트는 브라우저에서 실행해야 하는 Javascript 파일이므로 사이트 확장이 실제로 업데이트되려면 사용자가 스크립트를 가져오는 페이지로 이동해야 합니다. 즉, UI 기반 사이트 확장만 자동 업데이트할 수 있습니다.</li>
   <li>업데이트는 <a href="https://github.com/projectkudu/kudu/wiki" target="_blank">Kudu</a> (scm) 사이트에 대한 api 호출을 수행하지만 Kudu 사이트에 액세스하려면 사용자를 인증해야 합니다. 즉, 사이트 확장에 대한 경로가 Kudu 사이트를 기반으로 하지 않는 경우(사이트 확장이 https:// sitename.scm.azurewebsites.net/&lt;&gt;...에서 라우팅되지 않은 경우) 사이트 확장에는 필요한 권한 부여가 부족하고 자동 업데이트되지 않습니다. (기본적으로 사이트 확장은 Kudu 사이트 아래에 라우팅됩니다.)</li>
  </ol>

  &nbsp;

  <h2>작동 원리</h2>

  스크립트는 페이지 URL을 구문 분석하여 사이트 확장의 이름을 파악합니다. 따라서 사이트 확장이 다음 위치에 있는 경우:

  <pre class="prettyprint"> https://&lt;sitename&gt;.scm.azurewebsites.net/MySiteExtension/</pre>

  이름은 "MySiteExtension"이어야 합니다.


  이름에 따라 스크립트는 Kudu 사이트에 대한 몇 가지 API 호출을 수행하여 사용 가능한 업데이트된 버전의 사이트 확장이 있는지 확인합니다. 업데이트를 사용할 수 있는 경우 스크립트는 다음을 전송하여 최신 버전의 사이트 확장을 설치하라는 메시지를 Kudu에 표시합니다.

  <pre class="prettyprint">PUT https://&lt;sitename&gt;.scm.azurewebsites.net/api/siteExtensions/&lt;siteExtensionName&gt;</pre>

  &nbsp;


  갤러리의 사이트 확장에서 "업데이트" 단추를 클릭할 때와 동일한 요청입니다.


  자세한 내용은 여기에서 GitHub 프로젝트 및 수정되지 않은 소스를 찾을 수 <a href="https://github.com/projectkudu/SiteExtensionUpdater">있습니다</a>.


  즐거운 코딩 작업이 되길 바랍니다!
