### YamlMime:Yaml
ms.openlocfilehash: a359b80d4f10350d0f70ed5a144e97d36fcbd802
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139911368"
Slug: azure-functions-gets-better-for-python-and-javascript-developers
Title: Python 및 JavaScript 개발자에게 Azure Functions가 향상됩니다.
Summary: 서버리스 기술을 통해 개발자는 인프라 관리가 아닌 앱에서 차별화된 비즈니스 논리에 집중할 수 있습니다.
Content: >-
  <p>서버리스 기술을 통해 개발자는 인프라 관리가 아닌 앱에서 차별화된 비즈니스 논리에 집중할 수 있습니다. <a href="https://azure.microsoft.com/blog/introducing-azure-functions-2-0/" target="_blank">Azure Functions 2.0 일반 공급 발표</a> 이후 새로운 플랫폼 간 Azure Functions 호스트 런타임을 활용하여 새 언어 및 Azure Functions에 대한 새로운 호스팅 옵션을 지원하는 더 많은 개발자를 만나는 데 계속 집중했습니다.</p>


  <p>현재 Azure Functions의 Python 지원은 공개 미리 보기에서 사용할 수 있으며, 서버리스, 실행당 종량제 호스팅 옵션에 대한 새 Linux 소비 계획에 Python 함수 앱을 게시할 수 있다는 사실을 공유하게 되어 기쁩니다. 이 Linux 소비 호스팅 옵션은 JavaScript 함수 앱에서도 사용할 수 있습니다. 서버리스 워크플로를 프로그래밍 방식으로 오케스트레이션할 수 있는 기능을 통해 JavaScript 개발자를 더욱 활성화하기 위해 이제 프로덕션 워크로드에서 사용할 준비가 된 Azure Functions 런타임에 대한 JavaScript Durable Functions 확장의 일반 공급도 발표합니다. 솔루션이 서버리스 API인 경우 API Management에 대한 새 소비 계층을 사용하여 적절한 API 디자인 및 관리 패턴에 대한 플랫폼 지원을 활용할 수 있습니다. Azure Functions 기능 집합이 증가함에 따라 커뮤니티에서 코드 재사용이 생산성에 도움이 될 수 있으므로 미리 빌드된 오픈 소스 구성 요소를 호스트하는 서버리스 Community 라이브러리를 만들었습니다. 이러한 새로운 기능에 대한 자세한 내용을 보려면 계속 읽어 보세요.</p>


  <h2>새 Linux 소비 계획의 호스트 함수(공개 미리 보기)</h2>


  <p>Azure Functions는 이제 소비 계획에서 Linux 서버리스 호스팅을 지원하지만, 이전에 Linux에 배포하는 것은 App Service 계획에서 실행되는 동안에만 지원되었습니다. 이 최신 릴리스를 사용하면 이벤트 활동에 대한 심층 인사이트와 실행당 종량제 서버리스 모델의 이점을 기반으로 동적 규모로 Linux OS를 대상으로 하는 함수를 배포할 수 있습니다. Mac 및 Linux 플랫폼에서 개발하는 고객은 플랫폼별 번역을 방지하기 위해 클라우드에서 Linux 호스팅으로 원활하게 전환할 수 있습니다. Linux에서 호스팅한다는 것은 Linux에서만 사용할 수 있는 라이브러리를 이제 함수 코드에서 활용할 수 있음을 의미합니다.</p>


  <p>또한 이 새로운 호스팅 옵션은 개발 언어에 대한 선호도가 가장 높은 플랫폼에 함수 앱을 배치하여 향후 인프라 개념을 추상화할 수 있는 길을 열어줍니다. 예를 들어 기본적으로 Linux 사용량에서 Python을 호스팅합니다. <a href="https://aka.ms/functions-consumptionlinux-preview" target="_blank">설명서</a>에서 Linux 소비 호스팅에 대해 자세히 알아보세요.</p>


  <h2>Python 함수 개발 시작(공개 미리 보기)</h2>


  <p>이제 Azure Functions를 Python으로 작성할 수 있습니다. 오늘부터 <a href="https://azure.microsoft.com/en-us/blog/introducing-azure-functions-2-0/" target="_blank">Functions 2.0 런타임</a> 및 Linux 기반 호스팅 플랫폼을 기반으로 Python 3.6(CPython)을 사용하여 함수를 빌드할 수 있습니다. 이렇게 하면 이전에 서버리스 또는 FaaS 솔루션으로 구현하기 어려웠던 데이터 처리, 기계 학습 워크로드 및 자동화 스크립팅을 비롯한 광범위한 시나리오가 열립니다.</p>


  <p>새 Python 런타임은 고유한 Functions 프로그래밍 모델을 공유하므로 표준 요구 사항 형식을 사용하여 Python 스크립트를 쉽게 가져오고 모든 종속성을 관리할 수 있습니다. 언제나처럼 다양한 트리거 및 바인딩을 사용하면 메서드 특성을 사용하여 Azure Storage, Cosmos DB, Service Bus, Event Hubs 및 Event Grid와 같은 클라우드 규모 데이터 원본 및 메시징 서비스에 원활하게 연결할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/29cfb718-ad46-4d57-a0e6-c7f6bc36802a.png"><img alt="Python code sample" border="0" height="477" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f58c656f-ebe2-4a2d-af7e-c10d9baa3bae.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Python 코드 샘플" width="719"></a></p>


  <p>Python 개발자는 Mac, Linux 또는 Windows 머신을 사용하여 로컬에서 Functions를 빌드, 디버그 및 테스트할 수 있습니다. <a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local" target="_blank">Azure Functions Core Tools</a>(CLI)를 사용하면 자동으로 구성을 처리하고 빌드하는 동시에 트리거 템플릿 사용을 시작하고 Azure에 직접 게시할 수 있습니다.</p>


  <p>더욱 흥미로운&#39;것은 긴밀하게 통합된 GUI 환경을 <a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurefunctions" target="_blank">위해 Visual Studio Code Azure</a> Functions 확장을 사용하여 코드 편집기 자체 내에서 Functions를 만들고, 디버그하고, 관리하고, 배포할 수 있다는 것입니다. 이를 VS Code 위한 <a href="https://marketplace.visualstudio.com/items?itemName=ms-python.python" target="_blank">Python 제작 확장</a>과 결합하면 모든 플랫폼에서 Python에 대한 동급 최고의 서버리스 개발 환경을 사용할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/97ff13eb-e75b-4ca1-a423-2a3f37578e20.png"><img alt="Python authoring extension for VScode" border="0" height="583" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4e98918c-ddb5-4782-976b-89be8c419e78.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="VScode용 Python 제작 확장" width="1024"></a></p>


  <p>시작하려면 <a href="https://aka.ms/functions-python-preview" target="_blank">이 자습서</a> 에 따라 첫 번째 서버리스 Python 함수를 만들고 게시합니다. 또한 Python을 사용하여 Azure Functions의 개발 환경을 안내하는 웨비나와 현재 가능한 시나리오를 살펴보고 <a href="https://aka.ms/ml-functions-python-webinar" target="_blank">있습니다. 지금 등록</a>해야 합니다.</p>


  <p>이 기능은 현재 미리 보기 상태이므로 <a href="https://github.com/Azure/azure-functions-python-worker/issues" target="_blank">GitHub 대화</a>에 따라 피드백을 공유하고 향후 개선 사항 및 기능에 대한 자세한 정보를 얻을 수 있습니다.</p>


  <h2>Durable Functions를 사용하여 JavaScript 서버리스 워크플로 오케스트레이션(일반 공급)</h2>


  <p>이제 프로덕션 워크로드에 사용할 준비가 된 JavaScript에 대한 새로운 GA 지원을 통해 Azure Functions 런타임에 대한 Durable Functions 확장을 사용하여 프로그래밍 방식으로 서버리스 워크플로를 오케스트레이션합니다. Durable Functions를 사용하면 개발자는 JSON 스키마 또는 비주얼 디자이너를 사용하는 대신 코드에서 워크플로를 정의하여 서버리스 애플리케이션에서 복잡하고 상태 저장 조정 문제를 간소화할 수 있습니다. 이 릴리스에서는 함수 체인, 팬아웃/팬인(아래 예제) 또는 인간 상호 작용과 같은 개발 패턴을 나타내는 Node.js 및 JavaScript 개발자를 위한 새로운 시나리오를 사용할 수 있습니다. <a href="https://aka.ms/DurableFunctionsJSQuickstart" target="_blank">이 빠른</a> 시작을 시작하고 Durable Functions와 함께 JavaScript를 사용하여 상태 저장 워크로드를 빌드합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e951359d-e522-4cb9-9f31-ebdb0fc0246b.png"><img alt="Stateful workloads using JavaScript with Durable Functions" border="0" height="574" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/12645e35-85e4-4c8a-8e01-80179c718737.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="지속성 함수와 함께 JavaScript를 사용하는 상태 저장 워크로드" width="1024"></a></p>


  <h2>API Management를 사용하여 서버리스 API 관리</h2>


  <p>고객에 대한 일반적인 시나리오는 엔드포인트에 전원을 공급하는 Azure Functions를 사용하여 서버리스 API를 빌드하고 HTTP 또는 이벤트 기반 트리거의 이점을 활용하며 바인딩을 통해 데이터 및 메시징 서비스와 쉽게 통합하는 것입니다. API를 빌드할 때 요청 인증 및 권한 부여, 속도 제한 및 할당량 적용, 요청 및 응답 변환, 로깅 및 추적 또는 버전 관리와 같은 많은 고려 사항을 염두에 두어야 합니다.</p>


  <p>Azure API Management는 API 요청 중재와 관련된 이러한 모든 작업을 처리할 수 있지만, 지금까지는 Azure Functions 고객이 솔루션에 대해 좋아하는 실행당 종량제 모델과 일치하지 않는 고정 비용이 제공되었습니다.</p>


  <p>오늘부터 새 API Management 인스턴스를 만들 때 새 소비 계층을 선택할 수 있습니다. 이 새로운 계층은 기본적으로 요청당 지불 및 자동 크기 조정의 서버리스 원칙을 중심으로 설계되고 구현된 API Management의 변형입니다. <a href="https://aka.ms/apimconsumptionblog" target="_blank">이 블로그 게시물</a>의 새 소비 계층에 대해 자세히 알아보고 Azure Functions 기반 서버리스 백 엔드에 대한 API 관리의 이점을 누리기 시작합니다.</p>


  <h2>서버리스 Community 라이브러리를 사용하여 개발</h2>


  <p>서버리스 Community 라이브러리는 Azure Functions 및 Logic Apps의 일반적인 사용 사례를 기반으로 미리 빌드된 구성 요소의 오픈 소스 집합입니다. 이러한 샘플은 이미 빌드되어 원하는 Azure 구독에 배포할 준비가 되어 있으므로 개발자는 미리 빌드된 구성 요소를 즉시 플러그 앤 플레이하고 사용하여 코딩 시간을 절약하고 생산성을 높일 수 있습니다. <a href="https://serverlesslibrary.net/" target="_blank">서버리스 Community 라이브러리</a>에서 <a href="https://github.com/toolboc/stripe-function" target="_blank">Stripe로 결제 처리</a> 또는 <a href="https://github.com/nastassiar/CognitiveServicesOCRFunction" target="_blank">Cognitive Services로 인텔리전스 추가</a>를 비롯한 사용 가능한 샘플을 확인하고 <a href="https://github.com/Azure/ServerlessLibrary" target="_blank">GitHub</a> 고유한 구성 요소에 기여합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c02d3bd7-c9dd-4721-8dba-27de4e21afdd.gif"><img alt="Serverless Library" border="0" height="735" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7df9f18b-94d0-4df9-be88-6e40832f6f23.gif" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="서버리스 라이브러리" width="1274"></a></p>


  <h2>요약</h2>


  <p>이러한 새로운 기능을 사용해 보시고 어떻게 생각하시는지 알려주세요! <a href="https://feedback.azure.com/forums/355860-azure-functions" target="_blank">Functions UserVoice</a>의 새로운 Azure Functions 기능에 대한 아이디어를 듣고 싶습니다. Azure Functions <a href="https://github.com/Azure/Azure-Functions/issues/new" target="_blank">GitHub 리포지토리에 캡처된 Azure Functions</a> 문제에 참여하게 되어 기쁘게 생각하고, Twitter<a href="https://twitter.com/AzureFunctions" target="_blank">@AzureFunctions</a>에서 Azure Functions 팀에 언제든지 연결할 수 있습니다.</p>


  <ul>
   <li>웹 세미나에 참여하여 <a href="https://aka.ms/ml-functions-python-webinar" target="_blank">Azure Functions가 Python을 사용하여 기계 학습 워크로드를 간소화</a>하고 <a href="https://aka.ms/functions-python-preview" target="_blank">이 자습서</a>에 따라 Python으로 첫 번째 함수를 빌드하는 방법에 대해 자세히 알아보세요.</li>
   <li><a href="https://aka.ms/DurableFunctionsJSQuickstart" target="_blank">이 빠른 시작</a>에 따라 Durable Functions와 함께 JavaScript를 사용하여 워크플로 오케스트레이터를 빌드합니다.</li>
   <li><a href="https://serverlesslibrary.net/" target="_blank">서버리스 Community 라이브러리</a>에서 사용 가능한 구성 요소를 살펴보고 <a href="https://github.com/Azure/ServerlessLibrary" target="_blank">사용자 고유의 기여를 시작합니다</a>.&nbsp;&nbsp;</li>
   <li><a href="https://azure.microsoft.com/solutions/serverless" target="_blank">Azure 서버리스</a> 플랫폼 서비스에 대해 자세히 알아봅니다.</li>
  </ul>
