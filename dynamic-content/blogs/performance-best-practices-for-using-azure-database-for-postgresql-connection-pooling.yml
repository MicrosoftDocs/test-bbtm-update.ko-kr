### YamlMime:Yaml
ms.openlocfilehash: 94e09628fe826bf4509620cf6391966715ac6166
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899608"
Slug: performance-best-practices-for-using-azure-database-for-postgresql-connection-pooling
Title: Azure Database for PostgreSQL을 사용하기 위한 성능 모범 사례 - 연결 풀링
Summary: 이 블로그는 Azure Database for PostgreSQL 서비스를 사용할 때 성능 및 규모 향상을 위한 모범 사례를 공유하기 위한 일련의 블로그 게시물의 연속입니다. 이 게시물에서는 연결 풀링을 사용하는 이점에 중점을 두고 Azure Database for PostgreSQL에서 실행되는 애플리케이션의 연결 복원력, 성능 및 확장성을 개선하기 위한 권장 사항을 공유합니다.
Content: >-
  <p>이 블로그는 Azure Database for PostgreSQL 서비스를 사용할 때 성능 및 규모 향상을 위한 모범 사례를 공유하기 위한 일련의 블로그 게시물의 연속입니다. 이 게시물에서는 연결 풀링을 사용하는 이점에 중점을 두고 Azure Database for PostgreSQL에서 실행되는 애플리케이션의 연결 복원력, 성능 및 확장성을 개선하기 위한 권장 사항을 공유합니다. 시리즈의 이전 성능 모범 사례 블로그를 읽지 않은 경우 다음 블로그 게시물을 읽어 Azure Database for PostgreSQL 서비스를 사용하기 위한 권장 모범 사례를 알아보고 이해하고 채택하는 것이 좋습니다.</p>


  <ul>
   <li><a href="https://azure.microsoft.com/en-us/blog/performance-best-practices-for-using-azure-database-for-postgresql/" target="_blank">Azure Database for PostgreSQL 사용에 대한 성능 모범 사례</a></li>
   <li><a href="https://azure.microsoft.com/en-us/blog/performance-updates-and-tuning-best-practices-for-using-azure-database-for-postgresql/" target="_blank">Azure Database for PostgreSQL 사용을 위한 성능 업데이트 및 튜닝 모범 사례</a></li>
   <li><a href="https://azure.microsoft.com/en-us/blog/performance-troubleshooting-using-new-azure-database-for-postgresql-features/" target="_blank">Azure Database for PostgreSQL 기능을 사용하는 성능 문제 해결 모범 사례</a></li>
  </ul>


  <p>PostgreSQL에서 연결 설정은 비용이 많이 드는 작업입니다. PostgreSQL에 새로 연결할 때마다 OS 프로세스의 포크와 연결에 대한 새 메모리 할당이 필요하기 때문입니다. 따라서 트랜잭션이 끝날 때 연결을 자주 열고 닫는 트랜잭션 애플리케이션은 더 긴 연결 대기 시간으로 인해 데이터베이스 처리량(초당 트랜잭션 수) 및 전반적인 애플리케이션 대기 시간이 줄어들 수 있습니다. 따라서 Azure Database for PostgreSQL을 사용하여 애플리케이션을 설계할 때는 연결 풀링을 활용하는 것이 좋습니다. 이는 기존 연결을 재사용하고 서버에서 더 높은 데이터베이스 처리량(초당 트랜잭션)을 가능하게 하여 연결 대기 시간을 크게 줄입니다. 연결 풀링을 사용하면 시작 시 고정된 연결 집합이 설정되고 유지 관리됩니다. 이를 통해 데이터베이스 서버에 설정된 동적 새 연결로 인해 발생하는 서버의 메모리 조각화를 줄일 수 있습니다.</p>


  <p>애플리케이션 프레임워크 또는 데이터베이스 드라이버가 지원하는 경우 연결 풀링을 애플리케이션 측에서 구성할 수 있습니다. 지원되지 않는 경우 애플리케이션 외부에서 실행 중이고 데이터베이스 서버에 연결된 <a href="https://pgbouncer.github.io/" target="_blank">PgBouncer</a> 또는 <a href="https://pgpool.net/mediawiki/index.php/Main_Page" target="_blank">Pgpool</a>과 같은 프록시 연결 풀 서비스를 활용하는 것도 좋습니다. PgBouncer와 Pgpool은 모두 커뮤니티에서 개발하며 Azure Database for PostgreSQL에서 사용할 수 있습니다. 계속 진행하면서 실제 사용자 환경의 컨텍스트에서 PgBouncer에 대한 대화를 집중하겠습니다.</p>


  <p>PgBouncer는 애플리케이션을 실행하는 VM(가상 머신)에 설치할 수 있는 간단한 연결 풀러입니다. 애플리케이션은 VM에서 로컬로 실행되는 PgBouncer 프록시 서비스에 연결하고, PgBouncer 서비스는 pgbouncer.ini 파일에 지정된 자격 증명 및 <a href="https://pgbouncer.github.io/config.html" target="_blank">구성 설정을</a> 사용하여 Azure Database for PostgreSQL 서비스에 연결합니다. pgbouncer.ini 구성 설정에서 최대 연결 수와 기본 풀 크기를 정의할 수 있습니다. <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/27c885b8-bcfc-4859-8ec5-993d2ed96722.jpg"><img alt="Connection pooling comparison diagram" border="0" height="387" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5f6e9aaf-efec-44cf-b645-1aa7e8d97e43.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="연결 풀링 비교 다이어그램" width="597"></a></p>


  <p>애플리케이션이 컨테이너화되어 AKS(Azure Kubernetes Service)에서 실행되는 경우 PgBouncer를 <a href="https://docs.microsoft.com/en-us/azure/architecture/patterns/sidecar" target="_blank">사이드카 프록시</a>로 실행할 수 있습니다. Azures&rsquo; 업계 최고의 에코시스템과 동급 최고의 OSS 데이터베이스의 네이티브 통합을 제공하기 위한 노력의 일환으로 Microsoft 컨테이너 레지스트리에 <a href="https://hub.docker.com/_/microsoft-azure-oss-db-tools-pgbouncer-sidecar" target="_blank">PgBouncer 사이드카 프록시 이미지를</a> 게시했습니다. PgBouncer 사이드카는 AKS의 동일한 Pod에서 애플리케이션 컨테이너와 함께 실행되며 Azure Database for PostgreSQL에 대한 연결 풀링 프록시를 제공합니다. 애플리케이션 컨테이너가 장애 조치(fail over)되거나 다시 시작되는 경우 사이드카 컨테이너는 연결 복원력 및 예측 가능한 성능으로 고가용성을 제공합니다. 이 이미지에 액세스하고 사용하는 방법에 대한 자세한 내용은 <a href="https://hub.docker.com/r/microsoft/azureossdb-tools-pgbouncer/" target="_blank">Docker 허브 페이지를</a> 방문하세요. Azure Kubernetes Services를 사용한 개발 관련 모범 사례의 경우 <a href="https://docs.microsoft.com/en-us/azure/postgresql/concepts-aks" target="_blank">Azure Kubernetes Service 및 Azure Database for PostgreSQL 연결</a> 설명서를 &ldquo; 따르는 것이 좋습니다.&rdquo;</p>


  <p>Azure Database for PostgreSQL에서 연결 풀링에 PgBouncer를 사용할 때 성능 향상을 예상하기 위해 pgbench를 사용하여 간단한 성능 벤치마크 테스트를 실행했습니다. pgbench는 모든 트랜잭션에 대한 새 연결을 만드는 구성 설정을 제공하므로 이를 활용하여 애플리케이션의 처리량에 대한 연결 대기 시간의 영향을 측정했습니다. 다음은 PgBouncer와 PgBouncer가 없는 표준 pgbench 벤치마크 테스트와 처리량을 비교하는 A/B 테스트의 관찰입니다. 테스트에서는 2개의 vCore(GP_Gen5_2)를 사용하여 범용 계층에서 실행되는 Azure Database for PostgreSQL에 대해 배율 5로 pgbench를 실행했습니다. 테스트 중 유일한 변수는 PgBouncer였습니다. PgBouncer를 사용하면 <strong>연결 대기 시간이 40% 감소하는 동안 처리량이 아래와 같이 4배 향상되었습니다</strong>.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5ff22e01-c7f4-4565-96f2-f5f05f67948f.png"><img alt="Performance improvement with PgBouncer column chart" border="0" height="261" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b52f05e7-6f36-4d96-b3da-2e4cd01678a9.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="PgBouncer 세로 막대형 차트를 사용하여 성능 향상" width="589"></a></p>


  <p>PgBouncer는 기본 제공 재시도 논리를 사용하여 데이터베이스 서버의 계획된 장애 조치(scheduled/scale-up/scale-down) 또는 계획되지 않은 장애 조치(failover) 중에 연결 복원력, 고가용성 및 투명한 애플리케이션 장애 조치(failover)를 추가로 보장할 수 있습니다. 재시도 논리는 <a href="https://www.sqlalchemy.org/library.html" target="_blank">SQLAlchemy</a>를 사용하는 <a href="https://ckan.org/" target="_blank">CKAN</a> 또는 <a href="https://airflow.apache.org/" target="_blank">Apache Airflow</a>와 같은 OSS 애플리케이션에 매우 유용한 것으로 확인되었습니다. PgBouncer를 사용하지 않으면 데이터베이스 장애 조치(failover) 이벤트를 사용하려면 연결 실패 후 연결을 다시 설정하기 위해 애플리케이션 서비스를 다시 시작해야 합니다. 이 시나리오에서는 재시도 간격보다 연결 시간 제한을 충분히 높게 설정하여 시간이 초과되기 전에 재시도를 진행할 수 있도록 하는 것도 중요합니다.</p>


  <p>요약하자면, 새 연결은 PostgreSQL을 사용하는 비용이 많이 드는 작업이므로, 특히 새 연결을 자주 여는 애플리케이션의 경우 Azure Database for PostgreSQL에 대해 애플리케이션을 실행하는 동안 연결 풀링을 사용하는 것이 좋습니다. 애플리케이션이 연결 풀링을 활용하도록 설계되지 않은 경우 PgBouncer를 연결 풀링 프록시로 활용할 수 있습니다. PgBouncer 프록시를 사용하여 애플리케이션을 실행할 경우의 이점은 다음과 같습니다.</p>


  <ul>
   <li>향상된 처리량 및 성능</li>
   <li>데이터베이스 서버에 대한 최대 연결 수를 정의하여 연결 누수 없음</li>
   <li>다시 시작에 대한 연결 복원력 향상</li>
   <li>메모리 조각화 감소</li>
  </ul>


  <p><a href="https://azure.microsoft.com/en-us/services/postgresql/" target="_blank">Azure Database for PostgreSQL</a>을 활용하기를 바랍니다. 다음에 보려는 <a href="https://feedback.azure.com/forums/597976-azure-database-for-postgresql" target="_blank">기능과 기능에 대한 피드백을</a> 계속 제공하세요. 도움이 필요하거나 질문이 있는 경우 <a href="https://docs.microsoft.com/en-us/azure/postgresql/" target="_blank">Azure Database for PostgreSQL 설명서를</a> 확인 &ldquo; 하세요.&rdquo; Azure <a target="_blank">DB for PostgreSQL 별칭으로 이메일을</a> 보내 연락할 수도 있으며, Twitter <a href="https://twitter.com/AzureDBPostgres" target="_blank">@AzureDBPostgres</a> 및 <a href="https://twitter.com/search?q=%23PostgreSQL&amp;f=images&amp;src=tyah" target="_blank">postgresql에서 최신 뉴스 및#</a> 공지 사항을 확인하세요.</p>


  <h3>감사의 말</h3>


  <p>다이애나 푸트남, 레이첼 아지메그, 수다카르 산나카얄라, 수닐 아그라왈, 수닐 카마스, 바빈 간디, 아니타 칸텔레, 프라바트 트리파티, 키릴 글루시코, 프라비엔 바리에게 특별한 감사를 표합니다.</p>
