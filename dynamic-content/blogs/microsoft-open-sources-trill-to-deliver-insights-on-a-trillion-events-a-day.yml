### YamlMime:Yaml
ms.openlocfilehash: dc7b9f162609d210e7673c0e2444c62672c130c4
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139901612"
Slug: microsoft-open-sources-trill-to-deliver-insights-on-a-trillion-events-a-day
Title: 하루에 1조 개의 이벤트에 대한 인사이트를 제공하는 Microsoft 오픈 소스 Trill
Summary: 오늘날의 높은 생산성 환경에서는 밀리초마다 많은 양의 데이터를 처리하는 것이 일반적인 비즈니스 요구 사항이 되고 있습니다. 이것이 바로 오픈 소스에서 "하루에 1조 이벤트"로 명명된 내부 Microsoft 프로젝트를 Trill로 사용할 수 있는 이유입니다.
Content: >-
  <p>오늘날의&rsquo; 고속 환경에서는 밀리초마다 대량의 데이터를 처리할 수 있는 것이 일반적인 비즈니스 요구 사항이 되고 있습니다. 이러한 증가하는 추세를 해결하기 위해 하루에&rdquo; 1조 개 이벤트를 처리하기 &ldquo;위해 Trill로 알려진 내부 Microsoft 프로젝트가 오픈 소스로 공급되고 있음을 발표하게 되어 기쁩니다.</p>


  <p>다음은 개발자가 Trill을 좋아하는 몇 가지 이유입니다.</p>


  <ul>
      <li>단일 노드 엔진 라이브러리로서 모든 .NET 애플리케이션, 서비스 또는 플랫폼은 Trill을 쉽게 사용하고 쿼리 처리를 시작할 수 있습니다.</li>
      <li>임시 쿼리 언어를 사용하면 사용자가 실시간 및/또는 오프라인 데이터 집합에 대해 복잡한 쿼리를 표현할 수 있습니다.</li>
      <li>의도한 사용 시나리오에서 Trills&rsquo;의 높은 성능은 사용자가 놀라운 속도와 짧은 대기 시간으로 결과를 얻을 수 있는 것을 의미합니다. 예를 들어 필터는 메모리 대역폭에서 작동하여 초당 최대 수십억 개의 이벤트 속도를 내는 반면 그룹화된 집계는 초당 10~1억 개의 이벤트로 작동합니다.</li>
  </ul>


  <h2>풍부한 역사</h2>


  <p>Trill은 2012년에 Microsoft Research에서 연구 프로젝트로 시작했으며, 그 이후로 <a href="https://www.microsoft.com/en-us/research/publication/trill-a-high-performance-incremental-query-processor-for-diverse-analytics/" target="_blank">VLDB</a> 및 <a href="https://www.microsoft.com/en-us/research/publication/trill-engineering-library-diverse-analytics/" target="_blank">IEEE 데이터 엔지니어링 게시판</a>과 같은 연구 논문에서 광범위하게 설명되었습니다. Trills&rsquo; 언어의 뿌리는 개발자가 복잡한 이벤트 처리 애플리케이션을 개발하고 배포할 수 있는 강력한 플랫폼인 Microsofts&rsquo; 이전 서비스 StreamInsight에 있습니다. 두 시스템 모두 시간 구성 요소를 사용하여 <a href="https://www.microsoft.com/en-us/research/publication/consistent-streaming-through-time-a-vision-for-event-stream-processing/" target="_blank">관계형 모델을 확장하는</a> <a href="https://www.microsoft.com/en-us/research/publication/temporal-analytics-on-big-data-for-web-advertising-2/" target="_blank">확장 쿼리 및 데이터</a> 모델을 기반으로 합니다.</p>


  <p>Trill 이전의 시스템은 이러한 이점의 하위 집합만 달성한 반면, Trill은 하나의 패키지에서 이러한 모든 이점을 제공합니다. Trill은 사용자가 허용한 대기 시간에 따라 작은 데이터 일괄 처리로 이벤트를 처리하는 기술과 알고리즘을 통합한 최초의 스트리밍 엔진입니다. 또한 이러한 일괄 처리를 열 형식으로 구성하여 쿼리가 이전보다 훨씬 더 효율적으로 실행되도록 하는 최초의 엔진이기도 합니다. 사용자에게 Trill로 작업하는 것은 모든 .NET 라이브러리 작업과 동일하므로 .NET 환경을 떠날 필요가 없습니다. 사용자는 <a href="https://dotnet.github.io/orleans/" target="_blank">Orleans</a> 와 같은 다양한 분산 처리 인프라 및 <a href="https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fadvertise.bingads.microsoft.com%2Fen-us%2Fblog%2Fpost%2Fjanuary-2015%2Fnow-available-in-bing-ads-campaign-performance-data-in-under-an-hour&amp;data=02%7C01%7CJames.Terwilliger%40microsoft.com%7Cdefb0258053841cc862a08d65a6d2acb%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636795822261318597&amp;sdata=u8fWOOTrxqLsCyxPtgURd8F9CUUjrNs8XK6QcEgoAd4%3D&amp;reserved=0" target="_blank">Microsofts&rsquo; SCOPE 데이터</a> 처리 인프라의 스트리밍 버전 내에 Trill을 포함할 수 있습니다.</p>


  <p>Trill은 실시간 및 오프라인 데이터 세트에 대해 동일하게 잘 작동하여 스펙트럼 전체에서 최상의 성능을 달성합니다. 이렇게 하면 모든 분석에 대해 하나의 도구만 원하는 사용자가 선택할 수 있는 엔진이 됩니다. Trills&rsquo; 언어의 뛰어난 표현력을 통해 사용자는 다양한 범위의 창 사양에 대해 고급 시간 지향 분석을 수행하고 스트리밍 데이터 세트를 통해 복잡한 패턴을 찾을 수 있습니다.</p>


  <p>Microsoft에서 시작 및 초기 배포 후 Trill 프로젝트는 Microsoft Research에서 Azure Data 제품 팀으로 이동했으며 Microsoft 내에서 가장 큰 중요 업무용 스트리밍 파이프라인의 핵심 구성 요소가 되었습니다.</p>


  <h2>중요 업무용 스트리밍 파이프라인 전원 공급</h2>


  <p>Trill은 내부 애플리케이션 및 외부 서비스를 지원하여 수천 명의 개발자에게 도달합니다. 다음을 포함하여 많은 강력한 스트리밍 서비스가 이미 Trill에 의해 구동되고 있습니다.</p>


  <h3>Financial Fabric</h3>


  <p><em>&ldquo;Trill을 사용하면 금융 패브릭이 스트리밍 투자 데이터에 대한 실시간 포트폴리오 &amp; 위험 분석을 제공하여 대용량 및 속도 데이터 세트에 대한 재무 분석이 펀드 매니저에게 전달되는 방식을 근본적으로 변화시킬 수 있습니다.&rdquo;</em> &ndash; Paul A. Stirpe 박사, 재무 패브릭 최고 기술 책임자</p>


  <h3>Bing Ads</h3>


  <p><em>&ldquo;Trill을 사용하면 24시간 이상의 결과를 얻을 수 있는 기존 처리에 비해 몇 분 이내에 거의 실시간으로 페타바이트 단위로 대규모 데이터를 처리할 수 있습니다. 보기에서 Trill을 차별화하는 주요 기능은 복잡한 이벤트 처리를 수행하고, 추적 및 디버깅을 위한 API를 정리하고, 임시 의미 체계를 사용하여 스트림 처리 파이프라인을 지속적으로 실행하는 기능입니다. Trill이 없었다면 특히 특정 빅 데이터 처리 요구 사항에 대한 복잡한 추가 요구 사항으로 대규모 스트리밍을 얻기 위해 고군분투했을 것입니다.&rdquo;</em> &ndash; 라제쉬 나그팔, 수석 프로그램 관리자, Bing</p>


  <p><em>&ldquo;Trill은 Bing 광고용 스트림 처리 시스템의 핵심입니다. 강력하고 일관된 데이터 모델 및 표현 쿼리 언어로 인해 복잡한 비즈니스 시나리오를 쉽게 구성하고 실행할 수 있습니다. 더 많은 것은&rsquo; 성능을 위한 디자인이며, Trill은 매우 많은 양의 데이터를 쉽게 처리하고 수백 개의 연산자를 포함하는 쿼리에서도 테라바이트 단위의 상태에 대해 작동할 수 있기 때문에 하루에&rdquo; 수조 개의 이벤트 이름을 딴 &ldquo;상태로 유지됩니다.&rdquo;</em> &ndash; 다니엘 머스그레이브, 수석 소프트웨어 엔지니어, Bing</p>


  <h3>Azure Stream Analytics</h3>


  <p><em>&ldquo;Azure Stream Analytics는 Trill을 노드 처리 엔진으로 사용하여 10개월 이내에 첫 번째 코드 줄에서 공개 미리 보기로 이동했습니다. 라이브러리 폼 팩터는 분산 처리 프레임워크 및 입력/출력 어댑터와 편리하게 통합됩니다. SQL 컴파일러는 단순히 SQL 쿼리를 Trill 식으로 컴파일하여 임시 의미 체계의 복잡성을 처리합니다. 그것은 아름다운 프로그래밍 모델과 사용할 수있는 고성능 엔진입니다. 가까운 장래에 모든 고객이 표현력을 활용할 수 있도록 사용자 정의 연산자 모델을 통해 Trills&rsquo; 프로그래밍 모델을 공개하는 방안을 고려하고 있습니다.&rdquo;</em> &ndash; Azure Data의 수석 그룹 엔지니어링 관리자인 Zhong Chen.</p>


  <h3>헤일로</h3>


  <p><em>&ldquo;Trill은 2013년에 서비스에 도입한 날부터 데이터 처리 파이프라인에 내장되어 있습니다. 그 영향은 Halo 게임을하기 위해 막대기를 집어 들었던 모든 플레이어에 의해 느껴졌습니다. 데이터 밀도가 높은 게임 원격 분석은 파이프라인을 통해 서비스 내의 Trill 엔진으로 흐릅니다. 비정상적이고 흥미로운 환경을 찾는 것부터 잘못된 행동에 대한 최전방 방어 제공에 이르기까지 Trill은 데이터 처리 파이프라인에서 계속 충실합니다.&rdquo;</em> &ndash; Mike Malyuk, Halo 수석 소프트웨어 엔지니어</p>


  <p>Windows Exchange, Azure 네트워킹 및 원격 분석 분석을 포함하여 대규모 스트리밍을 사용하도록 설정하는 Trill의 다른 많은 예가 있습니다.</p>


  <h2>오픈 소싱 트릴</h2>


  <p>현재 개발자 커뮤니티에서 사용할 수 있는 Trill과 동등한 것은 없다고 생각합니다. 특히 오픈 소싱 Trill을 통해 IEnumerable 및 IObservable을 사용할 수 있는 것과 동일한 방식으로 모든 고객에게 IStreamable 추상화의 기능을 제공하고자 합니다. Trill 및 IStreamable이 현재 및 미래의 오픈 소스 제품에 대한 스트리밍 또는 임시 처리에 대한 강력한 기반을 제공하기를 바랍니다.</p>


  <p>우리는 또한 Trill의 미래 개발에 지역 사회 참여를위한 많은 기회가있다. 첫째, Trills&rsquo; 확장성 지점 중 하나는 사용자가 사용자 지정 집계를 작성할 수 있다는 것입니다. Trills&rsquo; 내부 집계는 사용자 정의 집계와 동일한 프레임워크에서 구현됩니다. 모든 집계는 특별한 경우 없이 동일한 기본 고성능 아키텍처를 사용합니다. Trill은 이미 다양한 집계를 가지고 있지만, 특히 금융과 같은 수직 분야에서 추가 할 수있는 수많은 다른 사람들이 있습니다.</p>


  <p>코드가 존재하지만 아직 제품 준비 형식이 아닌 Trill 위에 빌드된 몇 가지 연구 프로젝트도 있습니다. 작업 목록 맨 위에 있는 세 가지 프로젝트는 다음과 같습니다.</p>


  <ul>
      <li>일반적으로 R 이상에서 볼 수 있는 기능 및 성능으로 <a href="https://dl.acm.org/citation.cfm?doid=3035918.3035935" target="_blank">디지털 신호 처리</a>.</li>
      <li>사용자가 여러 수준의 대기 시간을 지정할 수 있도록 <a href="https://ieeexplore.ieee.org/document/8509288" target="_blank">정렬</a> 되지 않은 데이터를 처리하는 기능이 향상되었습니다.</li>
      <li>최근에 <a href="https://www.microsoft.com/en-us/research/blog/microsoft-unveils-faster-key-value-store-large-state-management/" target="_blank">오픈 소스로 오픈 소스된 FASTER 프레임워크</a>를 사용하여 연산자 상태를 관리할 수 있도록 허용합니다.</li>
  </ul>


  <h2>트릴에 오신 것을 환영합니다!</h2>


  <p>Trill을 여러분 모두와 공유하게 되어 매우 기쁩니다! Trills API, Microsoft 내에서 Trill&rsquo;을 사용하는 방법 및 심층적인 기술 세부 정보에 대한 더 많은 블로그 게시물을 기대할 수 있습니다. 그 동안 GitHub <a href="https://github.com/Microsoft/trill" target="_blank">리포지토리</a>에서 Trill 원본 및 설명서를 찾고, Trill을 사용하여 스핀을 수행하고, 어떻게 생각하는지 알려주세요!</p>
