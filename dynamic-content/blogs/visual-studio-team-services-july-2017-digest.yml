### YamlMime:Yaml
ms.openlocfilehash: c4194042247aa3820e98a5994fe349c77d5920ec
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902419"
Slug: visual-studio-team-services-july-2017-digest
Title: 'Visual Studio Team Services 양조하는 내용: 2017년 7월 다이제스트'
Summary: 이 게시물 시리즈는 Visual Studio Team Services 대한 최신 업데이트 및 뉴스를 제공하며 Azure 사용자가 3주마다 릴리스되는 새로운 기능을 최신 상태로 유지하는 좋은 방법입니다. Visual Studio Team Services 효율적인 연속 통합을 만들고 Azure에 파이프라인을 릴리스하는 최상의 DevOps 도구를 제공합니다.
Content: >-
  <p>이 게시물 시리즈는 <a href="https://visualstudio.com/team-services/?utm_source=AzureCOM&amp;utm_medium=Blog&amp;utm_campaign=Oct2016Digest">Visual Studio Team Services</a> 대한 최신 업데이트 및 뉴스를 제공하며 Azure 사용자가 3주마다 릴리스되는 새로운 기능을 최신 상태로 유지하는 좋은 방법입니다. Visual Studio Team Services 효율적인 연속 통합을 만들고 Azure에 파이프라인을 릴리스하는 최상의 DevOps 도구를 제공합니다.</p>


  <p>이번 달&rsquo; 업데이트에서는 다른 사람이 가능한 것으로 생각한 것 이상으로 Git 크기를 조정하여 업계를 먼저 시작합니다. Git에서 더 많은 개선 사항을 논의한 후 Weve&rsquo;는 이제 공개 미리 보기에서 새로운 기본 제공 wiki를 얻었습니다. 빌드, 릴리스, 패키지 관리 및 작업 항목 추적도 개선되었습니다. 새로운 물건이 많이 있다&rsquo;, 그래서&rsquo; 다이빙하자.</p>


  <h2>세계에서&rsquo; 가장 큰 Git 리포지토리는 VSTS에 있습니다: 3.5M 파일 및 300GB!</h2>


  <p>Microsoft는 1ES(One Engineering System)라고 하는 <a href="https://blogs.msdn.microsoft.com/bharry/2017/02/03/scaling-git-and-some-back-story/">엔지니어링 시스템을 현대화</a>하기 위한 노력의 일환으로 몇 년 전에 Windows 코드 베이스를 Git으로 이전하는 대담한 목표를 세웠습니다. 리포지토리를 가상화하여 Git 크기를 조정하는 것이 가장 좋은 방법이라고 결정하기 전에 하위 모듈을 비롯한 몇 가지 방법을 시도했습니다. 올 봄 Windows 팀이 전체 Windows 코드 베이스를 VS Team Services에서 호스트되는 단일 Git 리포지토리로 이동하면서 목표를 달성했습니다. 거의 4,000명의 엔지니어가 OS&rdquo;라는 &ldquo;<a href="https://blogs.msdn.microsoft.com/bharry/2017/05/24/the-largest-git-repo-on-the-planet/">단일 Git 리포지토리에서 작업</a>하는 Windows 수십 년 만에 처음으로 단일 버전 제어 리포지토리에 있습니다. 이를 위해 누구나 VSTS와 함께 사용할 수 있도록 <a href="https://github.com/Microsoft/gvfs">오픈 소스 프로젝트</a>로 릴리스된&rsquo; GVFS(<a href="https://www.visualstudio.com/learn/git-at-scale/">Git Virtual File System</a>)를 만들었습니다.</p>


  <p>Windows 개발이 작동하는 규모는 정말 놀랍습니다. &rsquo;몇 가지 숫자를 살펴보겠습니다.</p>


  <ul>
   <li>지난 4개월 동안 이 리포지토리의 기록에 도달 가능한 Git 커밋이 250,000개 이상 있습니다.</li>
   <li>하루 8,421회 푸시(평균)</li>
   <li>2,500개의 끌어오기 요청, 작업일당 6,600명의 검토자(평균)</li>
   <li>4,352개의 활성 토픽 분기</li>
   <li>하루에 1,760개의 공식 빌드</li>
  </ul>


  <p><img alt="checkin activity" height="309" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Activity1.png" title="" width="511"></p>


  <p>Weve&rsquo;는 이미 GVFS의 첫 번째 릴리스에서 <a href="https://blogs.msdn.microsoft.com/bharry/2017/07/06/perf-results-on-scaling-git-on-vsts-with-gvfs/">성능을 크게 향상시켰</a> 습니다. 그 과정에서&rsquo; <a href="https://blogs.msdn.microsoft.com/devops/2017/05/30/optimizing-git-beyond-gvfs/">Git의 성능 및 규모도 개선되었으며 Git</a> 프로젝트에 기여하고 있습니다. VSTS의 모든 계정은 GVFS를 사용할 수 있으므로 자유롭게 <a href="https://github.com/Microsoft/gvfs">사용해 보세요</a>.</p>


  <p>&rsquo;Git&rsquo;에 대해 이야기하므로 경험에서 개선된 내용을&rsquo; 살펴보겠습니다.</p>


  <h2>축소 가능한 끌어오기 요청 주석</h2>


  <p>코드를 검토하는 것은 끌어오기 요청 환경의 중요한 부분이므로&rsquo; 검토자가 코드에 더 쉽게 집중할 수 있도록 새로운 기능을 추가했습니다. 코드 검토자는 새 코드를 처음 검토할 때 주석을 숨겨서 전체적인 코드를 쉽게 파악할 수 있습니다.</p>


  <p><img alt="Hide comments" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_30.png"></p>


  <p>주석을 숨기면 트리 뷰에서 숨겨지고 파일 보기에서는 주석 스레드가 축소됩니다.</p>


  <p><img alt="Collapsed comment" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_31.png"></p>


  <p>주석이 축소되면 여백에 있는 아이콘을 클릭하여 쉽게 확장할 수 있으며 한 번 더 클릭하면 다시 축소됩니다. 도구 설명을 보면 전체 스레드를 보지 않고도 주석을 쉽게 확인할 수 있습니다.</p>


  <p><img alt="Collapsed tooltip" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_32.png"></p>


  <h2>제안을 사용하여 끌어오기 요청을 승인할 때 워크플로 개선</h2>


  <p>끌어오기 요청과 함께 <strong><a href="https://www.visualstudio.com/en-us/docs/git/pull-requests#complete-automatically">자동 완성 옵션을</a></strong> 사용하는 것은 생산성을 향상시키는 좋은 방법이지만 코드 검토자와의 활성 토론을 줄여서는 안&rsquo; 됩니다. 이러한 토론을 보다 편리하게 활용하기 위해 이제 <strong>제안과 함께 승인</strong> 투표에서는 끌어오기 요청이 자동으로 완료되도록 설정된 경우 메시지를 표시합니다. 사용자는 해당 피드백을 읽을 수 있게 자동 완성을 취소하거나, 자동 완성 설정을 유지하고 모든 정책이 충족될 때 끌어오기 요청이 자동으로 완료되도록 허용하는 옵션을 선택할 수 있습니다.</p>


  <p><img alt="auto complete prompt" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_11.png" title=""></p>


  <h2>코드의 트리 뷰 필터링</h2>


  <p>&rsquo;이제 커밋이 수정한 모든 파일을 스크롤하여 파일로 이동하지 않아도 됩니다. 이제 커밋 세부 정보, 끌어오기 요청, 보류 집합 정보, 변경 집합 정보 페이지의 트리 뷰에서 파일 및 폴더 필터링을 지원합니다. 이 필터는 폴더 이름으로 필터링할 때는 폴더의 자식 파일을 표시하고, 파일 이름으로 필터링할 때는 축소된 트리 뷰를 통해 파일 계층 구조를 표시하는 스마트 필터입니다.</p>


  <p>커밋 트리에서 파일 또는 폴더 필터를 찾습니다.</p>


  <p><img alt="find a file filter" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_13.png"></p>


  <h2>Git 태그</h2>


  <p>VSTS 웹 UI의 Git 태그 환경은 빠르게 진화하고 있습니다. 보기 개선 사항 외에도 태그에 대한 보안을 삭제, 필터링 및 설정할 수도 있습니다.</p>


  <h3>태그 보기</h3>


  <p>태그 페이지에서 리포지토리의 모든 태그를 볼 수 <strong>있습니다</strong> . 모든 태그를 릴리스로 관리하는 경우 사용자는 태그 페이지를 방문하여 모든 제품 릴리스의 조&rsquo;감도를 볼 수 있습니다.</p>


  <p><img alt="view tags on tags page" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_15.png"></p>


  <p>경량 태그는 커밋 정보만 표시하지만 주석이 추가된 태그는 관련 커밋과 함께 태거 및 만든 날짜를 표시하므로 경량 태그와 주석 추가 태그를 쉽게 구분할 수 있습니다.</p>


  <h3>태그 삭제</h3>


  <p>경우에 따라 원격 리포지토리에서 태그를 삭제해야 합니다. 태그 이름에 철자 오류가 있거나 잘못된 커밋에 태그를 지정했을 수 있습니다. 태그 <strong>페이지에서 태그</strong> 의 상황에 맞는 메뉴를 클릭하고 태그 삭제를 선택하여 웹 UI에서 <strong>태그를 삭제</strong>할 수 있습니다.</p>


  <p><img alt="delete tags" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_16.png"></p>


  <h3>태그 필터링</h3>


  <p>태그 수는 시간이 지남에 따라 크게 증가할 수 있습니다. 일부 리포지토리에는 계층 구조에서 만든 태그가 있을 수 있으므로 태그 찾기가 어려울 수 있습니다.</p>


  <p>태그 페이지에서 찾고 있던 태그를 찾을 수 없는 경우 태그 페이지 맨 위에 있는 필터를 사용하여 태그 이름을 검색하기만 하면 됩니다.</p>


  <p><img alt="filtering tags" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_17.png"></p>


  <h3>태그 보안</h3>


  <p>이제 리포지토리의 사용자에게 태그를 관리하기 위한 보다 세분화된 권한을 부여할 수 있습니다. 사용자에게 태그를 삭제하거나 태그를 관리할 수 있는 권한을 부여할 수 있습니다.</p>


  <p><img alt="tags security" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_18.png"></p>


  <h2>공개 미리 보기의 새로운 Wiki 환경</h2>


  <p>꽤 한동안 weve&rsquo;는 기본 제공 위키를 갖고 싶었습니다. Im&rsquo;은 이제 각 프로젝트에 자체 위키가 있음을 발표하게 되어 기쁩니다. 팀 구성원과 다른 사용자가 프로젝트를 이해하고, 사용하고, 기여하도록 도와주세요. <a href="https://blogs.msdn.microsoft.com/devops/2017/07/06/33855/">공지 블로그 게시물</a>에서 자세한 내용을 알아보고 <a href="https://www.visualstudio.com/en-us/docs/collaborate/add-edit-wiki">문서를 확인하세요</a>. 아, 그리고 한 가지 더. 그것은 완전히 <a href="https://www.visualstudio.com/en-us/docs/reference/markdown-guidance#emoji">이모티콘을 지원</a>, 그래서 그것으로 재미를!</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7d2691da-d92c-4690-b28a-4b7a6bc47149.png"><img alt="project wiki" border="0" height="653" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8b92bfa2-a247-4d06-b3fb-2bc473e33933.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="이미지" width="985"></a></p>


  <h2>최신 Visual Studio 사용하여 빌드</h2>


  <p>&rsquo;다양한 버전의 Visual Studio 처리하기 위해 모델을 변경해야 합니다. 아키텍처, 스토리지 및 성능 제한으로&rsquo; 인해 더 이상 호스트된 단일 빌드 머신에서 여러 버전의 Visual Studio 제공하지 않습니다. 이러한 변경 내용의 기록 및 근거에 대한 자세한 내용은 <a href="https://github.com/Microsoft/vsts-tasks/blob/master/docs/vshostedpools.md">Visual Studio Team Services VS Hosted Pool을 참조하세요</a>.</p>


  <p>이 릴리스&rsquo;에서는 다음과 같은 변경 내용을 확인할 수 있습니다.</p>


  <ul>
   <li>
   <p>이제 빌드 정의를 만들 때 큐를 명시적으로 선택해야 합니다(기본값 없음).</p>
   </li>
   <li>
   <p>더&rsquo; 쉽게 만들려면 <strong>프로세스</strong> 섹션에서 기본 큐를 <strong>작업</strong> 탭으로 이동해야 합니다.</p>
   </li>
  </ul>


  <p><img alt="default build queue on tasks tab" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_default-build-queue-on-tasks-tab-required.png" style="margin: 0px 0px 0px 60px;"></p>


  <ul>
   <li><a href="https://www.visualstudio.com/docs/build/steps/build/visual-studio-build">이제 Visual Studio 빌드</a> 및 <a href="https://www.visualstudio.com/docs/build/steps/build/msbuild">MSBuild</a> 작업은 버전 인수에 대한 <strong>최신</strong> 설정으로 기본 설정됩니다.</li>
  </ul>


  <p>곧&rsquo; 더 많은 변경 내용을 볼 수 있습니다. 예를 들어 다음과 같은 호스트된 풀(및 해당 큐)은 다음과 같습니다.</p>


  <ul>
   <li>
   <p>호스트된 VS2017</p>
   </li>
   <li>
   <p>호스트된 VS2015</p>
   </li>
   <li>
   <p>사용되지 않는 호스트(이전에는 호스트된 풀&rdquo;이라고 함&ldquo;)</p>
   </li>
   <li>
   <p>호스트된 Linux 미리 보기</p>
   </li>
  </ul>


  <h2>Chef: 코드로서의 인프라</h2>


  <p>이제 Visual Studio Team Services Marketplace에서 Chef를 사용할 수 있습니다! Chef에 익숙하지 않은 경우&rsquo; 인프라를 코드로 전환할 수 있는 &ldquo;매끄러운 사용자 지정 개발 키트가 있는 인프라 자동화 플랫폼을 제공합니다.&rdquo; 즉, <em>&ldquo;코드로 설명된 인프라는 유연하고, 버전이 가능하며, 사람이 읽을 수 있고, 테스트할 수 있습니다.&rdquo; </em> <a href="https://blog.chef.io/2017/05/10/integrate-chef-into-your-build-and-release-pipelines-with-microsoft-visual-studio-team-services/">Chef 팀은 이 릴리스에 대한 광범위한 블로그 게시물을 작성</a>했으며, 이를 확인하는 것이 좋습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/cheftasks.png"><img alt="chef tasks" border="0" height="530" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/cheftasks.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; background-image: none;" title="" width="810"></a></p>


  <p>Chef 확장은 Chef Automate를 구성하기 위한 6개의 새 빌드 &amp; 릴리스 작업을 추가합니다.</p>


  <p>이 확장의 작업은 <a href="https://www.chef.io/automate/">Chef Automate</a> 플랫폼과 상호 작용할 때 수행하는 일반적인 활동을 자동화합니다. 설정 및 구성에 대한 자세한 내용은 GitHub <a href="https://github.com/chef-partners/vsts-chef/wiki/Getting-Started">시작 </a>가이드를 확인하세요. 일반적으로 빌드 프로세스의 일부로 사용되는 확장에 포함된 작업은 다음과 같습니다.</p>


  <ul>
   <li><strong>cookbook 버전 번호 업데이트</strong>: 업로드하기 전에 현재 빌드 번호를 가져와서 해당 버전으로 Chef cookbook의 버전을 설정할 수 있습니다.</li>
   <li><strong>chef Server에 대한 업로드 요리책:</strong> 리포지토리 내에서 쿡북이 포함된 경로를 지정하고 지정한 경우 모든 필수 구성 요소와 함께 Chef Server에 업로드할 수 있습니다.</li>
  </ul>


  <p>일반적으로 릴리스 프로세스의 일부로 사용되는 작업은 다음과 같습니다.</p>


  <ul>
   <li><strong>Chef 환경에 변수 추가</strong>: 이 작업을 사용하면 환경에 대한 VSTS Release Management 변수 집합을 지정된 Chef 환경에 복사할 수 있습니다.</li>
   <li><strong>환경에 쿡북 버전 릴리스</strong>: 이 작업을 사용하면 특정 환경에서 Chef 쿡북의 버전 &lsquo;핀&rsquo; 을 지정할 수 있습니다. 릴리스 파이프라인 &lsquo;에서 이 작업을 사용하여 해당 환경에 쿡북을 릴리스&rsquo; 할 수 있습니다.</li>
   <li><strong>InSpec 실행</strong>: 배포 그룹의 컴퓨터에서 InSpec을 실행합니다.</li>
   <li><strong>Chef 클라이언트 실행</strong>: 배포 그룹의 컴퓨터에서 Chef 클라이언트를 실행합니다.</li>
  </ul>


  <p>Chef가 Team Services 확장 에코시스템에 참여하게 되어 기쁘기 때문에 인프라를 한 단계 더 발전시키고 기회를 제공합니다.</p>


  <h2>소스 분기에 따라 환경에 대한 릴리스 제어</h2>


  <p>새 릴리스가 만들어질 때, 일반적으로 소스 빌드가 성공적으로 진행된 이후에 자동으로 배포를 트리거하도록 릴리스 정의를 구성할 수 있습니다. 그러나 성공적으로 수행된 빌드를 무조건 배포하기보다 소스의 특정 분기에서 가져온 빌드만 배포하고 싶을 수 있습니다.</p>


  <p>예를 들어, 개발 및 테스트 환경에는 모든 빌드를 배포하고 프로덕션 환경에는 특정 빌드만 배포하려고 할 수 있습니다. 이전에는 이 목적으로 개발 및 테스트 환경용 1개, 프로덕션 환경용 1개씩 2개의 릴리스 파이프라인을 유지해야 했습니다.</p>


  <p>이제 Release Management를 사용하여 각 환경에 대해 아티팩트 필터를 사용할 수 있습니다. 즉, 빌드 성공 및 새 릴리스 만들기와 같은 배포 트리거 조건이 충족될 때 각 환경에 배포될 릴리스를 지정할 수 있습니다. 환경 <strong>배포 조건</strong> 대화 상자의 <strong>트리거</strong> 섹션에서 해당 환경에 대한 새 배포를 트리거하는 아티팩트 조건(예: 빌드에 대한 소스 분기 및 태그)을 선택합니다.</p>


  <p><img alt="deployment conditions" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_01_14.png"></p>


  <p>또한 <strong>릴리스 요약</strong> 페이지에는 시작되지 않은&rdquo; 모든 &ldquo;배포가 해당 상태에 있는 이유를 나타내고 배포가 시작되는 방법 또는 시기를 제안하는 팝업 팁이 포함되어 있습니다.</p>


  <p><img alt="pop up tip" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_01_15.png"></p>


  <h2>아티팩트 소스로서 Git 리포지토리에 대해 릴리스 트리거 제공</h2>


  <p>이제 Release Management는 동일한 계정의 모든 팀 프로젝트에 포함된 릴리스 정의에 연결된 Git 리포지토리에 대해 연속 배포 트리거를 구성할 수 있도록 지원합니다. 이를 통해 리포지토리에 대해 새 커밋이 수행될 때 릴리스가 자동으로 트리거되도록 할 수 있습니다. 또한 커밋이 릴리스를 트리거하는 Git 리포지토리의 분기를 지정할 수 있습니다. 즉, GitHub 및 Team Foundation Git 리포지토리를 아티팩트 원본으로 릴리스 정의에 연결한 다음 빌드에서 생성되지 않은 Node.js 및 PHP와 같은 애플리케이션에 대해 릴리스를 자동으로 트리거할 수 있습니다.</p>


  <p><img alt="release triggers" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_01_16.png"></p>


  <h2>자동화된 테스트의 요청 시 트리거</h2>


  <p>이제 <strong>테스트</strong> 허브는 테스트 계획 및 테스트 도구 모음에서 자동화된 테스트 사례를 트리거하는 것을 지원합니다. <strong>테스트</strong> 허브에서 자동화된 테스트를 실행하는 것은 <strong>릴리스 환경에서</strong> 예약된 방식으로 테스트를 실행하는 방법과 유사하게 설정할 수 있습니다. <strong>테스트 계획 템플릿에서 자동화된 테스트 실행을</strong> 사용하여 릴리스 정의에서 환경을 설치하고 테스트 계획과 연결하여 자동화된 테스트를 실행해야 합니다. 환경을 설정하고 <strong>테스트</strong> 허브에서 자동화된 테스트를 실행하는 방법에 대한 단계별 지침은 <a href="https://www.visualstudio.com/en-us/docs/test/continuous-testing/run-automated-tests-from-test-hub">설명서를</a> 참조하세요.</p>


  <p><img alt="test trigger" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_01_11.jpg"></p>


  <h2>Apple 인증서와 같은 파일을 안전하게 저장</h2>


  <p>Weve&rsquo;는 빌드 및 릴리스 기능에 범용 <a href="https://www.visualstudio.com/en-us/docs/build/concepts/library/secure-files">보안 파일 라이브러리</a> 를 추가했습니다. 보안 파일 라이브러리를 사용하여 인증서 서명, Apple 권한 설정 프로파일, Android 키 저장소 파일 및 SSH 키와 같은 파일을 소스 리포지토리에 커밋하지 않고도 서버에 저장할 수 있습니다.</p>


  <p><img alt="secure files library" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_01_18.png" title=""></p>


  <p>보안 파일의 내용은 암호화되며 빌드 또는 릴리스 프로세스 동안에만 작업에서 참조하는 방식으로 사용할 수 있습니다. 보안 파일은 보안 설정에 따라 팀 프로젝트의 여러 빌드 및 릴리스 정의에서 사용할 수 있습니다. 보안 파일은 라이브러리 보안 모델을 따릅니다.</p>


  <p>또한 Weve&rsquo;는 이 새로운 기능을 활용하는 몇 가지 Apple 작업을 추가했습니다.</p>


  <ul>
   <li>
   <p><a href="https://www.visualstudio.com/en-us/docs/build/steps/utility/install-apple-certificate">유틸리티: Apple 인증서 설치</a></p>
   </li>
   <li>
   <p><a href="https://www.visualstudio.com/en-us/docs/build/steps/utility/install-apple-provisioning-profile">유틸리티: Apple 프로비저닝 프로필 설치</a></p>
   </li>
  </ul>


  <h2>Azure Key Vault의 비밀을 변수로 사용</h2>


  <p>또한 변수 그룹을 Key Vault 비밀에 연결하여 Azure Key Vault와 통합하기 위한 일류 지원을 추가했습니다. 즉, VSTS에서 아무것도 변경하지 않고 Azure Key Vault 내에서 비밀 값을 완전히 관리할 수 있습니다(예: 릴리스에 영향을 주지 않고 Azure Key Vault에서 암호 또는 인증서 회전).</p>


  <p><strong>변수 그룹</strong> 페이지에서 이 기능을 사용하도록 설정하려면 <strong>Azure Key Vault의 비밀 연결</strong> 토글 단추를 변수로 사용합니다. 자격 증명 모음 세부 정보를 구성한 후 <strong>+추가</strong> 를 선택하고 이 변수 그룹에 매핑할 자격 증명 모음에서 특정 비밀을 선택합니다.</p>


  <p><img alt="link to secret in Azure Key Vault" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_29.png" title=""></p>


  <p>Azure Key Vault에 매핑된 변수 그룹을 만든 후 <a href="https://www.visualstudio.com/en-us/docs/build/concepts/library/variable-groups">변수</a> 그룹에 설명된 대로 릴리스 정의에 연결할 수 있습니다.</p>


  <p>값이&rsquo; 아니라 변수 그룹 변수에 매핑되는 비밀 이름만을 나타냅니다. 각 비밀의 실제 값(최신 버전)은 릴리스 중에 사용됩니다.</p>


  <h2>패키지 빌드 작업 업데이트</h2>


  <p>Weve&rsquo;는 GitHub <a href="https://github.com/microsoft/vsts-tasks">vsts-tasks 리포지토리</a>에 기록된 대부분의 문제에 대한 수정을 포함하여 <strong>NuGet</strong>, <strong>npm</strong>, <strong>Maven</strong> 및 <strong>dotnet</strong> 빌드 작업을 포괄적으로 업데이트했습니다.</p>


  <h3>통합된 새 NuGet 작업</h3>


  <p>Weve&rsquo;는 <strong>NuGet 복원</strong>, <strong>NuGet 패키지 및</strong> <strong>NuGet Publisher</strong> 작업을 통합 <strong>NuGet</strong> 빌드 작업으로 결합하여 빌드 작업 라이브러리의 나머지 부분과 더 잘 정렬합니다. 새 작업은 기본적으로 NuGet 4.0.0을 사용합니다. 따라서&rsquo; 이전 작업은 더 이상 사용되지 않으며 시간이 지남에 따라 새 NuGet 작업으로 이동하는 것이 좋습니다. 이 변경은 결합된 작업을 사용해야만 액세스할 수 있다는&rsquo; 아래에 설명된 개선 사항의 물결과 일치합니다.</p>


  <p>이 작업의 일환으로 weve&rsquo;는 PATH에서 사용할 수 있고 새 NuGet 작업에서 사용하는 NuGet 버전을 제어하는 새 NuGet <strong>도구 설치 관리자</strong> 작업을 릴리스했습니다. 따라서 최신 버전의 NuGet을 사용하려면 빌드 시작 부분에 <strong>NuGet 도구 설치 관리자</strong> 작업을 추가하기만 하면 됩니다.</p>


  <p><img alt="NuGet restore task" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_07.png" title=""></p>


  <h3>npm 빌드 작업 업데이트</h3>


  <p>&rsquo;Windows, Linux 또는 Mac에서 npm 프로젝트를 빌드하든 관계없이 새 <strong>NPM</strong> 빌드 작업이 수용할 수 있습니다. 또한 <strong>npm 설치</strong> 및 <strong>npm 게시</strong>가 보다 쉽게 진행될 수 있게 작업을 다시 구성했습니다. <strong>설치</strong> 및 <strong>게시</strong>의 경우 프로젝트&rsquo; .npmrc 파일에 나열된 레지스트리에 대한 자격 증명을 <a href="https://www.visualstudio.com/en-us/docs/build/concepts/library/service-endpoints">서비스 엔드포인트</a>에 안전하게 저장할 수 있도록 자격 증명 획득을 간소화했습니다. 또는 VSTS 피드를 사용하는 경우&rsquo; 피드를 선택할 수 있는 선택기가 있으며 빌드 에이전트에서 사용하는 필수 자격 증명을 사용하여 .npmrc를 생성합니다.</p>


  <h5>사용자 계정/컬렉션 외부에서 작업</h5>


  <p>&rsquo;이제 다른 VSTS 계정 또는 TFS 서버의 <strong>패키지 관리</strong> 피드 또는 NuGet.org/npmjs.com, Artifactory 또는 MyGet과 같은 비패키지 관리 피드에 관계없이&rsquo; VSTS 계정 외부의 피드로 더 쉽게 작업할 수 있습니다. 전용 <strong>서비스 엔드포인트</strong> 유형NuGet&nbsp; 및 npm을 사용하면 올바른 자격 증명을 쉽게 입력하고 패키지 다운로드 및 패키지 푸시 작업에서 빌드 작업이 원활하게 작동할 수 있습니다.</p>


  <p><img alt="feed selection" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_08.png" title=""></p>


  <h3>Maven 및 dotnet은 이제 인증된 피드를 지원합니다.</h3>


  <p><strong>NuGet</strong> 및 <strong>npm</strong>과 달리 <strong>Maven</strong> 및 <strong>dotnet</strong> 빌드 작업은 이전에 인증된 피드에서 작동하지 않았습니다. Weve&rsquo;는 위에서 설명한 것과 동일한 모든 선(피드 선택기, 계정 개선 사항 외부에서 작업)을 <strong>dotnet</strong> 작업에 추가했습니다. 마찬가지로 Maven 작업은 이제 현재 빌드와 동일한 VSTS 계정 또는 TFS 컬렉션 내에서 인증된 피드를 지원합니다. pom.xml 피드를 추가하면 Maven 단계에서 자격 증명이 자동으로 추가되고 완료되면 정리됩니다. 이렇게 하면 <strong>패키지 관리</strong>에서 지원하는 모든 패키지 유형에 대해 VSTS/TFS 및 외부 피드/리포지토리&nbsp;를 쉽게 작업&nbsp;할 수 있습니다.</p>


  <p><img alt="dotnet restore task" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_22_10.png" title=""></p>


  <h2>모바일 작업 항목 양식 일반 공급</h2>


  <p>Visual Studio Team Services 작업 항목에 대한 모바일 환경은 이제 미리 보기에서 벗어났습니다! 작업 항목에 최적화된 모양과 느낌을 포함하고 사용자에게 할당되거나, 팔로우하거나, 최근에 휴대폰에서 방문하거나 편집한 항목과 쉽게 상호 작용할 수&rsquo; 있는 방법을 제공하는 전체 엔드 투 엔드 환경을 제공합니다.</p>


  <p><img alt="mobile wit" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_01_01.png">&nbsp;<img alt="mobile wit fields" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06_01_02.png" style="margin: 0px 0px 0px 30px;"></p>


  <h2>월 연장: 제품 계획</h2>


  <p>큰 그림을 전달하는 것은 모든 사람을 팀 목표에 맞추는 데 도움이 되며, 더 많은 사람들이 어떤 것이 줄지어 있지 않을 때를 알 수 있도록 합니다. 따라서 <a href="https://www.productplan.com/">ProductPlan</a> 의 파트너가 <a href="https://marketplace.visualstudio.com/items?itemName=productplan.productplan">VSTS Marketplace</a>에 로드맵 솔루션을 가져왔다는 사실을 발표하게 되어 기쁩니다.</p>


  <p><img alt="product plan roadmap" height="367" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/productplan.png" title="" width="606"></p>


  <p>ProductPlan은 제품 전략을 쉽게 계획하고 전달할 수 있는 방법을 제공합니다. 30일 <a href="https://www.productplan.com/lp">무료 평가판을</a> 시작하세요.</p>


  <ul>
   <li>막대, 마일스톤, 컨테이너 및 레인을 쉽게 끌어서 놓아 몇 분 안에 아름다운 로드맵을 작성할 수 있습니다.</li>
   <li>즉석에서 계획을 업데이트합니다.</li>
   <li>개인, 팀 전체 또는 전체 회사와 &ndash; 무료로 안전하게 공유합니다. PDF, 이미지 또는 스프레드시트로 쉽게 인쇄하고 내보냅니다.</li>
   <li>계획 보드를 사용하여 이니셔티브의 점수를 객관적으로 채점합니다.</li>
   <li>주차장이 있는 중앙 위치에서 미래의 기회를 포착하세요.</li>
   <li>레인 및 컨테이너를 확장하여 공유하는 세부 정보를 조정합니다.</li>
   <li>마스터 플랜에서 여러 로드맵을 보고 전체 제품 포트폴리오를 한눈에 파악할 수 있습니다.</li>
  </ul>


  <p><img alt="drag and drop in product plan" height="280" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/features-get-started-quickly-animation.gif" title="" width="816"></p>


  <p>언제나처럼, 우리의 스프린트 릴리스 발표에 더 많은있다&rsquo;. 전체 기능 목록은 <a href="https://www.visualstudio.com/en-us/articles/news/2017/jun-01-team-services">6월 1일</a> 및 <a href="https://www.visualstudio.com/en-us/articles/news/2017/jun-22-team-services">6월 22일</a> 공지 사항을 확인하세요. VSTS에 대한 최신 계획 및 개발을 따라가려면 <a href="https://blogs.msdn.microsoft.com/devops/">DevOps 블로그</a>를 구독해야 합니다.</p>


  <p>즐거운 코딩 작업이 되길 바랍니다!</p>
