### YamlMime:Yaml
ms.openlocfilehash: b1e3b7854a94be09a9ca0ff737eeb1b9f0695c38
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902762"
Slug: azure-as-automated-partition-management
Title: Azure Analysis Services를 사용한 자동화된 파티션 관리
Summary: 자동화된 파티션 관리를 위한 백서 & 코드 샘플
Content: >-
  <p>Azure Analysis Services 테이블 형식 모델은 최적화된 쿼리 성능을 위해 고도로 압축된 메모리 내 캐시에 데이터를 저장할 수 있습니다. 이렇게 하면 대규모 데이터 집합에 대한 빠른 사용자 대화형 작업을 제공합니다.</p>


  <p>대용량 데이터 세트는 일반적으로 데이터 로드 프로세스를 가속화하고 최적화하기 위해 테이블 분할이 필요합니다. 분할하면 증분 로드를 활성화하고, 평행을 증가하고, 메모리 소비를 줄입니다. TOM( <a href="https://msdn.microsoft.com/en-us/library/microsoft.analysisservices.tabular.aspx">테이블 형식 개체 모델</a> )은 파티션을 만들고 관리하는 API 역할을 합니다.</p>


  <p>Analysis Services 테이블 형식 모델 <a href="https://github.com/Microsoft/Analysis-Services/blob/master/AsPartitionProcessing/Automated%20Partition%20Management%20for%20Analysis%20Services%20Tabular%20Models.pdf" target="_blank">백서</a> 에 대한 자동화된 파티션 관리를 검토할 수 있습니다. 최소한의 코드 변경으로 <a href="https://github.com/Microsoft/Analysis-Services/tree/master/AsPartitionProcessing">AsPartitionProcessing</a> TOM 코드 샘플을 사용하는 방법을 설명합니다. 제네릭 및 구성을 구동하기 위한 것입니다.</p>


  <p>샘플은 Azure Analysis Services와 호환됩니다. 다음 다이어그램은 예제 아키텍처를 보여줍니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7f7d9a1c-b43c-4dab-b1cb-72f4833cc4df.png"><img alt="Azure AS Architecture" border="0" height="356" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/368408d7-05b5-4c4b-93cf-5b480a5c336d.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="Azure AS 아키텍처" width="743"></a></p>


  <p><a href="https://azure.microsoft.com/en-us/services/sql-database/">Azure SQL Database</a> 구성 및 로깅 데이터베이스에 사용됩니다.</p>


  <p><a href="https://azure.microsoft.com/en-us/services/functions/">Azure Functions</a> 는 실행에 사용되며 다양한 방법으로 트리거될 수 있습니다. 다음 목록에서는 Azure Functions에서 사용할 수 있는 여러 옵션 중 일부를 보여 줍니다.</p>


  <ul>
   <li>타이머 함수 CRON 식을 사용하여 예약됩니다. 이 경우 별도의 일정 시스템을 설정할 필요가 없습니다.</li>
   <li>WebHook 함수에 대한 웹후크 요청 또는 HttpTrigger 함수에 대한 HTTP 요청 사용 이렇게 하면 URL을 호출할 수 있는 기존 일정 시스템과 통합할 수 있습니다.</li>
   <li>Azure Functions의 기본 제공 통합 지점을 사용하여 Azure Queue에서 트리거됩니다.</li>
  </ul>


  <p>백서 및 코드 샘플에 기여해 주신 Marco Russo(SQLBI) 및 Bill Anton(Opifex Solutions) 덕분에 감사드립니다.</p>
