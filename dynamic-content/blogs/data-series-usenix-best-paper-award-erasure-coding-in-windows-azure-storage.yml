### YamlMime:Yaml
ms.openlocfilehash: 22f2d6e7fd1c8291f77eeceed105bde25c577d48
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139898037"
Slug: data-series-usenix-best-paper-award-erasure-coding-in-windows-azure-storage
Title: '데이터 시리즈: USENIX 베스트 페이퍼 어워드 - Windows Azure Storage 지우기 코딩'
Summary: 방금 2012년 6월 USENIX 연례 기술 컨퍼런스에서 최우수 논문 상을 수상한 Windows Azure Storage&nbsp; 코드 데이터를 지우는 방법을 설명하는 논문을 발표했습니다. 이것은 공동 작업&nbsp;이었다 ...
Content: '<p>방금 <a href="https://www.usenix.org/conference/usenixfederatedconferencesweek/erasure-coding-windows-azure-storage">2012년 6월 USENIX 연례 기술 컨퍼런스에서</a> 최우수 논문 상을 수상한 Windows Azure Storage&nbsp; 코드 데이터를 지우는 방법을 설명하는 논문을 발표했습니다. Microsoft Research와 Windows Azure Storage 팀이 공동으로 작업&nbsp;했습니다.</p>  <p>이 문서는 여기에서 찾을 수 <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1369/0820.WindowsAzureStorage_2D00_ErasureCoding.pdf">있습니다</a>.</p>  <p>Windows Azure Storage 항상 사용 가능하고 내구성이 뛰어난 기간 동안 무제한으로 보이는 양의 데이터를 저장할 수 있는 기능을 고객에게 제공하는 클라우드 스토리지 시스템입니다.&nbsp; Windows Azure Storage 사용하는 경우 언제 어디서나 데이터에 액세스할 수 있으며 사용 및 저장에 대해서만 비용을 지불합니다.</p>  <p>Windows Azure Storage 작동 방식에 대한 내부 세부 정보는 <a href="https://blogs.msdn.com/b/windowsazurestorage/archive/2011/11/20/windows-azure-storage-a-highly-available-cloud-storage-service-with-strong-consistency.aspx">여기에 있는 SOSP 논문</a>에 설명되어 있습니다. SOSP 논문에서 간략하게 다루어진 영역 중 하나는 백그라운드에서 데이터 내구성과 고가용성을 유지하면서 스토리지 오버헤드를 줄이기 위해 코드 데이터를 지연시킨다는 사실이었습니다.</p>  <p>USENIX 문서에서는 Windows Azure Storage 지우기 코딩을 수행하는 방법을 설명합니다.&nbsp; 지우기 코딩을 위해 LRC(로컬 재구성 코드)라고 하는 새로운 코드 집합을 소개합니다.&nbsp; LRC는 스토리지 오버헤드를 낮게 유지하면서 오프라인인 데이터 조각을 재구성할 때 읽어야 하는 지우기 코딩 조각의 수를 줄입니다. LRC의 중요한 이점은 이전 코드에 대한 재구성 읽기에 필요한 대역폭 및 I/O를 줄이면서 스토리지 오버헤드를 크게 줄일 수 있다는 것입니다.&nbsp; (a) 단일 조각 오류(예: 실패한 디스크, 노드 또는 랙) (b) 업그레이드로 인해 조각이 오프라인 상태일 때 또는 조각에 대한 액세스 속도가 느릴 때 (c)에 직면하여 조각을 효율적으로 재구성하도록 최적화됩니다.&nbsp; 이 문서에서는 LRC를 Windows Azure Storage 사용하여 일관되게 낮은 읽기 대기 시간으로 낮은 오버헤드 지속성 스토리지를 제공하는 방법을 설명합니다. 또한 지우기 코딩 구현 및 중요한 디자인 결정에 대해 설명합니다.</p>  <p>브래드 칼더</p>'
