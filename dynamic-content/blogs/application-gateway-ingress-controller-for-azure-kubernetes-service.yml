### YamlMime:Yaml
ms.openlocfilehash: ac74fdd8ad24d2727ec1f9a590c7ae4943b2dd39
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139907949"
Slug: application-gateway-ingress-controller-for-azure-kubernetes-service
Title: Azure Kubernetes Service용 Application Gateway 수신 컨트롤러
Summary: 오늘 AKS(Azure Kubernetes Service) 및 Application Gateway를 바인딩하는 새로운 솔루션을 제공하게 되어 기쁩니다. 새 솔루션은 Kubernetes용 오픈 소스 Application Gateway 수신 컨트롤러를 제공하므로 AKS 고객이 Application Gateway를 활용하여 클라우드 소프트웨어를 인터넷에 노출할 수 있습니다.
Content: >-
  <p>오늘 AKS(Azure Kubernetes Service) 및 Application Gateway를 바인딩하는 새로운 솔루션을 제공하게 되어 기쁩니다. 새 솔루션은 Kubernetes용 오픈 소스 AGIC( <a href="https://github.com/Azure/application-gateway-kubernetes-ingress" target="_blank">Application Gateway 수신 컨트롤러</a> )를 제공하므로 AKS 고객이 Application Gateway를 활용하여 클라우드 소프트웨어를 인터넷에 노출할 수 있습니다.</p>


  <p>고급 Kubernetes 환경 및 Azure Application Gateway를 손쉽게 운영할 수 있게 해주는 관리형 Kubernetes 서비스인 Azure Kubernetes Service의 이점을 결합한 L7 부하 분산 장치는 고객의 요청이 많았습니다.</p>


  <h2>작동 원리</h2>


  <p>Application Gateway 수신 컨트롤러는 고객&rsquo; AKS의 자체 Pod에서 실행됩니다. 수신 컨트롤러는 Kubernetes&rsquo; 리소스의 하위 집합에서 변경 내용을 모니터링합니다. AKS 클러스터의 상태는 Application Gateway 특정 구성으로 변환되고 Azure Resource Manager에 적용됩니다. Application Gateway를 지속적으로 다시 구성하면 AKS&rsquo; 서비스로의 트래픽 흐름이 중단되지 않습니다. 아래 다이어그램에서는 Application Gateway 수신 컨트롤러를 통해 Kubernetes API에서 Resource Manager 및 Application Gateway로의 상태 및 구성 변경 흐름을 보여 줍니다.</p>


  <p>가장 인기 있는 Kubernetes 수신 컨트롤러와 마찬가지로 Application Gateway 수신 컨트롤러는 Azures&rsquo; 네이티브 Application Gateway L7 부하 분산 장치를 활용하여 여러 기능을 제공합니다. 몇 가지를 예로 들자면 다음과 같습니다.</p>


  <ul>
      <li>URL 라우팅</li>
      <li>쿠키 기반 선호도</li>
      <li>SSL(Secure Sockets Layer) 종료</li>
      <li>엔드투엔드 SSL</li>
      <li>공용, 개인 및 하이브리드 웹 사이트 지원</li>
      <li>통합 웹 애플리케이션 방화벽</li>
  </ul>


  <p><img alt="agic2" border="0" height="768" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c1d791d2-98c0-44fa-a2df-44cfabf7f250.png" style="border: 0px currentcolor; margin-right: auto; margin-left: auto; display: block; background-image: none;" title="agic2" width="748"></p>


  <p>Application Gateway 수신 컨트롤러의 아키텍처는 기존 클러스터 내 L7 부하 분산 장치와 다릅니다. 아키텍처 차이는 다음 다이어그램에 나와 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fb8812bd-d0f4-4823-ad5f-4e8b1aa16b66.png"><img alt="clip_image003" border="0" height="239" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ecb8b526-618f-4ae4-9b8d-990d3803d06b.png" style="border: 0px currentcolor; margin-right: auto; margin-left: auto; display: block; background-image: none;" title="clip_image003" width="627"></a></p>


  <ul>
      <li>클러스터 내 부하 분산 장치는 Kubernetes 클러스터&rsquo; 컴퓨팅 리소스를 활용하여 모든 데이터 경로 작업을 수행합니다. 선두에 있는 비즈니스 앱과 리소스를 놓고 경쟁합니다. 클러스터 내 수신 컨트롤러는 Kubernetes 서비스 리소스를 만들고 네트워크 트래픽에 <a href="https://docs.microsoft.com/en-us/azure/aks/configure-kubenet#overview-of-kubenet-networking-with-your-own-subnet" target="_blank">kubenet</a> 을 활용합니다. 수신 컨트롤러에 비해 트래픽은 추가 홉을 통해 흐릅니다.</li>
      <li>수신 컨트롤러는 Application Gateway와 공유되는 서브넷에서 각 Pod에 대한 IP 주소를 할당하는 AKS&rsquo; <a href="https://docs.microsoft.com/en-us/azure/aks/concepts-network#azure-cni-advanced-networking" target="_blank">고급 네트워킹</a>을 활용합니다. Application Gateway는 모든 Kubernetes Pod에 직접 액세스할 수 있습니다. 이렇게 하면 데이터가 kubenet을 통과할 필요가 없습니다. 이 항목에 대한 자세한 내용은 <a href="https://docs.microsoft.com/en-us/azure/aks/concepts-network" target="_blank">Azure Kubernetes Service&rdquo; 문서의 애플리케이션에 대한 네트워크 개념, 특히 네트워크 모델 비교 섹션을 참조하세요.&ldquo;</a>&rdquo; &ldquo;</li>
  </ul>


  <h2>솔루션 성능</h2>


  <p>Application Gateway가 Kubernetes Pod에 직접 연결한 결과로 Application Gateway 수신 컨트롤러는 클러스터 내 수신 컨트롤러와 네트워크 대기 시간을 최대 50% 줄일 수 있습니다. Application Gateway는 Azure <a href="https://docs.microsoft.com/azure/virtual-machine-scale-sets/overview" target="_blank">가상 머신 확장 집합</a>에서 지원되는 관리되는 서비스입니다. 따라서 Application Gateway는 데이터 경로 처리에 AKS 컴퓨팅 리소스를 사용하지 않습니다. Kubernetes 배포에 할당된 리소스를 공유하거나 방해하지 않습니다. 클러스터 내 수신과 달리 사용량이 많은 시간에 Application Gateway를 자동 크기 조정해도 앱&rsquo; Pod를 빠르게 확장하는 기능을 방해하지는 않습니다. 물론 클러스터 내 L7 수신에서 Application Gateway로 전환하면 AKS에서 사용하는 컴퓨팅 부하가 즉시 감소합니다.</p>


  <p>3개의 노드 AKS 클러스터에서 클러스터 내 수신 컨트롤러 및 Application Gateway 수신 컨트롤러의 성능을 노드당 22개의 Pod를 실행하는 간단한 웹앱과 비교했습니다. 클러스터 내 수신 3개가 있는 총 66개의 웹앱 Pod 공유 리소스는 노드당 하나씩 수신됩니다 &ndash; . 인스턴스 수가 2인 Application Gateway를 구성했습니다. Apache Bench를 사용하여 3K 요청에서 동시성 집합으로 총 100K 요청을 만들었습니다. Apache Bench를 두 번 시작했습니다. 한 번은 클러스터 내 수신 컨트롤러 앞에 있는 SLB를 가리키고, Application Gateway의 공용 IP에 두 번째로 연결합니다. 매우 바쁜 이 AKS 클러스터에서 모든 요청에서 평균 대기 시간을 기록했습니다.</p>


  <ul>
      <li>Application Gateway: 요청당 480ms</li>
      <li>클러스터 내 수신: 요청당 710ms</li>
  </ul>


  <p>위에서 수집한 데이터에 의해 입증된 바와 같이, 부하가 높은 클러스터 내 수신 컨트롤러는 Application Gateway 수신에 비해 요청당 대기 시간이 약 48% 더 높습니다. 동일한 클러스터에서 동일한 벤치마크를 실행하지만 노드당 두 개의 웹앱 Pod(총 6개의 Pod)를 사용하여 Application Gateway보다 약 17% 더 높은 대기 시간으로 클러스터 내 수신 컨트롤러가 수행되는 것을 관찰했습니다.</p>


  <h2>다음 단계는 무엇입니까&rsquo;?</h2>


  <p>이제 Application Gateway 수신 컨트롤러가 안정적이며 프로덕션 환경에서 사용할 수 있습니다. 프로젝트가 빠르게 성숙하고 있으며 새로운 기능을 추가하기 위해 적극적으로 노력하고 있습니다. Application Gateway에 저장된 인증서 사용, 상호 TLS 인증, gRPC 및 HTTP/2와 같이 고객이 요구한 기능을 사용하여 제품을 향상시키기 위해 노력하고 있습니다. AKS용 새 Application Gateway 수신 컨트롤러를 사용해 보고, 진행 상황을 따르고, 가장 중요한 것은 <a href="https://github.com/Azure/application-gateway-kubernetes-ingress" target="_blank">GitHub</a> 대한 피드백을 제공하도록 초대합니다.</p>
