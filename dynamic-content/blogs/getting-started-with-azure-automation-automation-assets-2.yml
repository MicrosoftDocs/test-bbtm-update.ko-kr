### YamlMime:Yaml
ms.openlocfilehash: 3d86ce31096e3e1b97cbf6853202a92e10c7f1d0
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139907784"
Slug: getting-started-with-azure-automation-automation-assets-2
Title: 'Azure Automation 시작: Automation 자산'
Summary: Azure Automation을 사용하면 확장성이 뛰어나고 안정적인 워크플로 실행 엔진을 사용하여 Azure 환경에서 리소스의 생성, 배포, 모니터링 및 유지 관리를 자동화할 수 있습니다.
Content: >-
  Azure Automation을 사용하면 확장성이 뛰어나고 안정적인 워크플로 실행 엔진을 사용하여 Azure 환경에서 리소스의 생성, 배포, 모니터링 및 유지 관리를 자동화할 수 있습니다. Azure 및 타사 시스템에서 시간이 오래 걸리고 자주 반복되는 작업을 오케스트레이션하여 클라우드 작업에 대한 가치 창출 시간을 줄입니다. Azure Automation 서비스에 대한 자세한 내용은 <a href="https://azure.microsoft.com/en-us/documentation/services/automation/">Automation 서비스를</a> 참조하세요.


  이 블로그에서는 Azure Automation 자산을 만든 이유와 PowerShell을 기반으로 하는 이점에 대해 더 중점을 두고 다음 항목을 다룹니다. Automation 자산을 만들고 사용하는 방법에 대한 자세한 내용은 참조 <a href="https://technet.microsoft.com/en-us/library/dn457809.aspx">https://technet.microsoft.com/en-us/library/dn457809.aspx</a> 하세요(참고: 이 페이지에서는 Service Management Automation 및 Azure Automation 자산에 대해 설명합니다. 현재 서비스 관리 자동화에만 적용되는 섹션/cmdlet이 페이지에서 호출됩니다.

  <ul>
   <li>
  <h4>Automation 자산이란?</h4>

  </li>
   <li>
  <h4>Automation 자산을 만든 이유</h4>

  </li>
   <li>
  <h4>PowerShell을 기반으로 하는 이점</h4>

  </li>
   <li>
  <h4>Runbook에서 사용하는 방법</h4>

  </li>

  </ul>

  <h3></h3>

  <h3><a name="_Toc363559176"></a>Automation 자산이란?<a name="zab1861bd23a341dfaaf1d88c1d61a175"></a></h3>

  Automation의 자산 페이지에는 Runbook에서 사용하거나 연결된 전역적으로 사용할 수 있는 다양한 리소스("설정"이라고도 함)와 통합 모듈을 가져오거나 새 자산을 추가하거나 자산을 삭제하는 명령이 표시됩니다. 자산에는 변수, 일정, 자격 증명 및 연결이 포함됩니다.


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/07/clip_image002.jpg"><img class="alignnone size-medium wp-image-161151" alt="clip_image002.jpg" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image002-615x369.jpg" width="615" height="369" /></a>


  Automation 자산의 개략적인 정의: • 변수: 변수는 모든 Runbook에서 사용할 수 있는 값입니다.Azure Portal, Windows PowerShell(출시 예정) 또는 Runbook 내에서 생성, 수정 및 검색할 수 있습니다.Runbook에서 공통 파일, 서버 이름 또는 기타 문자열에 대한 디렉터리 경로와 같이 자주 사용되는 설정을 정의하는 데 사용할 수 있습니다. 변수 설정은 문자열, 부울, 정수 또는 Runbook에서 사용할 수 있는 날짜/시간 정보를 저장합니다. 자동화 UI를 통해 수행할 수 없으므로 PowerShell을 사용하여 이 작업을 수행해야 하지만 복잡한 개체(속성 모음으로 저장됨)도 포함할 수 있습니다.


  • 연결: 연결은 Runbook에서 서비스 또는 애플리케이션에 연결하는 데 필요한 정보를 정의합니다.만들 수 있는 다양한 유형의 연결은 Automation으로 가져온 통합 모듈에 의해 정의되며 일반적으로 사용자 이름 및 암호, 연결할 호스트 또는 서비스 URI와 같은 정보를 포함합니다. 예를 들어 Azure Automation에 미리 설치된 Azure 모듈에는 Azure 리소스를 프로그래밍 방식으로 관리하는 데 필요한 정보인 구독 ID 및 인증서에 대한 필드와의 연결이 포함되어 있습니다. 연결에 대한 속성은 Automation에 안전하게 저장되며 Get-AutomationConnection 작업을 사용하여 Runbook에 액세스할 수 있습니다.그런 다음 이 정보를 통합 모듈 활동에 하나 이상의 매개 변수로 전달하여 필요한 연결을 만들 수 있습니다.


  • 자격 증명 자격 증명은 Windows PowerShell 명령 또는 Azure Automation에 업로드된 인증서와 함께 사용할 수 있는 사용자 이름 및 암호 조합입니다. 자격 증명의 속성은 Automation에 안전하게 저장되며 Get-AutomationPSCredential 또는 Get-AutomationCertificate 작업을 사용하여 Runbook에 액세스할 수 있습니다.


  • Azure Automation 일정은 Runbook이 자동으로 실행되도록 예약하는 데 사용됩니다.Runbook을 한 번 실행하는 단일 날짜 및 시간 또는 Runbook을 여러 번 시작하는 되풀이 일정일 수 있습니다.


  • 통합 모듈 Azure Automation Runbook은 PowerShell cmdlet(Automation의 "활동"이라고 함)을 사용하여 다양한 시스템, 서비스 및 디바이스에 액세스합니다. 통합 모듈은 Windows PowerShell 모듈을 포함하고 Azure Automation으로 가져올 수 있는 패키지입니다.가져온 모듈은 Runbook에서 사용할 수 있도록 모든 Azure Automation 작업자 서버에 배포됩니다.


  통합 모듈에 대한 자세한 내용은 다음 문서를 참조하세요. • 통합 모듈 작성 블로그 게시물(이 블로그는 Azure Automation의 통합 모듈에 대해 설명하지만 기본적으로 동일한 서비스 관리 자동화임) • 이 TechNet 문서의 "통합 모듈 빌드" 섹션을 참조하세요.


  <span style="color: #9bbb59; font-size: large;">Automation 자산을 만든 이유</span> 자산 탭을 클릭한 다음 '설정 추가' 옵션을 선택하여 자산을 만들 수 있습니다.


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/07/Assets-page1.png"><img class="alignnone size-medium wp-image-162841" alt="Assets-page1" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Assets-page1-523x369.png" width="523" height="369" /></a>


  &nbsp;


  만들 자산 유형을 선택합니다.


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/07/Assets-page2.png"><img class="alignnone size-medium wp-image-162831" alt="Assets-page2" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Assets-page2-526x369.png" width="526" height="369" /></a>


  다음 섹션에서는 Automation 자산이 없는 과제와 이러한 자산이 가져오는 가치에 대해 설명합니다.<b></b>


  <b><span style="text-decoration: underline;">변수: </span></b>


  <b>도전: </b> 여러 Runbook에서 동일한 데이터를 사용하는 것이 일반적입니다. 이 데이터를 각 Runbook에 하드 코딩하는 대신, 데이터를 한 위치에 저장하고 각 Runbook 내에서 참조하는 방법이 더 좋습니다. 이렇게 하면 데이터가 변경될 때 한 곳에서만 업데이트를 수행해야 합니다. 변수가 없으면 사용자는 파일, 데이터베이스 또는 기타 외부 방법을 사용하여 Runbook 작업 간에 데이터를 교환/공유하는 방법을 고려해야 합니다. 그 과제는 스토리지 메커니즘, 통신 프로토콜을 설정해야 하며 이는 복잡하고 번거로울 뿐만 아니라 경주 조건이 있을 수 있다는 것입니다.


  <b>Azure Automation 솔루션:</b> 변수는 에 생성됩니다.


  · 여러 Runbook 간에 값을 공유합니다.


  · 동일한 Runbook에서 여러 작업 간에 값을 공유합니다.


  · Azure Portal 또는 Runbook에서 사용되는 Windows PowerShell 명령줄에서 값을 관리합니다.


  &nbsp;


  <b><span style="text-decoration: underline;">연결:</span></b>


  <b>도전:</b> Azure Automation은 외부 시스템과 통합하는 기능을 제공합니다. 외부 시스템과 연결하기 위해 사용자는 외부 시스템에 연결하는 데 필요한 모든 데이터(예: 사용자 이름, 암호, 포트 #, 프로토콜 등)를 제공하는 방법을 찾아야 합니다. 몇 가지 과제는 다음과 같습니다.


  · 시스템이 다르면 서로 다른 유형의 데이터가 필요합니다. 예를 들어 URL, 포트 번호, 프로토콜


  · 해당 연결 데이터를 Runbook에 전달합니다.


  o 사용자는 Runbook 매개 변수로 연결 데이터를 전달할 수 있으며 문제는 Runbook이 실행될 때마다 입력해야 한다는 것입니다. 다른 과제는 함께 그룹화되지 않은 이 데이터를 제공해야 한다는 것입니다(별도의 매개 변수 전달).


  o 다른 옵션은 각 연결 데이터에 대한 변수 또는 변수 집합을 제공하는 것입니다. 이렇게 하면 매번 데이터를 입력하는 첫 번째 문제가 완화되지만 여전히 데이터를 함께 그룹화해야 하는 문제가 있습니다.


  · 이 데이터는 분리되고 함께 그룹화되지 않으므로 연결 데이터 구조의 변경 내용은 모든 위치(매개 변수, 변수, 여러 Runbook 등)에서 복제되어야 합니다.


  <b>Azure Automation 솔루션:</b> Azure Automation에서 에 연결 유형 자산을 만들었습니다.


  · Runbook에서 쉽게 액세스할 수 있도록 외부 시스템에 연결하는 데 필요한 연결 데이터를 단일 개체로 그룹화합니다.


  · 사용자가 이 시스템에 대한 연결을 정의할 때 이 템플릿을 사용할 수 있도록 특정 시스템에 대한 연결이 어떻게 표시되는지 설명하는 템플릿을 제공합니다.


  · 여러 위치(변수 자산, Runbook 등)에서 변경 내용을 복제하지 않고도 연결 데이터를 한 곳에서 변경할 수 있습니다.


  &nbsp;


  <b><span style="text-decoration: underline;">자격 증명:</span></b>


  <b>도전:</b> Runbook은 외부 시스템에 연결해야 하므로 자격 증명이 필요합니다. '자격 증명' 유형이 없으면 사용자는 Runbook에 자격 증명을 전달하는 방법을 찾아야 하며 자격 증명을 안전하게 유지해야 합니다. 이것은 해결해야 할 사소한 문제가 아닙니다.


  <b>Azure Automation 솔루션:</b> Azure Automation은 Runbook에 자격 증명을 저장하고 참조하는 통합되고 안전한 방법을 제공합니다.


  <b><span style="text-decoration: underline;">일정: </span></b>


  <b>과제</b>: 여러 번 Runbook을 반복 일정에 따라 실행해야 합니다. '일정' 형식 자산이 없으면 사용자는 올바른 시간에 수동으로 Runbook을 실행하거나 고유한 메커니즘을 발명해야 합니다.


  <b>Azure Automation 솔루션</b>: Azure Automation은 나중에 또는 되풀이 일정에 따라 한 번에 Runbook을 실행하는 기능을 제공합니다.


  &nbsp;

  <h3><span style="color: #9bbb59;">PowerShell 워크플로의 이점</span></h3>

  워크플로 실행의 고가용성을 제공하기 위해 Azure Automaton은 다양한 PowerShell 세션, 다른 프로세스 및 다른 컴퓨터에서도 PowerShell 코드를 실행합니다. 이 컨텍스트에서 Automation 자산을 순수 PowerShell 워크플로에서 사용할 수 있는 일반 메커니즘으로 바꾸는 것은 매우 어려운 일입니다. 자산 사용은 다음을 제공합니다.


  • 상수 값의 중앙 집중식 관리


  • 작업 간에 자산(변수, 연결 및 자격 증명)을 공유합니다. PowerShell에서 이 작업을 수행할 수 있지만 고유한 메커니즘을 발명해야 합니다.


  • 자격 증명 및 연결의 보안 관리


  • 기본 예약 기능


  &nbsp;

  <h3><span style="color: #008000;">예제와 함께 Runbook에서 자산을 사용하는 방법</span></h3>

  아래 예제에서는 Runbook에서 Automation 자산에 액세스하는 방법을 찾을 수 있습니다.


  <span style="text-decoration: underline;">변수:</span>


  다음 표의 활동은 Runbook에서 변수에 액세스하는 데 사용됩니다.

  <table border="1" cellspacing="0" cellpadding="0">

  <tbody>

  <tr>

  <td valign="top" width="479">활동</td>

  <td valign="top" width="479">설명</td>

  </tr>

  <tr>

  <td valign="top" width="479">Get-AutomationVariable</td>

  <td valign="top" width="479">기존 변수의 값을 검색합니다.</td>

  </tr>

  <tr>

  <td valign="top" width="479">Set-AutomationVariable</td>

  <td valign="top" width="479">새 변수를 만들거나 기존 변수의 값을 설정합니다.</td>

  </tr>

  </tbody>

  </table>

  <b>예제</b>


  $server = Get-AutomationVariable –이름 'ServerName'


  Set-AutomationVariable –이름 'ServerName' –Value $server


  <span style="text-decoration: underline;">자격 증명:</span>


  다음 표의 활동은 Runbook에서 자격 증명에 액세스하는 데 사용됩니다.

  <table border="1" cellspacing="0" cellpadding="0">

  <tbody>

  <tr>

  <td valign="top" width="479">활동</td>

  <td valign="top" width="479">Description</td>

  </tr>

  <tr>

  <td valign="top" width="479">Get-AutomationCertificate:</td>

  <td valign="top" width="479">Runbook에서 사용할 인증서를 가져옵니다.</td>

  </tr>

  <tr>

  <td valign="top" width="479">Get-AutomationPSCredential:</td>

  <td valign="top" width="479">Runbook에서 PSCredential로 사용할 사용자 이름/암호를 가져옵니다.</td>

  </tr>

  </tbody>

  </table>

  <b>예:</b>


  $credential = Get-AutomationPSCredential –이름 'MyCredential'


  $certificate = Get-AutomationCertificate –이름 'MyCertificate'


  <span style="text-decoration: underline;">연결:</span>


  다음 표의 활동은 Runbook에서 자격 증명에 액세스하는 데 사용됩니다.

  <table border="1" cellspacing="0" cellpadding="0">

  <tbody>

  <tr>

  <td valign="top" width="479">활동</td>

  <td valign="top" width="479">설명</td>

  </tr>

  <tr>

  <td valign="top" width="479">Get-AutomationConnection</td>

  <td valign="top" width="479">Runbook에서 사용할 연결을 가져옵니다.</td>

  </tr>

  </tbody>

  </table>

  <b>예:</b>


  $connection = Get-AutomationConnection –이름 'MyConnection'


  Do-Something –연결 $connection


  <strong><span style="color: #99cc00;">요약</span></strong><b></b>


  이제 Azure Automation 자산을 사용하여 수행할 수 있는 모든 훌륭한 작업, 자산을 만드는 방법, 해결하는 과제 및 순수 PowerShell보다 이점을 더 잘 이해할 수 있기를 바랍니다. Automation 팀은 Automation 자산의 기능을 활용하기 위해 작성하는 Runbook을 확인하게 되어 매우 기쁩니다.


  아직 Azure Automation 사용자가 아닌가요? <a href="https://account.windowsazure.com/PreviewFeatures?fid=automation">미리 보기에 등록한</a> 다음 <a href="https://azure.microsoft.com/en-us/documentation/articles/automation-create-runbook-from-samples/">시작 가이드</a>를 확인하세요.


  다음 시간까지, <b>행복 자동화!</b>
