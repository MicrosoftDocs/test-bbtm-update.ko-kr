### YamlMime:Yaml
ms.openlocfilehash: bd4ce07a87a3f7bfdbca3a607a53bfbf4b1eed1c
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139906782"
Slug: getting-ai-ml-and-devops-working-better-together
Title: AI/ML 및 DevOps 함께 더 잘 작동
Summary: 'AI(인공 지능) 및 기계 학습(ML) 기술은 디지털 도우미, 얼굴 인식, 사진 캡션, 뱅킹 서비스 및 제품 권장 사항 등 일상 생활에서 현재 발견되는 소프트웨어 애플리케이션의 기능을 확장합니다. AI 또는 ML 애플리케이션에 통합하는 데 있어 어려운 부분은 기술이나 수학, 과학 또는 알고리즘이 아닙니다. '
Content: >-
  <p>AI(인공 지능) 및 기계 학습(ML) 기술은 디지털 도우미, 얼굴 인식, 사진 캡션, 뱅킹 서비스 및 제품 권장 사항 등 일상 생활에서 현재 발견되는 소프트웨어 애플리케이션의 기능을 확장합니다. AI 또는 ML 애플리케이션에 통합하는 데 있어 어려운 부분은 기술이나 수학, 과학 또는 알고리즘이 아닙니다. 문제는 모델을 프로덕션 환경에 배포하고 운영 및 지원 가능 상태를 유지하는 것입니다. 소프트웨어 개발 팀은 비즈니스 애플리케이션 및 클라우드 서비스를 제공하는 방법을 알고 있습니다. AI/ML 팀은 비즈니스를 혁신할 수 있는 모델을 개발하는 방법을 알고 있습니다. 그러나 AI/ML &mdash; 특정 애플리케이션 파이프라인을 구현하여 자동화하고 적절한 배포 사례를 &mdash; 중심으로 래핑하기 위해 두 애플리케이션 파이프라인을 함께 배치하는 경우 프로세스는 성공하기 위해 약간의 노력이 필요합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e5d7405f-6a42-4f6f-b874-0bfd1cb7f12c.png"><img alt="image" border="0" height="336" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2c0b9f41-16cf-4862-a907-e3f5dcc86d57.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="이미지" width="522"></a></p>


  <h2>정렬된 개발 방법의 필요성</h2>


  <p>DevOps 클라우드 서비스의 사실상 개발 표준이 되었습니다. 프로세스, 자동화에 중점을 두고 팀 전체에서 함께 작업하는 새로운 방법을 장려하는 문화를 조성합니다. DevOps 애플리케이션을 지원하는 플랫폼, 계측 및 프로세스에 중점을 둔 애플리케이션 중심 패러다임입니다. 애플리케이션을 지원하는 데 필요한 인프라는 무엇인가요? 자동화하는 데 사용할 수 있는 도구는 무엇인가요? QA/프로덕션에 대한 릴리스 프로세스는 무엇인가요?&nbsp;</p>


  <p>AI/ML 프로젝트에는 <a href="https://en.wikipedia.org/wiki/Cross-industry_standard_process_for_data_mining" target="_blank">CRISP-DM</a> 및 Microsoft TDSP(<a href="https://azure.microsoft.com/en-gb/documentation/learning-paths/data-science-process/" target="_blank">Team Data Science Process</a>)를 비롯한 자체 개발 방법이 있습니다. DevOps 마찬가지로 이러한 방법론은 실제 프로젝트에서 배운 원칙과 관행에 기반을 두고 있습니다. AI/ML 팀은 데이터 기능, 모델 및 분석 질문을 구체화하기 위해 자주, 작은 반복이 있는 데이터 과학 프로젝트에 고유한 접근 방식을 사용합니다. AI&rsquo;/ML 모델 개발에 비즈니스 문제를 맞추기 위한 프로세스입니다. 릴리스 프로세스는 CRISP-DM 또는 TDSP에 대한 포커스가 아니며 운영 팀과의 상호 작용이 거의 없습니다. DevOps 팀(현재)은 데이터 과학 프로젝트의 도구, 언어 및 아티팩트에서 아직 익숙하지 않습니다.&nbsp;</p>


  <p>DevOps 및 AI/ML 개발은 일반적인 목표인 AI 애플리케이션을 프로덕션에 배치하는 두 가지 독립적인 방법론입니다. 오늘날 두 접근 방식 사이의 격차를 해소하기 위한 노력이 필요합니다. AI/ML 프로젝트는 AI/ML 모델에 대한 배포 및 릴리스 프로세스를 자동화하기 위해 AI/ML 개발 프로세스를 수용해야 하는 DevOps 효과적이고 DevOps 프로젝트를 만드는 운영 및 배포 방법 중 일부를 통합해야 합니다.</p>


  <h2>AI/ML 팀, 프로세스 및 도구 통합</h2>


  <p><a href="https://download.microsoft.com/download/0/1/5/0150425C-14C7-41F4-97EA-3DE57B678C51/IndSG_FraudDetection.pdf" target="_blank">Mobile Bank Fraud Solution</a>을 비롯한 여러 Microsoft 프로젝트에서 배운 교훈을 바탕으로 DevOps 및 AI/ML 프로젝트 간의 격차를 해소하기 위한 몇 가지 제안이 뒤따릅니다.</p>


  <h3>AI/ML 대한 DevOps</h3>


  <p>AI/ML DevOps 모델 릴리스 프로세스를 안정화하고 간소화할 수 있습니다. <a href="https://en.wikipedia.org/wiki/CI/CD" target="_blank">CI/CD(연속 통합/지속적인 배포)</a>를 지원하기 위해 연습 및 도구 집합과 쌍을 이루는 경우가 많습니다. AI/ML 워크스트림에 대한 CI/CD를 고려하는 몇 가지 방법은 다음과 같습니다.</p>


  <ul>
   <li>AI/ML 프로세스는 모델의 실험 및 반복에 의존하며 모델이 학습하고 테스트하는 데 몇 시간 또는 며칠이 걸릴 수 있습니다. 모델 빌드 및 테스트 주기에 대한 타임라인 및 아티팩트 수용을 위해 별도의 워크플로를 만듭니다. AM/ML 모델 빌드에서 시간에 민감한 애플리케이션 빌드를 제한하지 않습니다.</li>
   <li>AI/ML 팀의 경우 모델을 일회성 생성보다는 시간이 지남에 따라 가치를 제공할 수 있는 기대가 있다고 생각합니다. 모델 수명 주기 및 진화를 계획하고 허용하는 사례 및 프로세스를 채택합니다.</li>
   <li>DevOps 종종 비즈니스, 개발, 릴리스 및 운영 전문 지식을 결합하여 솔루션을 제공하는 것으로 특징지어집니다. AI/ML 기능 팀에 표시되고 디자인, 개발 및 운영 세션 전체에 포함되어 있는지 확인합니다.</li>
  </ul>


  <h3>AI/ML 대한 성능 메트릭 및 운영 원격 분석 설정</h3>


  <p>메트릭 및 원격 분석을 사용하여 배포 및 업데이트할 모델을 알릴 수 있습니다. 메트릭은 <a href="https://en.wikipedia.org/wiki/Precision_and_recall" target="_blank">정밀도, 재현율 또는 F1 점수</a>와 같은 표준 성능 측정값일 수 있습니다. 또는 사기 모델&rsquo; 성능에 대해 사기 관리자에게 알리기 위해 개발된 업계 표준 사기 메트릭과 같은 시나리오별 조치일 수 있습니다. AI/ML 메트릭을 애플리케이션 솔루션에 통합하는 몇 가지 방법은 다음과 같습니다.&nbsp;</p>


  <ul>
   <li>모델 정확도 메트릭을 정의하고 모델 학습, 유효성 검사, 테스트 및 배포를 통해 추적합니다.</li>
   <li>비즈니스 메트릭을 정의하여 운영에서 모델의 비즈니스 영향을 캡처합니다. 예를 들어 <a href="https://gist.github.com/jspoelstra/9577c07d3c9d1087072b87051abd3c59" target="_blank">사기 행위 메트릭에 대한 R Notebook을 참조하세요</a>.</li>
   <li>데이터 세트 크기, 볼륨, 업데이트 빈도, 배포, 범주 및 데이터 형식과 같은 데이터 메트릭을 캡처합니다. 모델 성능은 여러 가지 이유로 예기치 않게 변경될 수 있으며 변경 내용이 데이터 때문인지 파악하는 것이&#39;.</li>
   <li>모델에&nbsp; 대한 운영 원격 분석을 추적합니다. 얼마나 자주 호출하나요? 어떤 애플리케이션 또는 게이트웨이를 사용합니까? 문제가 있나요? 정확도 및 사용량 추세는 무엇인가요? 모델에서 소비하는 컴퓨팅 또는 메모리의 양</li>
   <li>모델 버전, 성능 메트릭 및 데이터 집합을 추적하는 모델 성능 대시보드를 만듭니다.</li>
  </ul>


  <p>AI/ML 모델을 주기적으로 업데이트해야 합니다. 시간이 지남에 따라 새 데이터와 다른 데이터를 사용할 수 &mdash; 있게 되거나 고객 또는 계절 또는 추세가 변경 &mdash; 됨에 따라 모델을 다시 학습하여 계속 적용해야 합니다. 메트릭 및 원격 분석을 사용하여 업데이트 전략을 구체화하고 모델을 다시 학습해야 하는 시기를 결정합니다.</p>


  <h3>엔드 투 엔드 데이터 및 모델 파이프라인 자동화</h3>


  <p>AI/ML 파이프라인은 필요한 도구, 프로세스 및 데이터 요소를 연결하여 AI/ML 모델을 생성하고 운영하기 때문에 중요한 개념입니다. 또한 DevOps 프로세스에 대한 복잡성의 또 다른 차원을 소개합니다. DevOps 기본 핵심 요소 중 하나는 자동화이지만 엔드투엔드 데이터 및 모델 파이프라인을 자동화하는 것은 비잔틴 통합 과제입니다.</p>


  <p>AI/ML 파이프라인의 작업 스트림은 일반적으로 프로세스의 각 단계가 매우 상세하고 복잡할 수 있는 여러 전문가 팀 간에 나뉩니다. 요구 사항, 도구 및 언어의 차이로 인해 전체 파이프라인에서 자동화하는 것은 실용적이지 않을 수 있습니다. 데이터 변환 스크립트 또는 데이터 및 모델 품질 검사와 같이 쉽게 자동화할 수 있는 프로세스의 단계를 식별합니다. 다음 작업 스트림을 고려합니다.&nbsp;&nbsp;</p>


  <table border="1" cellpadding="1" cellspacing="0">
   <tbody>
    <tr>
     <td valign="top"><em>Workstream</em></td>
     <td valign="top"><em>설명</em></td>
     <td valign="top"><em>Automation</em></td>
    </tr>
    <tr>
     <td valign="top"><em>데이터 분석</em>&nbsp;&nbsp;&nbsp;</td>
     <td valign="top">데이터 취득 및 탐색, 프로파일링, 정리 및 변환에 초점을 맞추는 것을 포함합니다. 또한 모델링을 위한 보강 및 준비 데이터도 포함됩니다.</td>
     <td valign="top">데이터를 이동하고 유효성을 검사하는 스크립트 및 테스트를 개발합니다. 또한 데이터 품질, 변경 내용, 볼륨 및 일관성을 보고하는 스크립트를 만듭니다.</td>
    </tr>
    <tr>
     <td valign="top"><em>실험</em>&nbsp;&nbsp;&nbsp;</td>
     <td valign="top">기능 엔지니어링, 모델 맞춤 및 모델 평가를 포함합니다.</td>
     <td valign="top">스크립트, 테스트 및 설명서를 개발하여 단계를 재현하고 모델 출력 및 성능을 캡처합니다.</td>
    </tr>
    <tr>
     <td valign="top"><em>릴리스 프로세스</em></td>
     <td valign="top">모델 및 데이터 파이프라인을 프로덕션에 배포하는 프로세스를 포함합니다.</td>
     <td valign="top">AI/ML 파이프라인을 릴리스 프로세스에 통합</td>
    </tr>
    <tr>
     <td valign="top"><em>운영화</em></td>
     <td valign="top">운영 및 성능 메트릭 캡처를 포함합니다.</td>
     <td valign="top">AI/ML 파이프라인에 대한 운영 계측을 만듭니다. 후속 모델 재학습 주기의 경우 모델 입력 및 출력을 캡처하고 저장합니다.</td>
    </tr>
    <tr>
     <td valign="top">
     <p><em>모델 다시 학습 및 구체화</em></p>
     </td>
     <td valign="top">모델 다시 학습의 주기를 결정합니다.</td>
     <td valign="top">경고 및 알림을 사용하여 AI/ML 파이프라인을 계측하여 재학습을 트리거합니다.</td>
    </tr>
    <tr>
     <td valign="top"><em>시각화</em></td>
     <td valign="top">AI/ML 대시보드를 개발하여 모델 및 데이터와 관련된 정보 및 메트릭을 중앙 집중화합니다. 정확도, 운영 특성, 비즈니스 영향, 기록 및 버전을 포함합니다.</td>
     <td valign="top">해당 없음</td>
    </tr>
   </tbody>
  </table>


  <p>AI/ML 파이프라인에 대한 자동화된 엔드 투 엔드 프로세스는 AI/ML 프로젝트에서 개발 및 재현성, 일관성 및 효율성을 가속화할 수 있습니다.</p>


  <h3>버전 관리&nbsp;</h3>


  <p>버전 관리란 애플리케이션&rsquo; 아티팩트 및 아티팩트 변경 내용을 추적하는 것입니다.</p>


  <p>소프트웨어 개발 프로젝트에는 코드, 스크립트, 설명서 및 파일이 포함됩니다. AI/ML 프로젝트에&mdash;도 이와 유사한 사례가 중요합니다. 일반적으로&mdash; 여러 구성 요소가 있으며 각각 별도의 릴리스 및 버전 관리 주기가 있습니다. AI/ML 프로젝트에서 아티팩트에는 다음이 포함될 수 있습니다.</p>


  <ul>
   <li>데이터: 학습 데이터, 유추 데이터, 데이터 메트릭, 그래프, 플롯, 데이터 구조, 스키마</li>
   <li>모델: 학습된 모델, 점수 매기기 모델, A/B 테스트 모델</li>
   <li>모델 출력: 예측, 모델 메트릭, 비즈니스 메트릭&nbsp;</li>
   <li>알고리즘, 코드, Notebook</li>
  </ul>


  <p>버전 관리가 다음을 제공하는 데 도움이 될 수 있습니다.</p>


  <ul>
   <li>여러 협력자의 모델 변경에 대한 추적 가능성</li>
   <li>프로젝트 아티팩트 감사 내역</li>
   <li>어떤 모델이 어떤 애플리케이션에서 호출되는지에 대한 정보</li>
  </ul>


  <p>AI/ML 팀의 버전 관리의 중요성에 대한 실질적인 예는 모델의 성능이 예기치 않게 변경되고 변경 내용이 모델 자체와 아무런 관련이 없는 경우에 발생합니다. 입력, 종속성, 모델 및 데이터 세트 버전을 쉽게 추적할 수 있으므로 며칠 또는 몇 주 동안의 노력을 절약할 수 있습니다.</p>


  <p>최소한 일관된 명명 규칙을 결정하고 데이터 파일, 폴더 및 AI/ML 모델에 사용합니다. 여러 팀이 모델링 프로세스에 참여하고 명명 규칙 없이 어떤 데이터 세트 또는 모델 버전을 사용할지 혼동하게 됩니다.</p>


  <h3>컨테이너 아키텍처 고려</h3>


  <p>컨테이너 아키텍처는 모델 개발, 테스트 및 배포를 간소화하고 간소화할 수 있습니다. 또한 패키지 기반 인터페이스로서 컨테이너를 사용하면 소프트웨어 애플리케이션이 쉽게 연결할 수 있습니다. 컨테이너는 모델과 기본 인프라 간에 추상화 계층을 만듭니다. 이를 통해 AI/ML 팀은 플랫폼에 대해 걱정하지 않고 모델 개발에 집중할 수 있습니다. 컨테이너는 다음을 쉽게 사용하도록 설정할 수 있습니다.</p>


  <ul>
   <li>A/B 테스트&nbsp;</li>
   <li>여러 환경에 배포(IoT edge, 로컬 데스크톱, Azure 인프라)</li>
   <li>더 빠른 모델 개발, 테스트 및 릴리스 주기를 구동하기 위한 일관된 환경 구성 및 설정</li>
   <li>모델 이식성 및 확장성</li>
  </ul>


  <h3>권장하는 다음 단계</h3>


  <p>DevOps 채택은 소프트웨어 개발 및 운영 팀을 하나로 모아 배포 및 릴리스 프로세스를 단순화하고 개선하는 데 매우 효과적이었습니다. AI 및 ML 애플리케이션에 점점 더 중요한 구성 요소가 됨에 따라 DevOps 모델의 일부&rsquo;인지 확인하기 위해 더 많은 압력이 존재할 것입니다. 제시된 제안은 두 방법론의 통합으로 이동하는 몇 가지 단계의 예입니다. 시작하려면 아래 링크 중 일부를 사용하고 피드백과 경험을 공유하세요!</p>


  <ul>
   <li>데이터 파이프라인에서 자동화를 가능한 통합 지점으로 사용하는 ML/AI 솔루션을 사용하는 예제는 <a href="https://download.microsoft.com/download/0/1/5/0150425C-14C7-41F4-97EA-3DE57B678C51/IndSG_FraudDetection.pdf" target="_blank">Mobile Bank 사기 솔루션 가이드</a>를 참조하세요.</li>
   <li><a href="https://blogs.technet.microsoft.com/machinelearning/2017/09/25/using-the-team-data-science-process-tdsp-in-azure-machine-learning/?WT.mc_id=devopsai-acomblog-kbaroni" target="_blank">Azure Machine Learning TDSP(Team Data Science Process)를 사용하여</a> 읽습니다.</li>
   <li><a href="https://docs.microsoft.com/azure/machine-learning/team-data-science-process/ci-cd-flask?WT.mc_id=devopsai-acomblog-kbaroni" target="_blank">AI 애플리케이션에 대한 자습서 DevOps 완료: Docker 및 Kubernetes를 사용하여 Azure에서 연속 통합 파이프라인을 만들어 AI 애플리케이션에</a> 대한 CI(연속 통합)/CD(지속적인 업데이트) 파이프라인을 설정하는 예제를 살펴봅니다.</li>
   <li><a href="https://blogs.msdn.microsoft.com/dotnet/2017/08/02/microservices-and-docker-containers-architecture-patterns-and-development-guidance/?WT.mc_id=devopsai-acomblog-kbaroni" target="_blank">마이크로 서비스 및 Docker 컨테이너: 아키텍처, 패턴 및 개발 지침을</a> 읽습니다. 이 가이드에서는 Docker 컨테이너를 소개하고 마이크로 서비스에 대한 개요를 제공합니다.</li>
  </ul>
