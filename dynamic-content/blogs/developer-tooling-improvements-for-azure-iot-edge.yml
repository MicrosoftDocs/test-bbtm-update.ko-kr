### YamlMime:Yaml
ms.openlocfilehash: 02afb01054f48fbe4e836f42a39b30ef9b4e7192
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899035"
Slug: developer-tooling-improvements-for-azure-iot-edge
Title: Azure IoT Edge에 대한 개발자 도구 개선 사항
Summary: 오늘 Azure IoT Edge를 사용하는 솔루션을 빌드하는 개발자를 위한 몇 가지 도구 개선 사항을 발표하고 강조하게 되어 기쁩니다.
Content: >-
  <p>오늘 Azure IoT Edge를 사용하는 솔루션을 빌드하는 개발자를 위한 몇 가지 도구 개선 사항을 발표하고 강조하게 되어 기쁩니다. IoT 솔루션의 경우 Azure IoT Edge는 클라우드 분석 및 사용자 지정 비즈니스 논리를 디바이스로 이동하여 조직에서 데이터 관리 대신 비즈니스 인사이트에 집중할 수 있도록 합니다. 이 <a href="https://docs.microsoft.com/azure/iot-edge/about-iot-edge" target="_blank">개요 문서에서</a> Azure IoT Edge에 대해 자세히 알아보세요. 이 블로그 게시물에서 개발자 도구의 최신 개선 사항을 강조 표시합니다.</p>


  <h2>Visual Studio 2017용 Azure IoT Edge 확장(미리 보기)</h2>


  <p>Visual Studio 2017의 새로운 확장 개발자는 Azure IoT Edge를 사용하여 솔루션을 쉽게 만들고, 디버그하고, 배포할 수 있습니다. 이 첫 번째 미리 보기 빌드는 Azure IoT Edge용 C# 모듈을 지원합니다. 시작하는 방법은 다음과 같습니다.</p>


  <ol>
   <li><a href="https://aka.ms/azure-iot-edge-vs" target="_blank">새 확장</a> 및 필수 필수 구성 요소를 설치합니다.</li>
   <li>Visual Studio 2017을 열고 새 &gt; 파일 &gt; Project 이동합니다.</li>
   <li>C# 범주에서 Azure IoT Edge Project&rdquo; 선택합니다&ldquo;.</li>
  </ol>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5f058ad4-ad9a-46fa-a05e-6ad98fcc243e.png"><img alt="azure-iot-edge-vs" border="0" height="1077" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/aaa44f60-9e6d-49fc-aae7-27f737254086.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="azure-iot-edge-vs" width="1551"></a></p>


  <p>이제 확장과 함께 제공되는 시뮬레이터 덕분에 첫 번째 Edge 모듈을 실행하고 솔루션을 통해 흐르는 데이터를 볼 준비가 되었습니다. 이 동작을 확인하려면 PipeMessage() 메서드의 Program.cs 파일에 중단점을 설정하고 F5 키를 누릅니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/04e6e437-6699-4396-86dd-bc8bc16a2d81.png"><img alt="Azure IoT Edge Extension for Visual Studio 2017 (2)" border="0" height="323" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/73a35f33-1cc5-4aaf-8264-163c2adc37cc.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Visual Studio 2017용 Azure IoT Edge 확장(2)" width="1063"></a></p>


  <p>Azure IoT Edge 모듈을 실제 디바이스에 배포할 준비가 되면 클라우드 탐색기와의 통합 덕분에 Visual Studio 2017에서 쉽게 배포할 수 있습니다. 먼저 프로젝트를 마우스 오른쪽 단추로 클릭하고 빌드 및 푸시 IoT Edge 솔루션을 선택 &ldquo;해야 합니다&rdquo;. 그런 다음 클라우드 탐색기 보기에서 배포할 <a href="https://docs.microsoft.com/azure/iot-hub/" target="_blank">Azure IoT Hub</a> 서비스 및 Edge 디바이스를 찾아 배포&rdquo; 만들기를 선택합니다&ldquo;.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c1e49196-6f8b-4264-afbf-c6c61c11ceed.png"><img alt="Search for resources" border="0" height="420" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/365a198a-4582-471d-ad94-fbb8ebd8386f.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="리소스 검색" width="376"></a></p>


  <p><a href="https://aka.ms/iotdev-vs" target="_blank">Azure IoT Edge의 새로운 Visual Studio 2017 확장에</a> 대해 자세히 알아보세요.</p>


  <h2>Azure IoT Edge Jenkins 플러그 인</h2>


  <p><a href="https://plugins.jenkins.io/azure-iot-edge" target="_blank">또한 Azure IoT Edge Jenkins 플러그 인</a>이 출시되었음을 공유하게 되어 기쁩니다. 이 릴리스는 IoT Edge 솔루션을 지속적으로 빌드하고 Azure IoT Edge 디바이스에 배포하는 네이티브 Jenkins 기능을 제공합니다. Jenkins와 함께 <a href="https://azure.microsoft.com/en-us/services/devops/" target="_blank">Azure DevOps Services</a> 사용하거나 이 플러그 인을 활용하여 다음을 포함한 지능형 Edge 솔루션을 제공할 수 있습니다.</p>


  <ul>
   <li>C#, Python, Node.js, C 또는 Java 또는 C# Functions에서 Azure IoT Edge 모듈을 빌드합니다.</li>
   <li>선택한 Azure Container Registry 또는 기타 레지스트리에 모듈을 푸시합니다.</li>
   <li>Linux 컨테이너 또는 Windows 컨테이너를 빌드합니다.</li>
   <li>개별 IoT Edge 디바이스에 배포하거나 대규모로 여러 디바이스에 배포합니다.</li>
  </ul>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2cee0874-39f5-4acd-bf1e-0c71b8d74286.png"><img alt="azure-iot-edge-jenkins" border="0" height="1024" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d6d9d1ae-ae5a-463e-8b1a-dbc8b96f63ca.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="azure-iot-edge-jenkins" width="1605"></a></p>


  <p>새 <a href="https://aka.ms/iotdev-jenkins" target="_blank">Azure IoT Edge Jenkins 플러그 인</a>에 대해 자세히 알아봅니다.</p>


  <h2>Visual Studio Code 대한 Azure IoT Edge 확장에 대한 업데이트</h2>


  <p>Edge 솔루션 개발을 <a href="https://aka.ms/azure-iot-edge-vscode" target="_blank">위해 Visual Code에 기존 Azure IoT 확장을</a> 사용하는 개발자를 위해 최근에 다음 주요 사항을 포함하여 몇 가지 중요한 개선 사항을 발표했습니다.</p>


  <ul>
   <li>Windows, Linux 또는 Mac에서 로컬 테스트 및 디버깅을 위한 <a href="https://docs.microsoft.com/en-us/azure/iot-edge/how-to-develop-csharp-module#launch-and-debug-module-code-without-container" target="_blank">IoT Edge 시뮬레이터</a>입니다.</li>
   <li><a href="https://docs.microsoft.com/en-us/azure/iot-edge/how-to-debug-multiple-modules-vscode" target="_blank">여러 모듈을 동시에 디버그합니다</a>.</li>
   <li>Azure Stream Analytics 모듈을 빌드합니다.</li>
   <li>C를 사용하여 사용자 지정 모듈을 빌드합니다.</li>
   <li>1.3.0의 새로운 Java를 사용하여 사용자 지정 모듈을 빌드합니다.</li>
   <li>1.4.0의 새로운 모듈 목록의 상황에 맞는 메뉴에서 모듈 <a href="https://blogs.msdn.microsoft.com/iotdev/2018/09/19/azure-iot-toolkit-supports-iot-hub-module-management-module-twin-module-direct-method-module-crud/" target="_blank">메서드를 호출</a>합니다.</li>
  </ul>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f1d8a500-d1ed-4b00-ad3b-0467dcdea3f5.png"><img alt="Select Module Template" border="0" height="309" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e2e450e0-78a6-4d93-a7cc-8c04d60b3938.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="모듈 템플릿 선택" width="760"></a></p>


  <p><a href="https://blogs.msdn.microsoft.com/iotdev/2018/08/14/azure-iot-edge-for-vs-code-1-2-0-has-been-released/" target="_blank">Visual Studio Code 대한 최신 Azure IoT Edge 확장 개선 사항에</a> 대해 자세히 알아봅니다.</p>


  <h2>Azure IoT Edge 개발자를 위한 CLI: iotedgedev</h2>


  <p>마지막으로 오픈 소스 <a href="https://github.com/Azure/iotedgedev" target="_blank">IoT Edge 개발자 도구</a> 는 사용하기 쉬운 명령줄 인터페이스를 사용하여 내부 루프 개발 작업(코드, 디버그, 테스트)뿐만 아니라 CI/CD 작업을 간소화합니다.</p>


  <pre>

  Usage: iotedgedev [OPTIONS] COMMAND [ARGS]...


  Options:
     --version   Show the version and exit.
     -h, --help  Show this message and exit.

  Commands:
     add        Add a new module to the solution
     build      Build the solution
     deploy     Deploy solution to IoT Edge device
     genconfig  Expand environment variables and placeholders in *.template.json
                and copy to config folder
     init       Create a new IoT Edge solution and provision Azure resources
     log        Open a new terminal window for EdgeAgent, EdgeHub and each Edge
                module and save to LOGS_PATH
     monitor    Monitor messages from IoT Edge device to IoT Hub
     new        Create a new IoT Edge solution
     push       Push module images to container registry
     setup      Setup IoT Edge simulator. This must be done before starting
     start      Start IoT Edge simulator
     stop       Stop IoT Edge simulator
     docker     Manage Docker
     iothub     Manage IoT Hub and IoT Edge devices
     simulator  Manage IoT Edge simulator
     solution   Manage IoT Edge solutions</pre>

  <p>CLI를 시작하려면 이 <a href="https://github.com/Azure/iotedgedev" target="_blank">빠른 시작을</a> 따르세요. 자세한 내용은 <a href="https://github.com/Azure/iotedgedev/wiki" target="_blank">iotedgedev wiki</a> 를 방문하여 <a href="https://aka.ms/iotdev-edgecli" target="_blank">이 게시물을</a> 참조하세요.</p>
