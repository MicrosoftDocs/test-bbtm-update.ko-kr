### YamlMime:Yaml
ms.openlocfilehash: edf528d2e52bc3e81c5753b8a7cdfc2517a1446a
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139912984"
Slug: developing-a-windows-azure-appfabric-application
Title: Windows Azure AppFabric 애플리케이션 개발
Summary: Vikram Desai의 이 게시물은 원래 2011년 7월 15일 금요일 AppFabric 팀 블로그에 게재되었습니다.  이 게시물에서는 웹 프런트 엔드가 포함된 AppFabric 애플리케이션 개발을 살펴보겠습니다.
Content: "<p><i><a target=\"_blank\" href=\"https://social.msdn.microsoft.com/profile/vikram%20desai%20-%20microsoft/\">Vikram Desai</a>의 이 게시물은 원래 2011년 7월 15일 금요일 AppFabric 팀 블로그에 게재되었습니다.</i></p>  <p>이 게시물에서는 웹 프런트 엔드 및 데이터베이스를 포함하는 AppFabric 애플리케이션 개발을 진행합니다. 애플리케이션&rsquo;을 개발하기 전에 라이브 ID를 사용하여 AppFabric LABS 포털에 <a target=\"_blank\" href=\"https://portal.appfabriclabs.com/\">https://portal.appfabriclabs.com</a> 로그인합니다. 이는 제한된 CTP이므로 승인된 사용자만 서비스에 액세스할 수 있지만 모든 사용자는 로컬 컴퓨터에서 <a target=\"_blank\" href=\"https://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;id=17691\">SDK 및 VS Tools</a> 를 시도할 수 있습니다. AppFabric June CTP에 대한 액세스를 요청하려면 <a target=\"_blank\" href=\"https://blogs.msdn.com/b/appfabric/archive/2011/06/24/see-what-our-customers-are-already-doing-with-the-windows-azure-appfabric-june-ctp.aspx\">이 블로그 게시물</a>의 지침을 따릅니다.</p>  <p>SDK를 설치한 후 Visual Studio를 시작하고 새 AppFabric 애플리케이션을 만듭니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4520.SS1.png\" alt=\"\" height=\"210\" width=\"406\" border=\"0\"><br> 애플리케이션 정의 뷰(App.cs)는 새 프로젝트를 만들 때 열리는 기본 보기입니다. 이 보기를 사용하면 애플리케이션을 구성하는 다양한 서비스 간에 추가하고 구성할 수 있습니다. 여기서 애플리케이션을 구성하는 다양한 서비스를 추가할 수 있습니다. 애플리케이션은 비디오를 재생하는 프런트 엔드 웹 계층으로 구성되며 백 엔드 데이터베이스에 액세스하여 비디오 목록을 가져옵니다. 웹 프로젝트를 추가하려면 App.cs 보기를 열고 <b><i>새 서비스 추가를&gt;</i></b> 클릭합니다. ASP.NET <b>이름을 PlayerWeb</b>으로 지정합니다. 이 게시물과 함께 이 앱에 대한 완성된 솔루션도 첨부했습니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3568.SS2.png\" height=\"202\" width=\"404\"><br> 마찬가지로 새 서비스 추가 데이터베이스에 대한 새 서비스를 추가합니다<b><i>.&gt; SQL Azure</i></b> 이름: <b>VideoDb.</b></p>  <p>기본적으로 데이터베이스가 추가되면 SQL Express의 로컬 데이터베이스를 가리킵니다. 애플리케이션을 로컬로 개발하기 위해 SQL Express에서 데이터베이스를 만들고 사용합니다. 애플리케이션이 클라우드에 배포되면 데이터베이스는 SQL Azure 데이터베이스를 가리킵니다. Application Manager를 자세히 설명하는 후속 게시물은 로컬 데이터베이스 대신 SQL Azure 데이터베이스를 가리키도록 데이터베이스를 변경하는 방법을 보여 줄 것입니다.</p>  <p><img style=\"float: left;\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8080.SS3Lft.png\" alt=\"\" height=\"141\" width=\"263\" border=\"0\"></p>  <p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0880.SS3Rt.png\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0880.SS3Rt.png\" alt=\"\" height=\"151\" width=\"235\" border=\"0\"></a></p>  <p>데이터베이스를 추가할 때 속성 패널에 채워진 기본 데이터베이스 이름은 <b><i>Database</i></b>&rdquo;입니다&ldquo;. AppFabricPlayer 애플리케이션에서 사용하는 데이터베이스로 변경해야 합니다. 이 앱의 경우 SQL Express에서 <b>AppFabricPlayer</b>라는 데이터베이스를 만들고 재생할 비디오를 저장할 테이블을 추가합니다. 데이터베이스의 테이블은 다음 스크립트를 사용하여 만들어지고 채워집니다.</p>  <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\">  <tbody>  <tr>  <td valign=\"top\" width=\"1638\">  <p>CREATE TABLE [dbo]. [AppFabricVideos] ( <br> &nbsp;&nbsp;&nbsp; [Id] [int] IDENTITY(1,1) NOT NULL, <br> &nbsp;&nbsp;&nbsp; [제목] [Nvarchar](256) NOT NULL, <br> &nbsp;&nbsp;&nbsp; [설명] [Nvarchar](2048) NOT NULL, <br> &nbsp;&nbsp;&nbsp; [Uri] [Nvarchar](1024) NOT NULL, <br> &nbsp;&nbsp;&nbsp; CONSTRAINT [PK_AppFabricVideos] 기본 키([ID] ASC) <br> )</p>  <p>INSERT INTO [dbo]. [AppFabricVideos] <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ([제목] <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ,[Description] <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ,[Uri]) <br> &nbsp;&nbsp;&nbsp;&nbsp; 값 <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ('ServiceBus HTTP/REST API' <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - \"최근에 ServiceBus 팀은 큐 및 토픽에 대한 몇 가지 새로운 지원을 발표하여 클라이언트 라이브러리와 HTTP를 통해 큐에 액세스할 수 있도록 했습니다. 이 에피소드에서는 ServiceBus 팀의 테스터인 Will Perry와 함께 ServiceBus 큐에서 HTTP API를 사용하는 방법을 보여 줍니다. 론&hellip;' <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , '<a target=\"_blank\" href=\"%27%29\">')</a> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br> INSERT INTO [dbo]. [AppFabricVideos] <br> ([제목] <br> ,[Description] <br> ,[Uri]) <br> &nbsp;&nbsp;&nbsp; 값 <br> &nbsp;&nbsp;&nbsp;('azure AppFabric 6월 CTP Windows 발표' <br> &nbsp;&nbsp;&nbsp;\"오늘 개발자가 웹, 비즈니스 논리 및 데이터베이스 계층에서 다중 계층 애플리케이션을 Windows Azure Platform의 단일 논리 엔터티로 쉽게 빌드, 배포, 관리 및 모니터링할 수 있는 기능이 포함된 Windows Azure AppFabric June CTP의 릴리스를 발표하게 되어 매우 기쁩니다.\" <br> &nbsp;&nbsp;&nbsp; , '<a target=\"_blank\" href=\"%27%29\">')</a></p>  <p>Go</p>  </td>  </tr>  </tbody>  </table>  <p>앱이 올바른 데이터베이스를 참조하려면 VideoDb 정의의 데이터베이스 이름 속성을 SQL Express - <b>AppFabricPlayer</b>에서 만든 데이터베이스로 변경합니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2335.SS4.png\" alt=\"\" height=\"158\" width=\"362\" border=\"0\"></p>  <p>이제 애플리케이션에 ASP.NET 및 데이터베이스 서비스를 추가했으므로 웹에서 데이터 계층으로 구성할 수 있습니다. AppFabric 애플리케이션을 사용하면 앱 내의 다양한 서비스 간에 관계를 지정할 수 있습니다. 관계를 통해 애플리케이션 내 서비스 간의 종속성을 정의할 수 있습니다. 결과 컴퍼지션 모델은 관리 시간에 애플리케이션을 배포, 구성, 제어, 모니터링, 문제 해결 및 크기 조정하는 데 사용됩니다.</p>  <p>ASP.NET 데이터베이스 간에 구성하기 위해 애플리케이션 정의(App.cs) 보기에서 PlayerWeb과 VideoDB 간에 서비스 참조를 추가합니다. App.CS로 이동하여 <b><i>App.CS -&gt;PlayerWeb-Add&gt; 서비스 참조</i></b> 를 클릭한 다음 <b><i>VideoDb</i></b> 엔드포인트를 선택합니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5355.SS5lft.png\" alt=\"\" height=\"123\" width=\"284\" border=\"0\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7848.SS5Rt.png\" alt=\"\" height=\"103\" width=\"286\" border=\"0\"></p>  <p>참조 이름을 Import1에서 VideoDbImport로 바꿉니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1373.SS6UL.png\" height=\"135\" width=\"427\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7411.SSUR.png\" height=\"135\" width=\"427\"></p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0474.SSLL.png\" height=\"135\" width=\"427\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5706.SSLR.png\" height=\"135\" width=\"427\"></p>  <p>이제 애플리케이션이 구조적으로 완료되었습니다. 솔루션 탐색기에서 App.cs를 마우스 오른쪽 단추로 클릭하고 다이어그램 보기를 선택하여 애플리케이션 다이어그램을 볼 수 있습니다.</p>  <p>이제 애플리케이션에 대한 논리를 추가합니다. 웹 프로젝트에서 Video.cs라는 모델 클래스를 만들고 클래스에 다음 코드를 추가합니다.<img style=\"float: left;\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0841.SS7L.png\" alt=\"\" height=\"226\" width=\"333\" border=\"0\"><img style=\"float: left;\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6558.SS7R.png\" alt=\"\" height=\"295\" width=\"125\" border=\"0\"></p>  <p>  <p>  <p>  <p>  <p>  <p>  <p>  <p>  <p>  <p>  <p>  <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\">  <tbody>  <tr>  <td valign=\"top\" width=\"1638\">  <p>using System; <br> using System.Collections.Generic; <br> Using System.Linq; <br> Using System.Web; <br> System.Data.SqlClient 사용</p>  <p>네임스페이스 PlayerWeb <br> { <br> &nbsp;&nbsp;&nbsp; public 클래스 비디오 <br> &nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string Title { get; set; } <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string Description { get; set; } <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string VideoSourceURI { get; set; } <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public int Id { get; set; }</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Video() <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public IEnumerableVideo&lt;&gt; GetVideos() <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ListVideo&lt;&gt; videos = new ListVideo&gt;&lt;();</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 시도 <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; using (SqlConnection connection = ServiceReferences.CreateVideoDbImport()) <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 연결. Open(); <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; using(SqlCommand command = connection. CreateCommand()) <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 명령. CommandText = \"select * from AppFabricVideos\"; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; using(SqlDataReader reader = command. ExecuteReader()) <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(reader. Read()) <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 동영상. Add(new Video() <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Id = (int)reader[\"Id\"], <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Title = reader[\"Title\"] as string, <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Description = reader[\"Description\"] as string, <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; VideoSourceURI = reader[\"Uri\"] as string <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }); <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch(SqlException ex) <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Diagnostics.Trace.TraceError(\"데이터베이스에서 비디오를 가져오는 중 오류 발생: {0}\", 예); <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 반환 비디오; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br> &nbsp;&nbsp;&nbsp; } <br> }</p>  </td>  </tr>  </tbody>  </table>  <p>여기서 다른 한 가지는 SqlConnection을 가져오는 코드입니다. <br> SqlConnection connection = ServiceReferences.CreateVideoDbImport(); <br> 이전에는 ASP.NET 데이터베이스 간에 서비스 참조를 추가한 경우 참조된 데이터베이스에 액세스하기 위한 도우미 메서드가 생성되었습니다. 이 코드에서는 SqlConnection을 쉽게 해결할 수 있습니다. 도우미 메서드에는 애플리케이션 정의에서 데이터베이스 이름 및 연결 문자열을 읽는 코드가 포함되어 있습니다. 나중에 애플리케이션이 관리 포털에서 구성되면 애플리케이션 관리자가 이 정보를 변경하는 방법을 확인할 수 있습니다.</p>  <p>애플리케이션을 완료하기 위해 default.aspx, default.aspx.cs 및 sites.css의 코드를 변경합니다(이러한 파일과 함께 전체 솔루션을 <a href=\"https://skydrive.live.com/redir.aspx?cid=e29520586d3d0983&amp;resid=E29520586D3D0983%21103\">여기에서</a> 다운로드할 수 있음(AppFabricPlayer.zip 다운로드). <br> 디버깅하지 않고 디버그-&gt;시작을 사용하여 Visual Studio 로컬 환경에서 애플리케이션을 실행합니다(Ctrl-F5). Visual Studio 출력 창에는 로컬 에뮬레이터에서 애플리케이션을 테스트할 준비가 된 시점이 표시됩니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2806.NewOne.png\" alt=\"\" height=\"141\" width=\"322\" border=\"0\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7178.SS8R.png\" alt=\"\" height=\"154\" width=\"252\" border=\"0\"></p>  <p>위에 표시된 게시된 주소는 웹앱의 주소입니다. 또한 애플리케이션 로그 파일의 위치에 대한 포인터를 가져옵니다. 애플리케이션 내의 ASP.NET 구성 요소가 추적을 내보내는 경우 추적은 이 위치의 파일에 있습니다. 디버거에서 이 애플리케이션을 디버그하려는 경우 w3wp.exe 프로세스에 디버거를 연결하고 코드를 단계별로 실행할 수 있습니다.</p>  <p>이제 애플리케이션이 로컬로 실행되는 것을 확인했으므로 클라우드에서 실행되도록 게시할 준비가 되었습니다. AppFabric 애플리케이션 관리자를 통해 Azure에 배포하려면 Visual Studio 내에서 애플리케이션을 게시하여 시작할 수 있습니다. 솔루션 탐색기에서 AppFabricPlayer를 클릭하고 게시를 선택하여 이 작업을 수행할 수 있습니다. AppFabric 애플리케이션 관리자 네임스페이스에 액세스할 수 있는 관리 키를 포함하여 AppFabric 애플리케이션 관리자 네임스페이스에 게시하는 데 필요한 자격 증명을 입력해야 합니다. AppFabric Services를 클릭하고 애플리케이션을 선택하여 애플리케이션을 게시하는 데 필요한 관리 키를 가져올 https://portal.appfabricabs.com수 있습니다. 오른쪽 속성 표의 속성에서 아래 속성 창과 같이 관리 키를 가져올 수 있습니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8117.SS9L.png\" alt=\"\" height=\"224\" width=\"242\" border=\"0\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6765.9R.png\" alt=\"\" height=\"269\" width=\"251\" border=\"0\"></p>  <p>또는 AppFabric 애플리케이션 관리자 포털을 통해 애플리케이션 패키지를 가져올 수 있습니다. 이 작업은 .로 이동하여 로그인 <a target=\"_blank\" href=\"https://yournamespacehere.appmanager.appfabriclabs.com/\">https://yournamespacehere.appmanager.appfabriclabs.com</a>하여 수행할 수 있습니다. 여기서는 일반적인 작업에서 새 애플리케이션을 만들고 가져올 패키지를 선택할 수 있습니다. <br> <a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1134/2086.clip_5F00_image036_5F00_5818C2F6.png\"></a></p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0882.SS10.png\" alt=\"\" height=\"77\" width=\"491\" border=\"0\"></p>  <p>간단한 AppFabric 애플리케이션을 개발하고 Azure에 게시하는 방법을 보여 줬습니다. 후속 블로그 게시물에서 AppFabric 애플리케이션 관리자를 사용하여 이 애플리케이션을 관리하는 방법을 보여 드립니다.</p>  <p>AppFabricPlayer 솔루션은 <a target=\"_blank\" href=\"https://skydrive.live.com/redir.aspx?cid=e29520586d3d0983&amp;resid=E29520586D3D0983%21103\">여기에서</a> 다운로드할 수 있습니다(AppFabricPlayer.zip).</p>  <p><iframe style=\"overflow: hidden; width: 300px; height: 50px;\" src=\"https://www.facebook.com/plugins/like.php?href= https://blogs.msdn.com/b/windowsazure/archive/2011/07/18/developing-a-windows-azure-appfabric-application.aspx;layout=box_count&amp;show_faces=false&amp;width=300&amp;action=like&amp;font=segoe+ui&amp;colorscheme=light&amp;height=50\" frameborder=\"0\" scrolling=\"no\"></iframe><br> <a href=\"https://twitter.com/share?href=https://blogs.msdn.com/b/windowsazure/archive/2011/07/18/developing-a-windows-azure-appfabric-application.aspx\" class=\"twitter-share-button\" data-count=\"horizontal\" data-via=\"windowsazure\">짹짹</a>  <script type=\"text/javascript\" src=\"https://platform.twitter.com/widgets.js\"></script>  </p>"
