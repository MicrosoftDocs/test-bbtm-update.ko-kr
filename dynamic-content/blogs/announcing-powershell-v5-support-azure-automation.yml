### YamlMime:Yaml
ms.openlocfilehash: 952f2f7c5d932d13f2399be3035972c314e67834
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139912175"
Slug: announcing-powershell-v5-support-azure-automation
Title: Azure Automation에서 PowerShell v5 지원 발표
Summary: 아시다시피 PowerShell 버전 5가 릴리스되었으며, 이를 통해 다양한 새로운 PowerShell 기능이 제공됩니다. 이제 Azure Automation의 Runbook 및 DSC 구성에서 이러한 새로운 PowerShell v5 기능을 활용할 수 있습니다.
Content: "<p>이미 알고 있는 것처럼 PowerShell 버전 5가 릴리스되었으며, 이를 통해 <a href=\"https://technet.microsoft.com/en-us/library/hh857339.aspx?f=255&amp;MSPPError=-2147217396#BKMK_new50\">다양한 새로운 PowerShell 기능이 제공됩니다</a>. 가장 흥미로운 기능 중 일부는 다음과 같습니다.</p>\n\n<ul>\n <li>PowerShell 클래스</li>\n <li>PowerShell 워크플로 성능 향상</li>\n <li>PowerShell 모듈 병렬 버전 관리</li>\n <li>새로운 cmdlet의 전체 무리 (예. Convert-String)</li>\n <li>PowerShell DSC의 전체 개선 사항(예: PSRunAsCredential)</li>\n</ul>\n\n<p>이제 Azure Automation의 Runbook 및 DSC 구성에서 이와 동일한 훌륭한 PowerShell v5 기능을 활용할 수 있습니다.</p>\n\n<p>&rsquo;Azure Automation &ndash; 에서 PowerShell v5 기능을 사용하는 작업은 없지만, Hybrid Runbook 작업자를 사용하고 실행 중인 Runbook에서 PowerShell v5 기능을 활용하려는 경우 해당 하이브리드 작업자 컴퓨터에 WMF5를 설치해야 합니다.</p>\n\n<p>사용자가 Azure Automation에서 새로운 PowerShell v5 기능 중 일부를 사용하는 방법을&rsquo; 살펴보겠습니다&rsquo;.</p>\n\n<h2>PowerShell 클래스</h2>\n\n<p><a href=\"https://blogs.technet.com/b/heyscriptingguy/archive/2015/08/31/introduction-to-powershell-5-classes.aspx\">PowerShell 클래스는</a> PowerShell에 개체 지향 프로그래밍을 도입하여 새 유형의 개체를 쉽게 정의하고, 인스턴스화하고, 메서드를 호출할 수 있도록 합니다.</p>\n\n<p>이제 Azure Automation에서 PowerShell 클래스를 PowerShell v5와 동일하게 사용할 수 있습니다. 이 네이티브 PowerShell Runbook을 예로 들어 보세요.</p>\n\n<pre class=\"prettyprint\">\nclass Coffee {\n    # Property: Holds the current size of the coffee.\n    [Uint32] $Size;\n    \n    # Property: Holds the name of the coffee&#39;s owner.\n    [String] $Owner;\n\n    # Constructor: Creates a new Coffee object, with the specified size and owner.\n    Coffee([UInt32] $NewSize, [String] $NewOwner) {\n        # Set the Coffee size\n        $this.Size = $NewSize;\n        \n        # Set the Coffee name\n        $this.Owner = $NewOwner;\n    }\n\n    # Method: Drink the specified amount of coffee.\n    # Parameter: $Amount = The amount of coffee to drink.\n    [void] Drink([UInt32] $Amount) {\n        $this.Size = $this.Size - $Amount;\n    }\n}\n\n# Create a new coffee object, with a size of 16 ounces, and &#39;Joe&#39; as its owner\n$MyCoffee = New-Object Coffee -ArgumentList 16, &quot;Joe&quot;\n\n# Drink 10 ounces\n$MyCoffee.Drink(10)\n\n# Output the object\n$MyCoffee \n</pre>\n\n<p>Azure Automation에서 이를 테스트하면 다음이 반환됩니다.</p>\n\n<p><img alt=\"Announcing PowerShell v5 support in Azure Automation\" border=\"0\" height=\"244\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/bc0caa87-0ef5-4ca6-b7ba-5ad17704e947.png\" style=\"border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto\" title=\"Azure Automation에서 PowerShell v5 지원 발표\" width=\"360\"></p>\n\n<p>PowerShell 클래스는 PowerShell 워크플로 기반 Runbook에서도 사용할 수 있지만 InlineScript 블록 내에서만 사용할 수 있습니다.</p>\n\n<h2>PowerShell 모듈 병렬 버전 관리</h2>\n\n<p>PowerShell 병렬 모듈 버전 관리를 사용하면 PowerShell 내에서 모듈의 여러 버전을 사용할 수 있습니다. 이는 특정 버전의 PowerShell 모듈에 대해 작업하는 것으로 테스트된 일부 이전 스크립트가 있지만 동일한 PowerShell 모듈의 최신 버전을 요구하는 다른 스크립트가 있는 경우에 유용할 수 있습니다.</p>\n\n<p>여러 버전을 포함할 수 있도록 PowerShell 모듈을 쉽게 생성할 수 있습니다. 평소처럼 모듈 폴더를 만든 다음 사용하려는 모듈의 각 버전에 대해 이 모듈 폴더 내에 폴더를 만듭니다. 다음은&rsquo; 방금 만든 모듈 TestModule에 대한 예제입니다. 보듯이 1.0.0 및 2.0.0의 두 가지 버전을 제공합니다.</p>\n\n<p><img alt=\"Announcing PowerShell v5 support in Azure Automation\" border=\"0\" height=\"246\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2c3ef265-a708-46a7-bfa3-c6cd8e471ed8.png\" style=\"border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto\" title=\"Azure Automation에서 PowerShell v5 지원 발표\" width=\"360\">&nbsp;</p>\n\n<p>이러한 &ldquo;각 버전 폴더 내에서 모듈을&rdquo; 구성하는 일반적인 PowerShell PSM1, PSD1 및 DLL 파일을 배치하기만 하면 됩니다. 내가 만든 모듈의 버전 1.0.0에 대한 모양은 다음과&rsquo; 같습니다.</p>\n\n<p><img alt=\"Announcing PowerShell v5 support in Azure Automation\" border=\"0\" height=\"254\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2dbd3ed1-8be3-40dc-b35e-3ba57369c8c3.png\" style=\"border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto\" title=\"Azure Automation에서 PowerShell v5 지원 발표\" width=\"360\"></p>\n\n<p>물론 Azure Automation 내에서 이 모듈을 사용하려는 경우&rsquo; 가져오기 위해 압축해야 합니다. Azure Automation에서 PowerShell 모듈 사용에 대한 자세한 내용은 <a href=\"https://azure.microsoft.com/en-us/blog/authoring-integration-modules-for-azure-automation/\">여기에서</a> 확인할 수 있습니다.</p>\n\n<p>모듈을 압축하고 가져오면&rsquo; Azure Automation 내의 다른 모듈과 같이 표시됩니다.</p>\n\n<p><img alt=\"Announcing PowerShell v5 support in Azure Automation\" border=\"0\" height=\"480\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4831cc96-2dbc-42b2-852b-17a9fbf1d826.png\" style=\"border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto\" title=\"Azure Automation에서 PowerShell v5 지원 발표\" width=\"352\"></p>\n\n<p><b>참고: </b> Azure Automation은 모듈의 최신(가장 높은 버전 번호) 버전만 가져오지만 모듈 패키지에 모듈의 병렬 버전이 포함된 경우 실제로 Runbook 내에서 모두 사용할 수 있습니다. 그러나 UI는 현재 동일한 패키지에 이전 버전의 모듈을 표시하지 않습니다.</p>\n\n<p><img alt=\"Announcing PowerShell v5 support in Azure Automation\" border=\"0\" height=\"360\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f8efbf70-7acd-4780-bb1c-0e272dc8c691.png\" style=\"border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto\" title=\"Azure Automation에서 PowerShell v5 지원 발표\" width=\"313\"></p>\n\n<p><b>참고 #2: </b> 동일한 패키지 내에 병렬 버전이 포함된 모듈을 지원하지만 모듈 패키지 가져오기에서 여러 버전의 모듈을 사용하는 것은 지원되지 않습니다.</p>\n\n<p>예를 들어 버전 1과 2가 포함된 모듈 A를 Azure Automation으로 가져온 다음, 버전 3과 4를 포함하는 이후 모듈 A를 Azure Automation으로 가져온 경우 DSC 구성의 Runbook 내에서 버전 3과 4만 사용할 수 있습니다. 버전 1, 2, 3 및 4를 사용할 수 있게 하려면 가져오는 패키지에 버전 1, 2, 3 및 4가 포함되어야 합니다.</p>\n\n<p>병렬 버전을 포함하는 모듈을 가져오면 다음과 같이 특정 버전을 로드할 수 있습니다.</p>\n\n<p>PowerShell 스크립트 Runbook:</p>\n\n<blockquote>\n<p><i>Import-Module &ndash;Name &lt;ModuleName&gt; -RequiredVersion &lt;버전&gt;</i></p>\n</blockquote>\n\n<p>PowerShell 워크플로 Runbook(InlineScript 블록 내):</p>\n\n<blockquote>\n<p><i>Import-Module &ndash;Name &lt;ModuleName&gt; -RequiredVersion &lt;버전&gt;</i></p>\n</blockquote>\n\n<p>DSC 구성:</p>\n\n<ul>\n <li>DSC 리소스 사용:</li>\n</ul>\n\n<blockquote>\n<p><i>Import-DscResource -ModuleName &lt;ModuleName&gt; -ModuleVersion &lt;버전&gt;</i></p>\n</blockquote>\n\n<ul>\n <li>모듈 사용:</li>\n</ul>\n\n<blockquote>\n<p><i>Import-Module &ndash;Name &lt;ModuleName&gt; -RequiredVersion &lt;버전&gt;</i></p>\n</blockquote>\n\n<p>UI와 마찬가지로 기본적으로 최신 버전의 모듈이 런타임에 사용됩니다. 예를 들어 TestModule 모듈에는 모듈 버전을 출력하는 Get-MyVersion이라는 cmdlet이 포함되어 있습니다. 다음 Runbook:</p>\n\n<blockquote>\n<p><i>Get-MyVersion</i></p>\n</blockquote>\n\n<p>다음을 출력합니다.</p>\n\n<p><img alt=\"Announcing PowerShell v5 support in Azure Automation\" border=\"0\" height=\"259\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/72c644de-3c64-417d-b06e-9ba02ca23405.png\" style=\"border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto\" title=\"Azure Automation에서 PowerShell v5 지원 발표\" width=\"360\">&nbsp;</p>\n\n<p>하지만 내 Runbook에서 모듈의 버전 1.0.0을 명시적으로 로드하는 경우:</p>\n\n<blockquote>\n<p><i>Import-Module &ndash;Name TestModule -RequiredVersion 1.0.0</i></p>\n</blockquote>\n\n<blockquote>\n<p><i>Get-MyVersion</i></p>\n</blockquote>\n\n<p>다음을 출력합니다.</p>\n\n<p><em><img alt=\"Announcing PowerShell v5 support in Azure Automation\" border=\"0\" height=\"266\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4b5402f2-a195-40b1-b965-feb2b77ae410.png\" style=\"border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; float: none; margin-left: auto; display: block; border-top-width: 0px; margin-right: auto\" title=\"Azure Automation\" width=\"360\">에서 PowerShell v5 지원 발표 </em></p>\n\n<p>안전하게 하려면 Runbook 간에 동일한 모듈의 다른 버전을 사용하려는 경우&rsquo; 항상 Import-Module을 통해 Runbook에서 사용하려는 버전을 선언해야 합니다. 사용하려는 버전이 최신 버전인 경우에도 마찬가지입니다. Runbook의 작업이 동일한 샌드박스에서 실행 될 수 있기 때문입니다. 샌드박스가 특정 버전 번호의 모듈을 이미 명시적으로 로드한 경우(해당 샌드박스의 이전 작업이 그렇게 했기 때문에) 해당 샌드박스의 향후 작업은 해당 모듈의 최신 버전을 자동으로 로드하지 않습니다(일부 버전은 이미 로드되어 있기 때문).</p>\n\n<h2>요약</h2>\n\n<p>여기서 볼 수 있듯이 PowerShell v5에는 많은 새로운 기능이 있습니다. 이제 Azure Automation에서 이러한 기능을 활용할 수 있습니다.</p>\n\n<p>Azure Automation을 시작하기만 하면 되었나요? <a href=\"https://aka.ms/Q2p1ap\">여기서</a> 서비스에 대해 알아보고 <a href=\"https://twitter.com/AzureAutomation\">Twitter</a>에서 Azure Automation을 팔로우하여 가장 최신의 기능을 확인하세요.</p>"
