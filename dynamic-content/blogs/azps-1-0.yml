### YamlMime:Yaml
ms.openlocfilehash: 8082afdeed1140761d500f025ffd64e3f7361c35
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902336"
Slug: azps-1-0
Title: Azure PowerShell 1.0
Summary: 이제 PowerShell 갤러리 및 WebPI에서 사용할 수 있는 Azure PowerShell 1.0을 발표하게 되어 기쁘게 생각합니다. 이 Azure PowerShell 릴리스에서는 Azure PowerShell 대한 많은 변경 사항과 개선 사항을 환영합니다. 여기에서 이러한 변경 내용 및 개선 사항에 대해 알아봅니다.
Content: "<p>이제 <a href=\"https://www.powershellgallery.com/profiles/azure-sdk/\">PowerShell 갤러리</a> 및 <a href=\"https://aka.ms/webpi-azps\">WebPI</a>에서 사용할 수 있는 Azure PowerShell 1.0을 발표하게 되어 기쁘게 생각합니다. 이 Azure PowerShell 릴리스에서는 다음과 같은 변경 내용을 환영합니다.</p>\n\n<ul>\n    <li>Azure Automation에서 Azure Service Management cmdlet과 함께 Azure Resource Manager cmdlet 사용을 더 잘 지원할 수 있습니다. Resource Manager cmdlet은 아직 Azure Automation에서 기본 제공되지 않지만&rsquo; 곧 제공될 예정입니다. 그때까지 <a href=\"https://azure.microsoft.com/en-us/blog/using-azure-resource-manager-in-azure-automation-runbooks/\">는 여기에</a> 설명된 대로 수동으로 가져올 수 있습니다. 모듈이 기본으로 제공되는 시기에 대한 업데이트는 Azure Automation을 따르세요.</li>\n    <li>Cmdlet 대상 Azure의 기능에 대한 명확성을 제공하기 위해 별도의 Azure 서비스 관리 및 Resource Manager 기능</li>\n    <li>의미 체계 버전 관리를 적용하고 지정된 주 버전의 Azure PowerShell 대해 작성된 cmdlet이 업데이트에서 Azure PowerShell 호환성이 손상되는 변경이 발생하지 않도록 합니다.</li>\n    <li>WebPI 및 PowerShell 갤러리를 통한 Azure PowerShell 가용성을 통해 새 기능 및 결함 해결을 더 빠르게 전달할 수 있습니다.</li>\n    <li>Azure PowerShell 설명서의 개선 사항 및 설명서에 대한 지속적인 집중</li>\n    <li>Azure Resource Manager에 대한 인증서 인증 지원</li>\n    <li>Azure Key Vault를 통한 Virtual Machine 디스크 암호화</li>\n    <li>Azure Data Lake 및 Notification Hub cmdlet 소개</li>\n    <li>Resource Manager, Web Apps 및 기타 여러 Azure 서비스에 대한 개선 사항</li>\n</ul>\n\n<h1>Azure PowerShell 1.0 및 Azure PowerShell 0.9.x</h1>\n\n<p>Azure PowerShell 1.0 및 Azure PowerShell 0.9.x는 모두 WebPI에 설치할 수 있습니다. 이는 Azure PowerShell 0.9.x 시간의 사용자가 기존 스크립트를 1.0으로 업그레이드할 수 있도록 하기 위한 것입니다. 결함을 수정하고 Azure PowerShell 0.9.x를 지원하기 위해 최선을 다하고 있지만 새로운 기능을 추가하지는 않을 것입니다. 새로운 기능 개발은 Azure PowerShell 1.0 이상을 대상으로 합니다.</p>\n\n<h1>PowerShell 갤러리 및 WebPI를 통해 Azure PowerShell 제공</h1>\n\n<p>두 가지 기본 설치 옵션인 <a href=\"https://www.powershellgallery.com/profiles/azure-sdk/\">PowerShell 갤러리</a> 와 <a href=\"https://aka.ms/webpi-azps\">WebPI</a>가 있습니다. WebPI는 월별 업데이트를 받습니다. 매월 첫 번째 화요일을 목표로 하고 있습니다. PowerShell 갤러리는 지속적으로 업데이트를 받습니다. PowerShell 갤러리에서 설치가 익숙하다면 이는 Azure PowerShell에서 가장 유용한 최신의 첫 번째 채널이 될 것입니다.</p>\n\n<h1>WebPI를 통해 Azure PowerShell 1.0 설치</h1>\n\n<p>WebPI에서 Azure PowerShell 1.0 이상 설치는 0.9.x와 동일한 환경입니다(이 <a href=\"https://aka.ms/webpi-azps\">설치 링크를</a> 클릭하기만 하면 됩니다). Azure PowerShell 0.9.x가 설치되어 있는 경우 0.9.x를 제거하라는 메시지가 표시됩니다. PowerShell 갤러리에서 Azure PowerShell 모듈을 설치한 경우 일관성 있는 Azure PowerShell 환경이 보장되도록 설치하기 전에 설치 관리자에서 모듈을 제거해야 합니다.</p>\n\n<p>PowerShell 갤러리를 통해 Azure PowerShell 설치하고 대신 WebPI 설치를 사용하려는 경우 WebPI에서 설치하기 전에 다음을 실행하세요.</p>\n\n<pre class=\"prettyprint\">\n# Uninstall the AzureRM component modules\nUninstall-AzureRM\n\n# Uninstall AzureRM module\nUninstall-Module AzureRM\n\n# Uninstall the Azure module\nUninstall-Module Azure\n\n# Or, you can nuke all Azure* modules\n# Uninstall-Module Azure* -Force</pre>\n<!-- <script src=\"https://gist.github.com/devigned/b810efb0347ebe70713c.js\"></script> -->\n\n<p><strong>참고: </strong><em>WebPI를 통해 설치할 때 발생하는 PowerShell $env:PSModulePath에 알려진 문제가 있습니다. 시스템 업데이트 또는 기타 설치로 인해 컴퓨터를 다시 시작해야 하는 경우 $env:PSModulePath에 Azure PowerShell 설치된 경로가 포함되지 않을 수 있습니다. 컴퓨터를 다시 시작하거나 $env:PSModulePath에 Azure PowerShell 경로를 추가하여 이 문제를 해결할 수 있습니다.</em></p>\n\n<p><strong>참고: </strong><em>PowerShell 갤러리 Azure 모듈을 설치한 경우 제거하라는 메시지가 표시됩니다. 이는 설치한 모듈과 해당 모듈이 있는 위치에 대한 혼동을 방지하기 위한 것입니다. PowerShell 갤러리 모듈은 일반적으로 %ProgramFiles%\\WindowsPowerShell\\Modules에 설치됩니다. 반면, WebPI 설치 관리자는 Azure 모듈을 %ProgramFiles%\\Microsoft SDKs\\Azure\\PowerShell\\. PowerShellGet에 설치하여 모듈을 제거하고 제거될&#39;때 모듈 종속성이 로드될 때 잠긴 .dll 및 해당 폴더를 숨깁니다. PowerShell 갤러리 모듈을 제거했으며 설치 시 오류가 계속 표시되는 경우 %ProgramFiles%\\WindowsPowerShell\\Modules 폴더에서 Azure* 폴더를 제거합니다.</em></p>\n\n<h1>PowerShell 갤러리를 통해 Azure PowerShell 1.0 설치</h1>\n\n<p>PowerShell 갤러리에서 Azure PowerShell 1.0 이상 설치는 Azure PowerShell 1.0 미리 보기와 동일한 환경입니다.</p>\n\n<pre class=\"prettyprint\">\n# Install the Azure Resource Manager modules from PowerShell Gallery\nInstall-Module AzureRM\nInstall-AzureRM\n\n# Install the Azure Service Management module from PowerShell Gallery\nInstall-Module Azure\n\n# Import AzureRM modules for the given version manifest in the AzureRM module\nImport-AzureRM\n\n# Import Azure Service Management module\nImport-Module Azure</pre>\n<!--<script src=\"https://gist.github.com/devigned/cb564edea9f2c53d814e.js\"></script>-->\n\n<h1>위의 스크립트에서 어떤 일이 일어나고 있나요?</h1>\n\n<p>위의 스크립트는 상당히 무해해 보이지만 여기에 많은 것들이 있습니다. 이 모듈의 기능은 이 게시물의 앞부분에 나열된 의미 체계 버전 관리 기능의 핵심입니다. <strong>Install-Module AzureRM은 AzureRM</strong> 모듈에 대한 부트스트랩 모듈을 설치합니다. 이 모듈에는 안전하고 일관된 방식으로 AzureRM 모듈을 업데이트, 제거 및 가져오는 데 도움이 되는 cmdlet이 포함되어 있습니다.</p>\n\n<p>AzureRM 모듈에는 모듈 목록과 주요 버전의 AzureRM에 대해 호환성이 손상되는 변경이 발생하지 않도록 하는 데 필요한 버전 범위(최소 및 최대값)가 포함되어 있습니다. 의미 체계 버전 관리에 대한 자세한 내용은 다음 <a href=\"https://semver.org\">https://semver.org</a>을 참조하세요. 즉, 특정 버전의 AzureRM을 사용하여 cmdlet을 작성하고 부트스트래퍼를 통해 설치된 모든 모듈에 호환성이 손상되는 변경이 발생하지 않는다는 것을 알 수 있습니다.</p>\n\n<p>두 번째 명령인 <strong>Install-AzureRM</strong> 은 부트스트랩 모듈에 선언된 모든 모듈을 설치합니다.</p>\n\n<p>세 번째 명령인 <strong>Install-Module Azure</strong> 는 Azure 모듈을 설치합니다. 이 모듈은 Azure PowerShell 0.9.x의 서비스 관리 모듈입니다. 이 모듈에는 주요 변경 내용이 없어야 하며 이전 버전의 Azure 모듈에 대해 서로 교환할 수 있어야 합니다.</p>\n\n<p>네 번째 명령인 <strong>Import-AzureRM은 AzureRM</strong> 모듈&#39;모듈 및 버전 목록에서 모든 모듈을 가져옵니다. 이렇게 하면 로드되는 Azure PowerShell 모듈이 AzureRM 모듈에 필요한 버전 범위 내에 있습니다.</p>\n\n<p>다섯 번째 명령인 <strong>Import-Module Azure</strong> 는 Azure 서비스 관리 모듈을 가져옵니다. Azure 모듈과 AzureRM 모듈은 PowerShell 세션에 로드되며 둘 다 함께 사용할 수 있습니다.</p>\n\n<p>AzureRM 모듈에서 수행된 대부분의 작업은 지정된 최소 및 최대 버전 범위의 모듈 종속성을 도입할 수 있도록 수행되었습니다. 이는 향후 더 강력한 PowerShellGet 모듈 종속성 해결 프로그램으로 대체될 예정입니다.</p>\n\n<h1>Azure PowerShell 시작</h1>\n\n<p>Azure PowerShell 시작하는 것은 그 어느 때보 다 간단합니다. <strong>Login-AzureRmAccount</strong>를 통해 로그인하고 Azure PowerShell 사용하여 스크립팅을 진행하기만 하면 됩니다.</p>\n\n<pre class=\"prettyprint\">\n# To login to Azure Resource Manager\nLogin-AzureRmAccount\n\n# You can also use a specific Tenant if you would like a faster login experience\n# Login-AzureRmAccount -TenantId xxxx\n\n# To view all subscriptions for your account\nGet-AzureRmSubscription\n\n# To select a default subscription for your current session\nGet-AzureRmSubscription &ndash;SubscriptionName &ldquo;your sub&rdquo; | Select-AzureRmSubscription\n\n# View your current Azure PowerShell session context\n# This session state is only applicable to the current session and will not affect other sessions\nGet-AzureRmContext\n\n# To select the default storage context for your current session\nSet-AzureRmCurrentStorageAccount &ndash;ResourceGroupName &ldquo;your resource group&rdquo; &ndash;StorageAccountName &ldquo;your storage account name&rdquo;\n\n# View your current Azure PowerShell session context\n# Note: the CurrentStoargeAccount is now set in your session context\nGet-AzureRmContext\n\n# To import the Azure.Storage data plane module (blob, queue, table)\nImport-Module Azure.Storage\n\n# To list all of the blobs in all of your containers in all of your accounts\nGet-AzureRmStorageAccount | Get-AzureStorageContainer | Get-AzureStorageBlob</pre>\n<!--<script src=\"https://gist.github.com/devigned/a41a64a477c0b3c77f7b.js\"></script>-->\n\n<p>위에서 <strong>Get-AzureRmContext</strong> cmdlet을 확인할 수 있습니다. 이는 Azure PowerShell Azure PowerShell 0.9.x 스크립팅 방식에서 변경된 것입니다. Azure PowerShell 1.0은 프로필을 사용하는 대신 로컬 상태 지속성을 위해 현재 세션 내의 컨텍스트를 사용합니다. 컨텍스트는 현재 Azure 환경(퍼블릭 클라우드 또는 기타), 계정, 테넌트, 구독 및 스토리지 계정을 추적합니다. 다른 기본값에 대해 cmdlet을 실행하려면 <strong>Set-AzureRmContext</strong>를 사용합니다. 이 cmdlet에 대한 자세한 내용은 <strong>도움말 Set-AzureRmContext를</strong> 실행합니다.</p>\n\n<h1>Azure Resource Manager를 사용한 인증서 인증</h1>\n\n<p>인증서 인증은 Azure PowerShell 가장 많이 요청된 기능 중 하나입니다. &#39;테넌트 ID, 클라이언트 ID 및 비밀을 사용하는 대신 인증서를 사용하여 인증하도록 서비스 주체를 구성하는 Azure PowerShell 사용자가 기능을 추가한 것을 알려드리게 되어 기쁩니다. 이 기능을 사용하면 고객이 이전에 서비스 주체 인증을 사용할 수 없었던 Azure Automation과 같은 Azure 기능을 더 잘 활용할 수 있습니다. 다음은 Azure Resource Manager에서 Azure PowerShell 인증서 인증을 시작하는 데 도움이 되는 스크립트입니다.</p>\n\n<pre class=\"prettyprint\">\n# Login to Azure PowerShell\nLogin-AzureRmAccount\n\n# Create the self signed cert\n$currentDate = Get-Date\n$endDate = $currentDate.AddYears(1)\n$notAfter = $endDate.AddYears(1)\n$pwd = &quot;P@ssW0rd1&quot;\n$thumb = (New-SelfSignedCertificate -CertStoreLocation cert:\\localmachine\\my -DnsName com.foo.bar -KeyExportPolicy Exportable -Provider &quot;Microsoft Enhanced RSA and AES Cryptographic Provider&quot; -NotAfter $notAfter).Thumbprint\n$pwd = ConvertTo-SecureString -String $pwd -Force -AsPlainText\nExport-PfxCertificate -cert &quot;cert:\\localmachine\\my\\$thumb&quot; -FilePath c:\\certificates\\examplecert.pfx -Password $pwd\n\n# Load the certificate\n$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate(&quot;C:\\certificates\\examplecert.pfx&quot;, $pwd)\n$keyValue = [System.Convert]::ToBase64String($cert.GetRawCertData())\n$keyId = [guid]::NewGuid()\nImport-Module AzureRM.Resources\n$keyCredential = New-Object  Microsoft.Azure.Commands.Resources.Models.ActiveDirectory.PSADKeyCredential\n$keyCredential.StartDate = $currentDate\n$keyCredential.EndDate= $endDate\n$keyCredential.KeyId = $keyId\n$keyCredential.Type = &quot;AsymmetricX509Cert&quot;\n$keyCredential.Usage = &quot;Verify&quot;\n$keyCredential.Value = $keyValue\n\n# Create the Azure Active Directory Application\n$azureAdApplication = New-AzureRmADApplication -DisplayName &quot;&lt;Your Application Display Name&gt;&quot; -HomePage &quot;&lt;https://YourApplicationHomePage&gt;&quot; -IdentifierUris &quot;&lt;https://YouApplicationUri&gt;&quot; -KeyCredentials $keyCredential  \n\n# Create the Service Principal and connect it to the Application\nNew-AzureRmADServicePrincipal -ApplicationId $azureAdApplication.ApplicationId\n\n# Give the Service Principal Reader access to the current subscription\nNew-AzureRmRoleAssignment -RoleDefinitionName Reader -ServicePrincipalName $azureAdApplication.ApplicationId\n\n# Now you can login to Azure PowerShell with your Service Principal and Certificate\nLogin-AzureRmAccount -TenantId (Get-AzureRmContext).Tenant.TenantId -ServicePrincipal -Certificate Thumbprint $thumb -ApplicationId $azureAdApplication.ApplicationId</pre>\n<!--<script src=\"https://gist.github.com/devigned/dae74a7ca54000f7b714.js\"></script>-->\n\n<h1>Web Apps Cmdlet 개선 사항</h1>\n\n<p>Azure Web Apps 모듈도 1.0 릴리스에서 업데이트되었습니다. 커뮤니티의 피드백에 따라 리소스 그룹 간에 Web Apps의 더 나은 파이핑 및 목록을 사용하도록 설정하여 Web Apps cmdlet 사용을 간소화했습니다. 아래 스크립트는 단어보다 더 잘 보여 줍니다.</p>\n\n<pre class=\"prettyprint\">\n# Login if you haven&#39;t already\nLogin-AzureRmAccount\n\n# Create a new resource group\nNew-AzureRmResourceGroup -Location westus -Name webapptestrg\n\n# Create a new WebApp\nNew-AzureRmWebApp -ResourceGroupName webapptestrg -Location westus -Name djtestwebapp\n\n# List all the WebApps for all of your resource groups\n# Note: better piping support\nGet-AzureRmResourceGroup | Get-AzureRmWebApp\n\n# List all WebApps for all of your resource groups\n# Note: this is the same thing as the previous command, but less key strokes\nGet-AzureRmWebApp</pre>\n<!-- <script src=\"https://gist.github.com/devigned/f17d3929ededa6edc5a9.js\"></script> -->\n\n<h1>Azure Resource Manager 개선 사항</h1>\n\n<p>Azure PowerShell 1.0 릴리스의 일부로 관리 cmdlet을 몇 가지 개선했습니다. 이러한 향상된 기능은 1.0의 일부인 cmdlet 이름 변경에 추가됩니다. 변경 내용에는 다음이 포함되었습니다. New-AzureRMResourceGroup 새 리소스 그룹을 만드는 기능을 제공하며 New-AzureRmResourceGroupDeployment 템플릿을 배포하는 기능을 제공합니다. 파이핑을 사용하면 이 둘을 함께 사용할 수 있습니다. 이 경우 cmdlet을 더 쉽게 이해하고 사용할 수 있습니다. 또한 감사 로그에는 다양한 범위에서 로그를 가져오는 수많은 cmdlet이 있었습니다. 예: Get-AzureResourceProviderLog, Get-AzureResourceGroupLog, Get-AzureSubscriptionIdLog 및 Get-AzureResourceLog.</p>\n\n<p>로그를 가져오려면 종종 로그 cmdlet을 조합해서 실행해야 했습니다. 이는 최적의 환경이 아니었습니다. 이 기능을 매개 변수 사용을 통해 여러 범위에서 호출할 수 있는 단일 cmdlet으로 통합했습니다. 이제 범위를 지정하는 적절한 매개 변수를 사용하여 Get-AzureRmLog를 호출할 수 있습니다. 자세한 내용은 <a href=\"https://aka.ms/azps-1-0-rm-changes\">Azure Resource Manager 관리 PowerShell cmdlet에 대한 변경 내용을 확인하세요</a>.</p>\n\n<h1>Azure PowerShell 1.0을 준비하시겠습니까?</h1>\n\n<p>이러한 업데이트에 흥분하고 시작하시겠습니까? WebPI에서 <a href=\"https://aka.ms/webpi-azps\">Azure PowerShell 1.0을 설치</a>합니다.</p>"
