### YamlMime:Yaml
ms.openlocfilehash: 5959a998a7d929500d158191c71f14512440bdcf
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139897690"
Slug: elastic-database-tools-for-java
Title: Java용 탄력적 데이터베이스 도구
Summary: Java를 지원하는 Azure SQL 데이터베이스용 Elastic Database 클라이언트 라이브러리의 새 버전 릴리스를 발표하게 되어 기쁩니다.
Content: >-
  <p>Java를 지원하는 Azure SQL 데이터베이스용 Elastic Database 클라이언트 라이브러리의 새 버전 릴리스를 발표하게 되어 기쁩니다. 클라이언트 라이브러리는 개발자가 SaaS(Software as a Service) 애플리케이션에 대한 다중 테넌트 패턴에 대한 지원을 포함하여 분할을 사용하여 애플리케이션의 데이터 계층을 스케일 아웃하는 데 도움이 되는 도구를 제공합니다.</p>


  <p>클라이언트 라이브러리에서 제공하는 주요 기능은 다음과 같습니다.</p>


  <ul>
      <li>분할된 데이터베이스 맵 관리: 애플리케이션에 대한 분할된 데이터베이스 그룹을 정의하고 분할된 데이터베이스의 키 범위를 관리할 수 있습니다.</li>
      <li>데이터 종속 라우팅: 들어오는 요청을 적절한 분할된 데이터베이스로 라우팅할 수 있습니다.</li>
      <li>다중 분할된 데이터베이스 쿼리: 데이터 수집 또는 보고와 같은 작업에 대해 여러 분할된 데이터베이스에서 쿼리를 지원합니다.</li>
  </ul>


  <p>기존 C# 버전과 마찬가지로 Java 버전은 <a href="https://github.com/Microsoft/elastic-db-tools-for-java/blob/master/README.md">오픈 소스</a>이며 커뮤니티의 기여를 환영합니다.</p>


  <h2>주요 시나리오</h2><strong>


  </strong><p><strong>대용량 OLTP:</strong> 클라이언트 라이브러리를 사용하면 단일 클라우드 기반 OLTP 애플리케이션이 대규모 데이터 볼륨을 처리하고 잠재적으로 수천 개의 데이터베이스 분할된 데이터베이스에 데이터를 분산하여 고급 트랜잭션 처리 요구를 지원할 수 있습니다.</p>

  <p><strong>다중 테넌트 SaaS 애플리케이션:</strong> 클라이언트 라이브러리는 확장성이 뛰어난 다중 테넌트 클라우드 애플리케이션에 대한 데이터베이스 관리를 간소화합니다. 높은 테넌트 격리를 제공하는 각 테넌트에 대해 데이터베이스가 프로비전되는 테넌트별 데이터베이스 모델 및 여러 테넌트가 각 분할된 데이터베이스에 상주하고 비용 효율성을 위해 리소스를 공유하는 다중 테넌트 데이터베이스와 함께 사용할 수 있습니다.</p>

  <p><strong>연속 데이터 수집:</strong> 원격 분석을 캡처하거나 IoT(사물 인터넷) 데이터 수집 패턴을 사용하여 설계된 애플리케이션의 경우 클라이언트 라이브러리는 새 날짜 범위에 대한 새 분할된 데이터베이스를 정기적으로 만들 수 있도록 하여 시간이 지남에 따라 원활한 스케일링이 가능합니다. 최신 분할된 데이터베이스는 사용량이 감소함에 따라 더 높은 서비스 계층을 사용하고 시간이 지남에 따라 축소할 수 있습니다.</p>


  <h2>다음 단계</h2><strong>


  </strong><ul><strong> </strong><li>Maven 프로젝트에 라이브러리를 추가하려면 POM 파일에 다음 종속성을 간단히 추가합니다.</li>

  </ul>


  <pre style="font: 13.6px/1.45 consolas, &quot;Liberation Mono&quot;, menlo, courier, monospace; padding: 16px; color: rgb(51, 51, 51); text-indent: 0px; letter-spacing: normal; overflow: auto; margin-top: 0px; margin-bottom: 16px; font-size-adjust: none; font-stretch: normal; background-color: rgb(247, 247, 247);"><code style="background: none; margin: 0px; padding: 0px; border: 0px currentcolor; border-image: none; line-height: inherit; overflow: visible; font-family: consolas, &quot;Liberation Mono&quot;, menlo, courier, monospace; font-size: 13.6px;">&lt;dependency&gt;
      &lt;groupId&gt;com.microsoft.azure&lt;/groupId&gt;
      &lt;artifactId&gt;elastic-db-tools&lt;/artifactId&gt;
      &lt;version&gt;1.0.0&lt;/version&gt;
  &lt;/dependency&gt;</code></pre>


  <ul>
      <li>샘플 프로젝트를 시작하려면 <a href="https://github.com/Microsoft/elastic-db-tools-for-java/blob/master/README.md" target="_blank">지침에</a> 따라 샘플 프로젝트를 다운로드합니다.</li>
      <li>확장된 데이터베이스를 관리하기 위한 Azure SQL 데이터베이스 도구에 대한 자세한 내용은 <a href="https://azure.microsoft.com/en-us/documentation/learning-paths/sql-database-elastic-scale/">설명서를 참조하세요</a>.</li>
      <li>코드에 기여하려면 <a href="https://github.com/Microsoft/elastic-db-tools-for-java/blob/master/README.md">GitHub</a> 지침을 따릅니다.</li>
      <li>피드백, 질문 또는 의견을 <a href="mailto:SaaSFeedback@microsoft.com">SaaSFeedback@microsoft.com</a>제출하세요. </li>
  </ul>
