### YamlMime:Yaml
ms.openlocfilehash: 00e38c970ffef694975a0508eb2bc75908371536
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139912764"
Slug: monitor-spring-boot-applications-endtoend-using-dynatrace
Title: Dynatrace를 사용하여 Spring Boot 애플리케이션 엔드 투 엔드 모니터링
Summary: 오늘 Azure Spring Cloud에서 Dynatrace Software Intelligence Platform의 통합을 발표합니다. 지난 18개월 동안 많은 엔터프라이즈 고객과 협력하여 직면한 시나리오에 대해 알아봅니다. 이러한 고객 중 상당수는 온-프레미스 데이터 센터에서 수천 개의 Spring Boot 애플리케이션을 실행하고 있습니다.
Content: >-
  <p>오늘 Azure Spring Cloud<strong> 에서 Dynatrace Software Intelligence Platform의 통합</strong> 을 발표합니다.</p>


  <p>지난 18개월 동안 많은 엔터프라이즈 고객과 협력하여 직면한 시나리오에 대해 알아봅니다. 이러한 고객 중 상당수는 온-프레미스 데이터 센터에서 수천 개의 Spring Boot 애플리케이션을 실행하고 있습니다. 이러한 애플리케이션을 클라우드로 마이그레이션할 때 개발자가 익숙하고 수년 동안 사용해 온 솔루션을 사용하여 APM(애플리케이션 성능 모니터링)을 위해 계측해야 합니다. 또한 Dynatrace OneAgent와 같은 에이전트를 사용하여 엔드 투 엔드 모니터링을 위해 이미 미리 계측된 데스크톱 및 모바일 애플리케이션의 연속성을 보장해야 합니다. 이 에이전트는 동적 하이브리드, 다중 클라우드 환경의 종속성뿐만 아니라 모든 애플리케이션, 마이크로 서비스 및 인프라를 자동으로 검색하고 매핑합니다. Azure Spring Cloud에서 Dynatrace OneAgent의 통합을 통해 경험을 계속하고 Dynatrace를 사용하여 Spring Boot 애플리케이션을 쉽게 계측할 수 있습니다.</p>


  <p><strong>다이나트레이스 여행을 계속하세요.</strong> 현재 Spring Boot 애플리케이션을 배포하는 대부분의 조직에서는 자동화 및 APM을 사용하여 거의 모든 규모로 Spring Boot 애플리케이션을 실행하는 이점을 최대화하는 비슷한 목표를 공유합니다. Azure Spring Cloud는 컨테이너화된 워크로드 관리와 관련된 많은 수고를 추상화하는 데 탁월하지만, 조직에서 이러한 애플리케이션을 대규모로 배포할 때 이러한 애플리케이션의 성능 및 상태를 모니터링 및 유지 관리하거나 문제가 발생할&mdash; 경우 문제를 해결하는 데 어려움을 줍니다. Dynatrace 여정을 성공하고 계속할 수 있도록 Azure Spring Cloud 인스턴스에서 Dynatrace OneAgent를 사용하여 가시성을 계측, 모니터링 및 제공하는 기능을 통합하고 업그레이드했습니다. 이는 계측을 빠르고 쉽게 설정하는 것으로 시작합니다. 그런 다음 애플리케이션, JVM, 트랜잭션 등의 성능과 상태를 분석할 수 있습니다.</p>


  <p style="margin-left: 40px;"><em>&ldquo;Liantis의 경우 온-프레미스 및 클라우드 기반 Spring Boot 마이크로 서비스 모두에서 진정한 하이브리드 모니터링이 핵심이지만 복잡성 추상화의 진정한 Azure Spring Cloud 철학에 부합하는 간단하고 간단한 구현&mdash;이 필요합니다. 이를 통해 Liantis는 인프라를 구축하고 운영하는 대신 혁신적인 애플리케이션 개발에 더 많은 시간을 할애할 수 있으므로 고객과 직원에게 진정한 가치를 제공할 수 있습니다. 이전 투자와 함께 Spring 및 Dynatrace 기술로 사내 전문 지식을 구축한 Dynatrace와 Azure Spring Cloud의 Dynatrace 통합은 Liantis에게 확실한 선택이었습니다.&rdquo;</em>&mdash; 니콜라스 반 커샤버, CIO, 리안티스</p>


  <p style="margin-left: 40px;"><em>&ldquo;조직이 클라우드 네이티브 워크로드 및 마이크로 서비스로 전환함에 따라 오늘날의&rsquo; 디지털 비즈니스에는 확장할 수 있는 것이 중요합니다. 클라우드 네이티브 기술과 마이크로 서비스는 엄청난 이점을 가지고 있지만, 동적 환경은 복잡성을 가져와 조직&rsquo; 클라우드 에코시스템 전체의 관계 및 종속성을 이해하기 어렵게 만듭니다. Dynatraces&rsquo;는 Microsoft와의 전략적 파트너십을 통해 자동 및 지능형 가시성의 영향을 더욱 확장하여 디지털 변환을 가속화할 수 있습니다.&nbsp; Azure Spring Cloud와의 Dynatrace 통합을 통해 Spring Boot 애플리케이션에 대한 애플리케이션 데이터를 완전히 파악할 수 있습니다. 즉, 더 많은 시간을 혁신하고 최종 사용자를 위한 더 나은 제품을 제공합니다.&rdquo;</em>&mdash; 에릭 호스먼, 다이나트레이스 전략동맹 글로벌 디렉터</p>


  <p style="margin-left: 40px;">&ldquo;<em>Microsoft는 고객이 애플리케이션을 현대화하고 그 어느 때보다 빠르게 혁신할 수 있도록 최선을 다하고 있습니다. Dynatrace와 같은 소프트웨어 인텔리전스 솔루션을 Azure Spring Cloud와 통합하면 고객이 Spring Boot 애플리케이션에 대해 자동 및 지속적인 근본 원인 분석을 비롯한 엔드 투 엔드 가시성을 쉽게 구현할 수 있습니다.&rdquo;&mdash;</em> Julia Liuson, Microsoft 개발자 부서의 기업 부사장</p>


  <p><a href="https://www.youtube.com/watch?v=PF0_SxuiZ2w&amp;ab_channel=JavaonAzure" target="_blank"><img alt="Accelerate transformation of Spring Boot applications with Azure and Dynatrace" border="0" height="471" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/dbd6f2fa-1a43-42c1-bc88-f182f5a194d6.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="Dynatrace의 비디오" width="1024"></a></p>


  <p><em>Microsoft Azure 및 Dynatrace를 사용하여 Spring Boot 애플리케이션의 변환을 가속화하는 방법에 대한 위의 비디오를 시청하세요.</em></p>


  <p><strong>Spring Boot 애플리케이션을 계측합니다.</strong> &quot;완전한 실습 환경을 위해 프로비저닝&quot; 자동화 파이프라인을 실행하여 Terraform 또는 ARM 템플릿을 만들고 배포&mdash;하는 새 애플리케이션을 계측하고 모니터링합니다. 또는 Azure CLI를 사용하여 주문형으로 실행하여 유연성과 제어를 강화할 수 있습니다.</p>


  <p style="margin-left: 40px;"><code>az spring-cloud app update --name customers-service \<br>

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --env DT_TENANT=&lt;your-tenant&gt; DT_TENANTTOKEN=&lt;your-tenant-token&gt; \<br>

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DT_CONNECTION_POINT=&lt;your-connection-point&gt;</code></p>


  <p><strong>애플리케이션 및 해당 종속성의 자동 검색 및 매핑</strong> 동적 환경에서 실시간 인식을 유지하기 위해 Dynatrace는 애플리케이션 구성 요소(애플리케이션 서버, 프레임워크 및 마이크로 서비스 포함), 데이터베이스, 메시징 및 이벤트 시스템 및 해당 관계를 자동으로 검색하고 매핑합니다. 아래 보기에서 Dynatrace 포털은 프로덕션 워크로드에서 실행되는 모든 Spring Boot 애플리케이션을 보여 줍니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/32b3659a-b505-4855-bae1-2c5fcf93e3bb.png"><img alt="Shows all the Spring Boot applications running in a production workload." border="0" height="507" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e953deb3-fea5-467a-a10d-af9c09354afb.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="그림 1" width="1024"></a></p>


  <p><em><strong>그림 1: </strong> 프로덕션 워크로드에서 실행되는 모든 Spring Boot 애플리케이션 표시</em></p>


  <p><strong>Spring Boot 애플리케이션&rsquo; 의 엔드 투 엔드 가시성은 HTTP/S 트랜잭션 동작을 완료하여 비즈니스 결과 및 사용자 환경에 미치는 영향을 이해합니다.</strong> 아래 예제 보기에서 Dynatrace는 애플리케이션에 대한 코드 변경 없이 코드에서 구현된 모든 트랜잭션 추적을 개발자에게 제공합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c4873e02-b7ae-4279-9f49-b489b50f9c4b.png"><img alt="Shows transaction traces implemented in code without any code change to applications." border="0" height="576" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ed844aaf-66be-4e2e-a0c1-da3b508e264e.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="그림 2" width="1024"></a></p>


  <p><em><strong>그림 2: </strong> 코드에서 애플리케이션에 대한 코드 변경 없이 구현된 트랜잭션 추적을 표시합니다.</em></p>


  <p><strong>엔드포인트 모니터링, API 모니터링, DB 호출 모니터링, 최종 사용자 환경 모니터링. </strong> Dynatrace는 Azure 데이터베이스 서비스를 포함하여 Spring Boot 애플리케이션에서 시작한 모든 데이터베이스 쿼리를 캡처합니다. 아래 예제 보기에서 Dynatrace 포털은 프로덕션 워크로드 내의 모든 활성 REST API 작업을 보여 줍니다.</p>


  <p><em><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/555c1b22-bdbe-4682-a331-c82579374fc3.png"><img alt="Shows all the active REST API operations within a production workload." border="0" height="583" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/793b1e30-036d-46a2-a056-cbe81a9ab38f.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="그림 3" width="1024"></a></em></p>


  <p><em><strong>그림 3: </strong> 프로덕션 워크로드 내의 모든 활성 REST API 작업을 표시합니다.</em></p>


  <p>아래 예제 보기에서 Dynatrace 포털은 프로덕션 워크로드에서 시작된 모든 데이터베이스 쿼리를 보여 줍니다.</p>


  <p><em><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/98ccc1bb-9254-4179-807b-987daa86c994.png"><img alt="Shows all the database queries initiated by a production workload." border="0" height="576" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/286811a2-201c-44a5-ac33-08c57843f8b8.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="그림 4" width="1024"></a></em></p>


  <p><em><strong>그림 4: </strong> 프로덕션 워크로드에서 시작된 모든 데이터베이스 쿼리를 표시합니다.</em></p>


  <p>더 빠르고 신뢰할 수 있는 인시던트 해결을 위해 애플리케이션 성능 문제 및 비즈니스 결과의 <strong>근본 원인 및 영향 분석</strong> Dynatrace는 엔드 투 엔드 추적을 사용하여 심층 코드 수준의 가시성을 제공하며, 통합은 AI 지원 문제 감지 및 자동 근본 원인 분석을 제공하여 배포를 계속 유지하고 정상 애플리케이션과 비정상 애플리케이션을 구분할 수 있도록 합니다.</p>


  <p><em><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0f3655bb-1ac2-4a5b-b6a0-f4a38f41711c.png"><img alt="Shows results from stack trace analysis." border="0" height="576" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d5ed1236-50f2-475f-a0b2-031196fbcaa8.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="그림 5" width="1024"></a></em></p>


  <p><em><strong>그림 5: </strong> 스택 추적 분석의 결과 표시</em></p>


  <p>Spring Boot 애플리케이션 인스턴스에서 <strong>변칙을 검색</strong>합니다. Dynatrace는 자동화된 근본 원인 분석, 코드 수준 핫스폿 분석, 상위 데이터베이스 쿼리 및 예외 분석을 위해 AI 엔진을 통해 수집된 데이터를 전달합니다. 아래 예제 스크린샷에서 Dynatrace는 데이터를 자세히 살펴볼 필요가 없도록 CPU 집약적인 코드 모듈을 자동으로 식별합니다.</p>


  <p><em><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e9c26a90-7fce-416f-961c-de558698e2b5.png"><img alt="Code modules that are CPU intensive so that you do not have to dig through the data." border="0" height="576" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/29a60fc5-e73e-42c9-9bc7-1d7d46b3e502.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="그림 6" width="1024"></a></em></p>


  <p><em><strong>그림 6: </strong> 데이터를 자세히 살펴볼 필요가 없도록 CPU 집약적인 코드 모듈</em></p>


  <p>시작된 모든 상위 데이터베이스 쿼리, 이러한 쿼리의 비용이 얼마나 드는지, 애플리케이션에서 이러한 쿼리를 호출하는 횟수를 찾을 수 있습니다. 아래 예제 스크린샷에서 Dynatrace는 프로덕션 워크로드에서 시작된 상위 데이터베이스 쿼리를 보여 줍니다.</p>


  <p><em><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/58d31583-2030-41a1-b1b0-26317d1dfc3e.png"><img alt="Shows top database queries initiated by a production workload." border="0" height="576" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/44225262-d13c-42a9-ac3e-4c2d616abb7f.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="그림 7" width="1024"></a></em></p>


  <p><em><strong>그림 7: </strong> 프로덕션 워크로드에서 시작된 상위 데이터베이스 쿼리를 표시합니다.</em></p>


  <p>모든 애플리케이션 코드 수준 예외는 예외가 발생한 위치의 스택 추적에 많은 세부 정보와 함께 기록됩니다. 아래 예제 스크린샷에서 Dynatrace 포털은 프로덕션 워크로드에서 throw된 주요 예외를 보여 줍니다.</p>


  <p><em><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fdcd4aee-b4cd-42c3-beae-a5af9c06abc3.png"><img alt="Shows the top exceptions thrown by a production workload." border="0" height="576" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/14bbc5ec-4ca3-43de-a6e6-8e35d93ec82d.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="그림 8" width="1024"></a></em></p>


  <p><em><strong>그림 8</strong>&mdash; 는 프로덕션 워크로드에서 throw된 주요 예외를 보여 줍니다.</em></p>


  <p>Dynatrace Software Intelligence Platform은 Spring Boot 애플리케이션의 모든 성능 메트릭을 자동으로 기준으로 합니다. 애플리케이션의 응답 시간이 자동 검색 기준을 초과하여 증가하는 경우 플랫폼은 기준에서 위반된 응답 시간 수와 같은 정보를 사용하여 경고를 만듭니다. 아래 예제 스크린샷에서 Dynatrace는 프로덕션 워크로드의 몇 가지 서비스에 대한 응답 시간 저하를 보여 줍니다.</p>


  <p><em><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4450397b-5c1a-43c7-a461-2adea55fbaa3.png"><img alt="Shows response time degradation for a few services in a production workload." border="0" height="503" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7970bb50-9355-45b6-8117-35dad79c39c0.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="그림 9" width="1024"></a></em></p>


  <p><em><strong>그림 9: </strong> 프로덕션 워크로드의 몇 가지 서비스에 대한 응답 시간 저하 표시</em></p>


  <p>Dynatrace는 이러한 응답 시간 증가의 원인, 특히 데이터베이스 서비스에 연결하는 데 걸린 시간에 대한 인사이트를 제공합니다. 아래 예제에서 Dynatrace 포털은 데이터베이스에 연결하는 데 걸린 시간을 호출합니다.</p>


  <p><em><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/50b7a9ff-1c03-4633-b17e-97be5c4060b6.png"><img alt="Shows time taken to make connections to a database." border="0" height="480" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3406a831-475b-4dcb-bda9-48304c34248a.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="그림 10" width="1024"></a></em></p>


  <p><em><strong>그림 10: </strong> 데이터베이스에 연결하는 데 걸린 시간을 보여 줍니다.</em></p>


  <p>Dynatrace는 모든 오류를 자동으로 검색합니다. 아래 예제에서 Dynatrace는 오류율이 증가하여 외부 네트워크에 도달하도록 알릴 수 있습니다.</p>


  <p><em><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/387479fd-290d-4e58-aed7-cde982940b41.png"><img alt="Signals an increase in failure rates to reach an external network." border="0" height="509" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b3bbcca9-82c8-4051-bbcd-a162d6a453b2.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="그림 11" width="1024"></a></em></p>


  <p><em><strong>그림 11: </strong> 오류율이 증가하여 외부 네트워크에 연결되었음을 알릴 수 있습니다.</em></p>


  <p><strong>최종 사용자에게 가치를 제공하는 데 집중합니다.</strong> 계측되면 여러 Spring Boot 애플리케이션 인스턴스로 확장할 때 모든 새 애플리케이션 인스턴스가 자동으로 모니터링됩니다. Dynatrace를 사용하면 애플리케이션 개발자가 Spring Boot 애플리케이션을 종단 간 관찰할 수 있습니다. 에이전트 설치 및 유지 관리를 관리하는 데 소요되는 시간을 줄이고 인시던트 식별 및 해결에 더 많은 에너지를 소비합니다. Azure Spring Cloud 서비스는 Dynatrace OneAgent를 주기적으로 업데이트하기 위한 온포인트입니다.</p>


  <h2>솔루션을 빌드하고 지금 모니터링</h2>


  <p>Azure Spring Cloud는 Microsoft 및 VMware에서 공동으로 빌드, 운영 및 지원됩니다. 인프라 및 Spring Cloud 미들웨어 관리의 복잡성을 추상화하여 비즈니스 논리를 빌드하는 데 집중하고 Azure에서 동적 크기 조정, 패치, 보안, 규정 준수 및 고가용성을 처리할 수 있도록 하는 Spring Boot 애플리케이션용 완전 관리형 서비스입니다. 몇 단계를 통해 Azure Spring Cloud를 프로비전하고, 애플리케이션을 만들고, Spring Boot 애플리케이션을 배포 및 확장하고, 몇 분 안에 모니터링을 시작할 수 있습니다. 계속해서 개발자 친화적이고 엔터프라이즈급 기능을 Azure Spring Cloud에 도입할 예정입니다.</p>


  <p>Azure Spring Cloud를 사용하여 영향력 있는 솔루션을 빌드하는 방법을 듣고 싶습니다. Dynatrace를 사용하여 Spring Boot 애플리케이션 <a href="https://aka.ms/dynatrace-in-azure-spring-cloud" target="_blank">모니터링을 시작</a>합니다.</p>


  <h2>리소스</h2>


  <ul>
      <li><a href="https://aka.ms/get-started-with-azure-spring-cloud" target="_blank">빠른 시작을</a> 사용하여 Azure Spring Cloud에 Spring 애플리케이션을 배포합니다.</li>
      <li><a href="https://docs.microsoft.com/en-us/learn/modules/azure-spring-cloud-workshop/" target="_blank">GitHub MS Learn 모듈</a> 또는 <a href="https://github.com/microsoft/azure-spring-cloud-training" target="_blank">자가 진행 워크샵</a>을 사용하여 알아봅니다.</li>
      <li>Dynatrace의 관련 <a href="https://www.dynatrace.com/support/help/shortlink/azure-spring" target="_blank">설명서를</a> 참조하세요.</li>
      <li>Spring Cloud를 사용하여 빌드된 배포된 버전의 Spring Petclinic을 <a href="https://github.com/Azure-Samples/spring-petclinic-microservices" target="_blank">배포</a>합니다.</li>
      <li>엔터프라이즈 모범 사례<a href="https://docs.microsoft.com/en-us/azure/spring-cloud/reference-architecture" target="_blank">Azure Spring Cloud 참조 아키텍처</a>를 활용하여 Spring Boot 애플리케이션을&mdash; 배포합니다.</li>
      <li><a href="https://docs.microsoft.com/en-us/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-cloud" target="_blank">Spring Boot</a>, <a href="https://docs.microsoft.com/en-us/azure/developer/java/migration/migrate-spring-cloud-to-azure-spring-cloud" target="_blank">Spring Cloud</a> 및 <a href="https://aka.ms/migrate-tomcat-to-azure-spring-cloud-service" target="_blank">Tomcat</a> 애플리케이션을 Azure Spring Cloud로 마이그레이션합니다.</li>
      <li><a href="https://docs.microsoft.com/en-us/azure/developer/java/spring-framework/" target="_blank">Azure 서비스와 상호 작용하는</a> Wire Spring 애플리케이션</li>
      <li>피드백 및 질문은 <a href="mailto:AzureSpringCloud-Talk@service.microsoft.com" target="_blank">이메일을 보내</a>주세요.</li>
  </ul>
