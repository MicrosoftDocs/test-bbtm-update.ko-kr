### YamlMime:Yaml
ms.openlocfilehash: c304ab240a0df011afb81697425c9648d34c5609
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899107"
Slug: announcing-release-of-visual-studio-2013-update-3-and-azure-sdk-2-4
Title: Visual Studio 2013 업데이트 3 및 Azure SDK 2.4 릴리스 발표
Summary: 오늘 .NET용 Visual Studio 2013 업데이트 3 및 Azure SDK 2.4 릴리스를 발표하게 되어 기쁩니다. 이 게시물에서는 이러한 릴리스에서 사용하도록 설정된 Azure 개발을 위한 새로운 도구 기능을 설명합니다....
Content: >-
  오늘 .NET용 Visual Studio 2013 업데이트 3 및 Azure SDK 2.4 릴리스를 발표하게 되어 기쁩니다. 이 게시물에서는 이러한 릴리스에서 사용하도록 설정된 Azure 개발을 위한 새로운 도구 기능에 대해 설명합니다.


  <span style="text-decoration: underline;">Visual Studio 업데이트 3</span> [<a href="https://go.microsoft.com/fwlink/?LinkId=403040">다운로드</a>]

  <ul>
   <li><strong>웹 사이트</strong>: 콘솔 또는 웹 프로젝트에서 WebJobs를 게시합니다.</li>
   <li><strong>Mobile Services</strong>: Mobile Services 프로젝트를 만들 때 클라우드에서 개발/테스트 환경을 만듭니다. .NET Mobile Services 푸시 알림 마법사를 사용합니다.</li>
   <li><strong>Notification Hubs</strong>: 디바이스 등록을 보고 관리합니다.</li>
  </ul>

  &nbsp;


  <span style="text-decoration: underline;">.NET용 Azure SDK 2.4</span> [<a href="https://go.microsoft.com/fwlink/p/?linkid=323510&amp;clcid=0x409">VS 2013 downloadVS</a> |  <a href="https://go.microsoft.com/fwlink/p/?linkid=323511&amp;clcid=0x409">2012 다운로드</a>]


  .NET용 Azure SDK 2.4를 추가로 설치하면 다음 기능을 활용할 수도 있습니다.

  <ul>
   <li><strong>Virtual Machines</strong>: 원격 디버그 32비트 Virtual Machines. 동적 확장(예: 맬웨어 방지, Puppet, Chef 및 사용자 지정 스크립트)의 설치 &amp; 구성을 포함하여 Virtual Machines를 구성합니다. 디스크 상태의 Virtual Machine 스냅샷을 만듭니다.</li>
   <li><strong>Storage</strong>: 진단에 대한 Storage 활동 로그를 봅니다. Visual Studio 지역 중복 Storage Read-Access 프로비전합니다.</li>
   <li><strong>Cloud Services</strong>: Emulator Express는 새 프로젝트의 기본 옵션입니다(전체 Emulator 사용되지 않음). 서비스 모델에서 새 네트워킹 기능을 구성합니다.</li>
  </ul>

  &nbsp;


  또한 <a href="https://go.microsoft.com/?linkid=9811175">오늘 0.8.6 릴리스</a>를 포함하여 Azure PowerShell 대한 여러 업데이트를 시작했습니다.새로운 기능의 세부 정보는 <a href="https://github.com/Azure/azure-sdk-tools/blob/master/ChangeLog.txt">변경 로그</a>에서 사용할 수 있습니다.

  <h2>웹 사이트: 콘솔 프로젝트에서 WebJobs 게시</h2>

  1월에는 웹 사이트 내에서 백그라운드 코드(프로그램 또는 스크립트)를 쉽게 가져와 실행할 수 있는 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs">WebJobs</a> 라는 기능을 추가했습니다. 지금까지 WebJob을 게시하려면 포털 또는 Azure PowerShell 사용해야 했습니다. 오늘 릴리스에서는 Visual Studio 내에서 바로 WebJobs를 게시할 수도 있습니다.


  시작하려면 기존 콘솔 프로젝트를 열거나 새 콘솔 프로젝트를 만듭니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="WebJobs" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo.png" alt="foo" width="500" height="345" border="0" />


  Main 메서드를 구현합니다. 필수는 아니지만 <a href="https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs">Microsoft Azure WebJobs SDK</a>를 사용할 수 있습니다. <a href="https://www.nuget.org/packages/Microsoft.Azure.Jobs/">NuGet 패키지</a>로 사용할 수 있는 SDK를 사용하면 항목이 큐, Blob 또는 테이블에 추가되는 경우 Azure Storage 통합하고 프로그램에서 함수를 트리거하는 것이 특히 쉽습니다.


  Azure에 프로젝트를 게시할 준비가 되면 프로젝트를 선택하고 마우스 오른쪽 단추를 클릭하고 <b>Azure WebJob으로 게시</b> 명령을 선택합니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="WebJobs" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo2.png" alt="foo2" width="360" height="177" border="0" />


  그런 다음 WebJob을 구성하고 실행 방법을 선택하는 화면이 표시됩니다 <b>. 연속 실행, 일정에 따라 실행 또는 주문형 실행</b>.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="WebJobs" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo3.png" alt="foo3" width="500" height="268" border="0" />


  연속 옵션을 선택하는 경우 코드가 무한 루프로 실행되도록 작성되었는지 확인합니다. <b>확인을</b> 선택하면 게시할 웹 사이트를 선택하는 웹 게시 대화 상자가 표시됩니다. 기존 웹 사이트의 일부로 WebJob을 배포하거나 새 웹 사이트를 만들 수 있습니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="WebJobs" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo4.png" alt="foo4" width="450" height="353" border="0" />


  마지막으로 Azure Portal을 열고 WebJob이 포함된 웹 사이트로 이동합니다. <b>WebJobs 탭을 선택하면 WebJob</b>에 대한 유용한 정보가 표시됩니다. 여기에는 로그 및 모니터링 상태를 보기 위한 대시보드에 대한 링크가 포함됩니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="WebJobs" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo5.png" alt="foo5" width="500" height="273" border="0" />

  <h2>웹 사이트: 웹 프로젝트에서 WebJobs 게시</h2>

  WebJobs를 한 번에 하나씩 게시하는 대신 Azure 웹 사이트 게시의 일부로 WebJobs를 쉽게 게시할 수 있습니다. 이렇게 하면 웹 사이트 및 모든 관련 WebJobs를 게시하는 한 단계만 수행됩니다. 웹 Project 마우스 오른쪽 단추로 클릭하고 <b>새 Azure WebJob Project 또는 기존 추가 Project Azure WebJob으로 선택하여&gt;</b> 새 콘솔 또는 기존 콘솔 프로젝트를 연결합니다.<b>&gt;</b>


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="WebJobs" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo6.png" alt="foo6" width="500" height="323" border="0" />


  이제 <b>게시</b> 를 선택하여 Azure 웹 사이트에 프로젝트를 게시하면 연결된 WebJobs도 배포됩니다.

  <h2>Mobile Services: .NET Mobile Services 대한 푸시 알림 마법사</h2>

  Visual Studio 2013 업데이트 3에서는 푸시 알림 마법사에서 .NET Mobile Services 대한 지원을 추가하여 Windows Phone 및 Windows 스토어 애플리케이션에 푸시 알림을 더 쉽게 추가할 수 있도록 했습니다. 마법사는 푸시 알림을 위해 클라이언트를 등록한 다음 푸시 알림을 보내는 샘플 백 엔드 논리를 제공합니다. 마법사를 호출하려면 프로젝트를 선택하고 마우스 오른쪽 단추를 클릭하고 <b>추가 -&gt; 푸시 알림</b> 명령을 선택합니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="clip_image002[7]" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0027.png" alt="clip_image002[7]" width="334" height="494" border="0" />

  <h2>Mobile Services: Project 만드는 동안 Mobile Services 프로비전</h2>

  이제 프로젝트를 만들 때 개발/테스트 환경으로 사용할 수 있는 모바일 서비스를 함께 만들 수도 있습니다. 프로젝트를 개발할 때 함께 제공되는 모바일 서비스에 신속하게 게시하여 라이브 서비스에 대한 코드를 테스트할 수 있습니다. 새 모바일 서비스를 프로비전하려면 새 ASP.NET Project 대화 상자<b>에서 클라우드에서 호스트</b>할 확인란을 선택하기만 하면됩니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="FileNewMobile" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/FileNewMobile.png" alt="FileNewMobile" width="610" height="456" border="0" />

  <h2>Notification Hubs: 디바이스 등록 보기 및 관리</h2>

  Notifications Hubs는 이미 디바이스(Windows Phone, Windows Store, iOS, Android 또는 Kindle Fire)에 테스트 알림을 보내는 것을 지원합니다. Visual Studio 업데이트 3에서는 디바이스 등록을 보고, 태그를 편집하고, 등록을 삭제할 수 있는 도구를 더 추가했습니다. 또한 빠른 요약 보기를 제공하기 위해 플랫폼별 등록 횟수를 제공합니다. 알림 허브 도구에 액세스하려면 서버 탐색기에서 <strong>Notifications Hubs 노드를</strong> 찾아 마우스 오른쪽 단추를 클릭하고 <strong>진단을</strong> 선택합니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="NotificationsHub" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/NotificationsHub.png" alt="NotificationsHub" width="588" height="500" border="0" />

  <h2>Virtual Machines: 구성</h2>

  Azure SDK의 2.4 릴리스에서는 Visual Studio IaaS 가상 머신 사용에 대한 지원을 계속 개선하고 있습니다. Azure 가상 머신에서 실행되는 서비스를 빌드하든, 가상 머신을 사용하여 개발 또는 테스트 환경을 호스트하든 관계없이 작업을 더 쉽게 수행할 수 Visual Studio 도구를 찾을 수 있습니다.


  서버 탐색기를 사용하는 경우 이 릴리스에서는 이제 Virtual Machines의 상황에 맞는 메뉴에서 <b>구성</b> 옵션을 확인할 수 있습니다. <b>구성</b>을 클릭하여 VM의 속성과 해당 VM의 엔드포인트, 확장 및 디스크 구성을 보고 편집할 수 있는 가상 머신 구성 창을 엽니다. VM 구성 창에서 <b>시작</b>, <b>종료</b>, <b>커넥트</b> 및 <b>캡처</b>(나중에 자세히 설명)와 같은 작업을 수행할 수도 있습니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="clip_image001[9]" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0019.png" alt="clip_image001[9]" width="438" height="426" border="0" />


  또한 VM 구성 창을 사용하면 한 구성을 다른 구성과 쉽게 비교할 수 있도록 여러 VM을 한 번에 열 수 있습니다.


  엔드포인트를 추가하려면 사용 가능한 엔드포인트 목록에서 엔드포인트 유형을 선택한 다음 추가를 클릭합니다. 엔드포인트가 추가되면 이름 및/또는 포트를 요구 사항에 맞게 변경할 수 있습니다. <strong>업데이트를</strong> 클릭하여 VM에 변경 내용을 적용합니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="clip_image003[7]" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0037.png" alt="clip_image003[7]" width="610" height="366" border="0" />


  마찬가지로 구성 창에서 가상 머신에서 확장을 추가하거나 구성할 수 있습니다. Virtual Machine 확장은 VM 기능을 확장하고 VM을 원하는 상태로 전환하거나 VM에서 최신 맬웨어 방지를 실행하는 것과 같은 다양한 VM 관리 작업을 간소화하는 소프트웨어 구성 요소입니다. 자세한 내용은 <a href="https://azure.microsoft.com/blog/2014/04/11/vm-agent-and-extensions-part-1/">VM 확장의 블로그 게시물을</a> 참조하세요. 확장을 추가하려면 사용 가능한 확장 목록에서 확장을 선택하고 <strong>추가</strong>를 클릭합니다.실수로 확장을 추가하는 경우 아직 업데이트를 클릭하지 않은 경우 제거할 수 있습니다.


  추가되는 확장 유형에 따라 구성을 제공해야 할 수도 있습니다. 확장을 선택하고 구성을 클릭하여 이 작업을 수행할 수 있습니다. 확장 구성의 형식 및 스키마는 확장 게시자에 의해 정의됩니다. 구성 대화 상자의 맨 아래에 있는 링크를 클릭하여 확장을 구성하는 방법에 대한 자세한 내용을 확인할 수 있습니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="ConfigureExtension" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ConfigureExtension.png" alt="ConfigureExtension" width="551" height="399" border="0" />


  확장 구성 대화 상자에서 공용 구성과 프라이빗 구성을 모두 제공할 수 있습니다. 필요에 따라 공용 구성을 읽고 업데이트할 수 있습니다. 프라이빗 구성은 쓰기 전용입니다. 프라이빗 구성을 적용한 후에는 확장에서만 읽을 수 있습니다. Visual Studio, 포털 또는 다른 도구에서 검색할 수 없습니다. 확장 게시자는 개인 구성에 저장된 암호와 같은 중요한 정보를 포함하도록 선택할 수 있습니다.

  <h2>Virtual Machines: 스냅샷</h2>

  스냅샷은 동일한 VM의 복제본을 만드는 데 사용할 수 있는 VM 이미지를 쉽게 캡처할 수 있는 방법을 제공합니다. 원하는 방식으로 구성된 가상 머신이 있는 Imagine 새 서비스를 설치하고 방화벽을 구성하고 데이터 디스크를 연결하여 요구 사항을 충족할 수 있습니다. 나중에 사용자 지정된 VM을 사용하여 복제본을 만들 수 있도록 VM 이미지를 만드는 것이 좋습니다.


  VM 이미지를 만들려면 VM 구성 창에서 <strong>이미지 캡처</strong> 단추를 클릭합니다. 그러면 VM 이미지에 대한 이미지 레이블 및 설명을 제공할 수 있는 대화 상자가 표시됩니다. Windows VM의 경우 VM에서 Sysprep을 실행하여 일반화된 VM 이미지를 만들어야 합니다. Sysprep은 새 VM에 대한 템플릿으로 쉽게 다시 사용할 수 있도록 Windows 시스템 특정 정보를 제거합니다. Sysprep을 실행한 경우 가상 머신에서 Sysprep을 실행한 확인란을 선택하고 <strong>캡처</strong> 단추를 클릭하여 VM 이미지를 캡처할 수 있습니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="CaptureVM" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/CaptureVM.png" alt="CaptureVM" width="600" height="396" border="0" />


  VM 이미지를 캡처한 후에는 해당 이미지 스냅샷을 기반으로 새 가상 머신을 만들 수 있습니다. 서버 탐색기의 Virtual <strong>Machines</strong> 노드에 있는 상황에 맞는 메뉴에서 <strong>Virtual Machine 만들기</strong> 옵션을 선택하여 새 Virtual Machine 만들기 마법사를 표시합니다. 마법사의 이미지 선택 페이지에서 <strong>이미지 유형</strong> 드롭다운을 <strong>프라이빗 이미지 - VM 이미지</strong> 로 설정하여 캡처된 VM 이미지를 표시합니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="CreateNewVM" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/CreateNewVM.png" alt="CreateNewVM" width="610" height="431" border="0" />


  마법사의 다음 페이지를 계속 진행하여 Machine 설정, Cloud Service 및 엔드포인트와 같은 새 VM에 대한 추가 정보를 제공할 수 있습니다. 엔드포인트 구성이 완료되면 만들기를 클릭하여 캡처한 VM 이미지를 기반으로 새 가상 머신을 만들 수 있습니다.

  <h2>Virtual Machines: 32비트 Virtual Machines에 대한 원격 디버깅</h2>

  이제 Visual Studio Azure Virtual Machines에서 실행되는 32비트 애플리케이션의 원격 디버깅을 지원합니다. 서버 탐색기의 상황에 맞는 메뉴에서 가상 머신의 특정 인스턴스에서 디버깅을 사용하도록 설정할 수 있습니다.

  <h2>Storage: Visual Studio Read-Access Geo-Redundant Storage 프로비전<b></b></h2>

  RA-GRS(Read-Access Geo-Redundant Storage)를 사용하면 보조 위치에 복제된 데이터에 대해 "읽기 전용" 액세스를 제공하여 스토리지 계정에 대한 읽기 가용성을 높일 수 있습니다. 이제 Visual Studio 스토리지 계정을 만들 때 스토리지에 대한 중복성 옵션으로 RA-GRS를 선택할 수 있습니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="CreateStorageAccount" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/CreateStorageAccount.png" alt="CreateStorageAccount" width="490" height="359" border="0" />

  <h2>Storage: Storage 활동 로그 보기</h2>

  Azure Storage 로깅은 진단에 사용할 수 있는 스토리지 계정에 대해 실행된 요청의 추적을 제공합니다. Blob 컨테이너, 테이블 또는 큐에 로깅을 사용하도록 설정하면 로그가 $logs Blob 컨테이너에 표시됩니다. 마찬가지로 $metrics 테이블에는 Blob 컨테이너의 용량 및 Blob 컨테이너, 큐 및 테이블에 대한 트랜잭션에 대한 정보가 포함되어 있습니다. 이제 Visual Studio 서버 탐색기에서 직접 $logs Blob 컨테이너 및 $metrics 테이블을 볼 수 있습니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="clip_image010" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image010.png" alt="clip_image010" width="396" height="410" border="0" />

  <h2>Cloud Services: 기본값으로 Emulator Express; 전체 컴퓨팅 Emulator 사용 중단</h2>

  Emulator Express를 시작하여 관리자 권한 없이 다중 역할 Cloud Services를 로컬로 테스트할 수 있도록 오랜 고객 요청을 해결했습니다. 이후 새 프로젝트에 대해 고객이 사용하는 기본 컴퓨팅 에뮬레이터가 되었습니다. 단일 코드 베이스에 대한 향후 투자를 집중하기 위해 Emulator Express를 위해 전체 Emulator 더 이상 사용되지 않습니다.


  SDK 2.4의 새 Cloud Services 프로젝트는 기본적으로 Emulator Express를 사용합니다. 그러나 Emulator Express는 역할당 하나의 인스턴스로 제한됩니다.

  <h2>Cloud Services: 서비스 모델의 새로운 네트워킹 기능</h2>

  PowerShell을 통해 IaaS에서 다음 기능을 사용할 수 있습니다. 현재 SDK 2.4 릴리스에서는 이제 서비스 모델을 통해 Cloud Services(웹 및 작업자 역할)에 사용할 수 있습니다.

  <h3>ILB(내부 부하 분산)</h3>

  ILB를 사용하면 사용자가 신뢰 경계 내에서만 액세스할 수 있는 고가용성 서비스(이 경우 클라우드 서비스)를 실행할 수 있습니다.내부 부하 분산 장치 설정은 서비스 모델의 배포 수준에서 정의됩니다.


  .cscfg에는 부하 분산 장치 정보를 포함하도록 확장된 배포 수준 <b>NetworkConfiguration</b> 섹션이 있습니다.

  <pre class="prettyprint">&lt;NetworkConfiguration&gt;
    …
    &lt;LoadBalancers&gt;
      &lt;LoadBalancer name="name"&gt;
        &lt;FrontendIPConfiguration type="private" subnet="subnet-name" staticVirtualNetworkIPAddress="static-IP-address"/&gt;
      &lt;/LoadBalancer&gt;
    &lt;/LoadBalancers&gt;
  &lt;/NetworkConfiguration&gt;</pre>

  내부 부하 분산 장치는 .csdef의 엔드포인트 정의에서 참조됩니다. ILB 참조는 <b>InputEndpoints</b>에 대해서만 지원됩니다. 모든 역할 유형(작업자 역할 및 웹 역할)에 대해 ILB 참조가 지원됩니다.

  <pre class="prettyprint">&lt;WorkerRole name="worker-role-name" vmsize="worker-role-size" enableNativeCodeExecution="[true|false]"&gt;
    …
    &lt;Endpoints&gt;
      &lt;InputEndpoint name="input-endpoint-name" protocol="[http|https|tcp|udp]" localPort="local-port-number" port="port-number" certificate="certificate-name" loadBalancerProbe="load-balancer-probe-name" loadBalancer="load-balancer-name" /&gt;
    &lt;/Endpoints&gt;
  &lt;/WorkerRole&gt;</pre>

  <h3>가상 머신 및 역할 인스턴스에 대한 공용 IP 주소</h3>

  이제 사용자는 역할 인스턴스에 대한 공용 외부 IP를 얻을 수 있습니다. 이러한 공용 IP 주소의 모든 트래픽은 모든 포트에서 지정된 VM 또는 역할 인스턴스로 전송됩니다.


  인스턴스 수준 공용 IP는 서비스 모델의 배포 수준에서 정의됩니다. 역할의 모든 인스턴스에 대한 외부 IP를 CSCFG 스키마에 추가해야 합니다. 예제:

  <pre class="prettyprint">&lt;NetworkConfiguration&gt;
    &lt;VirtualNetworkSite name="VNet"/&gt;
    &lt;AddressAssignments&gt;
      &lt;InstanceAddress roleName="VMRolePersisted"&gt;
        &lt;PublicIPs&gt;
          &lt;PublicIP name="public-ip-name"/&gt;
        &lt;/PublicIPs&gt;
      &lt;/InstanceAddress&gt;
    &lt;/AddressAssignments&gt;
  &lt;/NetworkConfiguration&gt;</pre>

  이 구문은 나중에 다양한 형식(IPv4, IPv6) 및 여러 공용 IP 주소를 지원하도록 설계되었지만 지금은 정확히 하나의 공용 IP 주소로 제한됩니다. IP 주소의 유형은 IPv4로 유추됩니다.

  <h3>Azure Load Balancer 대한 구성 가능한 유휴 시간 제한</h3>

  Azure Load Balancer 구성 가능한 TCP 유휴 시간 제한을 지원합니다. 이제 인바운드 연결에 대해서만 4~30분 동안 설정할 수 있습니다. 이 구성 가능한 유휴 시간 제한 기간을 사용하면 연결에서 활동이 없더라도 응용 프로그램이 최대 30분 동안 TCP 연결을 유지할 수 있습니다.


  .csdef에서 Cloud Services용 엔드포인트 설정을 지정합니다. Cloud Services 배포의 TCP 시간 제한을 업데이트하려면 배포를 업그레이드해야 합니다. 단, 공용 IP에 대해서만 TCP 시간 제한을 지정하는 경우는 예외입니다. 공용 IP 설정은 .cscfg에 포함되어 있으므로 배포 업데이트 및 업그레이드를 통해 업데이트할 수 있습니다.


  아래에 .csdef에서 엔드포인트 설정을 변경하는 예제가 나와 있습니다.

  <pre class="prettyprint">&lt;WorkerRole name="worker-role-name" vmsize="worker-role-size" enableNativeCodeExecution="[true|false]"&gt;
    &lt;Endpoints&gt;
      &lt;InputEndpoint name="input-endpoint-name" protocol="[http|https|tcp|udp]" localPort="local-port-number" port="port-number" certificate="certificate-name" loadBalancerProbe="load-balancer-probe-name" idleTimeoutInMinutes="tcp-timeout" /&gt;
    &lt;/Endpoints&gt;
  &lt;/WorkerRole&gt;</pre>

  공용 IP의 시간 제한 설정에 대한 .cscfg 변경 내용은 다음과 같습니다.

  <pre class="prettyprint">&lt;NetworkConfiguration&gt;
    &lt;VirtualNetworkSite name="VNet"/&gt;
    &lt;AddressAssignments&gt;
      &lt;InstanceAddress roleName="VMRolePersisted"&gt;
        &lt;PublicIPs&gt;
          &lt;PublicIP name="public-ip-name" idleTimeoutInMinutes="timeout-in-minutes"/&gt;
        &lt;/PublicIPs&gt;
      &lt;/InstanceAddress&gt;
    &lt;/AddressAssignments&gt;
  &lt;/NetworkConfiguration&gt;</pre>

  <h2>요약</h2>

  <a href="https://go.microsoft.com/fwlink/?LinkId=403040">Visual Studio 2013 업데이트 3</a> 및 Azure SDK 2.4를 사용하면 그 어느 때보다 쉽게 풍부한 클라우드 애플리케이션 개발을 시작할 수 있습니다. <a href="https://azure.microsoft.com/en-us/develop/net/">Azure 개발자 센터의 증가하는 .NET 개발자 리소스 집합</a>과 함께, 오늘날의 릴리스는 개발 환경을 더 즐겁고 효율적으로 만들어야 합니다.


  Azure 계정이 아직 없는 경우 <a href="https://azure.microsoft.com/en-us/pricing/free-trial/">무료 평가판</a> 에 등록하고 현재 위의 모든 기능을 사용할 수 있습니다. 그런 다음 <a href="https://azure.microsoft.com/en-us/documentation/">, Azure 개발자 센터를</a> 방문하여 앱을 빌드하는 방법에 대해 자세히 알아보세요.

  <h3>크레딧</h3>

  이 블로그 문서는 여러 사람의 공동 작업입니다. Saurabh Bhatia와 Azure Cloud Tools 팀의 기여에 큰 감사드립니다.
