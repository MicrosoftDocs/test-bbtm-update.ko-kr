### YamlMime:Yaml
ms.openlocfilehash: 5029e02c548b07434e164ec98be34c4d81e31ff7
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908379"
Slug: introducing-incremental-enrichment-in-azure-cognitive-search
Title: Azure Cognitive Search에서 증분 보강 소개
Summary: 증분 보강은 데이터를 인덱싱하는 선언적 접근 방식을 제공하는 Azure Cognitive Search의 새로운 기능입니다.
Content: >-
  <p><a href="https://docs.microsoft.com/en-us/azure/search/cognitive-search-incremental-indexing-conceptual" target="_blank">증분 보강</a> 은 데이터를 인덱싱하는 선언적 접근 방식을 제공하는 Azure Cognitive Search의 새로운 기능입니다. 증분 보강이 켜지면 기술이 계속 발전하더라도 최소한의 비용으로 문서 보강이 수행됩니다. Azure Cognitive Search의 인덱서는 데이터 원본에서 검색 인덱스로 문서를 추가합니다. 인덱서는 데이터 원본의 문서에 대한 업데이트를 추적하고, 데이터 원본의 새 문서 또는 업데이트된 문서로 인덱스를 업데이트합니다.</p>


  <p>증분 보강은 데이터 원본의 문서 변경 내용에서 보강 파이프라인의 모든 측면으로 변경 내용 추적을 확장하는 새로운 기능입니다. 증분 보강을 통해 인덱서는 데이터를 데이터 원본, 현재 버전의 기술 세트 및 인덱서와 최종적으로 일관성 있게 만듭니다.</p>


  <p>인덱서의 몇 가지 주요 특징은 다음과 같습니다.</p>


  <ul>
      <li>데이터 원본 관련.</li>
      <li>상태 인식.</li>
      <li>데이터 원본과 인덱스 간에 최종 일관성을 유지하도록 구성할 수 있습니다.</li>
  </ul>


  <p>과거에는 기술을 추가, 삭제 또는 업데이트하여 기술 세트를 편집하면서 최적이하의 선택을 했습니다. 전체 모음에서 모든 기술을 다시 실행하거나, 기본적으로 인덱서에서 다시 설정하거나, 인덱스의 문서가 다양한 버전의 기술 세트로 보강되는 버전 드리프트를 허용합니다.</p>


  <p>API의 미리 보기 릴리스에 대한 최신 업데이트로 인덱서 상태 관리는 기술 세트, 출력 필드 매핑 지식 저장소 및 프로젝션을 포함하도록 데이터 원본 및 인덱서 필드 매핑에서만 확장됩니다.</p>


  <p>증분 보강은 보강 파이프라인의 효율성을 크게 향상시킵니다. 스킬을 추가하거나 업데이트할 때 전체 문서 모음을 다시 보강하는 데 드는 잠재적으로 큰 비용을 수락하거나, 문서가 다른 버전의 기술 세트로 생성/업데이트되고 모양 및/또는 보강 품질이 매우 다른 버전 드리프트를 처리할 수 있습니다.</p>


  <p>이제 인덱서는 변경된 기술을 결정하여 보강 파이프라인 전체의 변경 내용을 추적하고 응답하며, 호출 시 업데이트된 기술과 다운스트림 또는 종속 기술만 선택적으로 실행합니다. 증분 보강을 구성하면 필요한 최소한의 작업을 수행하면서 인덱스의 모든 문서가 항상 가장 최신 버전의 보강 파이프라인으로 처리되도록 할 수 있습니다. 또한 증분 보강은 변경 처리 방법을 완전히 제어하려는 시나리오를 처리하는 세분화된 컨트롤을 제공합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/507286c2-c347-401e-aa70-5d0d03a346e2.png"><img alt="Azure Cognitive Search document enrichment pipeline" border="0" height="462" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/11209cb0-9fc2-4d87-8210-62744f0df29a.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="" width="883"></a></p>


  <h2>인덱서 캐시</h2>


  <p>증분 인덱싱은 보강 파이프라인에 인덱서 캐시를 추가하여 가능합니다. 인덱서는 모든 문서에 대한 각 기술의 결과를 캐시합니다. 기술 세트 업데이트(신규 또는 업데이트된 기술)로 인해 데이터 원본을 다시 인덱싱해야 하는 경우 이전에 보강된 각 문서는 캐시에서 읽혀지고 변경 내용의 영향을 받는 기술, 변경된 기술 및 다운스트림만 다시 실행됩니다. 업데이트된 결과는 캐시에 기록되고, 문서는 인덱스 및 선택적으로 지식 저장소에서 업데이트됩니다. 실제로 캐시는 스토리지 계정입니다. 검색 서비스 내의 모든 인덱스는 인덱서 캐시에 대해 동일한 스토리지 계정을 공유할 수 있습니다. 각 인덱서에는 변경할 수 없는 고유한 캐시 ID가 할당됩니다.</p>


  <h2>인덱싱에 대한 세분화된 컨트롤</h2>


  <p>증분 보강은 인덱서가 우선 순위가 가장 높은 작업을 먼저 수행하여 변경 검색을 재정의하는 것까지 다양한 세분화된 컨트롤을 제공합니다.</p>


  <ul>
      <li>변경 검색 재정의: 증분 보강은 보강 파이프라인의 모든 측면에 대한 세분화된 제어를 제공합니다. 이렇게 하면 변경에 의도하지 않은 결과가 발생할 수 있는 상황을 처리할 수 있습니다. 예를 들어 기술 세트를 편집하고 사용자 지정 기술의 URL을 업데이트하면 인덱서에서 해당 기술에 대해 캐시된 결과를 무효화합니다. 엔드포인트를 다른 VM(가상 머신)으로만 이동하거나 새 액세스 키를 사용하여 기술을 다시 배포하는 경우 기존 문서를 다시 처리하지 않으려는&rsquo; 것입니다.</li>
  </ul>


  <p>인덱서가 명시적으로 요구하는 보강만 수행하도록 하기 위해 기술 세트에 대한 업데이트는 필요에 따라 쿼리 문자열 매개 변수를 으로 <code>true</code>설정할 <code>disableCacheReprocessingChangeDetection </code>수 있습니다. 이 매개 변수를 설정하면 기술 세트에 대한 업데이트만 커밋되고 변경 내용이 기존 모음에 미치는 영향에 대해 평가되지 않습니다.</p>


  <ul>
      <li>캐시 무효화: 이 시나리오의 반대는 새 버전의 사용자 지정 기술을 배포할 수 있고 보강 파이프라인 내에서 아무것도 변경되지 않을 수 있지만 업데이트된 모델의 이점을 반영하기 위해 특정 기술이 무효화되고 영향을 받는 모든 문서가 다시 처리되어야 합니다. 이러한 경우 기술 세트에 대한 무효화 기술 작업을 호출할 수 있습니다. 기술 재설정 API는 무효화해야 하는 캐시의 기술 출력 목록이 포함된 POST 요청을 허용합니다. 초기화 기술 API에 대한 자세한 내용은 <a href="https://docs.microsoft.com/en-us/rest/api/searchservice/2019-05-06-preview/reset-skills" target="_blank">설명서를 참조하세요</a>.</li>
  </ul>


  <h2>기존 API에 대한 업데이트</h2>


  <p>증분 보강을 도입하면 일부 기존 API가 업데이트됩니다.</p>


  <h3>인덱서</h3>


  <p>이제 인덱서는 새 속성을 노출합니다.</p>


  <p>캐시</p>


  <ul>
      <li><code>StorageAccountConnectionString</code>: 중간 결과를 캐시하는 데 사용할 스토리지 계정에 대한 연결 문자열입니다.</li>
      <li><code>CacheId</code>: cacheId는 이 인덱서의 캐시로 사용되는 annotationCache 스토리지 계정 내 컨테이너의 식별자입니다. 이 캐시는 이 인덱서에 고유하며 인덱서가 삭제되고 동일한 이름으로 다시 만들어지면 cacheid가 다시 생성됩니다. cacheId는 설정할 수 없으며 항상 서비스에서 생성됩니다.</li>
      <li><code>EnableReprocessing</code>: 기본적으로 true로 설정되며 false로 설정하면 문서는 캐시에 계속 기록되지만 캐시 데이터에 따라 기존 문서는 다시 처리되지 않습니다.</li>
  </ul>


  <p>인덱서는 새 쿼리 문자열 매개 변수도 지원합니다.</p>


  <p><code>ignoreResetRequirement</code><code>true </code>다시 설정 조건을 트리거하지 않고 커밋을 통과할 수 있도록 설정됩니다.</p>


  <h3>기술 세트</h3>


  <p>기술 세트는 새 작업을 지원하지 않지만 새 쿼리 문자열 매개 변수를 지원합니다.</p>


  <p><code>disableCacheReprocessingChangeDetection </code><code>true </code>현재 작업에 따라 기존 문서에 대한 업데이트를 원하지 않는 경우로 설정합니다.</p>


  <h3>Datasources</h3>


  <p>데이터 원본은 새 작업을 지원하지 않지만 새 쿼리 문자열 매개 변수를 지원합니다.</p>


  <p><code>ignoreResetRequirement</code><code>true </code>다시 설정 조건을 트리거하지 않고 커밋을 통과할 수 있도록 설정됩니다.</p>


  <h2>모범 사례</h2>


  <p>증분 보강을 사용하는 권장 방법은 새 인덱서에서 캐시 속성을 구성하거나 기존 인덱서를 다시 설정하고 캐시 속성을 설정하는 것입니다. 데이터에서 쉽게 검색되지 않는 의도하지 않은 불일치가 발생할 수 있으므로 ignoreResetRequirement는 신중하게 사용하십시오.</p>


  <h2>핵심 내용</h2>


  <p>증분 보강은 데이터 원본의 데이터가 항상 검색 인덱스 또는 지식 저장소의 데이터와 일치하는지 선언적으로 확인할 수 있는 강력한 기능입니다. 기술, 기술 세트 또는 보강이 발전함에 따라 보강 파이프라인은 문서를 최종 일관성으로 유지하기 위해 가능한 최소한의 작업을 수행하도록 보장합니다.</p>


  <h2>다음 단계</h2>


  <p>기존 인덱서에 캐시를 추가하여 <a href="https://docs.microsoft.com/en-us/azure/search/cognitive-search-incremental-indexing-conceptual" target="_blank">증분 보강</a> 을 시작하거나 새 인덱서 정의 시 캐시를 추가합니다.</p>
