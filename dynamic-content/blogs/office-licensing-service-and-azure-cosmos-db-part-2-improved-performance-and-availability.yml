### YamlMime:Yaml
ms.openlocfilehash: 80e83c0b7e7f10a08a6dacd52c388dee722a53a6
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908816"
Slug: office-licensing-service-and-azure-cosmos-db-part-2-improved-performance-and-availability
Title: 'Office 라이선스 서비스 및 Azure Cosmos DB 2부: 향상된 성능 및 가용성'
Summary: 이 게시물은 조직이 Azure Cosmos DB를 사용하여 실제 요구 사항을 충족하는 방법과 이러한 요구 사항에 미치는 차이에 대한 두 부분으로 구성된 시리즈의 2부입니다.
Content: >-
  <p><i>이 게시물은 조직에서 Azure Cosmos DB를 사용하여 실제 요구 사항을 충족하는 방법과 이러한 요구 사항을 충족하는 차이점&rsquo;에 대한 두 부분으로 구성된 시리즈의 2부입니다. <a href="https://azure.microsoft.com/blog/office-licensing-service-and-azure-cosmos-db-part-1-migrating-the-production-workload" target="_blank">1부</a>에서는 Microsoft Office 라이선싱 서비스 팀이 Azure Table Storage에서 Azure Cosmos DB로 이동하도록 이끈 과제와 프로덕션 워크로드를 새 서비스로 마이그레이션하는 방법에 대해 알아보세요. 2부에서는 팀의&rsquo; 노력으로 인한 결과를 살펴봅니다.</i></p>


  <h2>최소한의 노력으로 강력한 이점</h2>


  <p>OLS(Microsoft Office 라이선스 서비스) 팀이&rsquo; Azure Table Storage에서 <a href="https://azure.microsoft.com/en-us/services/cosmos-db/" target="_blank">Azure Cosmos DB</a>로 마이그레이션하는 것은 간단하고 간단했기 때문에 팀은 최소한의 노력으로 모든 요구 사항을 충족할 수 있었습니다.</p>


  <h3>간편한 마이그레이션</h3>


  <p>Table API 덕분에 Azure Cosmos DB로 전환할 때 OLS 팀은 대부분의 데이터 액세스 코드를 다시 사용할 수 있었고 가동 중지 시간을 방지하기 위해 작성한 마이그레이션 엔진은 빠르고 쉽게 빌드할 수 있었습니다.</p>


  <p>OLS 개발 팀을 이끄는 Microsoft의 소프트웨어 엔지니어 대니 청(Danny Cheng)은 다음과 같이 설명합니다.</p>


  <p style="margin-left: 40px;"><em>&ldquo;마이그레이션 엔진은 우리가 작성해야 하는 유일한 실제 &lsquo;새 코드&rsquo; 였습니다. 그리고 세 부분 모두에 대한 코드 샘플은 공개적으로 사용할 수 있으므로&rsquo; 처음부터 시작해야했던 것과 같지 않습니다. 전체적으로, 우리가 개발한 마이그레이션 도구는 각각 약 4주 동안 3명의 개발자가 걸렸습니다.&rdquo;</em></p>


  <h3>거의 무제한 처리량</h3>


  <p>현재 데이터베이스 처리량은 OLS 팀에 더 이상 문제가 되지 않습니다. Table Storage를 사용하면 팀은 스토리지 계정당 초당 20,000개의 작업 처리량 제한에 직면하여 최대 처리량을 달성하기 위해 18개의 테이블을 다른 스토리지 계정에 각각 유지 관리해야 했습니다. 이제 팀은 처리량에 대한 상한이 없으며 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/request-units" target="_blank">SLA 전용 및 지원</a>되는 테이블&mdash;올당 초당 1,000만 개 이상의 작업을 지원할 수 있는 하나의 Azure Cosmos DB 계정을 유지 관리합니다.</p>


  <h3>보장된 고가용성</h3>


  <p>Azure Cosmos DB는 OLS 팀에게 <a href="https://azure.microsoft.com/en-us/support/legal/sla/cosmos-db/v1_3/" target="_blank">모든 다중 지역 계정에 대해 99.999%의 읽기 가용성 SLA를 제공합니다</a>. 이로 인해 내부적으로 개발된 도구를 사용하여 캡처된 다음 메트릭에 설명된 것처럼 QoS(스토리지 서비스 품질)가 크게 증가했습니다.</p>


  <p style="margin-left: 40px;"><em>&ldquo;트래픽이 가장 많은 시간 동안 Azure Cosmos DB는 Table Storage에서 보았던 것보다 훨씬 더 나은 스토리지&rdquo; QoS를 제공합니다. &ldquo; &rsquo;오늘은 다섯 아홉을보고 분노, 과거에 우리는 약 세 아홉에 있었다 때.&rdquo;</em></p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ec665eb0-2809-4d86-8a09-70ec17df67a5.jpg"><img alt="Graph of Azure Cosmos DB health vs Azure Table storage health.  " border="0" height="333" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/18e09e81-d4de-4303-aefb-701694d996ed.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Azure Cosmos DB 상태와 Azure Table Storage 상태의 Graph.  " width="1024"></a></p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e9bc7e13-21a0-4046-b9d6-a61889c500c1.jpg"><img alt="Average Azure Cosmos DB health vs Azure Table storage health. " border="0" height="168" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2c066ba3-cace-4746-bba7-71f309990f71.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="평균 Azure Cosmos DB 상태와 Azure Table Storage 상태 비교" width="856"></a></p>


  <h3>자동 장애 조치(automatic failover)</h3>


  <p>OLS 팀은 이제 모든 SLA가 유지 관리되는 지역 가동 중단의 가능성 없는 이벤트로부터 보호하기 위해 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/high-availability" target="_blank">자동 또는 수동 장애 조치(failover</a> )를 구성할 수 있습니다. 또한 팀은 다중 지역 계정에 대한 장애 조치 순서의 우선 순위를 지정하고 장애 조치(failover)를 수동으로 트리거하여 OLS의 엔드 투 엔드 가용성을 테스트할 수 있습니다.</p>


  <p style="margin-left: 40px;"><em>&ldquo;Weve&rsquo;는 자동 장애 조치(failover)를 구성했지만 서비스가 매우 안정적이어서 아직&rdquo; 필요하지 않았다고&rsquo; Cheng은 말합니다.</em></p>


  <h3>짧아진 대기 시간</h3>


  <p>Table Storage는 OLS 팀에 대기 시간에 상한이 없음을 제공했습니다. 반면, Azure Cosmos DB는 읽기 및 쓰기에 대해 한 자릿수 대기 시간을 제공하며, 전 세계 어디서나 99번째 백분위수에서 읽기 및 쓰기에 대한 10밀리초 대기 시간을 보장&lt;합니다. 다음 메트릭은 OLS 서비스가 Table Storage와 Azure Cosmos DB 간에 표시되는 대기 시간의 차이를 보여 줍니다. (DbTable은 Azure Table Storage이고 CosmosDbTable은 Azure Cosmos DB Table API입니다.)</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7de62ddd-9918-42fc-9b94-3977b38ad87d.jpg"><img alt="Difference in latency: Azure Cosmos DB versus Azure Table storage." border="0" height="247" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2e4a9658-d476-4845-aae6-ac59a0d7b2d8.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="대기 시간 차이: Azure Cosmos DB와 Azure Table Storage." width="640"></a></p>


  <h3>턴키 데이터 배포</h3>


  <p>Table Storage를 사용하면 전역 배포 옵션이 제한되었습니다. 또한&rsquo; OLS 팀은 자체적으로 장애 조치(failover)를 구현할 수 없었습니다&rsquo;. Azure Cosmos DB를 사용하면 이제 팀은 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/how-to-multi-master" target="_blank">다중 마스터 기능을</a> 포함하는 여러 지역에&mdash; 배포&nbsp;할 수 있으며, 사용하도록 설정하면 모든 지역에서 쓰기 작업을 허용할 수 있습니다.</p>


  <p style="margin-left: 40px;"><em>&ldquo;맵을 클릭하면 데이터가 전 세계&rdquo; 모든 Azure 지역에 자동으로 복제될 수 있다고 Cheng은 말합니다. &ldquo; 이 기능은 매우 편리하며 곧 사용할 계획입니다.&rdquo;</em></p>


  <h2>기타 기술적 이점</h2>


  <p>위의 기능 외에도 Azure Cosmos DB는 OLS 팀에게 Table Storage보다 몇 가지 추가적인 이점을 제공합니다.</p>


  <p><b>자동 인덱싱.</b> Table Storage를 사용하면 기본 인덱스가 PartitionKey 및 RowKey로 제한되며 보조 인덱스가 없습니다. Azure Cosmos DB는 기본적으로 인덱스 관리 없이 모든 속성에 대해 자동 및 전체 인덱싱을 제공합니다.</p>


  <p><b>쿼리 시간이 빨라집니다.</b> Table Storage를 사용하면 쿼리 실행에서 기본 키에 대한 인덱스를 사용하고 그렇지 않은 경우 검색합니다. Azure Cosmos DB를 사용하면 쿼리가 더 빠른 쿼리 시간을 위해 모든 속성에서 자동 인덱싱을 활용할 수 있습니다.</p>


  <p><b>일관성.</b> Table Storage를 사용하면 OLS 팀은 주 지역 내의 강력한 일관성과 보조 지역 내의 최종 일관성으로 제한되었습니다. Azure Cosmos DB를 사용하면 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/consistency-levels" target="_blank">잘 정의된 일관성 수준에서</a> 선택하여 솔루션을 디자인하는 동안 읽기 일관성과 대기 시간, 가용성 및 처리량 간의 절충을 최적화할 수 있습니다.</p>


  <h2>오늘 Azure Cosmos DB 시작</h2>


  <ul>
      <li><u><a href="https://azure.microsoft.com/en-us/services/cosmos-db/" target="_blank">Azure Cosmos DB</a></u>를 방문하세요.</li>
      <li><a href="https://docs.microsoft.com/en-us/azure/cosmos-db/table-introduction" target="_blank">Azure Cosmos DB Table API 소개</a>를 참조하세요.</li>
  </ul>
