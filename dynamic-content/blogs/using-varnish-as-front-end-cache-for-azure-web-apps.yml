### YamlMime:Yaml
ms.openlocfilehash: a0f18515a4328d306b96e197c6225afb149701f8
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902918"
Slug: using-varnish-as-front-end-cache-for-azure-web-apps
Title: Azure Web Apps에 대한 프런트 엔드 캐시로 Varnish 사용
Summary: Varnish는 콘텐츠가 많은 웹 사이트 및 고가용성 API용으로 설계된 Http 가속기입니다. 샘플 구성 파일을 사용하여 Varnish를 설치하고 구성하는 방법을 알아봅니다.
Content: "<p><strong>Varnish</strong> 는 콘텐츠가 많은 웹 사이트 및 고가용성 API용으로 설계된 Http 가속기입니다. Azure Web Apps 위에 Varnish 서버를 쉽게 스핀업하여 웹 사이트&#39;성능을 높일 수 있습니다. Varnish는 웹 페이지를 캐시하고 빠르게 타오르는 웹 사이트 사용자에게 콘텐츠를 제공할 수 있습니다. 이 블로그 게시물에서는 샘플 구성 파일을 사용하여 Varnish를 설치하고 구성하는 방법을 보여줍니다.</p>\n\n<h2>1단계: Azure에서 Linux 가상 머신을 사용하여 클라우드 서비스 만들기</h2>\n\n<p>먼저 Linux 가상 머신을 사용하여 클라우드 서비스를 설정해야 합니다. 자세한 내용은 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-tutorial/\">여기</a> 를 클릭하십시오. 대부분의 웹앱에서 단일 VM으로 충분합니다. 그러나 오류 복원력 있는 프런트 엔드 캐시가 필요한 경우 클라우드 서비스에서 가상 머신을 두 대 이상 사용하는 것이 좋습니다. 이 블로그 게시물의 목적을 위해 Ubuntu LTS를 사용합니다.</p>\n\n<h2>2단계: 모든 VM에 Varnish 설치</h2>\n\n<p><a href=\"https://varnish-cache.org\">varnish-cache.org</a> 제공하는 Varnish 패키지를 사용하는 것이 좋습니다. 유일하게 지원되는 아키텍처는 Ubuntu LTS용 <em>amd64</em>입니다. 다른 Linux 배포판의 경우 <a href=\"https://www.varnish-cache.org/trac/wiki/Installation\">여기에서</a> 설치 지침을 참조하세요. <a href=\"https://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\">PuTTY</a>를 사용하여 각 가상 머신에 커넥트 루트 사용자로 다음을 수행합니다.</p>\n\n<ul>\n    <li>보안 키 [Debian 및 Ubuntu]를 추가합니다.</li>\n</ul>\n\n<blockquote>\n<pre class=\"brush: csharp; auto-links: true; collapse: false; first-line: 1; gutter: true; html-script: false; light: false; ruler: false; smart-tabs: true; tab-size: 4; toolbar: true;\">\nwget \napt-key add GPG-key.txt</pre>\n</blockquote>\n\n<ul>\n    <li>apt-get 리포지토리 원본 목록에 패키지 URL을 추가합니다.</li>\n</ul>\n\n<blockquote>\n<pre class=\"brush: csharp; auto-links: true; collapse: false; first-line: 1; gutter: true; html-script: false; light: false; ruler: false; smart-tabs: true; tab-size: 4; toolbar: true;\">\necho &quot;deb  precise varnish-3.0&quot; | sudo tee -a /etc/apt/sources.list</pre>\n</blockquote>\n\n<ul>\n    <li>패키지 관리자 업데이트 및 Varnish Cache 다운로드/설치</li>\n</ul>\n\n<blockquote>\n<pre>\napt-get update\napt-get install varnish\n</pre>\n</blockquote>\n\n<h2>3단계: 바니시 구성</h2>\n\n<p>기본 설정은 80(HTTP) 또는 443(HTTPS)의 전면 포트에서 실행되도록 설정되지 않으므로 웹앱에 필요한 포트를 사용하도록 수정해야 합니다. 포트 80은 HTTP 트래픽에 대한 기본 TCP 포트입니다. 웹 사이트에서 SSL을 사용하려는 경우 HTTPS 트래픽의 기본 포트인 포트 443도 열어야 합니다.</p>\n\n<p>Azure Preview 포털에 로그인하고 가상 머신을 선택하여 포트 80(HTTP) 또는 443(HTTPS)에 대한 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-set-up-endpoints/\">엔드포인트를 추가</a> 합니다. 이 작업은 모든 가상 머신에 대해 수행해야 합니다. Ubuntu의 구성 파일은&nbsp; <em>/etc/default/varnish</em>에 있습니다. 이 블로그 게시물 Im&rsquo;에서 nano 편집기를 사용하여 즐겨찾는 편집기를 사용하여 파일을 편집합니다.</p>\n\n<blockquote>\n<pre>\nnano /etc/default/varnish</pre>\n</blockquote>\n\n<p>파일에는 몇 가지 기본 설정이 있습니다. 아래로 스크롤하면 다음과 유사한 텍스트 DAEMON_OPTS 시작하는 Varnish 디먼 옵션을 정의하는 텍스트 블록이 표시됩니다.</p>\n\n<pre class=\"brush: csharp; auto-links: true; collapse: false; first-line: 1; gutter: true; html-script: false; light: false; ruler: false; smart-tabs: true; tab-size: 4; toolbar: true;\">\nDAEMON_OPTS=&quot;-a :6081 \\\n-T localhost:6082 \\\n-f /etc/varnish/default.vcl \\\n-S /etc/varnish/secret \\\n-s malloc,256m&quot;</pre>\n\n<p>포트를 6081에서 80(HTTP) 또는 443(HTTPS)으로 변경합니다.</p>\n\n<pre class=\"brush: csharp; auto-links: true; collapse: false; first-line: 1; gutter: true; html-script: false; light: false; ruler: false; smart-tabs: true; tab-size: 4; toolbar: true;\">\nDAEMON_OPTS=&quot;-a :80 \\\n-T localhost:6082 \\\n-f /etc/varnish/default.vcl \\\n-S /etc/varnish/secret \\\n-s malloc,256m&quot;</pre>\n\n<p>기본적으로 포트 80 또는 443은 방화벽에 의해 차단되므로 <em>iptables </em>명령을 사용하여 포트를&nbsp; 명시적으로 열어야 합니다.</p>\n\n<p><strong>iptables 사용:</strong></p>\n\n<p>다음 명령을 실행하면 루트가 포트 80을 열 수 있으므로 포트 80을 통해 통신하는 웹 사이트에서 일반 웹 검색을 수행할 수 있습니다.</p>\n\n<pre>\niptables -A INPUT -p tcp -m tcp --sport 80 -j ACCEPT\niptables -A OUTPUT -p tcp -m tcp --dport 80 -j ACCEPT\n</pre>\n\n<p>보안 웹 사이트에 대한 액세스를 허용하려면 포트 443도 열어야 합니다.</p>\n\n<pre class=\"brush: csharp; auto-links: true; collapse: false; first-line: 1; gutter: true; html-script: false; light: false; ruler: false; smart-tabs: true; tab-size: 4; toolbar: true;\">\niptables -A INPUT -p tcp -m tcp --sport 443 -j ACCEPT \niptables -A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT \n</pre>\n\n<h2>4단계: /etc/varnish/에서 기본 VCL 파일 수정</h2>\n\n<p>Varnish는 프로그램을 실행하기 위해 VCL 언어로 작성된 명령이 포함된 .vcl 파일(기본값은 <em>/etc/varnish/</em><em>default.vcl</em>)을 사용합니다. 이는 Varnish가 요청을 처리하는 방법과 문서 캐싱 시스템이 작동하는 방식을 정의하는 데 사용됩니다.</p>\n\n<p>다음 명령을 사용하여 editor를 다시 한 번 열어 default.vcl( <em>/etc/varnish/</em>아래에 있음)의 내용을 수정합니다.</p>\n\n<pre>\nnano /etc/varnish/default.vcl</pre>\n\n<p>Azure 웹앱을 참조하는 .host 및 .port를 사용하여 기본 백 엔드를 만듭니다.&nbsp; 다음은 기본 VCL 구성 파일의 샘플입니다( <em>my-azure-webapp.azurewebsites.net </em>실제 웹 애플리케이션 사용자 지정 도메인 또는 azurewebsite.net 도메인 URL로 대체). Varnish 4.0 이상을 사용하는 경우 파일의 시작 부분에 <em>vcl 4.0 </em>을 포함해야 합니다. Varnish 4.0 VCL 설명서에 대해 자세히 알아보려면 <a href=\"https://www.varnish-cache.org/docs/4.0/reference/vcl.html\">여기</a>를 클릭하세요.</p>\n\n<pre class=\"brush: csharp; auto-links: true; collapse: false; first-line: 1; gutter: true; html-script: false; light: false; ruler: false; smart-tabs: true; tab-size: 4; toolbar: true;\">\nvcl <span class=\"pl-c1\">4</span>.<span class=\"pl-c1\">0</span>;\nbackend default {\n\n      .host = &quot;my-azure-webapp.azurewebsites.net&quot;;\n      .port = &quot;80&quot;;\n      .connect_timeout = 600s;\n      .first_byte_timeout = 600s;\n      .between_bytes_timeout = 600s;\n}\nsub vcl_recv {\n     set req.http.host = &quot;my-azure-webapp.azurewebsites.net&quot;;\n     set req.backend = default;\n     return (lookup);\n}\n\n</pre>\n\n<h2>문제 해결</h2>\n\n<p>Varnish 서버에 문제가 발생하는 경우 다음 명령을 실행하여 로그를 볼&nbsp; 수 있습니다.</p>\n\n<blockquote>\n<pre class=\"brush: csharp; auto-links: true; collapse: false; first-line: 1; gutter: true; html-script: false; light: false; ruler: false; smart-tabs: true; tab-size: 4; toolbar: true;\">\nvarnishlog cmd</pre>\n</blockquote>\n\n<p>사이트를 다시 찾아보고 VM에서 로그를 확인합니다. 자세한 내용은 <a href=\"https://www.varnish-cache.org/docs/4.0/users-guide/troubleshooting.html\">여기</a>를 클릭하세요.</p>\n\n<h2>샘플 VCL 구성 파일</h2>\n\n<ul>\n    <li><strong>WordPress</strong></li>\n</ul>\n\n<p>WordPress 웹앱을 사용하는 경우 <a href=\"https://github.com/SunBuild/varnish-4.0-azure-vcl-template/blob/master/wordpress.vcl\">여기</a> 를 클릭하여 WordPress에 대한 샘플 Varnish 구성을 다운로드합니다.</p>\n\n<ul>\n    <li><strong>Drupal</strong></li>\n</ul>\n\n<p>Drupal 웹앱을 사용하는 경우 <a href=\"https://github.com/SunBuild/varnish-4.0-azure-vcl-template/blob/master/drupal.vcl\">여기</a> 를 클릭하여 Drupal에 대한 샘플 Varnish 구성을 다운로드합니다.</p>"
