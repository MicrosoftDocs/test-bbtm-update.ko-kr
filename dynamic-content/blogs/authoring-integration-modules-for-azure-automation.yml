### YamlMime:Yaml
ms.openlocfilehash: 961717028339e6569f8aed74ca0ec4701001a50d
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902782"
Slug: authoring-integration-modules-for-azure-automation
Title: Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요.
Summary: Azure Automation에 익숙한 경우 PowerShell이 Azure Automation을 훌륭하게 만드는 기본 기술이라는 것을 알고 있을 것입니다. 그러나 PowerShell 모듈을 통한 확장성으로 인해 PowerShell 자체는 훌륭합니다.
Content: >-
  <p><strong>2016년 1월 8일 업데이트: 모듈 .zip 파일의 모듈 .zip 파일과 이름이 같은 폴더가 더 이상 필요하지 않습니다. Zip 내에서 바로 아래에 설명된 .psd1, .psm1 등 파일이 있는 경우 모듈 가져오기가 작동합니다.</strong></p>


  <p><a href="https://aka.ms/Q2p1ap">Azure Automation</a>&rsquo;에 익숙하다면&rsquo; PowerShell이 Azure Automation을 훌륭하게 만드는 기본 기술이라는 것을 알고 있는 것입니다. 그러나 PowerShell 모듈을 통한 확장성으로 인해 PowerShell 자체는 훌륭합니다. Azure Automation은 PowerShell을 기반으로 하므로 PowerShell 모듈은 물론 Azure Automation 확장성 스토리의 핵심입니다. 이 블로그 게시물에서는 PowerShell 모듈 통합 모듈에서 Azure Automation&rsquo; 스핀&rdquo;&ldquo;의 세부 사항과 Azure Automation 내에서 통합 모듈 &ndash; &ldquo;&rdquo; &ndash; 로 제대로 작동하도록 고유한 PowerShell 모듈을 만드는 모범 사례를 안내합니다. &nbsp;</p>


  <h2>PowerShell 모듈이란&rsquo;?</h2>


  <p>특히 통합 모듈에 들어가기 전에 PowerShell 모듈이란? powerShell에서 Get-Date 또는 Copy-Item&rsquo;과 같은 cmdlet을 호출한 적이 있다면&rsquo; PowerShell 모듈을 사용했습니다. PowerShell 모듈은 PowerShell 콘솔뿐만 아니라 PowerShell 스크립트, 워크플로 및 Runbook에서도 사용할 수 있는 PowerShell cmdlet 그룹입니다. PowerShell의 모든 기능은 cmdlet을 통해 노출되며, 모든 cmdlet은 PowerShell 모듈에 의해 지원되며, 그 중 상당수는 PowerShell 자체와 함께 제공됩니다. 예를 들어 Get-Date cmdlet은 Microsoft.PowerShell.Utility PowerShell 모듈의 일부이며 Copy-Item cmdlet은 Microsoft.PowerShell.Management PowerShell 모듈의 일부입니다. 이러한 모듈은 모두 PowerShell과 함께 제공됩니다. 그러나 많은 PowerShell 모듈은 PowerShell의 일부로 제공하지 않으며, 대신 방대한 PowerShell 커뮤니티에 의해 배포되어 <a href="https://gallery.technet.microsoft.com/scriptcenter/2d191bcd-3308-4edd-9de2-88dff796b0bc">Windows 업데이트 PowerShell 모듈</a>과 같은 캡슐화된 기능을 통해 복잡한 작업을 더 간단하게 만듭니다(패치 시나리오에 관심이 있는 경우 이 모듈을 사용하는 방법을 보여 주는 <a href="https://gallery.technet.microsoft.com/scriptcenter/Manage-Windows-Updates-on-160f40bc">Azure Automation Runbook</a>도 있습니다). <a href="https://msdn.microsoft.com/en-us/library/dd878324%28v=vs.85%29.aspx">MSDN</a>의 PowerShell 모듈에 대해 자세히 알아볼 수 있습니다. <img alt="Authoring Integration Modules for Azure Automation" border="0" height="131" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-1.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="610"> &nbsp;</p>


  <h2>Azure Automation 통합 모듈이란&rsquo;?</h2>


  <p>이제 일반적인 이전 PowerShell 모듈에 익숙해졌으므로&rsquo; 이러한 Azure Automation &ldquo;통합 모듈은 무엇이며 표준 PowerShell 모&rdquo;듈과 어떻게 다른가요? 알고 보니, 정말 큰 차이가 없습니다&rsquo;! 통합 모듈은 선택적으로 Runbook에서 이 모듈 cmdlet과 함께 사용할 Azure Automation 연결 형식을 지정하는 메타데이터 파일을 하나 더 &ndash; 포함하는 PowerShell 모듈&rsquo;입니다. 선택적 파일인지 여부와 관계없이 이러한 PowerShell 모듈을 Azure Automation으로 가져와서 runbook 내에서 cmdlet을 사용할 수 있도록 할 수 있습니다. 백그라운드에서 Azure Automation은 이러한 모듈을 저장하고 작업 실행 시 Runbook이 실행되는 Azure Automation 샌드박스에 로드합니다. Azure PowerShell 모듈을 사용할 수 있도록 Azure Automation에서 PowerShell 모듈 하나를 기본 제공했을 수 있습니다. 이러한 모듈 중 하나를 Azure Automation으로 가져오기 위해 PowerShell 모듈과 통합 모듈 &ndash; 의 또 다른 작은 주의 사항은 모듈 폴더를 압축하여 모듈을 단일 파일로 가져올 수 있도록 해야 합니다. zip 파일의 이름은 포함된 모듈 폴더와 같아야 합니다. zip의 모듈 폴더에는 모듈 폴더와 이름이 같은 .psd1, .psm1 또는 PowerShell 모듈 .dll 파일이 있어야 합니다. 예를 들어 아래에 설명된 Twilio 모듈의 경우 적절한 구조는 다음과 같습니다.</p>


  <ul>
   <li>Twilio.zip <ul>
    <li>Twilio 폴더 <ul>
     <li>Twilio.psd1</li>
    </ul>
    </li>
   </ul>
   </li>
  </ul>


  <p>&nbsp; 결국 다음과 같이 표시됩니다. <img alt="Authoring Integration Modules for Azure Automation" border="0" height="186" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-2.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="480"> 통합 모듈 빌드 섹션에서 <a href="https://technet.microsoft.com/en-us/library/dn457813.aspx">TechNet</a>&ldquo;의 Azure Automation으로 가져오기 위해 통합 모듈&rdquo;을 패키지하는 방법에 대한 자세한 내용을 확인할 수 있습니다. <b>재미있는 사실: </b> Azure Automation 사용자는 기본적으로 선택적 추가 메타데이터 파일이 있는 PowerShell 모듈&rdquo;이기 때문에 통합 모듈을 간단히 &ldquo;모듈이라고 부릅니다. PowerShell 모듈 + 통합 모듈 메타데이터 파일은 개념적으로 System Center Orchestrator의 통합 팩 개념과 동일합니다. 실제로 통합 모듈&rdquo;이라는 용어&ldquo;는 Orchestrator의 통합 팩&rdquo;과 &ldquo;PowerShell의 PowerShell 모듈&rdquo;이라는 용어&ldquo;의 조합에서 비롯됩니다. &nbsp;</p>


  <h2>Azure Automation 통합 모듈 메타데이터 파일</h2>


  <p>그렇다면 모듈에 대한 Azure Automation 연결 형식을 보유하는 이 추가 선택적 파일의 세부 사항은 무엇인가요? 파일의 이름은 <i>ModuleName-Automation.json&gt; 형식&lt;의 모</i>듈 이름에 따라 지정되며 모듈 폴더(모듈 zip 파일 내)에 배치되어야 합니다. 통합 모듈 메타데이터 파일이 있는 PowerShell 모듈의 예는 스크립트 센터의 <a href="https://gallery.technet.microsoft.com/scriptcenter/Twilio-PowerShell-Module-8a8bfef8">Twilio PowerShell 모듈</a> 을 확인하세요. 아래와 같이 통합 모듈 메타데이터 파일이 포함되어 있습니다. <img alt="Authoring Integration Modules for Azure Automation" border="0" height="186" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-2.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="480"> &nbsp; 이 파일의 내용은 JSON 형식의 개체입니다. 이 개체에는 모듈이 나타내는 시스템 또는 서비스에 연결하는 데 필요한 연결&rdquo; 필드&ldquo;가 포함되어 있습니다. 결국 Azure Automation의 연결 형식을 만들게 됩니다. 이 파일을 사용하여 필드 이름을 설정할 수 있고 필드에 관계 없이 모듈의 연결 형식에 대한 암호화 및/또는 선택적이어야 합니다. 다음은 위에서 언급한 Twilio 모듈에 대한 이 파일의 형식 및 내용의 예입니다. Twilio에 대한 요청은 인증하기 위해 Twilio AccountSid 및 인증 토큰(AuthToken)을 전달해야 하므로 Twilio에 대한 연결 형식에는 다음 필드가 포함됩니다. <img alt="Authoring Integration Modules for Azure Automation" border="0" height="369" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-3.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="480"> &nbsp; Twilio 통합 모듈을 Azure Automation으로 가져온 후 연결을 만들 때 새 연결 형식에 Twilio 연결 형식이 표시됩니다 &ndash; . 이 연결 형식의 인스턴스(연결 자산이라고도 함)를 만들면 Twilio에 연결하는 데 필요한 필드를 지정할 수 있습니다(이 경우 AccountSid 및 AuthToken). <img alt="Authoring Integration Modules for Azure Automation" border="0" height="376" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-4.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="610"> &nbsp; 물론 Twilio 계정이 여러 개 있는 경우 Twilio cmdlet에 대한 Runbook에서 선택한 연결에 따라 이러한 계정 중 하나로 Twilio에 연결할 수 있도록 각 Twilio 계정에 대한 연결 자산을 만들 수 있습니다. &nbsp;</p>


  <h2>통합 모듈 작성 - 모범 사례</h2>


  <p>이제 통합 모듈이 기본적으로 PowerShell 모듈에 불과하다고 해서 작성에 대한 <b>모범 사례</b> 집합이 없다는 것을 의미하지는 않습니다&rsquo;&rsquo;. &rsquo;Azure Automation에서 가장 쉽게 사용할 수 있도록 PowerShell 모듈을 작성하는 동안 고려해야 할 몇 가지 사항이 있습니다. 이러한 항목 중 일부는 Azure Automation과 관련이 있으며, 그 중 일부는 Automation 사용 여부에&rsquo; 관계없이 PowerShell 워크플로에서 모듈이 제대로 작동하도록 하는 데 유용합니다. &nbsp; 1. <span style="text-decoration: underline;">모듈의 모든 cmdlet에 대한 개요, 설명 및 도움말 URI 포함</span> PowerShell에서 cmdlet에 대한 특정 도움말 정보를 정의하여 사용자가 <a href="https://technet.microsoft.com/en-us/library/ee176848.aspx">Get-Help cmdlet</a>을 사용하여 도움말을 받을 수 있도록 할 수 있습니다. 예를 들어 .psm1 파일로 작성된 PowerShell 모듈에 대한 개요, 설명 및 도움말 URI를 정의하는 방법은 다음과&rsquo; 같습니다. <img alt="Authoring Integration Modules for Azure Automation" border="0" height="124" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-5.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="610"> &nbsp; 이 정보를 제공하면 PowerShell 콘솔에서 Get-Help cmdlet을 사용하는 도움말을 표시할 뿐만 아니라, Runbook 작성 중에 활동을 삽입하는 경우와 같이 Azure Automation 내에서 이 도움말 기능도 노출됩니다. <img alt="Authoring Integration Modules for Azure Automation" border="0" height="166" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-6.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="480"> &nbsp;자세한 도움말&rdquo; 보기를 클릭하면 Azure Automation에 액세스하는 &ldquo;데 사용하는 웹 브라우저&rsquo;의 다른 탭에서 도움말 URI가 열립니다. &nbsp; 2. <span style="text-decoration: underline;">모듈이 원격 시스템에 대해 작동하는 경우:</span></p>


  <blockquote>a. 연결 형식이라고도 하는 원격 시스템에 연결하는 데 필요한 정보를 정의하는 Integration Module 메타데이터 파일이 포함되어야 합니다.</blockquote>


  <blockquote>당신은&rsquo; 이미이 하나에 전문가를 찢어. &nbsp; b. <span style="text-decoration: underline;">모듈의 각 cmdlet은 연결 개체를 매개 변수로 사용할 수 있어야 합니다.</span></blockquote>


  <p>연결 형식의 필드가 있는 개체를 매개 변수로 전달할 수 있도록 허용하면 모듈의 Cmdlet을 Azure Automation에서 가장 쉽게 사용할 수 있습니다. 이렇게 하면 사용자가 cmdlet을 호출할 때마다 연결 자산의 매개 변수를 해당 매개 변수에 매핑할 필요가 없습니다&rsquo;. Im&rsquo;이 말하는 내용의 예는 아래를 참조하세요. 이 Runbook은 joeTwilio라는 Twilio 연결 자산을 사용하여 Twilio에 액세스하고 모든 Twilio 전화 번호를 반환합니다. cmdlet의 매개 변수에 연결 필드를 매핑하는 방법을 알아보세요. <img alt="Authoring Integration Modules for Azure Automation" border="0" height="212" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-7.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="610"> 이제 아래와 비교하면 Twilio를 더 잘 호출할 수 있습니다. 이 경우 연결 개체를 cmdlet에 직접 전달하므로 더 쉽습니다.<img alt="Authoring Integration Modules for Azure Automation" border="0" height="171" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-8.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="610"> &nbsp; 매개 변수에 대한 연결 필드가 아닌 직접 연결 개체를 매개 변수로 사용할 수 있도록 하여 cmdlet에 대해 이와 같은 동작을 사용하도록 설정할 수 있습니다. 일반적으로&rsquo; Azure Automation을 사용하지 않는 사용자가 연결 개체로 작동하도록 해시 테이블을 생성하지 않고 cmdlet을 호출할 수 있도록 각각에 대해 <a href="https://msdn.microsoft.com/en-us/library/dd878348(v=vs.85).aspx">매개 변수를 설정</a> 하려고 합니다. 연결 필드 속성을 하나씩 전달하는 데 다음 매개 변수 집합 &ldquo;SpecifyConnectionFields&rdquo; 를 사용합니다. &ldquo;UseConnectionObject&rdquo; 를 사용하면&rsquo; 연결을 바로 통과할 수 있습니다. 보듯이 Send-TwilioSMS 다음 중 하나를 전달할 수 있습니다. <img alt="Authoring Integration Modules for Azure Automation" border="0" height="257" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-9.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="610"> &nbsp; 3. <span style="text-decoration: underline;">모듈의 모든 cmdlet에 대한 출력 형식 정의</span> cmdlet에 대한 <a href="https://technet.microsoft.com/en-us/library/hh847785.aspx">출력 형식</a> 을 정의하면 디자인 타임 IntelliSense를 사용하여 작성 중에 사용할 cmdlet의 출력 속성을 확인할 수 있습니다. 아래와 같이 OutputType cmdlet 특성을 사용하면 cmdlet을 실행하지 않고도 cmdlet&rsquo; 출력에 대한&rdquo; 형식 앞의 기능을 가져올 &ldquo;수 있습니다. <img alt="Authoring Integration Modules for Azure Automation" border="0" height="155" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-10.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="480"> <img alt="Authoring Integration Modules for Azure Automation" border="0" height="272" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-11.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="610"> &nbsp; Azure Automation은 현재 이 데이터를 사용하지 않지만&rsquo; 나중에 Runbook을 보다 쉽게 구성할 수 있도록 지원하겠습니다. &nbsp; 4. <span style="text-decoration: underline;">모듈의 Cmdlet은 매개 변수에 대해 복잡한 개체 형식을 사용해서는 안 됩니다</span> . PowerShell 워크플로는 복합 형식을 역직렬화된 형식으로 저장한다는 점에서 PowerShell과 다릅니다. 기본 형식은 기본 요소로 유지되지만 복합 형식은 역직렬화된 버전으로 변환되며 이는 기본적으로 속성 모음입니다. 예를 들어 runbook에서 Get-Process cmdlet을 사용한 경우(또는 해당 문제에 대한 PowerShell 워크플로만) 예상되는 [System.Diagnostic.Process] 형식이 아닌 [Deserialized.System.Diagnostic.Process] 형식의 개체를 반환합니다. 이 형식에는 역직렬화된 형식으로 동일한 속성이 포함되지만 메서드는 포함되지 않습니다. 또한 이 값을 cmdlet에 매개 변수로 전달하려고 하면 cmdlet에 이 매개 변수에 대해 [System.Diagnostic.Process] 값이 예상되는 경우 잘못된 오류가 발생합니다. 매개 변수&rsquo; <span style="color: #ff0000;">&#39;프로세스&#39; 인수 변환을 처리할 수 없습니다. 오류: &quot;Deserialized.System.Diagnostics.Process 형식의 System.Diagnostics.Process(CcmExec)&quot; 값을 System.Diagnostics.Process 형식으로 변환&quot;할 수 없습니다 </span> <span style="color: #ff0000;">.&quot;&quot;&quot;&quot;</span> &nbsp; 이는 물론 예상되는 [System.Diagnostic.Process] 형식과 지정된 [Deserialized.System.Diagnostic.Process] 형식 간에 형식이 일치하지 않으므로 그렇습니다. 이 문제를 해결하는 방법은 모듈의 cmdlet이 매개 변수에 복합 형식을 사용하지 않도록 하는 것입니다. 여기에서&rsquo; 볼 수 있듯이 cmdlet은 복잡한 형식을 매개 변수로 사용합니다. <img alt="Authoring Integration Modules for Azure Automation" border="0" height="132" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-12.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="480"> &nbsp; 그리고 이단&rsquo; 올바른 방법 - 복잡한 개체를 잡고 사용하기 위해 cmdlet에 의해 내부적으로 사용할 수있는 기본형을 복용. cmdlet은 PowerShell 워크플로가 아닌 PowerShell 컨텍스트에서 실행되므로 cmdlet <i>$process</i> 올바른 [System.Diagnostic.Process] 형식이 됩니다. <img alt="Authoring Integration Modules for Azure Automation" border="0" height="170" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-13.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="480"> &nbsp; 고급 사용자의 &ndash; 경우 Runbook의 연결 자산이 복잡한 형식인 해시 테이블임을 알 수 있지만 이러한 해시 테이블은 캐스트 예외 없이 연결 매개 변수에 대한 &ndash;cmdlet으로 완벽하게 전달될 수 있는 것처럼 보입니다. 기술적으로 일부 PowerShell 형식은 직렬화된 형식에서 역직렬화된 형식으로 제대로 캐스팅할 수 있으며 따라서 역직렬화되지 않은 형식을 허용하는 매개 변수에 대한 cmdlet에 전달될 수 있습니다. Hashtable은 다음 중 하나입니다. &rsquo;모듈 작성&rsquo;자가 정의한 형식을 올바르게 역직렬화할 수 있는 방식으로 구현할 수 있지만 <a href="https://blogs.msdn.com/b/powershell/archive/2013/06/11/understanding-powershell-s-type-conversion-magic.aspx">몇 가지 단점이 있습니다</a>. 형식에는 기본 생성자가 있어야 하고, 모든 속성이 공용이고,<a href="https://msdn.microsoft.com/en-us/library/system.management.automation.pstypeconverter(v=vs.85).aspx"> PSTypeConverter</a>가 있어야 합니다. 그러나 모듈 작성자가 소유하지 않은 이미 정의된 형식의 경우 수정&rdquo;할 &ldquo;방법이 없으므로 매개 변수에 대한 복합 형식을 모두 함께 사용하지 않는 것이 좋습니다. <b>Runbook 작성 팁: </b> 어떤 이유로든 cmdlet이 복합 형식 매개 변수를 사용해야 하거나 복합 형식 매개 변수가 필요한 다른&rsquo; 모듈을 사용하는 경우 Runbook 및 PowerShell 워크플로의 해결 방법은 복합 형식을 생성하는 cmdlet과 동일한 <a href="https://technet.microsoft.com/en-us/library/jj649082.aspx">InlineScript 작업에서</a> 복합 형식을 사용하는 cmdlet을 래핑하는 것입니다. InlineScript가 해당 콘텐츠를 PowerShell 워크플로 대신 PowerShell으로 실행하기 때문에 복합 형식을 생성하는 cmdlet에서는 역직렬화된 복합 형식이 아닌 올바른 형식을 생성합니다. &nbsp; 5. <span style="text-decoration: underline;">모듈의 모든 cmdlet을 상태 비지방으로 만들기</span> PowerShell 워크플로는 워크플로에서 호출된 모든 cmdlet을 다른 세션에서 실행합니다. 즉, 동일한 모듈의 다른 cmdlet에서 생성/수정한 세션 상태에 의존하는 cmdlet은 PowerShell 워크플로 또는 Runbook에서 작동하지 않습니다. 수행하지 않을 작업의 예는 다음과 같습니다&rsquo;. <img alt="Authoring Integration Modules for Azure Automation" border="0" height="290" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/azureautomation-authoring-integration-modules-14.png" style="float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;" title="Azure Automation에 대한 통합 모듈 제작 문서를 참조하세요." width="480"> &nbsp; 보듯이 Get-GlobalNumTimesTwo Set-GlobalNum에서 설정할 세션 변수 $globalNum 따라 달라집니다. 워크플로에서 작동하지 않으며&rsquo; $globalNum 항상 0이 됩니다. Get-GlobalNumTimesTwo 세션 상태에 따라 달라지지 않도록&rsquo; 숫자를 매개 변수로 사용하거나 PowerShell 컨텍스트에서 동일한 세션에서 두 cmdlet을 실행하기 위해 Set-GlobalNum 및 Get-GlobalNumTimesTwo 동일한 <a href="https://technet.microsoft.com/en-us/library/jj649082.aspx">InlineScript</a> 작업으로 래핑되어야 합니다. &nbsp; 6. <span style="text-decoration: underline;">모듈은 Xcopy 가능 패키지에 완전히 포함되어야 합니다</span> . Runbook을 실행해야 하는 경우 Azure Automation 모듈이 Automation 샌드박스에 배포되므로 실행 중인 호스트와 독립적으로 작동해야 합니다. 즉, 모듈 패키지를 압축하고, 동일하거나 최신 PowerShell 버전이 있는 다른 호스트로 이동하고, 해당 호스트&rsquo; PowerShell 환경으로 가져올 때 정상적으로 작동하도록 할 수 있어야 합니다. 이를 위해서 모듈은 모듈 폴더(Azure Automation으로 가져올 때 압축된 폴더) 외부의 파일 또는 호스트의 고유한 레지스트리 설정(제품의 설정으로 설정됨)에 의존해서 안됩니다. 이 모범 사례를 따르지 않으면 Azure Automation에서 모듈을 사용할 수 없습니다. &nbsp;</p>


  <h2>결론</h2>


  <p>이제&rsquo; Azure Automation 통합 모듈이 무엇인지, 사용자가 모듈을 작성하는 방법&rsquo; 및 통합 모듈을 자동화에서 진정으로 빛나게 하기 위해 따라야 할 모범 사례를 최대한 빠르게 파악할 수 있습니다. 통합은 성공적인 오케스트레이션 전략의 핵심이며, 이제 모든 시스템에 Azure Automation 통합을 빌드하는 데 필요한 모든 것이 있어야 합니다. 다음 시간까지 <strong>는 침착함을 유지하고 자동화합니다.</strong> &nbsp; Azure Automation을 시작하기만 하면 되었나요?&nbsp; <a href="https://aka.ms/Q2p1ap" target="_blank">여기에서</a> 서비스에 대해 알아보고 <a href="https://twitter.com/AzureAutomation" target="_blank">Twitter</a>에서 Azure Automation을 따르세요. 개인적으로 저와 연락하고 싶으신가요? <a href="https://jodoglevy.com" target="_blank">내 블로그</a>를 통해 연락하거나 <a href="https://twitter.com/jodoglevy" target="_blank">트위터에서</a> 나를 따르세요.</p>
