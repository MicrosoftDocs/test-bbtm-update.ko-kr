### YamlMime:Yaml
ms.openlocfilehash: 0e2106026c8fac154f09a455a47c98b04870ab68
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139897728"
Slug: blog-post
Title: WebJobs SDK 미리 보기 발표
Summary: >-
  오늘 Scott Hanselman이 소개한 Azure WebJobs SDK에 Windows 업데이트를 릴리스합니다.


  이 릴리스 다운로드


  NuGet 갤러리에서 WebJobs SDK를 다운로드할 수 있습니다. 콘솔 애플리케이션에서,...
Content: "오늘 Scott Hanselman이 <a href=\"https://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx\">소개</a>한 Azure WebJobs SDK에 Windows 업데이트를 릴리스하고 있습니다.\n\n<strong>이 릴리스 다운로드</strong>\n\nNuGet 갤러리에서 WebJobs SDK를 다운로드할 수 있습니다. 콘솔 애플리케이션에서는 다음과 같이 NuGet 패키지 관리자 콘솔을 사용하여 NuGet 갤러리를 통해 이러한 패키지를 설치하거나 업데이트할 수 있습니다.\n<pre class=\"prettyprint\">Install-Package Microsoft.WindowsAzure.Jobs -Pre \nInstall-Package Microsoft.WindowsAzure.Jobs.Host -Pre</pre>\n<strong>WebJobs SDK에 대한 시나리오</strong>\n\n다음은 Windows Azure WebJobs SDK를 사용하여 보다 쉽게 처리할 수 있는 몇 가지 일반적인 시나리오입니다.\n<ul>\n<ul>\n <li>이미지 처리 또는 기타 CPU 집중 작업. 웹 사이트의 일반적인 기능은 이미지 또는 비디오를 업로드하는 기능입니다. 콘텐츠를 업로드한 후 조작하려는 경우가 많습니다.</li>\n <li>큐 처리. [VH1]  웹 프런트 엔드가 백 엔드 서비스와 통신하는 일반적인 방법은 큐를 사용하는 것입니다. 웹 사이트에서 작업을 완료해야 하는 경우 메시지를 큐에 푸시합니다. 백 엔드 서비스는 큐에서 메시지를 풀한 후 해당 작업을 수행합니다.</li>\n <li>RSS 집계. RSS 피드 목록을 유지 관리하는 사이트가 있는 경우 백그라운드 프로세스에서 피드의 모든 문서를 풀할 수 있습니다.</li>\n <li>로그 파일 집계 또는 정리와 같은 파일 유지 관리.분석 작업을 실행하기 위해 조합하려는 여러 사이트에서 또는 별도의 시간 범위 동안 로그 파일이 만들어지도록 할 수 있습니다. 또는 오래된 로그 파일을 정리하는 작업이 매주 실행되도록 예약할 수도 있습니다.</li>\n <li>백그라운드 스레드에서 실행할 기타 장기 실행 작업(예: 전자 메일 전송) 지금까지는 앱이 일정 시간 동안 유휴 상태인 경우 IIS가 앱을 재활용하므로 ASP.NET 이 작업을 수행할 수 없었습니다. 이제 Azure 웹 사이트를 Windows <a href=\"https://weblogs.asp.net/scottgu/archive/2014/01/16/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance.aspx\">AlwaysOn</a>을 사용하면 앱이 유휴 상태일 때 웹 사이트가 재활용되지 않도록 할 수 있습니다.<a href=\"https://weblogs.asp.net/scottgu/archive/2014/01/16/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance.aspx\"> AlwaysOn</a>은 사이트가 절전 모드로 이동하지 않도록 합니다. 즉, WebJobs 및 WebJobs SDK를 사용하여 장기 실행 작업 또는 서비스를 실행할 수 있습니다.</li>\n</ul>\n</ul>\n<strong>WebJobs SDK란?</strong>\n\nWindows Azure 웹 사이트의 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs/\">WebJobs</a> 기능은 웹 사이트에서 서비스 또는 백그라운드 작업과 같은 프로그램을 쉽게 실행할 수 있는 방법을 제공합니다. .exe, <em>.cmd</em><em> 또는 </em> <em>.bat</em>파일과 같은 실행 파일을 업로드하고 웹 사이트에 실행할 수 있습니다. 그러나 수행할 수 있는 가장 유용한 작업에는 복잡한 프로그래밍이 많이 필요합니다. 여기서 Azure WebJobs SDK를 Windows 일반적인 작업을 완료하기 위해 최소한의 코드를 작성할 수 있는 프레임워크를 제공합니다.\n\nWebJobs SDK에는 Windows Azure Storage Blob, 큐 및 테이블에서 작동하는 바인딩 및 트리거 시스템이 있습니다. 바인딩 시스템을 사용하면 Windows Azure Storage 개체를 읽거나 쓰는 코드를 쉽게 작성할 수 있습니다. 트리거 시스템은 큐 또는 Blob에서 새 데이터를 받을 때마다 코드에서 함수를 호출합니다.\n\nWebJob SDK에는 다음 구성 요소가 포함되어 있습니다.\n<ul>\n<ul>\n <li>패키지 NuGet. NuGet 패키지를 사용하면 코드에서 WebJobs SDK 바인딩을 사용하고 Windows Azure Storage 테이블, Blob 및 큐에서 시스템을 트리거할 수 있습니다.</li>\n <li>Dashboard. WebJobs SDK의 일부는 이미 Windows Azure 웹 사이트에 설치되어 있으며 NuGet 패키지를 사용하여 작성하는 프로그램에 대한 풍부한 모니터링 및 진단을 제공합니다. 이러한 모니터링 및 진단 기능을 사용하기 위해 코드를 작성할 필요는 없습니다.</li>\n</ul>\n</ul>\n<strong>SDK의 목표는 무엇인가요?</strong>\n<ul>\n<ul>\n <li>백그라운드 처리 작업을 수행할 때 Windows Azure Storage 더 쉽게 사용할 수 있는 간단한 방법을 제공합니다.\n<ul>\n <li>SDK를 사용하면 애플리케이션 내에서 Azure Storage 더 쉽게 사용할 수 있습니다. 스토리지에서 읽거나 쓰기 위해 코드 작성을 처리할 필요가 없습니다.</li>\n</ul>\n</li>\n <li>사용자가 진단 및 로깅 코드를 작성하지 않고도 풍부한 진단 및 모니터링 환경을 제공합니다.</li>\n</ul>\n</ul>\n<strong>SDK의 기능</strong> \n\n<strong>Azure Storage</strong>\n\nSDK는 Azure Blob, 큐 및 테이블에서 작동합니다.\n\n<strong>트리거</strong>\n\n큐 또는 Blob에서 새 입력이 검색되면 함수가 실행됩니다. 예: 다음 코드 조각에서 ProcessQueue 함수는 \"longqueue\"라는 큐에 새 메시지가 표시될 때 트리거됩니다. 트리거에 대한 자세한 내용은<a href=\"https://blogs.msdn.com/b/jmstall/archive/2014/01/28/trigger-bindings-and-route-parameters-in-azurejobs.aspx\">https://blogs.msdn.com/b/jmstall/archive/2014/01/28/trigger-bindings-and-route-parameters-in-azurejobs.aspx</a>\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/8156.P1.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/8156.P1.png\" border=\"0\"></a>\n\n<strong>바인딩</strong>\n\nSDK는 C# BCL 형식과 Blob, 테이블 및 큐와 같은 Azure Storage 간에 모델 바인딩을 제공하는 바인딩을 지원합니다. 이렇게 하면 개발자가 blob, 테이블 및 큐에서 읽고 쓸 수 있습니다. 따라서 Azure Storage 읽기/쓰기와 같은 평범한 코드에 대해 알아볼 필요가 없습니다.\n<ol>\n <li><strong>편의성</strong>. 사용하는 데 가장 유용한 형식을 선택할 수 있으며 WebJobs SDK가 붙이기 코드를 처리합니다. Blob에서 문자열 작업을 수행하는 경우 TextWriter로 변환하는 방법을 자세히 알아보지 않고 TextReader/TextWriter에 직접 바인딩할 수 있습니다.</li>\n <li><strong>플러시 및 닫기</strong>: WebJobs SDK는 미해결 출력을 자동으로 플러시하고 닫습니다.</li>\n <li><strong>단위 테스트 용이성</strong>. SDK를 사용하면 ICloudBlob이 아닌 TextWriter와 같은 BCL 형식을 모의할 수 있으므로 코드를 단위 테스트할 수 있습니다.</li>\n <li><strong>진단</strong>.모델 바인딩은 대시보드와 함께 작동하여 매개 변수 사용에 대한 실시간 진단을 제공합니다.</li>\n</ol>\n현재 지원되는 바인딩은 <strong>Stream, TextReader/Writer, String</strong>입니다.\n\n바인딩이 Azure Storage 대해 작동하는 방법에 대한 자세한 내용은 <a href=\"https://blogs.msdn.com/b/jmstall/archive/2014/02/18/azure-storage-bindings-part-1-blobs.aspx\">Blob</a><strong>, </strong><a href=\"https://blogs.msdn.com/b/jmstall/archive/2014/02/18/azure-storage-bindings-part-2-queues.aspx\">큐</a><strong> 및</strong><a href=\"https://blogs.msdn.com/b/jmstall/archive/2014/03/06/azure-storage-bindings-part-3-tables.aspx\"><strong>Table을</strong></a> 참조하세요.\n\n<strong>호스팅</strong>\n\n호스트는 프로그램에 있는 모든 함수를 알고 있는 실행 컨테이너입니다. JobHost 개체( <a href=\"https://www.nuget.org/packages/Microsoft.WindowsAzure.Jobs.Host\">Microsoft.WindowsAzure.Jobs.Host</a> 에 있음)는 바인딩을 읽고, 트리거를 수신 대기하고, 함수를 호출합니다.\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/2500.P2.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/2500.P2.png\" border=\"0\"></a>\n\n<strong>WebJobs 모니터링을 위한 대시보드입니다.</strong>\n\nWebJobs(<strong><em>모든 언어 및 모든 형식으로 작성</em></strong>됨)가 실행되면 실시간으로 모니터링할 수 있습니다. 실행 중인지 여부를 확인하고 WebJob의 특정 실행 로그도 볼 수 있습니다.\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/5415.P4.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/5415.P4.png\" border=\"0\"></a>\n\nSDK를 사용하여 WebJob을 작성한 경우 프로그램의 함수에 대한 진단 및 모니터링 환경을 얻을 수 있습니다. 예: 다음 흐름이 있는 \"ImageResizeAndWaterMark\"라는 이미지 처리 WebJob이 있다고 가정해 보겠습니다. 사용자가 \"images1-input\" 컨테이너에 Blob에 이미지를 업로드하면 WaterMark 함수가 트리거됩니다. 워터마크는 이미지를 처리하고 이미지의 크기를 조정하고 \"images2-output\" Blob 컨테이너에 쓰는 크기 조정 함수를 트리거하는 images2-input conainer에 씁니다. 다음 이미지는 이 WebJob에 대한 코드를 보여줍니다.\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/7652.P-code.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/7652.P-code.png\" border=\"0\"></a>\n\nAzure에서 WebJob을 실행하는 경우 Windows Azure Websites 포털의 WEBJOBS 탭에서 \"ImageResizeAndWaterMark\"의 로그 링크를 클릭하여 WebJobs 대시보드를 볼 수 있습니다. 대시보드는 SiteExtension이므로 URL <a href=\"https://mysite.scm.azurewebsites.net/azurejobs\">https://mysite로 이동하여 액세스할 수 있습니다.<strong> scm.azurewebsites.net/</strong> <strong>azurejobs</strong></a><a href=\"https://mysite.scm.azurewebsites.net/azurejobs\">.</a>  SiteExtension에 액세스하려면 배포 자격 증명이 필요합니다. 사이트 확장에 액세스하는 방법에 대한 자세한 내용은 Kudu 프로젝트의 설명서를 참조하세요. <a href=\"https://github.com/projectkudu/kudu/wiki/Accessing-the-kudu-service\">https://github.com/projectkudu/kudu/wiki/Accessing-the-kudu-service</a>\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/2437.p-final.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/2437.p-final.png\" border=\"0\"></a>\n\n<strong>함수 실행 세부 정보</strong>\n\n이 \"ImageResizeAndWaterMark\" WebJob의 특정 실행을 모니터링하는 경우 다음과 같은 함수에 대한 세부 정보를 볼 수 있습니다.\n<ul>\n<ul>\n <li>이 함수의 매개 변수는 무엇인가요?</li>\n <li>함수를 실행하는 데 걸리는 시간입니다.</li>\n <li>Blob에서 읽는 데 걸리는 시간과 읽거나 쓴 바이트 수입니다.</li>\n</ul>\n</ul>\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/7242.P-again.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/7242.P-again.png\" border=\"0\"></a>\n\n<strong>Replay 호출 &amp;</strong>\n\n위의 예제에서 어떤 이유로 워터마크 함수가 실패하면 실행 체인을 트리거하고 크기 조정을 호출하는 워터마크를 재생할 수 있는 새 이미지를 업로드할 수 있습니다. 함수를 함께 연결하기 위한 복잡한 그래프가 있는 경우 문제를 진단하고 디버그하는 데 유용합니다. 대시보드에서 함수를 호출할 수도 있습니다.\n\n<strong>함수의 인과 관계</strong>\n\n위의 예제에서는 WaterMark 함수가 Blob에 쓸 때 Resize 함수를 트리거한다는 것을 알고 있습니다. 대시보드는 함수 간에 이러한 인과 관계를 표시합니다. 새 입력이 검색될 때 트리거되는 많은 함수를 연결한 경우 이 인과 관계 그래프를 보는 것이 유용하다고 상상할 수 있습니다.\n\n<strong>Blob 검색</strong>\n\nBlob 검색을 클릭하고 해당 Blob에 발생한 작업에 대한 정보를 가져올 수 있습니다. 예. [VH1]  ImageResizeAndWaterMark의 경우 WaterMark 함수가 실행되었기 때문에 Blob이 작성되었습니다. 검색 Blob에 대한 자세한 내용은 를 참조하세요.<a href=\"https://blogs.msdn.com/b/jmstall/archive/2014/02/19/who-wrote-that-blob.aspx\">https://blogs.msdn.com/b/jmstall/archive/2014/02/19/who-wrote-that-blob.aspx</a>\n\n<strong>샘플</strong>\n\nWebJobs SDK에 대한 모든 샘플이 있습니다.<a href=\"https://aspnet.codeplex.com/SourceControl/latest#Samples/AzureWebJobs/ReadMe.txt\">https://aspnet.codeplex.com/SourceControl/latest#Samples/AzureWebJobs/ReadMe.txt</a>\n<ul>\n<ul>\n <li>Blob, 테이블 및 큐에 대한 트리거 및 바인딩을 사용하는 방법에 대한 샘플을 찾을 수 있습니다.</li>\n <li>고객이 Blob Storage에서 해당 사진을 처리하는 함수를 트리거하는 그림을 업로드할 수 있는 이미지 처리 웹 사이트인 PhluffySuffy라는 샘플이 있습니다.</li>\n</ul>\n</ul>\n<strong>설명서</strong>\n<ul>\n<ul>\n <li><a href=\"https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs\">Windows Azure WebJobs SDK 시작</a></li>\n <li><a href=\"https://channel9.msdn.com/Shows/Web+Camps+TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK\">Windows Azure WebJobs SDK를 사용하여 작업을 더 쉽게 만드는 채널 9 비디오</a></li>\n <li><a href=\"https://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx\">Azure WebJobs 및 WebJobs SDK Windows</a></li>\n <li><a href=\"\"></a></li>\n <li>WebJobs 및 WebJobs SDK에 대한 문서 목록</li>\n</ul>\n</ul>\n<strong>SDK를 사용하여 WebJobs 배포</strong>\n\nKudu 또는 웹 배포를 사용하여 WebJobs를 배포할 수 있습니다. 웹 사이트와 함께 WebJob을 배포하려면 다음 <a href=\"https://visualstudiogallery.msdn.microsoft.com/f4824551-2660-4afa-aba1-1fcc1673c3d0\">프로토타입</a>을 확인하세요.\n\n<strong>0.1.0-alpha1에서 0.2.0-alpha2까지 알려진 문제</strong>\n\n<strong>대시보드는 0.2.0-alpha2로 배포된 WebJobs에 대해서만 작동합니다.</strong>\n\nSDK의 0.1.0-alpha1을 사용하여 WebJob을 배포한 경우 대시보드에 액세스하여 WebJob에 대한 로그를 보려면 \"호스트가 실행되지 않음\"에 대한 경고가 표시됩니다. 이 문제는 이 릴리스의 일부로 최신 버전의 대시보드가 모든 Azure Websites에 배포되기 때문에 발생합니다. 새 대시보드에는 0.1.0-alpha1과 호환되지 않는 일부 프로토콜 변경 내용이 있습니다. 이 오류를 해결하려면 0.2.0-alpha2 NuGet 패키지를 사용하도록 WebJob을 업데이트하고 WebJob을 다시 배포하세요.\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/7522.Image-2.png\"><img alt=\"\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1726/7522.Image-2.png\" border=\"0\"></a>\n\n<strong>피드백 제공 및 도움말 보기</strong>\n\nWindows Azure Web Sites 및 Windows Azure WebJobs SDK의 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs/\">WebJobs</a> 기능은 미리 보기 상태이며 공식적으로 지원되지 않습니다. 피드백은 향후 버전에 대한 변경 내용에서 고려됩니다.\n\n자습서와 직접 관련이 없는 질문이 있는 경우 <a href=\"https://azure.microsoft.com/en-us/support/forums/\">Windows Azure 포럼</a>, <a href=\"https://forums.asp.net/1247.aspx\">ASP.NET 포럼</a> 또는 <a href=\"https://stackoverflow.com/\">StackOverflow.com</a> 게시할 수 있습니다. Twitter에 <a href=\"https://twitter.com/search?q=AzureWebJobs\">#AzureWebJobs</a> 사용합니다."
