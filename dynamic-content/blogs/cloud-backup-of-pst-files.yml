### YamlMime:Yaml
ms.openlocfilehash: f1ab332df0b75896a7a9806950b67f124a7f5dd1
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139911096"
Slug: cloud-backup-of-pst-files
Title: Outlook PST 파일 보관을 위한 클라우드 백업
Summary: 이 문서에서는 PST 파일의 장기 백업의 미묘한 차이를 다루고 올바른 방법으로 백업되었는지 확인하는 방법을 제공합니다.
Content: >-
  <p><a href="https://wwwmicrosoftcom/en-us/outlook-com/" target="_blank">Microsoft Outlook</a><b><i> </i></b>사용자가 메시지, 연락처, 일정 약속 및 업무 일지 항목을 포함한 모든 메일 정보를 개인 Storage 폴더(PST 파일이라고도 함) Outlook 구성에 따라 <a href="https://supportofficecom/en-us/article/Introduction-to-Outlook-Data-Files-pst-and-ost-6d4197ec-1304-4b81-a17d-66d4eef30b78" target="_blank">PST 파일</a>은 하드 디스크 및/또는 Microsoft Exchange Server 있는 사서함에 상주할 수 있습니다.  이 게시물에서는 PST Files의 장기 백업, <a href="https://azuremicrosoftcom/en-in/documentation/articles/backup-introduction-to-azure-backup/">Azure Backup</a>을 사용한 백업, OMS(<a href="https://wwwmicrosoftcom/en-us/server-cloud/operations-management-suite/overviewaspx">Microsoft Operations Management Suite</a>)의 구성 요소 및 백업이 올바른 방식으로 백업되었는지 확인하는&rsquo; 방법에 대해 설명합니다.</p>


  <h2>PST 파일을 사용하는 이유</h2>


  <h4>사서함 크기 관리</h4>


  <p>Exchange Server 있는 사서함은 대부분의 Exchange 관리자가 크기를 제한하도록 구성됩니다. PST Files는 사서함의 모든 메일 자산을 로컬 하드 디스크의 PST 파일로 끌어서 놓기만 하면 사서함에 항상 전자 메일을 보내고 받을 수 있는 공간이 있는지 확인하는 메커니즘을 제공합니다.</p>


  <h4>이식성</h4>


  <p>PST 파일을 사용하면 중요한 메일 자산을 저장할 수 있으므로, 예를 들어 조직 간에 이동하거나 이전 전자 메일에 대한 참조로 사서함을 이동할 때 함께 이동할 수 있습니다.</p>


  <p>메일 사용자가 향후 참조를 위해 오랜 기간 동안 전자 메일 데이터를 저장할 수 있도록 하려면 이러한 파일이 Exchange 서버 또는 로컬 하드 디스크에 있든 관계없이 예기치 않은 디스크/서버 오류로부터 보호해야 하므로 Azure Backup과 같은 장기 클라우드 백업 솔루션에 저장할 수 있는 좋은 후보입니다.</p>


  <h2>PST 파일의 장기 백업과 관련한 문제</h2>


  <p><a href="https://supportmicrosoftcom/en-us/kb/982577" target="_blank">PST 파일은 크기가 크고</a>(일반적으로 2GB에서 20GB) Outlookexe 또는 Outlookexe에 의존하는 프로세스가 실행될 때마다 연결된 PST 파일이 열리고 쓰기용으로 잠깁니다Outlook Outlook 계속 실행된다는 점을 감안할 때 PST 파일은 대부분 열려 있습니다. 이러한 요소는 PST의 강력한 백업을 해결하기 어려운 문제를 발생시키는 몇 가지 문제를 제기합니다.</p>


  <h4>PST 파일의 크기가 크고 백업 간격 감소로 인한 문제</h4>


  <ul>
   <li>공간 효율적인 방식으로 백업을 수행해야 합니다.</li>
   <li>높은 대역폭을 사용하지 않고 신속하게 백업을 수행해야 합니다.</li>
  </ul>


  <p>파일 또는 디스크의 변경된 부분만 백업하는 증분 백업은 백업 스토리지를 줄이고 신속하게 백업을 수행하는 가장 최적의 방법입니다.</p>


  <h4>PST 파일이 대부분 열려 있어 발생하는 문제</h4>


  <ul>
   <li>백업 애플리케이션은 연결된 애플리케이션에 의해 잠겨 있으므로 파일에 액세스할 수 없으므로 백업 솔루션은 여러 번의 다시 시도를 생성하지만 결국 PST 파일의 일관된 백업을 수행하지 못합니다.</li>
   <li>증분 접근 방식이 전혀 불가능하고 백업 애플리케이션이 PST 파일의 수정된 플래그를 사용하는 경우 항상 모든 백업 시도에서 수정된 것으로 표시되어 전체 파일이 백업을 위해 다시 전송됩니다.</li>
  </ul>


  <h2>PST 파일 백업 Microsoft Azure</h2>


  <p>PST 파일의 강력하고 최적화된 백업의 경우 백업 제품에는 다음과 같은 최소 기능이 있어야 합니다.</p>


  <ul>
   <li>파일의 변경 내용에 해당하는 볼륨의 블록 수준 변경 내용 추적</li>
   <li><a href="https://msdnmicrosoftcom/en-us/library/windows/desktop/bb968832(v=vs85)aspx" target="_blank">Windows 볼륨 Shadow-Copy 서비스</a>(VSS) API 사용과 같은 볼륨 스냅 수행</li>
  </ul>


  <p>블록 수준 변경 내용을 안정적으로 추적하기 위해 Microsoft Azure Backup 제품은 파일 시스템 필터 드라이버라는 커널 모드 구성 요소를 사용하거나 파일의 변경된 블록에 대한 체크섬을 유지 관리합니다. 두 방법 모두 OS 문서화된 기능과 API를 사용하여 파일과 연결된 애플리케이션을 차단하지 않고 파일 I/O를 가로채서 모든 파일(예: PST)의 변경 내용에 대한 정보만 볼륨에 저장합니다.</p>


  <p>Microsoft Azure Backup 제품은 VSS API를 사용하여 백업 애플리케이션이 파일을 백업하는 데 사용하는 일반 볼륨의 가상 스냅샷을 만드는 볼륨 스냅샷을 만드는 반면, 연결된 애플리케이션은 일반 볼륨에서 계속 작동합니다. 섀도 복사본 만들기 요청은 볼륨에 있는 파일의 I/O 일관성을 보장하기 위해 일련의 OS 인식 단계를 생성합니다.  열려 있는 파일에 필요한</p>


  <p>여기서 유의해야 할 중요한 점은 신뢰할 수 있는 섀도 복사본 만들기를 위한 전체 VSS API 집합은 호출자가 Azure Backup 제품의 기본값인 관리자 모드에 있을 때만 가능하며, 일부 공급자는 사용자가 이를 수동으로 구성하고 권장되는 방식으로 VSS API를 호출할 수 있는 서비스를 선택적으로 사용하도록 설정해야 합니다.</p>


  <p>볼륨 스냅샷이 생성되면 백업 애플리케이션은 저장된 블록 수준 변경 정보를 사용하여 백업을 위해 스냅샷에 파일의 변경된 부분만 보냅니다. 백업을 위해 이 메서드는 다음을 보장합니다.</p>


  <ul>
   <li>백업은 증분하므로 공간 효율적입니다.</li>
   <li>대규모 PST 파일로 인해 대역폭을 사용하지 않고 백업이 빠르게 완료됩니다.</li>
   <li>백업은 I/O 일관성이 있으며 파일이 Outlook 또는 기타 연결된 애플리케이션에 의해 잠겨 있음에도 불구하고 최신 변경 내용이 있습니다.</li>
  </ul>


  <h2>백업 제품 백업 PST 파일이 올바른지 확인하는 방법</h2>


  <p>PST Files의 강력한 증분 백업의 미묘한 차이를 확인한 후에는 몇 가지 검사를 실행하여 현재 백업 애플리케이션이 PST 파일을 올바른 방법으로 백업할 수 있는지 확인하는 것이 중요합니다.</p>


  <h4>설치, 시작, 업그레이드 중에 UAC 프롬프트 확인</h4>


  <p>백업 제품에 커널 모드 구성 요소가 포함되어야 하고 VSS API에 대한 모든 권한을 위해 관리자 모드로 실행되어야 하는 경우 애플리케이션 설치, 시작 또는 업그레이드 중에 UAC( <a href="https://technetmicrosoftcom/en-us/library/cc709691(v=ws10)aspx#BKMK_WhatIs">사용자 계정 컨트롤 </a>) 프롬프트가 표시되어야 합니다.</p>


  <p style="text-align: center;"><img alt="" height="131" src="" style="width: 463px; height: 242px;" width="250"></p>


  <p>UAC 프롬프트가 발생하지 않은 경우 백업 제품이 볼륨 스냅샷을 생성하지 않고 PST 파일의 변경 내용을 추적하지 않아 신뢰할 수 없는 백업이 발생할 수 있습니다.</p>


  <h4>전송된 백업 데이터의 크기 확인</h4>


  <p>애플리케이션을 설정한 후 PST 파일의 백업 상태를 확인합니다. Outlook이 열려 있을 때 몇 시간 동안 백업 오류가 표시되지 않고&rsquo; 전송된 데이터의 크기가 PST 파일의 크기보다 훨씬 작으면 PST 파일의 예상 백업에 대해 다소 확신할 수 있습니다.</p>


  <p>여러 제품에서는 일반적으로 증분 백업을 수행한다고 주장하지만 PST와 같은 항상 열려 있는 파일의 경우 기본적으로 파일 I/O를 가로챌 수 없기 때문에 일반적으로 블록 수준 변경 내용을 추적할 수 없기 때문에 기본값으로 전체 파일을 백업합니다. 이러한 경우 백업 애플리케이션은 파일이 수정되었음을 알고 있습니다.  파일에서 변경한 내용을 식별할 수&rsquo; 없습니다. 그러면 백업을 위해 전체 파일이 전송됩니다.</p>


  <h2>PST 파일 보호 시작</h2>


  <p>기존 Azure 고객이며 PST 파일을 보호하지 않은&rsquo; 경우 Windows 머신에 <a href="https://akams/azurebackup_agent">최신 Azure Backup 에이전트</a>를 설치하여 보호를 시작합니다(Azure를 없으면 <a href="https://akams/azure_freetrial">무료 Azure 평가판 구독</a> 시작).</p>


  <h2>관련 링크 및 콘텐츠</h2>


  <ul>
   <li><a href="https://wwwmicrosoftcom/en-us/server-cloud/solutions/backup-and-recoveryaspx">OMS 백업 및 복구 시도</a></li>
   <li><a href="https://azuremicrosoftcom/en-us/documentation/articles/backup-try-azure-backup-in-10-mins/">10분 안에 Azure Backup 사용해 보기</a></li>
   <li><a href="https://akams/azurebackup_landingpage">Azure Backup</a>에 대해 자세히 알아보기</li>
   <li>도움이 필요하신가요? <a href="https://akams/azurebackup_forum">지원을 위해 Azure Backup 포럼</a>에 문의하세요.</li>
   <li>새로운 아이디어를 제공하고 기존 아이디어를 기고하여 <a href="https://akams/azurebackup_feedback">Azure Backup을 개선할</a> 수 있는 방법을 알려주세요.</li>
   <li><a href="https://twittercom/azurebackup">Twitter</a> 및 <a href="https://channel9msdncom/Series/Azure-Backup">Channel9</a>에서 Azure Backup을 팔로우하여 최신 뉴스 및 업데이트를 확인하세요.</li>
  </ul>
