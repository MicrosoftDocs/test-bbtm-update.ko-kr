### YamlMime:Yaml
ms.openlocfilehash: 5ddceb2d68052467c9fbff0b345e2f97188494e8
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900779"
Slug: see-whats-new-for-azure-app-service-on-linux-preview
Title: Azure App Service의 새로운 기능 보기 - Linux의 웹앱(미리 보기)
Summary: Linux의 App Service(미리 보기)를 사용하면 개발자가 Linux Docker 컨테이너에서 기본적으로 클라우드 앱을 실행할 수 있습니다. 다른 곳에서 Linux 플랫폼에서 호스트되는 기존 앱을 더 쉽게 마이그레이션할 수 있습니다...
Content: >-
  <p><a href="https://go.microsoft.com/fwlink/?linkid=848517">Linux의 웹앱</a> (미리 보기)을 사용하면 개발자가 Linux용 Docker 컨테이너에서 클라우드 앱을 기본적으로 실행할 수 있습니다. 이를 통해 Linux 플랫폼에 대해 호스트되고 최적화된 기존 앱을 Azure App Service로 쉽게 마이그레이션할 수 있습니다. 또한 사용자 지정 Docker 컨테이너 지원을 통해 개발자는 Docker 도구뿐만 아니라 업계 최고의 Azure App Service PaaS 기능을 활용하면서 많은 프로그래밍 언어 및 스택으로 애플리케이션을 구현할 수 있습니다.</p>


  <p>오늘 Microsoft는 Linux에서 앱을 빌드하거나 이미 컨테이너로 패키지된 앱을 가져오려는 개발자에게 차별화된 많은 PaaS 기능의 가용성을 발표합니다. 개발자는 CI(연속 통합), 테스트 및 스테이징 환경, 프로덕션 내 테스트, 성능 테스트 기능, SSH 지원 등과 같은 기능으로 향상된 생산성을 경험할 수 있습니다.</p>


  <p>또한 미국 서부, 서유럽 및 동남 아시아 외에도 오스트레일리아 동부 지역의 Linux에서 Web App의 가용성을 발표하게 되어 기쁩니다.</p>


  <p>Linux 미리 보기의 App Service에 추가한 몇 가지 주요 개선 사항은 다음과 같습니다.</p>


  <h2>사이트 슬롯 &amp; 교환</h2>


  <p>배포 슬롯은 Azure App Service에서 가장 많이 사용되는 기능 중 하나였으며 Linux 및 컨테이너 제품이 없으면 완전하지 않을 것입니다. 오늘부터 기존 애플리케이션을 슬롯&rdquo;에 &ldquo;복제하고 사전 프로덕션 슬롯과 프로덕션 슬롯 간의 교환 작업을 원활하게 수행할 수 있습니다. <a href="https://go.microsoft.com/fwlink/?linkid=848518">배포 슬롯</a>에 대해 자세히 알아봅니다. 미리 보기&rdquo;, 롤백&rdquo; 및 &ldquo;애플리케이션 준비&rdquo;와 같은 &ldquo;고급 기능이 곧 추가될 예정&ldquo;입니다.</p>


  <h2>자동 크기 조정</h2>


  <p>이제 App Service Linux 및 컨테이너 앱을 요청 시 또는 자동으로 쉽게 확장할 수 있습니다. 이 릴리스에서 자동 크기 조정은 CPU, 디스크 큐 길이 및 메모리 트리거를 지원합니다. 다른 유형의 트리거는 곧 수행될 예정입니다.</p>


  <h2>SSH 누구?</h2>


  <p>예,&rsquo; 맞습니다. 이제 관리 엔드포인트에서 앱에 SSH(webssh)를 수행할 수 있습니다. <a href="https://&lt;mysite&gt;.scm.azurewebsites.net/webssh/host">https:// mysite.scm.azurewebsites.net/webssh/host&lt;&gt;</a> 이동하여 시도해 보세요.</p>


  <p>Linux의 App Service에 대한 SSH 지원 &amp; 주의 사항에 대한 자세한 내용은 <a href="https://go.microsoft.com/fwlink/?linkid=848519">이 문서를 참조하세요</a>.</p>


  <p><strong>참고:</strong> SSH 서버는 모든 &ldquo;스톡&rdquo; 컨테이너, 기본 제공 이미지에 설치됩니다. 사용자 지정 Docker 컨테이너의 경우 SSH를 사용하려면 SSH 서버를 설치해야 합니다. <a href="https://hub.docker.com/u/appsvc/">기본 제공 이미지 목록을 참조하세요</a>.</p>


  <h2>VSTS를 사용하여 연속 배달 설정</h2>


  <p>Visual Studio Team Services 지속적인 업데이트를 사용하면 Linux 또는 컨테이너 앱에 대한 강력한 배포 파이프라인을 설정하는 것이 간단합니다.&nbsp; 기본적으로 파이프라인은 컨테이너 이미지를 빌드하고, 이미지를 컨테이너 레지스트리에 푸시하고, 새 이미지를 Azure App Service에 배포합니다. 파이프라인에 다른 Linux 또는 컨테이너 앱을 쉽게 추가하여 변경 내용이 프로덕션 환경에 적용되기 전에 유효성을 검사할 수 있습니다. 고유한 기능 테스트를 작성하여 각 단계에서 작업하는지 확인합니다. <a href="https://go.microsoft.com/fwlink/?linkid=848435">VSTS를 사용하여 연속 배달을 설정하는</a> 방법에 대해 자세히 알아봅니다.</p>


  <h2>Docker 허브의 Docker 이미지 CI/CD</h2>


  <p>새 버전이 Docker 허브로 푸시될 때 사용자 지정 Docker 이미지를 자동으로 다시 배포합니다.</p>


  <ol>
   <li>관리 엔드포인트에 푸시하도록 Docker 허브에서 웹 후크를 설정합니다.<br>
   <a href="https://&lt;publishingusername&gt;:&lt;publishingpwd&gt;@&lt;sitename&gt;.scm.azurewebsites.net/docker/hook">&lt;https:// publishingusername&gt;:&lt;publishingpwdsitename.scm.azurewebsites.net/docker/hook&gt;@&lt;&gt;</a></li>
   <li><strong>DOCKER_ENABLE_CI</strong> App Service에서 애플리케이션 설정을 만들고 값을 <strong>TRUE</strong>로 설정합니다.</li>
  </ol>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d53fb303-153e-44bd-950d-d4e24e709d61.png"><img alt="Application Setting" border="0" height="221" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/091a7d87-729b-4169-9bff-b9446c8bd196.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="애플리케이션 설정" width="804"></a></p>


  <p><a href="https://go.microsoft.com/fwlink/?linkid=848520">Docker 허브에서 Docker 이미지 CI/CD에</a> 대해 자세히 알아보세요.</p>


  <h2>Linux에서 WordPress 배포</h2>


  <p>오늘&rsquo; 공지 사항에 따라 App Service는 이제 <a href="https://go.microsoft.com/fwlink/?linkid=848521">Azure Database for MySQL(미리 보기)</a>을 지원합니다. Azure Database for MySQL(미리 보기)에서 지원되는 WordPress 패키지를 설치하기 쉬운 패키지는 이제 Windows 및 Linux의 App Service Web Apps에서 사용할 수 있습니다. 자세한 내용은 <a href="https://go.microsoft.com/fwlink/?linkid=848522">App Service Linux에서 WordPress 만들기</a>를 참조하세요.</p>


  <h2>Linux용 App Service 사용해 보기</h2>


  <p>또한 <a href="https://azure.microsoft.com/en-us/try/app-service/linux/">App Service를 사용해 보기 위해 Linux의 Web Apps 추가를 발표하게</a> 되어 기쁩니다. 이제 Azure에 등록하거나 신용 카드를 제공하지 않고도 App Service에서 Linux 또는 컨테이너 기반 애플리케이션을 무료로 빌드할 수 있습니다.</p>


  <p>자세한 내용은 <a href="https://go.microsoft.com/fwlink/?linkid=848523">이 블로그를 참조하세요</a>.</p>


  <h2>오늘 발표된 기타 기능</h2>


  <ul>
   <li><strong>와일드카드 도메인 이름 지원:</strong> 이제 웹앱에 와일드카드 도메인 이름을 할당할 수 있습니다. 예를 들어 *.constoco.com.</li>
   <li><a href="https://go.microsoft.com/fwlink/?linkid=848524"><strong>TiP(프로덕션에서 테스트):</strong></a> <strong>이 기능을</strong> 사용하면 트래픽의 x%를 애플리케이션의 슬롯 또는 베타 사이트로 보낼 수 있습니다. 자세한 내용은 링크를 따르세요.&nbsp;</li>
   <li><a href="https://go.microsoft.com/fwlink/?linkid=848525"><strong>Always ON</strong></a><strong>:</strong> 이 기능을 사용하면 웹앱이 항상 실행되도록 유지하고 유휴 시간 제한으로 인해 콜드 시작을 방지할 수 있습니다. 자세한 내용은 링크를 따르세요.&nbsp;</li>
   <li><strong>Azure Portal 및 API에서 사이트 다시 시작:</strong> 이 옵션을 사용하여 컨테이너 및 웹앱을 다시 시작할 수 있습니다. 이 옵션은 캐시된 이미지에서 컨테이너를 강제로 다시 로드합니다.&nbsp;</li>
   <li><strong>사용자 지정 이미지에 대한 자동 포트 검색:</strong> 더 이상 웹앱에 대해 PORT AppSetting을 설정할 필요가 없습니다. Docker 파일을 읽고 내부 PORT를 자동으로 구성하려고 합니다. 애플리케이션이 수신 대기하고 있습니다. 이미 PORT 애플리케이션 설정을 구성한 경우 해당 설정이 적용되고 기본 설정입니다.</li>
  </ul>


  <p>이러한 기능 업데이트를 고객에게 제공하게 되어 기쁘게 생각합니다. 추가 질문은 <a href="https://go.microsoft.com/fwlink/?linkid=848584">FAQ</a>를 확인하세요.</p>


  <p>언제나처럼 <a href="https://aka.ms/webapps-uservoice">UserVoice</a>에서 아이디어/피드백을 제출합니다. 제목 시작 부분에 [Linux] 또는 [컨테이너]를 추가하세요.</p>
