### YamlMime:Yaml
ms.openlocfilehash: cc342e553e67fc119e38a16eccc4c32c830e23e3
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139911931"
Slug: easily-transform-data-when-importing-to-azure-documentdb-2
Title: Azure DocumentDB로 가져올 때 JSON 데이터를 쉽게 변환
Summary: Azure DocumentDB 데이터 마이그레이션 도구를 사용하면 가져오는 동안 데이터를 쉽게 변환할 수 있습니다.
Content: >-
  <p><a href="https://azure.microsoft.com/documentation/articles/documentdb-import-data/">Azure DocumentDB 데이터 마이그레이션 도구</a>는 <a href="https://azure.microsoft.com/services/documentdb/">데이터를 DocumentDB</a>, Azure&#39;NoSQL 문서 데이터베이스 서비스로 가져오는 오픈 소스 솔루션입니다.&nbsp; 이미 알고 있는 도구(<a href="https://github.com/azure/azure-documentdb-datamigrationtool">GitHub </a>또는 <a href="https://www.microsoft.com/downloads/details.aspx?FamilyID=cda7703a-2774-4c07-adcc-ad02ddc1a44d">Microsoft 다운로드 센터에서</a> 사용 가능)는 JSON 파일, CSV 파일, SQL Server, MongoDB, Azure Table Storage, Amazon DynamoDB, HBase 및 DocumentDB 컬렉션을 비롯한 다양한 원본에서 DocumentDB로 데이터 가져오기&nbsp;를 지원하지만 가져오기 중에 데이터 사용자 지정 변환도 지원합니다. 가져오기 프로세스 중에 데이터에 사용자 지정 변환을 적용하는 것이 얼마나 쉬운지 확인&rsquo;합니다.</p>


  <p>마이그레이션 도구를 사용하여 DocumentDB로 데이터를 가져올 때 기본 옵션은 대량 가져오기입니다. 이렇게 하면 DocumentDB JavaScript <a href="https://azure.microsoft.com/documentation/articles/documentdb-programming/">저장 프로시저</a> 를 활용하여 데이터를 최대한 효율적이고 빠르게 가져옵니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/67bd2f45-05a9-4ef4-afec-d48c9e603206.png"><img alt="DataMigrationTool_1" border="0" height="600" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/357cdc49-6d80-433a-a07b-edbb8f06c21e.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="DataMigrationTool_1" width="800"></a></p>


  <p><br>

  마이그레이션 도구 디렉터리에서 BulkInsert.js 및 BulkTransformationInsert.js 두 저장 프로시저를 사용할 수 있으며 둘 다 대량 가져오기 작업을 수행합니다.</p>


  <p><br>

  BulkInsert.js 도구에서 사용하는 기본 가져오기 저장 프로시저이지만 고급 옵션 섹션에서 사용하려는 사용자 지정 저장 프로시저를 지정할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e2b71d1e-ee70-46fd-8cea-3db98f4ed431.png"><img alt="DataMigrationTool_2" border="0" height="600" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/21b4d016-1ffb-4b4e-8b0b-bf606bd3e8d7.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="DataMigrationTool_2" width="800"></a></p>


  <p><br>

  BulkInsert.js BulkTransformationInsert.js 차이점은 가져온 모든 문서에 사용자 지정 변환 논리를 적용하는 데 사용할 수 있는 transformDocument 함수 &ldquo;스텁&rdquo; 이 포함되어 있다는 점입니다.</p>


  <pre class="prettyprint">
      function transformDocument(doc) {
          /*
              Add custom tranformation code here. You can either modify an existing document and
              return it or create a new one.

              Example #1, rename &quot;ExternalId&quot; field to &quot;id&quot;:

                  doc[&quot;id&quot;] = doc[&quot;ExternalId&quot;];
                  delete doc.ExternalId;

              Example #2, convert string field to an array:

                  if (doc[&quot;Cities&quot;]) {
                      doc[&quot;Cities&quot;] = doc[&quot;Cities&quot;].split(&quot;|&quot;);
                  }
          */
          return doc;
      }</pre>

  <p><br>

  BulkTransformationInsert.js 템플릿으로 사용하고, 필요에 따라 수정한 다음, 마이그레이션 도구에서 가져오는 동안 사용자 지정 저장 프로시저를 사용하도록 할 수 있습니다.&nbsp; &rsquo;예제를 살펴보겠습니다.</p>


  <p>시카고시에는 CSV 형식으로 제공되는 식품 검사 데이터 세트*가 <a href="https://data.cityofchicago.org/api/views/4ijn-s7e5/rows.csv" target="_blank">있습니다</a> .&nbsp; 마이그레이션 도구를 사용하여 이 데이터 집합의 기본 가져오기를 수행하는 경우 일반적인 문서는 다음과 같습니다.</p>


  <pre class="prettyprint">

  {
    &quot;id&quot;: &quot;1575294321&quot;,
    &quot;DBA Name&quot;: &quot;CONTOSO CO.&quot;,
    &quot;AKA Name&quot;: &quot;CONTOSO CO.&quot;,
    &quot;License #&quot;: 2423456321,
    &quot;Facility Type&quot;: &quot;Restaurant&quot;,
    &quot;Risk&quot;: &quot;Risk 1 (High)&quot;,
    &quot;Address&quot;: &quot;3141 N FABRIKAM ST&quot;,
    &quot;City&quot;: &quot;CHICAGO&quot;,
    &quot;State&quot;: &quot;IL&quot;,
    &quot;Zip&quot;: 60657,
    &quot;Inspection Date&quot;: &quot;2015-09-09T00:00:00.0000000Z&quot;,
    &quot;Inspection Type&quot;: &quot;License&quot;,
    &quot;Results&quot;: &quot;Pass&quot;,
    &quot;Violations&quot;: &quot;30. FOOD IN ORIGINAL CONTAINER, PROPERLY LABELED: CUSTOMER ADVISORY POSTED AS NEEDED - Comments: OBSERVED WRAPPED TO GO DESSERTS AT THE FRONT COUNTER UNLABELED. INSTRUCTED FACILITY TO LABEL AND MAINTAIN WITH PRODUCTION FACILITY NAME AND CONTACT INFORMATION. | 34. FLOORS: CONSTRUCTED PER CODE, CLEANED, GOOD REPAIR, COVING INSTALLED, DUST-LESS CLEANING METHODS USED - Comments: INSTRUCTED FACILITY TO INSTALL AND MAINTAIN COVING ALONG THE WALLS IN THE PREP AREA. | 36. LIGHTING: REQUIRED MINIMUM FOOT-CANDLES OF LIGHT PROVIDED, FIXTURES SHIELDED - Comments: INSTRUCTED FACILITY TO INSTALL LIGHT SHIELDS OR TO OBTAIN SHATTER PROOF LIGHT BULBS AND TO MAINTAIN.&quot;
  }</pre>


  <p><br>

  Violations 속성을 확인합니다.&nbsp; 각 위반을 문자로 구분하여 여러 위반이 &lsquo;|&rsquo; 있습니다.&nbsp; 사용자 지정 변환을 사용하여 위반 목록을 각 문서 내에 적절한 JSON 배열로 저장할 수 있습니다.&nbsp; 이렇게&rsquo; 하려면 BulkTransformationInsert.js transformDocument 함수를 수정하고 수정된 스크립트를 TransformChicagoDataset.js 저장합니다.</p>


  <pre class="prettyprint">
      function transformDocument(doc) {
    if (doc[&quot;Violations&quot;]) {
     doc[&quot;Violations&quot;] = doc[&quot;Violations&quot;].split(&quot; | &quot;);
    }
          return doc;
      }</pre>

  <p><br>

  또한 가져오기&rsquo; 중에 수정된 저장 프로시저를 지정합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/27044dce-164d-4c84-b674-2c0cc3ae00eb.png"><img alt="DataMigrationTool_3" border="0" height="600" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/112534f0-1577-45dc-a15e-c6e17df84b61.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="DataMigrationTool_3" width="800"></a></p>


  <p><br>

  이제 수정된 저장 프로시저를 사용하여 가져오기를 수행한 후 일반적인 문서가 다음과 같이 표시됩니다.</p>


  <pre class="prettyprint">

  {
    &quot;id&quot;: &quot;1575294321&quot;,
    &quot;DBA Name&quot;: &quot;CONTOSO CO.&quot;,
    &quot;AKA Name&quot;: &quot;CONTOSO CO.&quot;,
    &quot;License #&quot;: 2423456321,
    &quot;Facility Type&quot;: &quot;Restaurant&quot;,
    &quot;Risk&quot;: &quot;Risk 1 (High)&quot;,
    &quot;Address&quot;: &quot;3141 N FABRIKAM ST&quot;,
    &quot;City&quot;: &quot;CHICAGO&quot;,
    &quot;State&quot;: &quot;IL&quot;,
    &quot;Zip&quot;: 60657,
    &quot;Inspection Date&quot;: &quot;2015-09-09T00:00:00.0000000Z&quot;,
    &quot;Inspection Type&quot;: &quot;License&quot;,
    &quot;Results&quot;: &quot;Pass&quot;,
    &quot;Violations&quot;: [
      &quot;30. FOOD IN ORIGINAL CONTAINER, PROPERLY LABELED: CUSTOMER ADVISORY POSTED AS NEEDED - Comments: OBSERVED WRAPPED TO GO DESSERTS AT THE FRONT COUNTER UNLABELED. INSTRUCTED FACILITY TO LABEL AND MAINTAIN WITH PRODUCTION FACILITY NAME AND CONTACT INFORMATION.&quot;,
      &quot;34. FLOORS: CONSTRUCTED PER CODE, CLEANED, GOOD REPAIR, COVING INSTALLED, DUST-LESS CLEANING METHODS USED - Comments: INSTRUCTED FACILITY TO INSTALL AND MAINTAIN COVING ALONG THE WALLS IN THE PREP AREA.&quot;,
      &quot;36. LIGHTING: REQUIRED MINIMUM FOOT-CANDLES OF LIGHT PROVIDED, FIXTURES SHIELDED - Comments: INSTRUCTED FACILITY TO INSTALL LIGHT SHIELDS OR TO OBTAIN SHATTER PROOF LIGHT BULBS AND TO MAINTAIN.&quot;
    ]
  }</pre>


  <p><br>

  이제 Violations 속성에는 각 배열 멤버가 개별 위반을 나타내는 적절한 JSON 위반 배열이 포함됩니다.</p>


  <p>이 기능에 대한 창의적인 용도를 많이 찾을 수 있기를 바랍니다.&nbsp; 위의 콘텐츠에서 가장 큰 내용과 함께 아래에 의견을 남겨주세요. 관련 정보와 기능을 계속 제공하는 데 도움이 되므로 여러분의 관점과 피드백을 듣고 싶습니다.</p>


  <p>도움이 필요하거나 질문이나 피드백이 있는 경우 <a href="https://stackoverflow.com/questions/tagged/azure-documentdb">스택 오버플로에 대한 개발자 포럼에</a> 문의하거나 DocumentDB 엔지니어링 팀과 1:1 채팅을 예약하세요.&nbsp; Twitter <a href="https://twitter.com/DocumentDB">@DocumentDB</a>에서 팔로우하여 최신 DocumentDB 뉴스 및 기능을 최신 상태로 유지하세요.</p>


  <p>&nbsp;</p>


  <p>*시카고시는 이 사이트에 제공된 데이터의 내용, 정확성, 적시성 또는 완전성에 대해 어떠한 주장도 하지 않습니다.&nbsp; 이 사이트에 제공된 데이터는 언제든지 변경될 수 있습니다.&nbsp; 이 사이트에 제공된 데이터는 자신의&rsquo; 위험에서 사용되고 있는 것으로 이해됩니다.</p>
