### YamlMime:Yaml
ms.openlocfilehash: 0255b756ca6cb87d879b2d3204b945337bcfb674
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900743"
Slug: serverless-real-time-notifications-in-azure-using-azure-cosmosdb
Title: 'Azure #CosmosDB 사용하여 Azure에서 서버리스 실시간 알림'
Summary: Microsoft Build 2018 컨퍼런스에서 많은 공지 사항이 있었지만, 제 눈을 사로잡은 것은 Azure SignalR의 미리 보기 릴리스인 PaaS(Platform-as-a-Service) 제품입니다.
Content: >-
  <p><br>

  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6bbedec0-67f2-4cbe-83a5-4397f2506143.png"><img alt="header" border="0" height="488" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b51cee18-6093-4130-930f-acd811f7b5e0.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="헤더" width="1779"></a></p>


  <p><a href="https://developer.microsoft.com/events/build/content" target="_blank">Microsoft Build 2018</a> 컨퍼런스에서 많은 공지 사항이 있었지만, 제 눈에 펴진 것은 인스턴스나 호스트에 대한 걱정 없이 <strong>실시간</strong> 메시지와 알림을 매우 쉽게 구현할 수 있는 PaaS(Platform-as-a-Service) 제품인 Azure SignalR의 미리 보기 릴리스였습니다.</p>


  <p>그래서 제가 <strong>가장 좋아하는 전역 분산 및 서버리스 데이터베이스</strong>, <a href="https://azure.microsoft.com/services/cosmos-db/" target="_blank">Azure Cosmos DB 및 Azures</a> 서버리스 컴퓨팅 제품인 Azure&rsquo; <a href="https://azure.microsoft.com/services/functions/" target="_blank">Functions</a>를 사용하여 무언가를 빌드할 수 있을까요? 그것은 다른 사람도이 주제에 관심이 밝혀졌다.</p>


  <h2>실시간, 정말?</h2>


  <p>모르는 사용자를 위해 <a href="https://www.asp.net/signalr" target="_blank">SignalR</a>은 2013년부터 ASP.NET Framework용 라이브러리&rsquo;로, 최근에 <a href="https://docs.microsoft.com/aspnet/core/signalr/introduction" target="_blank">SignalR Core</a>라는 이름으로 <a href="https://docs.microsoft.com/aspnet/core" target="_blank">ASP.NET Core</a> 다시 작성하여 <strong>Websocket</strong> 프로토콜을 통해 <strong>실시간으로 애플리케이션</strong>을 만들고 클라이언트에 콘텐츠를 푸시할 수 있으므로 클라이언트에 따라 다른 대안으로 정상적으로 대체됩니다. 게임, 대시보드/모니터링 앱, <a href="https://azure.microsoft.com/blog/have-fun-and-draw-awesome-on-the-cosmic-scale-azure-cosmosdb-pxdraw-canvas-today/" target="_blank">협업 앱</a>, 매핑/추적 앱 또는 알림이 필요한 모든 앱에 적합합니다.</p>


  <p><a href="https://tools.ietf.org/html/rfc6455" target="_blank">Websocket</a> 프로토콜을 활용하여 여러 HTTP 연결을 여는 오버헤드 없이 전체 세션에 대해 유지 관리되는 단일 양방향 TCP 채널을 통해 콘텐츠를 클라이언트에 푸시할 수 있습니다.</p>


  <h2>서버리스로 진행!</h2>


  <p>SignalR의 한 가지 <strong>요구 사항은</strong> 개발자가 일반적으로 웹 인스턴스로 배포된 클라이언트와의 연결을 관리하고 유지 관리하는 <strong>호스트</strong> 가 있어야 한다는 것이었습니다. Azure에서는 App Service 및 Cloud Services와 같은 PaaS 제품에서 이 작업을 수행할 수 있습니다. 복잡한 작업은 아니지만&rsquo; 여전히 유지 <strong>관리</strong> 해야 하며, 디자인 및 사용자 부하 정의에 따라 서비스가 여러 연결 및 부하를 처리할 수 있도록 해야 했습니다.</p>


  <p><strong>Azure SignalR</strong>을 사용하면 <strong>호스트가 제공됩니다</strong>. 클라이언트와 서버를 노출된 서비스 엔드포인트에 연결하기만 하면 됩니다. 필요에 따라 서비스를 투명하게 <a href="https://docs.microsoft.com/azure/azure-signalr/signalr-overview#how-does-it-scale" target="_blank">확장</a> 할 수도 있습니다.</p>


  <p><strong>서버리스 데이터베이스</strong>와 Azure Functions를 <strong>서버리스 플랫폼</strong>으로 추가하여 모든 코드를 실행하면 서버&hellip;리스 서버리스 서버리스가 됩니다.</p>


  <h2>알림 간소화</h2>


  <p>아키텍처에는 다음이 필요합니다.</p>


  <ul>
   <li>데이터를 저장하고 실시간 알림을 받을 수 있는 <strong>클라이언트</strong> 입니다. 간단히 하기 위해 <strong>웹</strong> <strong>클라이언트</strong>는 더 빠른 옵션이었고 웹에서 일반적인 <strong>채팅 애플리케이션</strong>을 선택했음을 보여&rsquo; 줍니다.</li>
   <li>클라이언트에서 데이터를 수신하고 <strong>데이터베이스</strong>에 <strong>저장할</strong> 수 있는 <strong>API</strong>입니다.</li>
   <li>새 데이터에 대해 작업하고 모든 클라이언트에 실시간으로 <strong>알릴</strong> 수 있는 몇 가지 <strong>메커니즘</strong>입니다.</li>
  </ul>


  <p>Azure Functions( <a href="https://docs.microsoft.com/azure/azure-functions/functions-scale#consumption-plan" target="_blank">소비 계획</a>)를 컴퓨팅 계층으로 사용했기 때문에 모든 기능을 네 가지 함수로 배포했습니다.</p>


  <ul>
   <li>웹 클라이언트가 <a href="https://github.com/ealsur/serverlessnotifications/tree/master/src/function/ChangeFeedSignalR/www" target="_blank">www 폴더의</a> 파일을 찾아서 가져올 수 있도록 하는 정적 파일의 서버리스 파일 서버 역할을 하는 <a href="https://github.com/ealsur/serverlessnotifications/blob/master/src/function/ChangeFeedSignalR/Functions/FileServer.cs" target="_blank">FileServer</a>입니다( 그러나 shhh, theret&rsquo;!). <a href="https://github.com/ealsur/serverlessnotifications/blob/master/src/function/ChangeFeedSignalR/www/index.html" target="_blank">웹 클라이언트</a>는 연결 및 전송 프로토콜 확인을 위해 <a href="https://www.npmjs.com/package/@aspnet/signalr" target="_blank">Azure SignalRs&rsquo; npm 패키지를</a> 사용합니다. 또는 정적 자산도 <a href="https://azure.microsoft.com/services/cdn/" target="_blank">Azure CDN</a> 통해 제공될 수 있습니다.</li>
   <li><a href="https://github.com/ealsur/serverlessnotifications/blob/master/src/function/ChangeFeedSignalR/Functions/SaveChat.cs" target="_blank">SaveChat</a>- 연결된 웹 클라이언트에서 채팅 메시지를 수신하고 <a href="https://docs.microsoft.com/azure/azure-functions/functions-bindings-cosmosdb#output" target="_blank">출력 바인딩</a>을 사용하여 Cosmos DB에 저장합니다.</li>
   <li>SignalRS Websocket 연결을 초기화하기 위해 필요한 정보를 웹 클라이언트에 보내는 <a href="https://github.com/ealsur/serverlessnotifications/blob/master/src/function/ChangeFeedSignalR/Functions/SignalRConfiguration.cs" target="_blank">SignalRConfiguration</a>&rsquo;입니다.</li>
   <li><a href="https://github.com/ealsur/serverlessnotifications/blob/master/src/function/ChangeFeedSignalR/Functions/FeedToSignalR.cs" target="_blank">FeedToSignalR</a>은 Azure Cosmos DB의 새 데이터를 기반으로 <a href="https://github.com/ealsur/serverlessnotifications/blob/master/src/function/ChangeFeedSignalR/Functions/FeedToSignalR.cs" target="_blank">CosmosDB 트리거를 트리거</a>하고 Azure SignalR을 통해 연결된 모든 클라이언트에 브로드캐스트합니다.</li>
  </ul>


  <p>사용자 지정 경로, 특히 정적 웹 호스트를 지원하기 위해 <a href="https://github.com/ealsur/serverlessnotifications/blob/master/src/function/ChangeFeedSignalR/proxies.json" target="_blank">proxies.json</a> 파일을 통해 <a href="https://docs.microsoft.com/azure/azure-functions/functions-proxies" target="_blank">Azure Functions 프록시</a>를 구현했습니다. 따라서 사용자가 기본 URL을 찾아볼 때 대신 HTTP 트리거 함수 중 하나를 호출합니다.</p>


  <p>전체 흐름은 다음과 같습니다.</p>


  <ul>
   <li>웹 클라이언트는 정적 리소스(예: 기본 URL 찾아보기)를 로드할 때 <a href="https://github.com/ealsur/serverlessnotifications/blob/master/src/function/ChangeFeedSignalR/Functions/SignalRConfiguration.cs" target="_blank">SignalRConfiguration에서 SignalR</a> 구성을 가져옵니다.</li>
   <li>그런 다음, 브라우저에서 지원하고 연결하는 최상의 전송 프로토콜을 Azure SignalR과 협상합니다.</li>
  </ul>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ba92560e-ab55-41f6-8d66-bba585220c0e.png"><img alt="signalr" border="0" height="374" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/140d7978-ada7-43c9-be0f-dc2f9b20845f.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="signalr" width="688"></a></p>


  <ul>
   <li>사용자가 메시지를 작성하면 <a href="https://github.com/ealsur/serverlessnotifications/blob/master/src/function/ChangeFeedSignalR/Functions/SaveChat.cs" target="_blank">SaveChat</a>에 대한 Ajax 호출을 통해 Azure Cosmos DB에 저장됩니다.</li>
  </ul>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/940fc191-ef92-4249-8bcb-c1fdd114b47b.png"><img alt="chat" border="0" height="486" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/91341b89-20b5-46ca-b444-cf21909ccaec.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="채팅" width="721"></a></p>


  <ul>
   <li>각 채팅 라인은 Azure Cosmos DB에 문서로 저장됩니다.</li>
  </ul>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a4e76ce8-fea2-4f79-bc6f-6ddfcef21f8e.png"><img alt="db" border="0" height="265" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5215ab15-61b9-4106-a8a5-a6562362b889.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Db" width="925"></a></p>


  <ul>
   <li><a href="https://github.com/ealsur/serverlessnotifications/blob/master/src/function/ChangeFeedSignalR/Functions/FeedToSignalR.cs" target="_blank">FeedToSignalR</a>은 트리거하고 모든 Azure SignalR 연결된 클라이언트에 브로드캐스트합니다.</li>
  </ul>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5b37fe4a-9ea5-41b6-ae0b-3736579a0b75.png"><img alt="invocation" border="0" height="276" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3bc72e33-d634-48c5-bda2-9538aa486116.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="호출" width="823"></a></p>


  <p>최종 결과는 필요한 경우에만 리소스를 사용하고 호스트 또는 추가 서비스 계층을 유지할 필요가 없는&rsquo; <strong>완전한 서버리스 흐름</strong>입니다.</p>


  <p>채팅 앱일 뿐이지만 IoT, 대시보드, 시스템 전체 브로드캐스트 및 큰 etcetera와 같은 다른 흐름에서 쉽게 구현할 수 있습니다.</p>


  <h2>다음 단계</h2>


  <p>코드는 <a href="https://github.com/ealsur/serverlessnotifications/" target="_blank">Github에서 공개</a> 되며 <a href="https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fealsur%2Fserverlessnotifications%2Fmaster%2Fazuredeploy.json" target="_blank">한 번의 클릭</a>으로 Azure 구독에서 전체 아키텍처를 배포하는 멋진 단추도 포함되어 있습니다.</p>


  <p><a href="https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fealsur%2Fserverlessnotifications%2Fmaster%2Fazuredeploy.json" target="_blank"><img alt="deploybutton" border="0" height="42" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/018d6bb5-0d61-48c3-b267-84d1459dc44c.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="deploybutton" width="198"></a></p>


  <p>복제, 포크 및 새 프로젝트 또는 현재 프로젝트의 기반으로 사용합니다. Azure SignalR은 아직 <strong>미리 보기</strong> 상태이므로 나중에 라이브러리 또는 서비스 API가 변경될 수 있습니다. 지금 <a href="https://azure.microsoft.com/try/cosmosdb/" target="_blank">Azure Cosmos DB를 무료로 사용해 볼</a> 수 있으며, 등록 또는 신용 카드가 필요하지 않습니다. Twitter <a href="https://twitter.com/search?q=%23cosmosDB&amp;src=typd" target="_blank">#CosmosDB</a><a href="https://twitter.com/AzureCosmosDB" target="_blank">@AzureCosmosDB</a>에서 최신 Azure Cosmos DB 뉴스 및 기능을 최신 상태로 유지하세요.</p>
