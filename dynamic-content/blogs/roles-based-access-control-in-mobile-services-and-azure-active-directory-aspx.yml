### YamlMime:Yaml
ms.openlocfilehash: ec842d5834905246e71557da66957815dc419138
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139912455"
Slug: roles-based-access-control-in-mobile-services-and-azure-active-directory-aspx
Title: Mobile Services 및 Azure Active Directory 액세스 제어 Roles-Based
Summary: 11월에는 Mobile Services ID 공급자로 Azure Active Directory(AAD)의 미리 보기를 발표했습니다. 이 임무는 기업 개발자에게 직원을 빌드하기 위한 쉬운 솔루션을 제공하는 것이었습니다-...
Content: >-
  11월에는 Mobile Services ID 공급자로 Azure Active Directory(AAD)의  <a href="https://weblogs.asp.net/scottgu/archive/2013/11/21/windows-azure-general-availability-release-of-biztalk-services-traffic-manager-azure-ad-app-access-xamarin-support-for-mobile-services.aspx">weannounceda</a>  미리 보기가 제공됩니다. 이 임무는 엔터프라이즈 개발자에게 직원용 모바일 앱을 빌드하기 위한 쉬운 솔루션을 제공하는 것이었습니다. 기본 인증은 좋은 시작이지만 대부분의 경우 현재 미리 보기 고객은 권한 부여 결정을 내리기 위해 사용자 유형을 구분해야 했습니다. RBAC(역할 기반 액세스 제어)는 사용자가 보유할 수 있는 역할에 권한을 할당하고 특정 클래스의 사용자가 수행할 수 있는 작업과 수행할 수 없는 작업에 대한 경계를 멋지게 정의하는 아이디어입니다. 다행히 Azure Mobile Services 기본 RBAC를 추가하는 것은 매우 쉽습니다. 이 게시물에서는 이를 수행하는 방법을 안내합니다.

  <strong>이 게시물의 나머지 부분을 따라가려면 Azure Active Directory 통합을 위해 Mobile Services 미리 보기에 등록해야 합니다. 액세스하려면 이메일을 보내MobileServices@microsoft.com주세요.</strong>

  <h4> 배경</h4>

  내 영업 팀만을 위한 애플리케이션을 개발하고 싶다고 상상해 보겠습니다. 앱에 액세스하려면 사용자가 내 회사의 디렉터리의 구성원일 뿐만 아니라 영업 그룹에도 할당되어야 합니다.영업 팀의 인증된 멤버만 앱에 액세스할 수 있도록 서버 쪽에서 추가해야 하는 논리를 살펴보겠습니다. (Mobile Services Azure Active Directory 인증을 시작하는 경우 이 설정이 자습서에 도움이  <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-how-to-register-active-directory-authentication/">될</a> 수 있습니다.)


  우리가 취하는 기본 방법은 Azure AD 테넌트의 사용자에 대한 보안 그룹 멤버 자격을 활용하는 것입니다. AAD 역할과 그룹 모두에 대한 개념을 가지고 있지만, 오늘날의 시나리오에서는 이미 올바른 사용자 멤버 자격이 있는 기존 그룹으로 작업하고 있습니다. Azure AD 테넌트와 동기화되는 온-프레미스 AD 테넌트에서 그룹을 관리합니다. O365 및 Windows Intune 고객은 온-프레미스 Active Directory와 디렉터리 동기화를 설정하여 많은 기능을 얻을 수 있음을 증명할 수 있습니다(이러한 테넌트를 사용하여 Mobile Services 빌드할 수도 있습니다).


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1321.RBAC_5F00_1.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1321.RBAC_5F00_1.png" border="0"></a>


  &nbsp;


  지금은 "암호 동기화" 옵션을 사용할 예정이지만 여러 시나리오가 지원됩니다. 실제로 훌륭한 하이브리드 시나리오를 위해 ADFS를 가리키도록 AAD 설정할 수 있습니다. 이러한 옵션을 사용하려면 R2 Datacenter Windows Server 2012 실행되는 Azure VM을 스핀업하고 Active Directory Domain Services 역할을 설치합니다. 그런 다음 <a href="https://msdn.microsoft.com/en-us/library/windowsazure/jj573653.aspx">, 디렉터리 동기화 지침을</a> 따릅니다.

  <h4>그룹 만들기</h4>

  내 디렉터리 내에서 일부 사용자(Alice, Bob, Carol 및 Dave)와 "Sales" 도메인 보안 그룹을 만든 것을 볼 수 있습니다. 이 그룹의 Alice와 Bob 멤버를 만들었지만 Carol과 Dave는 외부에 남아 있고 내 앱에 액세스할 수 없어야 합니다. 다른 모든 항목은 기본값입니다.


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1121.RBAC_5F00_2.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1121.RBAC_5F00_2.png" border="0"></a>

  <h4>Azure Mobile Services 연결</h4>

  이제 앱 백 엔드 빌드를 시작할 준비가 되었습니다. Azure 모바일 서비스에서는 제공된 항목 위에 추가 권한 부여 논리를 사용하여 각 스크립트 및 API를 보호하려고 합니다. 몇 가지 추가 정신을 위해, 나는 앞으로 가서 각 보호 된 엔드포인트에 대한 "인증 된 사용자"로 권한을 설정합니다.


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/8156.RBAC_5F00_3.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/8156.RBAC_5F00_3.png" border="0"></a>


  여러 스크립트에서 실행하려는 논리를 빌드하고 있으므로 내 코드를 모바일 서비스 <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-store-scripts-source-control/">Git 리포지토리</a>의 공유 스크립트 섹션에 배치합니다. 스크립트의 이름을 rbac.js.


  그룹 멤버 자격을 결정하는 첫 번째 단계는 AAD 그래프 API에 대한 액세스 권한을 얻는 것입니다. 이 설정은 이 블로그 게시물과  <a href="https://code.msdn.microsoft.com/windowsazure/How-to-integrate-a-Nodejs-3df9338f#content">inthis 샘플</a>에서 다룹니다. 다음을 시작합니다.


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/0083.code-1.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/0083.code-1.png" border="0"></a>


  그래프 액세스 토큰이 있으면  <a href="https://msdn.microsoft.com/en-us/library/windowsazure/dn151601.aspx">theisMemberOfgraph</a>  엔드포인트를 호출해야 합니다. 이렇게 하면 지정된 사용자가 전이적 멤버 자격을 포함하여 지정된 그룹의 구성원인지 확인합니다. 확인 중인 스크립트에서 사용자 ID를 가져올 수 있습니다. 모든 테이블 스크립트는 명시적으로 사용자 개체를 수신하고 request.user에 액세스하여 사용자 지정 API에서 사용자 지정 개체를 가져올 수 있습니다. 관리 포털에서 편리하게 사용할 수 있는 그룹 ID를 가져와야 합니다. Azure AD 테넌트로 이동하여 그룹 탭을 열고 그룹을 선택한 다음 구성 탭 아래에서 개체 ID를 복사합니다.


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/4276.RBAC_5F00_4.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/4276.RBAC_5F00_4.png" border="0"></a>


  쉽게 사용할 수 있도록 친숙한 이름을 사용하여 공유 스크립트에서 값을 내보냅니다.


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/7723.code-2.png"><img alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/7723.code-2.png" border="0"></a>


  이제 isMemberOf 엔드포인트를 AAD 호출을 래핑하는 함수를 작성하려고 합니다. 앞에서 설명한 것처럼 방금 얻은 userID와 groupID가 모두 필요합니다. 요청에는 가져온 액세스 토큰도 포함되어야 합니다.


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1805.code-3.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1805.code-3.png" border="0"></a>


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1220.code-4.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/1220.code-4.png" border="0"></a>


  프로그래밍 모델을 약간 간소화하고 그룹 ID뿐만 아니라 Mobile Services 사용자 개체(objectID를 가져올 수 있음)도 필요합니다. 그래프 토큰을 가져와서 호출하도록 잘 래핑합니다. 프로덕션 환경에서는 매번 가져오는 대신 이 토큰을 캐시하려고 합니다. 토큰에는 새 토큰을 가져와야 하는 시기를 결정하는 데 사용할 수 있는 만료 값이 포함되어 있습니다.


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/8662.code-5.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/8662.code-5.png" border="0"></a>


  이것이 공유 스크립트에 대한 것입니다. 이제 RBAC로 보호하려는 각 스크립트에 대해 몇 줄을 추가하고 콜백에서 스크립트의 작업을 수행해야 합니다. 다음은 테이블 읽기의 예입니다.


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/4530.code-6.png"><img class="aligncenter" alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1708/4530.code-6.png" border="0"></a>

  <h4>요약</h4>

  정말 간단하죠. 앱 사용량을 필요한 직원의 하위 집합으로 제한했습니다. 여기에서 다양한 RBAC 시나리오에 대한 빌드를 시작할 수 있습니다. 특정 사용자에 대해 클라이언트 UI를 구분하려는 경우 이 작업을 수행하는 한 가지 간단한 방법은 로그인 직후 호출할 수 있는 사용자 지정 API로 멤버 자격 검사를 노출하는 것입니다.


  Azure Active Directory 그룹 지원을 통해 멋진 작업을 수행하고 있으며 관리 포털에서 바로 많은 작업을 수행할 수 있습니다. AAD Premium 사용자는  <a href="https://blogs.technet.com/b/ad/archive/2014/02/24/more-preview-enhancements-for-windows-azure-ad-premium.aspx">새 서비스 그룹 관리 지원을</a> 확인해야 합니다.


  엔터프라이즈 모바일 앱 개발에 관심이 있는 경우 새  <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-dotnet-backend-windows-store-dotnet-get-started/">Mobile Services.NET 백 엔드 미리 보기</a>도 확인하는 것이 좋습니다. 현재 기본 제공 AAD 지원되지는 않지만 걱정하지 마세요! 우리는 곧 사용할 수 있습니다.


  또한 AAD 미리 보기에 참여하거나 질문이 있는 경우 문의 <a href="mailto:mobileservices@microsoft.com">mobileservices@microsoft.com</a>해 주세요.


  추가 기능 또는 시나리오를 확인하려는 경우 사용자 의견으로 피드백을 제출하세요.
