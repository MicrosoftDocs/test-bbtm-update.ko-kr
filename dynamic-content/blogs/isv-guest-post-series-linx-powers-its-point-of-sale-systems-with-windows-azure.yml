### YamlMime:Yaml
ms.openlocfilehash: 5cc985e45f00c901eb14e2a50ffccad188d2324d
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910952"
Slug: isv-guest-post-series-linx-powers-its-point-of-sale-systems-with-windows-azure
Title: 'ISV 게스트 포스트 시리즈: Linx는 Windows Azure를 사용하여 판매 지점 시스템을 지원합니다.'
Summary: '편집자&rsquo; 주: Linx 전자 상거래 프로그램 관리자 페르난도 차베스(Fernando Chaves)가 작성한 오늘의&rsquo; 게시물은 회사가 Windows Azure&nbsp;를 사용하여 LinxWeb Po-of-Sale 시스템을 확장하는 방법을 설명합니다...'
Content: '<p><b><i>편집자&rsquo; 주: </i></b><i>Linx 전자 상거래 프로그램 관리자 페르난도 차베스(Fernando Chaves)가 작성한 오늘의&rsquo; 게시물은 회사가 </i><i>Windows Azure</i><i>&nbsp;를 사용하여 고객을 위해 LinxWeb Po-of-Sale 시스템을 확장하는</i> 방법을 설명합니다.<i><img style="float: right;" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6758.FChavezHS.png" alt="" border="0" height="120" width="131"></i></p>  <p>Linx는 26세의 ISV이며 라틴 아메리카의 소매 시장에 ERP 기술을 선도하고 있습니다. 브라질, 라틴 아메리카 및 유럽에는 7,500명 이상의 고객이 있으며 POS(Point of Sales) 시스템이 60,000개 이상 설치되어 있습니다. 본사와 지점에는 1,800명 이상의 직원이 근무하고 있으며 브라질 및 해외에 파트너 네트워크를 보유하고 있습니다.</p>  <p>LinxWeb은 고객이 판매 환경에서 새로운 POS 시스템으로 사용할 수 있는 화이트 레이블 B2C 전자상거래 솔루션입니다. 고객 온-프레미스 ERP 환경과 통합되며, 프로모션과 같은 특정 사용자 지정을 허용하면서 기존 POS 시스템처럼 관리할 수 있습니다.</p>  <h3><b>스테이지 설정: Azure를 Windows 전에</b></h3>  <p><a href="https://www.windowsazure.com/en-us/pricing/free-trial/?WT.mc_id=cmp_pst001_blg_post0141gen" target="_blank">Windows Azure</a>로 마이그레이션하기 전에 LinxWeb은 기존 호스팅 공급자에서 실행되는 VM(가상 머신)에서 작동했습니다. 그러나 이론적으로는 이러한 종류의 배포가 확장될 수 있지만, 이를 달성하기가 쉽고 빠르지 않았으며, VM에 더 많은 메모리, 컴퓨팅 능력 또는 네트워크 대역폭을 추가하여 스케일 업해야 하는 경우가 많았습니다.&nbsp;</p>  <p>LinxWeb은 원래 모든 고객이 자신의 배포 및 환경을 보유한 단일 테넌트였습니다. 사용자 지정은 사용자 지정 오류로 인해 보안 문제, 품질 관리 문제 및 과도한 지원 요청 생성으로 이어질 수 있는 고객&rsquo; 웹 콘텐츠 파일에서 직접 수행되었습니다.</p>  <p>Azure 마이그레이션을 Windows 전에 웹 사이트는 제품 이미지 썸네일 생성, 전자 메일 보내기 및 타사 시스템과 통신하는 모든 처리 작업을 담당했습니다. 모든 작업은 동기적으로 수행되어 전자 상거래 웹 사이트 성능 및 최종 고객의 가용성에 영향을 줍니다.</p>  <h3><b>Windows Azure로 마이그레이션</b></h3>  <h3>&nbsp;<img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2100.Linx1.png" alt="" border="0"></h3>  <p>LinxWeb을 Windows Azure로 마이그레이션하기로 결정했을 때 Azure 웹 역할 및 부하 분산 장치를 Windows 상태 비저장 특성과 호환되도록 하기 위해 일부 리팩터링이 필요했습니다.</p>  <p>각 웹 요청을 모든 웹 서버 인스턴스로 보낼 수 있으므로 세션 데이터를 외부화해야 했습니다. 세션 스토리지에 <a href="https://www.windowsazure.com/en-us/home/features/data-management/?WT.mc_id=cmp_pst001_blg_post0141sql" target="_blank">대한 Windows Azure SQL Database</a> 선택했습니다.</p>  <p>로컬 디스크 스토리지는 서버 인스턴스 간에 공유되지 않으므로&rsquo; 로컬 디스크에 대한 모든 파일 쓰기를 제거해야 했습니다. 또한 로컬 디스크는 복제된 디스크가 있는 Blob Storage 또는 SQL Database 달리 <i>내구성</i>이 없습니다. 로컬 디스크는 영구 스토리지가 아닌 속도 및 임시 사용을 위해 설계되었습니다.</p>  <p>처음에 SQL Server(BLOB 열)에 저장된 미디어 콘텐츠는 이제 <a href="https://www.windowsazure.com/en-us/home/features/data-management/?WT.mc_id=cmp_pst001_blg_post0141sto" target="_blank">Windows Azure Blob Storage</a>에 저장되므로 Blob 콘텐츠는 CDN<a href="https://www.windowsazure.com/en-us/home/features/caching/?WT.mc_id=cmp_pst001_blg_post0141cdn" target="_blank">(Azure Content Delivery Network</a>) 에지 캐시에 캐시될 수 Windows 있으므로 웹 사이트의 확장성이 향상됩니다. 또한 전체 미디어 개체가 아닌 SQL Database Blob <i>참조</i>만 저장하면 SQL Database 크기를 훨씬 더 작게 유지할 수 있으므로 개별 SQL 데이터베이스에 대한 스토리지 제한을 방지할 수 있습니다(당시 최대 150GB 지원).</p>  <p>Blob(및 CDN)이 URL로 참조되므로 이제 미디어에 대한 브라우저 요청이 웹 역할 인스턴스를 우회하고 IIS 및 데이터베이스에서 로드를 수행하는 CDN 직접 이동합니다. 이 수정은 데이터베이스 크기를 평균 75% 줄였으며 Blob Storage가 SQL Database 것보다 훨씬 저렴하기 때문에 스토리지 비용을 절감했습니다. 또한 이러한 서버에서 상당한 부하가 제거되었기 때문에 웹 역할 인스턴스에서 응답 시간이 향상되었습니다.</p>  <p>환경 리소스를 더 잘 사용하기 위해 여러 고객이 컴퓨팅 리소스를 공유하여 호스팅 비용을 절감하는 다중 테넌시를 염두에 두고 Windows Azure 버전이 만들어졌습니다. 일부 고객이 격리된 환경을 원할 수 있다는 것을 이해하면 고객이 전용 배포를 받는 프리미엄 제품도 있습니다. 이 새 버전에서는 고객이 사이트 레이아웃을 변경하고 더 이상 보고 느낄 수 있도록 ASP.NET 페이지를 직접 업데이트하지 않습니다&rsquo;. Azure Blob Storage에 저장된 템플릿을 Windows 변경한 다음, ASP.NET 페이지에서 해당 템플릿을 처리하여 최종 사용자에게 업데이트된 html을 렌더링할 수 있습니다.</p>  <p>작업자 역할은 그림 썸네일 생성 및 전자 메일 보내기와 같은 백그라운드 작업을 처리하는 데 사용되었습니다. 이러한 작업은 Windows Azure 큐를 사용하여 큐 기반입니다. 작업자 역할은 주로 타사 시스템과의 통신을 위해 예약된 작업을 실행해야 합니다. 시간 처리를 관리하기 위해 여러 작업자 역할 인스턴스에서 동기화된 실행 옵션이 있는 Quartz.Net 프레임워크를 사용했습니다. 이는 매우 중요한 점입니다. 스케줄러가 작업자 역할에서 실행되도록 설정된 경우 해당 스케줄러는 <i>모든 인스턴스</i>에서 실행됩니다. Quartz.Net 지정된 시간에 하나의 스케줄러 인스턴스만 실행되도록 합니다.</p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4527.Linx2.png" alt="" border="0"></p>  <p>일부 고객은 전자 상거래 사이트와 함께 회사 웹 사이트 또는 블로그를 호스트할 수도 있습니다. 이러한 요구 사항을 해결하기 위해 <a href="https://wordpress.org/" target="_blank">WordPress</a> 를 블로그 엔진으로 사용합니다. WordPress는 PHP 기반이며 기본적으로 PHP 런타임 라이브러리는 Windows Azure 웹 또는 작업자 역할에 설치되지 않습니다. WordPress 블로그는 Windows Azure 웹 역할에서 실행되므로 WordPress 자체뿐만 아니라 필요한 PHP 구성 요소를 설치해야 했습니다. IIS에서 PHP 런타임을 설정하기 위해 시작 작업 및 <a href="https://go.microsoft.com/?linkid=9752821" target="_blank">웹 플랫폼 설치 관리자 명령줄</a> 을 사용하여 이 작업을 수행했습니다. Windows Azure SQL Database 영구 스토리지뿐만 아니라 Windows Azure Blob Storage로 사용되므로 사용자의 파일을 Blob Storage로 직접 업로드하는 <a href="https://wordpress.org/extend/plugins/windows-azure-storage/" target="_blank">WordPress용 Windows Azure Storage 플러그 인</a>도 설치했습니다.</p>  <h3><b>결론</b></h3>  <p><b></b>솔루션을 Windows Azure로 마이그레이션하는 주요 이점은 애플리케이션을 스케일 아웃하는 것이 얼마나 쉽고 빠르는지입니다. 이를 통해 고객의 비즈니스 요구 사항에 집중하고 최종 사용자의 많은 요청을 처리하는 마케팅 캠페인을 지원할 수 있습니다.</p>  <p>고객에게 큰 이점은 인프라 및 운영 시스템 관리에 대해 더 이상 걱정할 필요가 없다는 것입니다.</p>  <p>지적한 바와 같이, 우리는 해결해야 할 몇 가지 기술적 인 과제가 있었고, 그 중 어느 것도 극복 할 수 없었습니다.</p>  <ul>  <li>단일 테넌트에서 다중 테넌트로 이동</li>  <li>로컬 스토리지 및 SQL 스토리지를 Blob Storage로 이동 및 CDN</li>  <li>여러 역할 인스턴스에서 Quartz.net 사용하여 작업 예약</li>  <li>PHP 런타임 및 WordPress 설치</li>  <li>여러 인스턴스에서 상태 비스테이션이 가능하고 확장 가능하도록 웹 요청 처리를 리팩터링&nbsp;</li>  </ul>  <p>이러한 모든 과제를 처리할 수 있었고 이제 Azure에서 매우 효율적인 애플리케이션을 실행할 수 Windows.</p>'
