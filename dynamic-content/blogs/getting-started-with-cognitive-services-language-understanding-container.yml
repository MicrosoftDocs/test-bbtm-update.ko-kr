### YamlMime:Yaml
ms.openlocfilehash: eecd33a3128716a89a76f179d946d0a15740485e
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899829"
Slug: getting-started-with-cognitive-services-language-understanding-container
Title: Cognitive Services Language Understanding 컨테이너 시작
Summary: 최근에 Computer Vision, Face API 및 Text Analytics를 포함하는 초기 컨테이너 집합을 사용하여 Microsoft Azure Cognitive Services에 대한 Docker 지원 미리 보기를 발표했습니다. 오늘 Language Understanding 서비스에 대한 지원을 추가하게 되어 기쁩니다.
Content: >-
  <p><em>이 게시물은 응용 AI의 수석 프로그램 관리자인 Phani Mutyala가 공동 저술합니다.</em></p>


  <p>최근에 <a href="https://docs.microsoft.com/azure/cognitive-services/computer-vision/home" target="_blank">Computer Vision</a>, <a href="https://docs.microsoft.com/azure/cognitive-services/face/overview" target="_blank">Face API</a> 및 <a href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview" target="_blank">Text Analytics</a>를 포함하는 초기 컨테이너 집합을 사용하여 <a href="https://azure.microsoft.com/blog/bringing-ai-to-the-edge/" target="_blank">Microsoft Azure Cognitive Services에 대한 Docker 지원</a> 미리 보기를 발표했습니다. 오늘 <a href="https://azure.microsoft.com/services/cognitive-services/language-understanding-intelligent-service">Language Understanding 서비스에</a> 대한 지원을 추가하게 되어 기쁩니다. Language Understanding은 사용자 지정 기계 학습 인텔리전스를 대화&rsquo;형 및 자연어 텍스트에 적용하여 전반적인 의미를 예측하고 관련되고 자세한 정보를 가져옵니다. Language Understanding을 사용하여 자연어로 사용자와 통신하여 작업을 완료하는 대화형 애플리케이션을 빌드할 수 있습니다.</p>


  <p>컨테이너에서 Language Understanding을 실행하면 AI 개발자가 현재 겪고 있는 몇 가지 주요 문제가 해결됩니다. 이러한 문제 중 하나는 로컬, 클라우드 또는 온-프레미스에서 데이터가 사용되는 방법과 위치를 제어하는 것과 관련이 있습니다. 이러한 종류의 유연성은 우리가 매일 이야기하는 많은 비즈니스에 정말 유용합니다.</p>


  <p>또 다른 이점은 스케일 업 또는 스케일 다운 여부에 관계없이&rsquo; 크기 조정을 제어하는 것입니다. 이는 AI 모델이 정기적으로 업데이트될 때 특히 중요합니다. 크기를 조정하는 시기를 제어하여 필요에 따라 적절한 대역폭을 계획합니다. 따라서 애플리케이션 논리 바로 옆에 있는 AI를 실행하고 컨테이너에서 제공하는 안정성과 품질로 매우 빠르고 확장성 있는 AI를 실행할 수 있습니다.</p>


  <p>이 블로그에서는 로컬 개발 상자의 Docker 컨테이너에서 실행되는 Language Understanding을 시작하는 방법을 설명합니다. Docker를 익숙하지 않은 경우 로컬 컴퓨터에서 설정하는 데 도움이 필요한 경우 이전에 게시된 블로그 게시물인 &ldquo;<a href="https://azure.microsoft.com/blog/running-cognitive-service-containers/" target="_blank">Cognitive Service 컨테이너를 실행</a>하세요.&rdquo; <a href="https://go.microsoft.com/fwlink/?linkid=2043210" target="_blank">또한 설명서에 대한</a> 훨씬 더 많은 방법 정보와 <a href="https://go.microsoft.com/fwlink/?linkid=2043312" target="_blank">Cognitive Service 컨테이너를 사용하는 방법에 대한 샘플을</a> 찾을 수 있습니다.</p>


  <h2>Language Understanding Docker 이미지 가져오기</h2>


  <p>Language Understanding Docker 이미지는 Docker 허브에서 직접 사용할 수 있으며 다운로드하려면 <strong>docker pull</strong>을 실행하기만 하면 됩니다.</p>


  <pre>

  docker pull mcr.microsoft.com/azure-cognitive-services/luis</pre>


  <p><strong>docker pull</strong>을 사용하여 업데이트된 이미지를 확인할 수도 있습니다.</p>


  <h2>Language Understanding 서비스 프로비전</h2>


  <p>다른 Cognitive Services 컨테이너에 관해서는 Language Understanding 컨테이너를 로컬로 실행하려면 Azure Portal에서 Language Understanding 서비스를 프로비전하여 유효한 API 키 및 청구 엔드포인트를 가져와야 합니다. 이러한 값은 컨테이너를 시작할 때 명령줄 인수로 전달되어야 합니다. Language Understanding 서비스가 아직 없는&rsquo; 경우 <a href="https://portal.azure.com/#blade/HubsExtension/Resources/resourceType/Microsoft.CognitiveServices%2Faccounts" target="_blank">Cognitive Services 블레이드를 열고</a> <strong>추가</strong> 를 선택하고 만듭니다. <strong> 시작</strong> 페이지 또는 <strong>개요</strong> 페이지에서 API 키 및 엔드포인트를 가져올 수 있습니다. 이 경우 <strong>시작</strong> 페이지에서 가져옵니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/aeb18735-5323-48c1-9c66-081389f4da03.png"><img alt="Getting started on the Azure portal" border="0" height="551" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d3a23b4a-68e4-4a5d-aff9-e273c33078dd.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="Azure Portal 시작" width="851"></a></p>


  <h2>Language Understanding 모델 가져오기</h2>


  <p>Language Understanding을 사용하면 Language Understanding 앱이라고도 하는 언어 모델을 만들 수 있습니다. 이 앱은 커버하려는 특정 영역 또는 도메인에 맞게 조정됩니다. 예를 들어 우유 쉐이크 주문에 대해 알고 있는 애플리케이션을 빌드할 수 있습니다. 이 경우 맛, 토핑 및 크기는 처리하려는 개념일 수 있습니다. &rsquo;여기서는 Language Understanding 앱을 빌드하는 방법을 자세히 알아보지 않지만 설명서의 많은 자습서(예&ldquo;: <a href="https://docs.microsoft.com/en-us/azure/cognitive-services/luis/luis-quickstart-intents-only" target="_blank">사용자 지정 앱 빌드)를 확인하여 사용자 의도를 확인해</a> 보세요.&rdquo;</p>


  <p>여기서는 의도나 엔터티 없이 빈 앱을 사용합니다. 빈 Language Understanding 앱을 만들려면 <a href="https://luis.ai" target="_blank">Language Understanding 포털</a> 로 이동하여 앱을 만듭니다. 다음과 같이 표시됩니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/417035fb-fad6-421a-90f3-43a290d90bbb.png"><img alt="Empty Language Understanding App" border="0" height="553" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ad3ed4ac-cd54-49d0-996a-be40c49ae18f.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="빈 언어 이해 앱" width="854"></a></p>


  <p>비어 있는 Language Understanding 앱이 있으면 <strong>학습</strong> 을 선택한 다음 <strong>게시</strong> 하여 모델을 다운로드할 수 있도록 합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6f86492a-b214-428a-888e-87c99021a803.png"><img alt="Published Language Understanding App" border="0" height="554" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/69514df7-e4af-48a8-92f9-3824c7ac78e6.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="게시된 Language Understanding 앱" width="855"></a></p>


  <p>Language Understanding 앱을 만들면 로컬 Language Understanding 컨테이너와 함께 사용할 수 있도록 다운로드해야 합니다. 이렇게 하려면 Language Understanding 포털에서&nbsp; <strong>내 앱</strong>으로 이동하여 빈 Language Understanding 앱을 선택하고 <strong>컨테이너용 내보내기/내보내기(GZIP)</strong>를 선택합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/33982fa2-8f41-4e6c-9322-345e81505e71.png"><strong><img alt="Export published Language Understanding App for container" border="0" height="174" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/24999389-68b0-40e2-9259-3b1a0cccd93a.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="컨테이너용 게시된 Language Understanding 앱 내보내기" width="640"></strong></a></p>


  <p><strong>입력</strong>이라는 루트 디렉터리에 빈 폴더를 만들고 Language Understanding 앱 파일을 해당 폴더에 복사합니다. Windows 머신에 있는 경우 다음과 같이 표시됩니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/69b6036f-f4d3-4c83-8c00-164ec0bf81af.png"><img alt="Local Language Understanding app" border="0" height="368" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/457d60e9-145f-4139-8208-72c4c38ee3fb.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="로컬 Language Understanding 앱" width="640"></a></p>


  <h2>Language Understanding 컨테이너 실행</h2>


  <p>이제 <strong>docker 실행을</strong> 사용하여 로컬 Language Understanding 컨테이너를 실행할 준비가 되었습니다. 여기서 특별한 점은 컨테이너가 읽을 수 있도록 입력 폴더를 탑재하는 것입니다. 이렇게 하려면 <strong>docker 실행</strong>과&nbsp; 함께 <strong>--mount</strong> 옵션을 사용합니다. <strong>C:\input</strong> 폴더를 사용하면 명령은 다음과 같습니다.</p>


  <pre>

  docker run --rm -it -p 5000:5000 <code>--mount type=bind,src=C:\input,target=/input mcr.microsoft.com/azure-cognitive-services/luis eula=accept apikey=&lt;apikey&gt; billing=&lt;endpoint&gt;</code></pre>


  <p>폴더를 탑재하는 다른 방법은 여러 가지가 있으므로 <a href="https://go.microsoft.com/fwlink/?linkid=2043313" target="_blank">Language Understanding 컨테이너에 사용할</a> 수 있는 구성 옵션 외에도 Docker로 수행할 수 있는 모든 작업에 대한 Docker 옵션 <a href="https://docs.docker.com/engine/reference/commandline/run/#options" target="_blank">설명서를</a> 확인하세요.</p>


  <h2>사용해 보기</h2>


  <p>이제 모든 Cognitive Service 컨테이너에 대해 브라우저에서 <strong>https://localhost:5000/swagger</strong> API를 검사하고 작업을 시도할 수 있습니다. 컨테이너를 프로그래밍 방식으로 호출할 수도 있습니다. 자세한 내용은 <a href="https://go.microsoft.com/fwlink/?linkid=2043312" target="_blank">GitHub</a> 사용할 수 있는 몇 가지 샘플을 확인하세요. <strong>사용해 보세요</strong>를 선택하면 로컬 요청을 컨테이너에 제출하는 데 필요한 매개 변수 목록을 가져옵니다.</p>


  <p>앱 ID의 경우 Language Understanding 앱 이름의 GUID 부분을 사용합니다. 위의 예제에서는 <strong>2ccdc110</strong>부터 시작하는 GUID입니다. 쿼리 필드에 Hello!&rdquo;와 같은 &ldquo;일부 텍스트를 입력하고 <strong>실행:</strong></p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3900e468-eb37-4881-a39a-96c5deccf4e3.png"><img alt="Empty Language Understanding response" border="0" height="610" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/47678bbd-88e7-4188-995d-a66ec3cac2f9.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="빈 Language Understanding 응답" width="942"></a></p>


  <p>Language Understanding 앱이 비어 있으므로 <strong>None</strong> 의도를 다시 가져옵니다. 즉, 앱이 이를 이해하지 못했지만&rsquo; 이제 더 나은 모델을 빌드하고 다시 시도할 수 있습니다.</p>
