### YamlMime:Yaml
ms.openlocfilehash: 4baaa65e58acc439869060ecf2f6b56b91da5d6e
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900817"
Slug: securing-your-connection-string-in-windows-azure-part-3
Title: 'Windows Azure에서 연결 문자열 보호: 3부'
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] Windows Azure에서 연결 문자열을 보호하는 방법에 대한 여러 부분으로 구성된 블로그 시리즈의 세 번째 부분입니다. 첫 번째 블로그 게시물 (여기)에서 ...'
Content: '<p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>Windows Azure에서 연결 문자열을 보호하는 방법에 대한 여러 부분으로 구성된 블로그 시리즈의 세 번째 부분입니다. 첫 번째 블로그 게시물(여기에 있음)에서는 <a href="https://msdn.microsoft.com/en-us/library/ee758713.aspx">Windows Azure Certificate Store</a>를 사용하여 보안 연결 문자열을 저장하고 암호 해독하는 공용/프라이빗 키 쌍을 만드는 방법에 대해 설명했습니다. 두 번째 블로그 게시물(<a href="TODO%20for%20Wayne,%20Link%20Blog%20Post%20When%20published.">여기에 있음)</a>에서는 Windows Azure 관리자가 프라이빗 키를 가져와 Azure를 Windows 방법을 보여 줍니다. 이 블로그 게시물에서는 SQL Server 관리자가 공개 키를 사용하여 연결 문자열을 암호화하는 방법을 보여 줍니다.</p>  <p>이 기술에는 SQL Azure 관리자의 역할이 있습니다. 공개 키, <a href="https://sql.azure.com">SQL Azure 포털 및 SQL Azure</a> 관리자 로그인 및 암호에 액세스할 수 있습니다. 그의 임무는 다음과 같습니다.</p>  <ul>   <li>공개 키를 사용하여 연결 문자열을 인코딩합니다. </li>    <li>SQL Azure Portal 관리자 로그인/암호 보호 </li>    <li>연결 문자열에서 SQL Azure 로그인(관리자 로그인이 아님)을 제한합니다. </li> </ul>  <p>SQL Azure 관리자가 공개 키에 액세스할 수 있으므로 연결 문자열을 인코딩하고 프로덕션 데이터베이스에 대한 암호를 알 수 있습니다. 예제 시나리오의 다른 사용자보다 SQL Azure 더 많이 액세스할 수 있습니다.</p>  <h2>사용자 제한</h2>  <p>연결 문자열을 인코딩하기 전에 SQL Azure 관리자는 연결 문자열의 SQL Azure 계정을 제한하여 공격 노출 영역을 줄이고 프로덕션 데이터베이스를 더 안전하게 만들어야 합니다. 연결 문자열에서 SQL Azure 데이터베이스 관리 사용자 계정을 사용하지 마세요. 대신 보안 모범 사례의 일부로 웹 역할에 필요한 권한만 있는 다른 사용자를 만듭니다. 웹 사이트에서 테이블을 만들 필요가 없는 경우 웹 사용자가 테이블을 만들도록 허용하지 않습니다. 웹 사이트에서 데이터를 읽는 경우 사용자를 읽기 전용으로 만듭니다. 연결 문자열이 손상되면 웹 사용자를 제한하면 데이터베이스에 대한 손상이 줄어듭니다. 이 블로그 게시물을 읽어 SQL Azure 사용자를 만드는 방법을 알아봅니다. SQL Azure 사용자를 제한하면 Windows Azure 관리자도 제한됩니다(이 역할은 이 블로그 게시물에서 설명됨).</p>  <h2>공개 키 가져오기</h2>  <p>SQL Azure 관리자가 해야 할 첫 번째 작업은 Windows Azure 관리자로부터 받은 공개 키를 가져와서 로컬 상자의 로컬 인증서 저장소로 가져오는 것입니다. <strong><a href="https://msdn.microsoft.com/en-us/library/k6h9cz8h(VS.80).aspx"> web.config </a> 인코딩을 수행하는aspnet_regiis.exe도구는 로컬 인증서 저장소를 사용합니다.</strong><strong></strong></p>  <ol>   <li>시작을 클릭하고 프로그램 및 파일 검색 상자에 <b>mmc</b> 를 입력한 다음 Enter 키를 누릅니다. </li>    <li>파일 메뉴에서 스냅인 추가/제거를 클릭합니다. </li>    <li>사용 가능한 스냅인에서 인증서를 두 번 클릭합니다. </li>    <li>컴퓨터 계정을 선택한 후 <b>다음</b>을 클릭합니다. </li>    <li>로컬 컴퓨터를 클릭한 다음 마침을 클릭합니다. </li>    <li>개인 저장소의 "모든 작업"에서 마우스 오른쪽 단추를 클릭하고 가져오기를 클릭합니다. <b>.cer 파일</b>(Windows Azure 관리자로부터 받은 공개 키)로 이동하여 인증서를 가져옵니다. </li>    <li>인증서 가져오기가 완료되면 인증서를 마우스 오른쪽 단추로 클릭하고 열기를 선택하면 인증서 대화 상자가 나타나고 세부 정보 탭을 선택하고 아래쪽으로 스크롤하여 지문 속성을 복사합니다. 나중에 필요합니다. </li> </ol>  <h2>공급자 다운로드 및 컴파일</h2>  <p>이 작업은 개발자가 미리 수행할 수 있으며 두 설치 관리자 파일(setup.exe 및 installer.msi)을 SQL Server 관리자에게 전자 메일로 보낼 수 있지만, 아직 수행하지 않은 경우 SQL 관리자가 공급자를 다운로드하고 컴파일해야 합니다. 상자에 Visual Studio 2008 또는 Visual Studio 2010이 필요합니다. 다음 단계를 수행합니다.</p>  <ol>   <li>MSDN 코드 갤러리에서 소스 코드와 함께 .zip 다운로드합니다. </li>    <li>.zip 파일의 모든 항목을 로컬 컴퓨터에 저장합니다. </li>    <li>PKCS12ProtectedConfigurationProvider.sln 파일을 찾아 Visual Studio 사용하여 솔루션으로 엽니다. </li>    <li>도구 메뉴에서 <b>BuildBuild</b> |  <b>솔루션을</b> 선택합니다. </li>    <li><b>Installer/bin/release</b> 디렉터리에 setup.exe 있어야 합니다. </li>    <li>이 setup.exe 실행하고 공급자를 설치합니다. </li> </ol>  <p>설치 관리자는web.config 암호화할 때 aspnet_regiis.exe 찾을 수 있도록 Pkcs12CertProtectedConfiguratoinProvider.dll 어셈블리 파일을 전역 어셈블리 캐시에 배치합니다 <b> .</b></p>  <h2>Web.Config 암호화</h2>  <p>이제 공급자 어셈블리가 전역 어셈블리 캐시에 설치되고 공용 인증서가 상자에 설치되었으므로 <b>web.config </b>파일의 연결 문자열 섹션을 암호화할 준비가 되었습니다. 방법은 다음과 같습니다.</p>  <ol>   <li>개발자로부터 <b>web.config</b> 파일 가져오기 </li>    <li>소스 제어를 사용하는 경우 <b>web.config</b> 파일을 확인합니다(수정할 예정). </li>    <li><b>Web.config</b> 파일의 아래<b>와 유사한 connectionString</b>을 추가합니다. 이 연결 문자열은 SQL Azure Portal에서 가져온 연결 문자열과 유사해야 합니다. 그러나 제한된 사용자 이름 및 암호를 포함해야 합니다.       <pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">connectionStrings</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">name</span><span class="kwrd">=&quot;SQLAzureConn&quot;</span>          <span class="attr">connectionString</span><span class="kwrd">=&quot;Initial Catalog=aspnetdb;data source=.;uid=user;pwd=secretpassword&quot;</span> <span class="attr">providerName</span><span class="kwrd">=&quot;System.Data.SqlClient&quot;</span><span class="kwrd">/&gt;</span>  <span class="kwrd">&lt;/</span><span class="html">connectionStrings</span><span class="kwrd">&gt;</span></pre>      </li>      <li>사용자 지정 보호된 구성 공급자를 추가하고 구성합니다. 이렇게 하려면 웹 역할의 Web.config 파일에 다음 &lt;<strong>configProtectedData</strong>&gt; 섹션을 추가합니다. <b>지문</b>은 모든 공백이 제거된 상태에서 Microsoft 관리 콘솔의 인증서 대화 상자에서 지문 값으로 설정해야 합니다.         <pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">configProtectedData</span><span class="kwrd">&gt;</span>      <span class="kwrd">&lt;</span><span class="html">providers</span><span class="kwrd">&gt;</span>        <span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">name</span><span class="kwrd">=&quot;CustomProvider&quot;</span> <span class="attr">thumbprint</span><span class="kwrd">=&quot;4badf1eea9666d95c1c046fde32008c5e3bf20d9&quot;</span>             <span class="attr">type</span><span class="kwrd">=&quot;Pkcs12ProtectedConfigurationProvider.Pkcs12ProtectedConfigurationProvider, PKCS12ProtectedConfigurationProvider, Version=1.0.0.0, Culture=neutral, PublicKeyToken=34da007ac91f901d&quot;</span><span class="kwrd">/&gt;</span>      <span class="kwrd">&lt;/</span><span class="html">providers</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;/</span><span class="html">configProtectedData</span><span class="kwrd">&gt;</span></pre>      </li>      <li>Visual Studio 명령 프롬프트에서 다음 명령을 실행하여 사용자 지정 공급자를 사용하여 <b>connectionStrings 섹션을</b> 암호화합니다. Visual Studio 명령 프롬프트의 현재 디렉터리를 Web.config 파일이 포함된 폴더로 설정합니다.         <p><b>aspnet_regiis -pef &quot;connectionStrings&quot; &quot;.&quot; -prov &quot;CustomProvider&quot;</b></p>        <p>암호화에 성공하면 다음 출력이 표시됩니다.</p>        <p><a href=""><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="이미지" border="0" alt="image" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7128.image_5F00_thumb.png" width="723" height="84"></a> </p>        <p>무슨 일이 일어나고 있는지는 다음과 같습니다.</p>        <ul>        <li><b>aspnet_regiis.exe </b>현재 디렉터리에서 <b>web.config </b>찾아 로드합니다. </li>          <li>–prov 스위치를 사용하여 configProtectedData에서 공급자 섹션을 찾고 공급자를 포함하는 어셈블리의 전체 이름을 파악합니다. </li>          <li><b>aspnet_regiis.exe</b> 전역 어셈블리 캐시에서 어셈블리를 로드하고 어셈블리의 <b>Initialize </b>메서드를 호출하여 <b>web.config</b> 파일에 지문 속성이 있는지 확인합니다. </li>          <li><b> 그런 다음aspnet_regiis.exe </b>지문을 저장소의 기본 키로 사용하여 인증서 저장소에서 공용 인증서를 로드하는 Pkcs12CertProtectedConfiguratoinProvider.dll 어셈블리의 <b>Encrypt</b> 메서드를 호출합니다. 명령줄에서 -pef 스위치를 사용하여 <b>web.config</b> 연결 문자열 섹션을 로드하고 암호화합니다.<b></b> </li>          <li>연결 문자열 섹션이 암호화되면 다음과 같이 web.config 다시 기록됩니다.           <pre class="csharpcode">  <span class="kwrd">&lt;</span><span class="html">connectionStrings</span> <span class="attr">configProtectionProvider</span><span class="kwrd">=&quot;CustomProvider&quot;</span><span class="kwrd">&gt;</span>      <span class="kwrd">&lt;</span><span class="html">EncryptedData</span> <span class="attr">Type</span><span class="kwrd">=&quot;https://www.w3.org/2001/04/xmlenc#Element&quot;</span>        <span class="attr">xmlns</span><span class="kwrd">=&quot;https://www.w3.org/2001/04/xmlenc#&quot;</span><span class="kwrd">&gt;</span>        <span class="kwrd">&lt;</span><span class="html">EncryptionMethod</span> <span class="attr">Algorithm</span><span class="kwrd">=&quot;https://www.w3.org/2001/04/xmlenc#aes192-cbc&quot;</span> <span class="kwrd">/&gt;</span>        <span class="kwrd">&lt;</span><span class="html">KeyInfo</span> <span class="attr">xmlns</span><span class="kwrd">=&quot;https://www.w3.org/2000/09/xmldsig#&quot;</span><span class="kwrd">&gt;</span>          <span class="kwrd">&lt;</span><span class="html">EncryptedKey</span> <span class="attr">xmlns</span><span class="kwrd">=&quot;https://www.w3.org/2001/04/xmlenc#&quot;</span><span class="kwrd">&gt;</span>            <span class="kwrd">&lt;</span><span class="html">EncryptionMethod</span> <span class="attr">Algorithm</span><span class="kwrd">=&quot;https://www.w3.org/2001/04/xmlenc#rsa-1_5&quot;</span> <span class="kwrd">/&gt;</span>            <span class="kwrd">&lt;</span><span class="html">KeyInfo</span> <span class="attr">xmlns</span><span class="kwrd">=&quot;https://www.w3.org/2000/09/xmldsig#&quot;</span><span class="kwrd">&gt;</span>              <span class="kwrd">&lt;</span><span class="html">KeyName</span><span class="kwrd">&gt;</span>rsaKey<span class="kwrd">&lt;/</span><span class="html">KeyName</span><span class="kwrd">&gt;</span>            <span class="kwrd">&lt;/</span><span class="html">KeyInfo</span><span class="kwrd">&gt;</span>            <span class="kwrd">&lt;</span><span class="html">CipherData</span><span class="kwrd">&gt;</span>              <span class="kwrd">&lt;</span><span class="html">CipherValue</span><span class="kwrd">&gt;</span>aA4kyC0pNY8VFnPtLcC...=<span class="kwrd">&lt;/</span><span class="html">CipherValue</span><span class="kwrd">&gt;</span>            <span class="kwrd">&lt;/</span><span class="html">CipherData</span><span class="kwrd">&gt;</span>          <span class="kwrd">&lt;/</span><span class="html">EncryptedKey</span><span class="kwrd">&gt;</span>        <span class="kwrd">&lt;/</span><span class="html">KeyInfo</span><span class="kwrd">&gt;</span>        <span class="kwrd">&lt;</span><span class="html">CipherData</span><span class="kwrd">&gt;</span>          <span class="kwrd">&lt;</span><span class="html">CipherValue</span><span class="kwrd">&gt;</span>6Fg9VWR5/...<span class="kwrd">&lt;/</span><span class="html">CipherValue</span><span class="kwrd">&gt;</span>        <span class="kwrd">&lt;/</span><span class="html">CipherData</span><span class="kwrd">&gt;</span>      <span class="kwrd">&lt;/</span><span class="html">EncryptedData</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;/</span><span class="html">connectionStrings</span><span class="kwrd">&gt;</span></pre>          </li>      </ul>    </li>      <li><b>web.config</b> 파일을 소스 제어로 다시 확인하거나 개발자에게 다시 제공합니다. </li>  </ol>    <h2>요약</h2>    <p>다음 블로그 게시물에서 개발자의 역할과 암호화된 연결 문자열을 가져오기 위해 웹 역할 프로젝트에 추가해야 하는 코드에 대해 설명합니다. 질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>'
