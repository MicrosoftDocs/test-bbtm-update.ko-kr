### YamlMime:Yaml
ms.openlocfilehash: ddef2d7d1db0836674e82b4e4fa3586459a6577a
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139912226"
Slug: windows-azure-storage-at-pdc-2009
Title: PDC 2009의 Windows Azure Storage
Summary: 지난 주 PDC 2009에서는 Windows Azure Storage 대한 몇 가지 새로운 기능을 발표했습니다. Windows Azure Storage 사용하면 애플리케이션이 Blob을 통해 클라우드에서 큰 개체와 파일을 저장하고 조작할 수 있습니다,...
Content: '<p>지난 주 PDC 2009에서는 Windows Azure Storage 대한 몇 가지 새로운 기능을 발표했습니다. Windows Azure Storage 애플리케이션이 Blob을 통해 클라우드에서 큰 개체와 파일을 저장 및 조작하고, 테이블을 통해 서비스 상태를 저장 및 조작하고, Queues.&#160; 사용하여 신뢰할 수 있는 메시지 배달을 제공할 수 있게 해줍니다. 또한 스토리지에 곧 제공될 두 가지 새로운 기능도 발표했습니다.</p>  <ul>   <li><b>Azure XDrive Windows</b> – 클라우드에서 실행되는 Windows Azure 컴퓨팅 애플리케이션에서 기존 NTFS API를 사용하여 데이터를 지속형 드라이브에 저장할 수 있습니다. 드라이브는 단일 NTFS 볼륨 VHD.&#160;&#160; 형식의 Windows Azure Page Blob에 의해 지원됩니다. 페이지 Blob은 Windows Azure 클라우드 내에서 드라이브로 탑재할 수 있습니다. 여기서 버퍼링되지 않은/플러시된 모든 NTFS 쓰기는 드라이브에 지속성 있게 됩니다(페이지 Blob).&#160;&#160; 드라이브를 사용하는 애플리케이션이 충돌하는 경우 데이터는 Page Blob을 통해 영구적으로 유지됩니다.  애플리케이션 인스턴스를 다시 시작하거나 다른 애플리케이션 인스턴스에서 사용할 수 있도록 다시 탑재할 수 있습니다.&#160;&#160; 드라이브는 NTFS 형식의 페이지 Blob이므로 표준 Blob 인터페이스를 사용하여 NTFS VHD를 업로드하고 클라우드에 다운로드할 수도 있습니다. </li>    <li><b>지역에서 복제</b> – 데이터에 대한 지리적 위치 간에 지역에서 복제를 제공하기 위해 열심히 노력하고 있습니다.&#160; PDC 2008에서 데이터를 복제하여 지리적 위치 내에서 여러 복사본을 유지하는 방법에 대해 설명했습니다. 스토리지 계정이 할당됩니다.&#160;&#160; 스토리지 계정에 대한 업데이트를 수행하면 업데이트가 해당 geo-location의 여러 복사본에 커밋된 경우 성공이 반환됩니다.&#160; 이렇게 하면 데이터가 지리적 위치에 유지됩니다.  그리고 이것은 변경되지 않았습니다.&#160;&#160; 지역 복제에서 제공하는 것은 업데이트가 기본 지리적 위치의 스토리지 계정에 커밋된 후 동일한 지역 지역(예: 미국 내, 유럽 내, 아시아 내)에 있는 다른 지리적 위치로 업데이트를 신속하게 지역 복제합니다.&#160;&#160; 이는 대체 계획을 Geo-Disaster 중요한 기능입니다.  따라서 데이터의 여러 복사본을 다른 지리적 위치에 유지할 수 있습니다. </li> </ul>  <p>Windows Azure XDrive 및 Geo-Replication 및 아래에 나열된 새로운 Blob 기능에 대한 자세한 내용은 "Windows Azure Blob 및 드라이브 심층 분석"에서 PDC 2009의 설명과 슬라이드를 참조하세요.</p>  <p>PDC 2009에서는 체크 아웃할 수 있는 Windows Azure Storage 초점을 맞춘 두 가지 다른 회담도 있었습니다.</p>  <ul>   <li>Windows Azure 테이블 및 큐 심층 분석 – Windows Azure 테이블 및 Queues에 대한 주요 영역에 대한 심층 분석입니다.&#160;&#160;&#160; 여기에는 분할 키를 선택하는 방법 및 Tables.&#160; For Queues에 대한 빠르고 효율적인 쿼리를 만드는 것이 포함됩니다. (a) 메시지가 큐에 머무를 수 있는 기간에 대한 시간 제한을 제거하는 등의 향후 기능에 대해 설명합니다.  (b) 보이지 않는 시간의 시간 제한을 제거하고(c) 큐에서 제거된 메시지의 보이지 않는 시간을 언제든지 변경할 수 있도록 합니다. </li>    <li>Windows Azure를 사용하여 확장 가능하고 신뢰할 수 있는 애플리케이션 빌드 - Windows Azure Storage 측면에서 이 대화에서는 스토리지 계정, Blob, 엔터티 및 상업적 가용성을 위한 메시지의 확장성을 위한 디자인 목표를 설명하고 데이터의 최대 트래픽 수요를 충족하기 위해 지리적 위치 내에서 데이터의 부하를 자동으로 분산하는 방법을 개략적으로 설명합니다.&#160;&#160;  는 큐를 사용하여 계산에 대해 확장 가능하고 신뢰할 수 있는 워크플로를 만드는 방법을 설명하고 롤링 업그레이드를 사용하여 테이블에 대한 스키마 변경(새 속성 추가)을 수행하는 방법을 설명합니다. </li> </ul>  <p>PDC 2009 새 기능의 경우 "x-ms-version: 2009-09-19"를 사용하여 버전이 지정됩니다. 기존 명령의 기능을 확장하고 새 명령을 도입함에 따라 스토리지 시스템에 대해 실행된 모든 이전 버전의 명령이 계속 작동합니다.</p>  <p>PDC 2009 릴리스에서는 이제 두 가지 유형의 Blob을 지원합니다. </p>  <ul>   <li><strong>블록 Blob</strong> – 스트리밍 워크로드에 최적화된 PDC 2008 이후 제공된 Blob 유형입니다. 각 Blob은 블록 시퀀스로 구성되며 각 블록은 Blob에 상대적인 고유한 블록 ID로 식별됩니다. 이 유형의 Blob을 사용하면 PutBlock을 사용하여 블록을 업로드한 다음 PutBlockList로 커밋할 수 있습니다. 블록 Blob의 크기는 이제 최대 200GB가 될 수 있습니다. </li>    <li><strong>페이지 Blob </strong>– 이 릴리스에서는 페이지 Blob이라는 임의 읽기/쓰기에 최적화된 새로운 유형의 Blob을 추가했습니다. 페이지 Blob은 페이지 배열로 구성되며 각 페이지는 Blob의 시작부터 오프셋으로 식별됩니다. PutPage는 Blob에 대한 범위 지정을 수행하는 데 사용되며 업데이트는 Blob에 즉시 적용됩니다. 또한 ClearPage를 사용하여 Blob의 영역을 지울 수 있으며 이러한 지워진 지역은 스토리지 공간을 사용하지 않습니다. 즉, 스토리지 계정에 저장된 데이터가 있는 페이지 Blob 내의 페이지에 대해서만 요금이 청구됩니다. 페이지 Blob의 크기는 최대 1TB일 수 있습니다. </li> </ul>  <p>두 유형의 Blob에 대한 향상된 기능: </p>  <ul>   <li><strong>Content Delivery Network </strong>– Windows Azure CDN 사용하여 전략적으로 배치된 위치에서 Windows Azure Blob을 캐시하여 사용자에게 콘텐츠를 배달하기 위한 최대 대역폭을 제공할 수 있습니다. 이제 각 Blob에 대한 HTTP Cache-Control 정책을 지정할 수 있으며, 그러면 blob이 Windows Azure CDN 캐시되는 시간이 결정됩니다. Cache-Control TTL(TTL)을 원하는 만큼 작게 지정할 수 있지만, TTL이 충분히 길고 Windows Azure CDN 데이터를 처리할 때 캐시 적중을 얻을 수 있을 만큼 인기 있는 콘텐츠인 경우에만 CDN 혜택을 누릴 수 있습니다. Windows Azure CDN 대한 자세한 내용은 여기를 참조하세요.       <br><a href="https://blogs.msdn.com/windowsazure/archive/2009/11/05/introducing-the-windows-azure-content-delivery-network.aspx">https://blogs.msdn.com/windowsazure/archive/2009/11/05/introducing-the-windows-azure-content-delivery-network.aspx<strong></strong></a> </li>    <li><strong>사용자 지정 Storage 도메인 이름</strong> – 사용자 지정 스토리지 도메인 이름 기능을 사용하면 지정된 스토리지 계정에 대한 사용자 지정 도메인 이름을 등록하고 해당 사용자 지정 도메인을 사용하여 Blob 서비스 URL:https://&lt;account.blob.core.windows.net/&gt;&lt; containerblobname/&gt;&lt;&gt; 대신 Blob에 액세스할 수 있습니다. 릴리스에서 사용자 지정 스토리지 도메인 이름은 이제 익명 액세스뿐만 아니라 인증된 액세스에서도 작동합니다. 사용자 지정 스토리지 도메인 이름에 대한 자세한 내용은 여기를 참조하세요.       <br><a href="https://blogs.msdn.com/windowsazure/archive/2009/11/05/accessing-windows-azure-blobs-using-custom-storage-domain-names.aspx">https://blogs.msdn.com/windowsazure/archive/2009/11/05/accessing-windows-azure-blobs-using-custom-storage-domain-names.aspx<strong></strong></a> </li>    <li><strong>스냅샷 Blob – Blob </strong>백업 또는 Blob 버전 관리 만들기에 사용할 수 있는 Blob의 읽기 전용 버전을 만들 수 있습니다. 계정은 고유한 블록 또는 페이지에 대해서만 요금이 청구됩니다. 스냅샷과 파생된 기본 Blob 간에 공유되는 블록 또는 페이지는 추가 스토리지 요금이 발생하지 않습니다. </li>    <li><strong>Blob 임대 </strong>– 이제 클라이언트는 해당 Blob에 대한 단독 쓰기 액세스를 위해 Blob에서 임대를 획득할 수 있습니다. 임대는 임대가 만료될 때까지 전용 쓰기를 위해 Blob을 잠그면서 Blob에 대한 비독점 읽기 액세스를 허용합니다. 임대 Blob의 초기 버전은 1분 임대만 지원하지만 클라이언트가 더 오랜 시간 동안 잠금을 유지할 수 있도록 임대를 갱신할 수 있습니다. Blob 임대는 페이지 Blob에 대한 높은 동시 쓰기를 처리할 때 유용합니다. </li>    <li><strong>Blob 가져오기 –</strong> 블록 및 페이지 Blob을 모두 검색하는 데 사용됩니다. 또한 이제 크기가 4MB보다 작거나 같은 범위가 지정된 읽기에 대해 동적으로 생성된 MD5를 반환하는 옵션을 제공합니다. </li>    <li><strong>Blob 나열 – </strong> 이제 애플리케이션은 Blob을 나열할 때 각 Blob의 애플리케이션 메타데이터 및 MD5 정보를 검색할 수 있습니다. </li>    <li><strong>Blob 속성 – </strong> 이제 애플리케이션은 Blob과 독립적으로 Blob의 속성을 업데이트할 수 있으며 Blob에 대한 표준 HTTP Cache-Control 속성을 지정할 수 있습니다. </li>    <li><strong>루트 컨테이너 - </strong> 이제 루트 컨테이너에 저장된 Blob에 대해 익명 액세스가 제공됩니다<strong>. </strong> Silverlight에 대한 도메인 간 정책 액세스를 지원하기 위한 중요한 누락된 기능이었습니다. 예를 들어 이제 루트 Blob 컨테이너에서 다음 도메인 간 정책 파일을 지정할 수 있습니다.&#160; <a href=""></a> </li> </ul>  <p>큐에 대한 향상된 기능: </p>  <ul>   <li><strong>큐에서 제거 수 </strong>– 이제 Windows Azure Queue에서 검색된 각 메시지에 대한 큐에서 제거 횟수를 반환합니다. 이렇게 하면 애플리케이션에서 메시지가 큐에서 삭제된 횟수를 확인할 수 있습니다.&#160; </li> </ul>  <p>위의 새로운 기능 외에도 버전이 지정된 CTP 릴리스의 일부로 다음과 같은 의미 체계를 변경했습니다. </p>  <ul>   <li><strong>익명 Blob 액세스 – </strong> Blob API의 "x-ms-version: 2009-09-19" 버전을 사용하여 액세스가 공용으로 설정된 모든 Blob 컨테이너는 2009-09-19 버전의 Blob API를 사용하여 익명 요청을 처리합니다. 이전 버전으로 퍼블릭으로 설정된 컨테이너는 여전히 익명 요청이 BLOB API의 CTP2008 버전으로 처리됩니다. </li>    <li><strong>Blob 및 큐 인증</strong> – 문자열 간 정식화의 일부로 추가 정보를 포함하여 향상된 보안을 위한 향상된 서명 알고리즘에 대한 지원이 추가되었습니다. </li>    <li><strong>컨테이너, 큐 및 Blob 나열</strong> – 작업을 나열하기 위한 응답 형식을 XML 친화적으로 변경했습니다. </li>    <li><strong>Blob 및 큐 메타데이터 명명</strong> – 컨테이너 또는 Blob 리소스에 대한 메타데이터는 리소스와 연결된 이름-값 쌍으로 저장됩니다. 이제 메타데이터 이름이 <a href="https://msdn.microsoft.com/en-us/library/aa664670(VS.71).aspx">C# 식별자에</a> 대한 명명 규칙을 준수해야 합니다.<strong></strong> </li>    <li><strong>테이블 쿼리 </strong>– 테이블 쿼리는 결과 및 잠재적 연속 작업을 반환하기 전에 최대 5초 동안 실행할 수 있습니다. </li>    <li><strong>Table DataService 버전</strong> – 이제 Table Service에 대한 모든 REST 호출에는 모든 요청에 <em>DataServiceVersion</em> 및<em>MaxDataServiceVersion</em> 헤더가 포함되어야 합니다. Astoria 클라이언트 라이브러리를 사용하는 애플리케이션은 이미 필요한 헤더를 보냅니다. </li> </ul>  <p>이 새 릴리스에 대한 위의 기능은 Windows Azure Storage REST 인터페이스를 통해 사용할 수 있으며, Windows Azure SDK와 함께 릴리스된 새로운 Storage 클라이언트 라이브러리의 일부로도 지원됩니다. </p>  <p>자세한 내용은 MSDN 설명서에서 이러한 새로운 기능에 대한 세부 정보를 확인할 수 있습니다 <a href="https://msdn.microsoft.com/en-us/library/dd894041.aspx">https://msdn.microsoft.com/en-us/library/dd894041.aspx</a>. </p>  <p>언제나처럼, 우리는 당신이 가질 수있는 피드백을 주셔서 감사합니다. </p>  <p>브래드 칼더    <br>Microsoft Azure Storage</p>'
