### YamlMime:Yaml
ms.openlocfilehash: 40a2a617d79667efcd72d0480f81d617ac88f4a2
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139911747"
Slug: making-azure-functions-more-serverless
Title: Azure Functions를 서버리스로 만들기
Summary: 'Azure Functions에 대해 가장 많이 믿는 원칙 중 하나는 인프라 문제가 아닌 비즈니스 및 애플리케이션 문제를 해결하기를 원한다는 것입니다. '
Content: >-
  <p>Azure Functions에 대해 가장 많이 믿는 원칙 중 하나는 인프라 문제가 아닌 비즈니스 및 애플리케이션 문제를 해결하기를 원한다는 것입니다. 따라서&rsquo; Weve&rsquo;는 함수 런타임에 많은 투자를 했고 언어 추상화, 서비스에 대한 바인딩 및 경량 프로그래밍 모델과 같은 기능을 제공했으며 동적으로 확장되는 서버리스 컴퓨팅 모델에 투자했습니다. 이러한 목표를 감안할 때, 한 가지는 항상 경험에서 중단되었습니다: 각 함수 앱에 대해 설정한 메모리 설정입니다. 메모리 설정은 항상 제자리에서 느껴지지 않습니다. 최적의 설정을 찾으려면 사용자 쪽에서 많은 시행착오가 필요했고&rsquo;, 사용자가 원하는 것이 아니며 서버리스로 느껴지지 않는다는&rsquo; 피드백을&rsquo; 많이 들었습니다. 그렇기 때문에 오늘날에는&rsquo; 더 이상 메모리 설정을 요구하지 않는다는&rsquo; 공유가 있습니다. 소비 계획에서 Azure Functions는 사용 가능한 적절한 리소스를 자동으로 결정하고 시간뿐만 아니라 메모리/cpu에 대해서만 요금을 청구합니다.</p>


  <h2>Azure Functions는 내 리소스를 어떻게 관리하나요?</h2>


  <p>Azure Functions 플랫폼은 함수가 실행 시 얼마나 많은 사용률과 리소스를 사용하는지에 대한 많은 데이터를 수집합니다. 이를 통해 필요한 항목을 매우 정확하게 예측하고 백그라운드에서 작업을 배포할 수&rsquo; 있습니다. 함수를&rsquo; 처음 실행할 때는 가능한 최상의 위치에 배치하고, 더 많은 리소스&rsquo;가 필요한 것으로 나타나면 자동으로 찾아 할당합니다. Well&rsquo;은 최상의 환경을 제공하고 가능한 한 비용 효율적으로 수행할 수 있도록 알고리즘을 지속적으로 개선하고 있습니다.</p>


  <p>잠시 동안 실제 데이터로 모델링해왔기 때문에&rsquo; 이 작업을 효과적으로 수행할 수 있다고 확신할 수 있습니다. 다음은 실제 숫자가 수정된 그래프이지만 y축은 선형 GB-초이고 기본값은 0입니다. x축은 시간입니다. 위쪽의 파란색 선은 현재 청구 가능한 GB-초의 금액입니다. 아래쪽의 빨간색 선은 시스템에서 청구 가능한 GB-초의 새로운 금액입니다. 즉, 전반적으로 고객은 이제 이전보다 5배 적은 GB 초를 지불하고 있습니다. 오늘날 사용자는 적절한 메모리 설정&rsquo;에 대해 걱정하지 않고 함수를 자신 있게 작성할 수 있습니다.</p>


  <p style="text-align: center;"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/03e24b84-99cb-41c9-acda-63fabcfccbb2.png"></p>


  <h2>함수를 작성하는 방법을 다시 생각해야 하나요?</h2>


  <p>전반적으로, 아니, 일이 걱정 단지 하나의 적은 설정으로, 이전과 거의 동일하게 작동합니다. 적용되기 전에 적용된 것과 동일한 제한, 최대 메모리 1.5GB 및 최대 실행 시간 5분 이 변경이 미치는 가장 큰 영향은 이제 적절한 양의 리소스를 얻고 함수 실행에 대해 가능한 최소 금액을 지불하고 있다는 것입니다.</p>


  <h2>서버리스 컴퓨팅에 대해 생각하는 방법</h2>


  <p>이러한 변경&rsquo;의 영향을 이해하기 위해 비유를 통해 컴퓨팅을 살펴보겠습니다. Imagine 컴퓨팅은 배송처럼 작동합니다. prem에서 컴퓨팅을 호스팅하는 것은 트럭을 구입하고 운전자에게 직접 지불하는 것과 같으며,&rsquo; 하드웨어 및 해당 차량과 직원을 운영하는 운영 비용을 책임집니다. IaaS(Infrastructure as a Service)는 트럭을 대여하는 것과 비슷하지만 여전히 드라이버를 고용하는 것과 같으며,&rsquo; 더 이상 하드웨어에 대한 책임이 없지만 일부 운영 비용(가스, 유지 관리 등)과 인건비는 여전히 감소합니다. 컴퓨팅 계층 구조를 한층 더 확장하면 트럭과 승무원을 데려올 풀 서비스 회사를 고용하는 것과 같은 Azure App Service와 같은 완전히 관리되는 Platform as a Service로 이동할 수 있습니다&rsquo;. 하드웨어 또는 운영 비용은 책임지지 않습니다.</p>


  <p>하지만 작은 패키지를 대량으로 배송하려면 어떻게 해야 할까요? 종종 트럭에 의해 지불하는 것이 아니라 패키지로 지불하는 것이 합리적이지 않습니다&rsquo;. 여기서 서버리스 컴퓨팅은 애플리케이션을 빌드하는 방법에 대해 혁신적입니다. &rsquo;우리는 배송이 비즈니스의 핵심이&rsquo; 아니기 때문에 배송이 어떻게 작동하는지에 집중할 필요가 없습니다. 대신 고객에게 제품을 가져오는 데 집중할 수 있습니다. 각 실행은 패키지와 같으며 상자의 크기에 대한 비용을 지불합니다.</p>


  <p>현재 설정된 메모리 크기를 제거하여 변경&rsquo;된 내용은 컴퓨팅에 유사점이 있지만 실제 개체 전달과 정확히 같지 않기 때문입니다&rsquo;. 얼마나 많은 작업이 수행되는지 또는 적절한 양의 컴퓨팅(CPU/메모리/IO)을 아는 것은 개체의 높이와 너비만큼 간단하지 않으므로 필요한 리소스는 각 실행 또는 실행 전체에서 변경할 수 있습니다. 대신,&rsquo; well은 이제 이벤트를 트리거하고 적절한 크기 &ldquo;패키지를&rdquo; 찾고 시간 및 리소스 모두에 대한 요금만 청구합니다.</p>


  <h2>미래는 함께 더욱 밝습니다.</h2>


  <p>Were&rsquo;는 가장 쉬운 환경과 가장 강력한 기능을 사용하여 최고의 서버리스 컴퓨팅을 구축하기 위해 최선을 다하고 있습니다. 우리는 우리가 더 원활하게 만들 수있는 것을 알고 싶습니다. 함수를 빌드할 때 어떤 질문을 해야 합니까? 애플리케이션을 빌드할 때&rsquo; 작업을 더 쉽고, 더 빠르고, 개선하려면 어떻게 해야 할까요?</p>


  <p>문제, 아이디어 또는 질문에 대해 원하는 방식으로 문의하세요.</p>


  <ul>
   <li>
   <p><a href="https://feedback.azure.com/forums/355860-azure-functions" target="_blank">피드백 포털</a></p>
   </li>
   <li>
   <p><a href="https://github.com/azure/azure-functions" target="_blank">GitHub</a></p>
   </li>
   <li>
   <p><a href="https://twitter.com/search?q=azure%20functions&amp;src=typd" target="_blank">Twitter #AzureFunctions</a></p>
   </li>
   <li>
   <p><a href="https://stackoverflow.com/questions/tagged/azure-functions" target="_blank">스택 오버플로</a></p>
   </li>
  </ul>
