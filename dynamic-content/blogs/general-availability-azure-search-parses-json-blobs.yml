### YamlMime:Yaml
ms.openlocfilehash: 900f81cf77687b437577c8180731796c526f7663
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139897662"
Slug: general-availability-azure-search-parses-json-blobs
Title: '일반 공급: Azure Search는 JSON Blob을 구문 분석합니다.'
Summary: Azure Search는 Azure Blob Storage 직접 JSON 개체를 읽고 인덱싱할 수 있습니다.
Content: "<p>오늘 <a href=\"https://docs.microsoft.com/azure/search/search-howto-index-json-blobs\">JSON 구문 분석</a>&nbsp; 및 Azure Searchs&rsquo; <a href=\"https://docs.microsoft.com/azure/search/search-howto-indexing-azure-blob-storage\">Blob Storage 인덱서</a>의 일반 공급에 대해 발표하게 되어 기쁩니다.</p>\n\n<p>Azure Search는 Azure에서 문서 DB, Azure SQL Database, 테이블 및 Blob의 다양한 데이터 원본에 대해 오랫동안 지원되는 인덱서를 보유하고 있습니다. 인덱서를 사용하면 Azure Search에서 코드를 작성하지 않고도 변경 내용 및 삭제와 함께 데이터를 Azure Search 인덱스로 자동으로 끌어올 수 있습니다. 특히 Blob 인덱서는 여러 파일 형식(Office 문서, PDF, HTML 파일 등)을 열고 인덱싱할 수 있기 때문에 흥미롭습니다.</p>\n\n<p>오늘&rsquo; 발표를 통해 Blob Storage 인덱서가 Blob에 저장된 JSON 콘텐츠를 구문 분석하는 기능을 릴리스합니다. 이 기능은 현재 Azure Portal에서 구성할 수 없습니다. JSON 배열에서 여러 문서를 구문 분석하기 위한 지원은 미리 보기로 유지됩니다.</p>\n\n<h2>JSON 개체 인덱싱</h2>\n\n<p>JSON 구문 분석을 사용하도록 설정하면 Blob Storage 인덱서는 아래 예제와 같이 JSON 개체의 속성을 검색 인덱스의 별도 필드로 인덱싱할 수 있습니다.</p>\n\n<pre>\n<code>\n{\n        &quot;text&quot; : &quot;A hopefully useful article explaining how to parse JSON blobs&quot;,\n        &quot;datePublished&quot; : &quot;2016-04-13&quot;\n        &quot;tags&quot; : [ &quot;search&quot;, &quot;storage&quot;, &quot;howto&quot; ]   \n}\n</code></pre>\n\n<p>JSON 구문 분석을 설정하려면 일반적으로 <a href=\"https://docs.microsoft.com/rest/api/searchservice/create-data-source\">데이터 원본</a>&nbsp;을 만듭니다.</p>\n\n<pre>\n<code>\nPOST https://[service name].search.windows.net/datasources?api-version=2016-09-01\nContent-Type: application/json\napi-key: [admin key]\n\n{\n    &quot;name&quot; : &quot;my-blob-datasource&quot;,\n    &quot;type&quot; : &quot;azureblob&quot;,\n    &quot;credentials&quot; : { &quot;connectionString&quot; : &quot;DefaultEndpointsProtocol=https;AccountName=<account name=\"\">;AccountKey=<account key=\"\">;&quot; },\n    &quot;container&quot; : { &quot;name&quot; : &quot;my-container&quot;, &quot;query&quot; : &quot;optional, my-folder&quot; }\n} \n</account></account></code></pre>\n\n<p>그런 다음 인 <a href=\"https://docs.microsoft.com/rest/api/searchservice/create-indexer\">덱서</a> (<a href=\"https://docs.microsoft.com/rest/api/searchservice/create-indexer\">https://docs.microsoft.com/rest/api/searchservice/create-indexer</a>)를 만들고 <em>parsingMode</em> 매개 변수를 <em>json</em>으로 설정합니다.</p>\n\n<pre>\n<code>\nPOST https://[service name].search.windows.net/indexers?api-version=2016-09-01\nContent-Type: application/json\napi-key: [admin key]\n\n{\n  &quot;name&quot; : &quot;my-json-indexer&quot;,\n  &quot;dataSourceName&quot; : &quot;my-blob-datasource&quot;,\n  &quot;targetIndexName&quot; : &quot;my-target-index&quot;,\n  &quot;schedule&quot; : { &quot;interval&quot; : &quot;PT2H&quot; },\n  &quot;parameters&quot; : { &quot;configuration&quot; : { &quot;parsingMode&quot; : &quot;json&quot; } }\n}\n</code></pre>\n\n<p>Azure Search<a href=\"https://docs.microsoft.com/rest/api/searchservice/supported-data-types\">는 기본 데이터 형식, 문자열 배열 및 GeoJSON 지점만 지원합니다. 즉,&nbsp;</a> Blob Storage 인덱서는 임의의 JSON을 인덱싱할 수 없습니다. 그러나 JSON 개체 &ldquo;의 일부를 선택하고 Azure Search 문서의 최상위 필드로 들어 올릴&rdquo; 수 있습니다. 이에 대해 자세히 알아보려면 <a href=\"https://docs.microsoft.com/azure/search/search-indexer-field-mappings\">필드 매핑</a>에 대한 설명서를 참조하세요.&nbsp;</p>\n\n<h2>자세한 정보</h2>\n\n<p>Azure Search 및 해당 <a href=\"https://aka.ms/whatisazsearch\">기능에</a> 대해 자세히 알아보고 <a href=\"https://aka.ms/azsearchdocs\">설명서를 참조하세요</a>. 요구 사항에 맞는 다양한 서비스 계층에 대해 알아보려면 <a href=\"https://aka.ms/azspricing\">가격 책정 페이지를</a> 방문하세요.</p>"
