### YamlMime:Yaml
ms.openlocfilehash: 9a788dbe58b7018e630c3f480f7df0cc632d8518
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139906717"
Slug: leveraging-azure-site-recovery-with-sql-always-on-availability-groups-for-disaster-recovery-to-azure
Title: Azure로 재해 복구를 위한 SQL Always On 가용성 그룹을 사용하여 Azure Site Recovery 활용
Summary: 이 문서에서는 종단 간 애플리케이션 복구를 위해 Azure SIte 복구 및 SQL Always On 가용성 그룹을 활용하는 방법을 보여 줍니다.
Content: "<a href=\"https://aka.ms/asr_sql_landingpage\">Azure Site Recovery</a> 는 다른 유형의 IT 환경에 대한 단일 워크로드 인식 재해 복구 솔루션을 제공합니다.Hyper-V 또는 VMware 가상 머신 또는 물리적 서버에서 실행되는지 여부에 관계없이 중요한 애플리케이션 및 워크로드를 Azure에서 복제하고 복구할 수 있습니다. ASR 복구 계획을 사용하면 고객은 애플리케이션에 대한 워크로드 인식 복구 워크플로를 만들고 Azure에서 오케스트레이션된 <strong>\"단일 클릭\"</strong> 애플리케이션 복구를 달성할 수 있습니다.\n\nMicrosoft SQL Server 고객의 온-프레미스 데이터 센터 내에서 실행되는 많은 엔터프라이즈급 자사, 타사 및 사용자 지정 기간 업무 애플리케이션의 기초입니다. SQL Server 2012년과 2014년은 SQL AlwaysOn 가용성 그룹과 같은 엔터프라이즈급 고가용성 및 재해 복구 기술을 제공하여 Azure와 같은 원격 사이트로 SQL 데이터베이스를 보호하고 이벤트 중에 신속하게 장애 조치(failover)할 수 있도록 지원합니다. SQL 가용성 그룹은 SharePoint, Dynamics 및 SAP와 같은 주요 애플리케이션에 대한 데이터베이스 계층에 대한 고가용성을 구성하는 데 권장됩니다.\n\n일반적인 엔터프라이즈 애플리케이션은 다중 계층으로 구성됩니다. 웹 계층/프레젠테이션 계층, 중간 계층 또는 애플리케이션 계층 및 SQL Server 기반 데이터베이스 계층으로 구성됩니다. 이러한 애플리케이션에 대한 재해 복구를 계획할 때는 각 계층의 보호 및 복구를 계획하고 복구 중에 계층 간 종속성을 오케스트레이션하는 것이 중요합니다.\n\nAzure Site Recovery 및 SQL AlwaysON 가용성 그룹은 무료이며 다중 계층 애플리케이션의 엔드 투 엔드 보호 및 복구에 함께 사용할 수 있습니다.SQL AlwaysOn 가용성 그룹의 최고급 DR 기능을 사용하여 SQL 데이터베이스를 보호할 수 있으며, Azure Site Recovery 복제를 사용하여 웹 및 앱 계층을 복제할 수 있습니다. 마지막으로 ASR 복구 계획을 사용하여 ASR 복구 계획의 일부로 스크립션된 작업을 통해 SQL AlwaysOn 가용성 그룹의 장애 조치(failover)를 포함하여 전체 애플리케이션의 종단 간 복구를 시퀀스할 수 있습니다. 다음 몇 섹션에서는 이러한 기술이 함께 모여 <strong>엔터프라이즈 애플리케이션에 대한 워크로드 인식 복구 계획을</strong> <strong>한 번</strong> 클릭하는 방법을 보여 줍니다.\n<h2>일반적인 3계층 앱</h2>\n다음 다이어그램에서는 샘플 3계층 엔터프라이즈 애플리케이션을 보여 줍니다. 앱은 1) 하나 이상의 웹 계층(일반적으로 부하 분산 장치 뒤에서 확장됨) 2) 애플리케이션 논리를 제공하는 하나 이상의 앱 서버 및 3) 고가용성 SQL Server 백 엔드로 구성됩니다. SQL Server 2012 이상을 사용하는 경우 고가용성을 설정하는 권장 방법은 동기 복제 모드에서 두 개의 가용성 그룹 복제본을 구성하는 것입니다.\n\n<img class=\" aligncenter\" style=\"float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; padding-right: 0px; margin-right: auto; border: 0px;\" title=\"3계층\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3-tier.jpg\" alt=\"3-tier application\" width=\"292\" height=\"268\" border=\"0\" />\n\n&nbsp;\n<h2></h2>\n<h2></h2>\n<h2>모든 계층에 대한 보호 구성</h2>\n다음 단계를 활용하여 Azure Site Recovery 및 SQL AlwaysOn 가용성 그룹을 사용하여 위의 애플리케이션을 Azure에 복제합니다.\n<h3></h3>\n<h3>Azure에서 SQL 복제본 구성</h3>\n<ol>\n <li>Azure Virtual Network를 만들고 온-프레미스 사이트와 이 네트워크 간에 사이트 간 VPN 또는 Express Route를 구성합니다.</li>\n <li>이 네트워크에서 새 SQL IaaS Virtual Machine을 만들고 비동기 가용성 그룹 복제본으로 구성합니다. <em>(참고: Azure로 장애 조치(failover) 후 SQL 계층에 대한 고가용성이 필요한 경우 Azure에서 두 개의 비동기 복제본 복사본을 구성합니다.</em></li>\n <li>이 가상 네트워크에서 도메인 컨트롤러의 복제본을 설정해야 합니다.</li>\n <li>이 VM에서 VM 확장을 사용하도록 설정했는지 확인합니다. <em>(참고: 복구하는 동안 특정 스크립트된 작업을 SQL 푸시하는 데 사용됩니다.)</em></li>\n <li>Azure의 내부 부하 분산 장치를 사용하여 가용성 그룹에 대한 SQL 수신기 구성<em>(참고: 클라우드 서비스당 하나의 ILB만 지원되므로 수신기를 활용하도록 앱의 모든 데이터베이스를 단일 가용성 그룹으로 구성)</em></li>\n <li>수신기를 사용하여 데이터베이스 계층에 액세스하도록 앱 계층을 구성합니다.</li>\n</ol>\n위의 단계에 도움이 되도록 다음 리소스를 확인하세요.\n<ul>\n <li><a href=\"https://gallery.technet.microsoft.com/scriptcenter/Deploy-a-SQL-Server-5608b684\">하이브리드 IT 설정에서 SQL AG를 설정하는 스크립트</a></li>\n <li><a href=\"https://msdn.microsoft.com/en-us/library/azure/dn425027.aspx\">ILB를 사용하여 수신기 구성</a></li>\n <li><a href=\"https://msdn.microsoft.com/en-us/library/azure/dn832621.aspx\">IaaS VM 확장</a></li>\n</ul>\n&nbsp;\n<h3>웹 및 앱 계층 보호 구성</h3>\n<ol>\n <li>온-프레미스 환경을 기반으로 Azure Site Recovery를 설정하기 위한 필수 구성 요소를 완료합니다.</li>\n <li>ASR 복제를 사용하여 프런트 엔드 및 앱 계층 VM을 Azure에 복제합니다.</li>\n <li>앱 계층 및 프런트 엔드 VM이 ILB 및 SQL 복제본 복사본을 호스트하는 동일한 Azure 네트워크로 장애 조치(failover)되도록 ASR에서 네트워크 설정을 구성합니다. <em>(참고: 웹 및 앱 계층은 SQL 복제본이 배포된 클라우드 서비스와 다른 클라우드 서비스로 장애 조치(failover)해야 합니다. ASR은 장애 조치(failover) 시 새 클라우드 서비스를 자동으로 만듭니다.</em></li>\n</ol>\n위의 단계에 도움이 되는 몇 가지 리소스는 다음과 같습니다.\n<ul>\n <li><a href=\"https://aka.ms/asr_sql_documentation\">VMM/Hyper-V를 사용하여 ASR 구성</a></li>\n <li><a href=\"https://aka.ms/asr_sql_network_mapping\">네트워크 매핑 구성</a></li>\n</ul>\n&nbsp;\n\n다음 다이어그램에서는 애플리케이션 보호가 구성된 후의 종단 간 토폴로지를 보여 줍니다.\n\n&nbsp;\n\n<img style=\"float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; padding-right: 0px; margin-right: auto; border: 0px;\" title=\"protected\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/protected.jpg\" alt=\"protected\" width=\"642\" height=\"360\" border=\"0\" />\n\n&nbsp;\n\n&nbsp;\n<h2>전체 앱 장애 조치(failover)에 대한 복구 계획 만들기</h2>\n<h2></h2>\n<h3>SQL 장애 조치(failover) 스크립트 구성</h3>\n고객 스크립트 확장 및 Azure Automation을 활용하여 SQL 가용성 그룹의 스크립션된 장애 조치(failover)를 구성합니다.\n\n1. 가용성 그룹을 SQL 장애 조치(failover)할 스크립트에 대한 로컬 파일을 만듭니다.다음 샘플 스크립트는 Azure 복제본의 가용성 그룹에 대한 경로를 가져와 해당 복제본 인스턴스로 장애 조치(fail over)합니다. 이 스크립트는 사용자 지정 스크립트 확장을 통해 실행을 위해 SQL 복제본 VM에 전달됩니다.\n<pre class=\"prettyprint\">Param(\n[string]$SQLAvailabilityGroupPath\n)\n\nimport-module sqlps\nSwitch-SqlAvailabilityGroup -Path $SQLAvailabilityGroupPath -AllowDataLoss -force\n\n</pre>\n2.스크립트를 Azure Storage 계정의 Blob에 업로드(이 예제에서는 Blob의 이름이 \"AGFailover.ps1\").\n<pre class=\"prettyprint\">$context = New-AzureStorageContext -StorageAccountName \"Account\" -StorageAccountKey \"Key\"\nSet-AzureStorageBlobContent -Blob \"AGFailover.ps1\" -Container \"script-container\" -File \"ScriptLocalFilePath\" -context $context</pre>\n3.Azure의 SQL 복제본 VM에서 위의 스크립트를 호출하는 Azure Automation Runbook을 만듭니다. 목적을 위해 다음 샘플 스크립트를 사용할 수 있습니다. 복구 계획에 Azure Automation Runbook 추가를 확인할 <a title=\"수도 있습니다. 복구 계획에\" href=\"https://aka.ms/asr_sql_azure_automation\" target=\"_blank\"> Azure Automation Runbook을 추가하여 ASR 복구 계획에</a> 사용할 Azure Automation Runbook을 만드는 방법을 이해할 수 있습니다.\n<pre class=\"prettyprint\">workflow SQLAvailabilityGroupFailover\n{\n    param (\n        [Object]$RecoveryPlanContext\n    )\n\n    $Cred = Get-AutomationPSCredential -name 'AzureCredential'\n \n    #Connect to Azure\n    $AzureAccount = Add-AzureAccount -Credential $Cred\n    $AzureSubscriptionName = Get-AutomationVariable –Name ‘AzureSubscriptionName’\n    Select-AzureSubscription -SubscriptionName $AzureSubscriptionName\n    \n    InLineScript\n    {\n     #Update the script with name of your storage account, key and blob name\n     $context = New-AzureStorageContext -StorageAccountName \"Account\" \n         -StorageAccountKey \"Key\";\n     $sasuri = New-AzureStorageBlobSASToken -Container \"script-container\" \n         -Blob \"AGFailover.ps1\" -Permission r -FullUri -Context $context;\n     \n     Write-output \"failovertype \" + $Using:RecoveryPlanContext.FailoverType;\n               \n     if ($Using:RecoveryPlanContext.FailoverType -eq \"Test\")\n       {\n           #Skipping TFO in this version.\n           #We will update the script in a follow-up post with TFO support\n           Write-output \"tfo: Skipping SQL Failover\";\n       }\n     else\n       {\n           Write-output \"pfo/ufo\";\n           #Get the SQL Azure Replica VM.\n           #Update the script to use the name of your VM and Cloud Service\n           $VM = Get-AzureVM -Name \"SQLAzureVM\" -ServiceName \"SQLAzureReplica\";     \n       \n           Write-Output \"Installing custom script extension\"\n           #Install the Custom Script Extension on teh SQL Replica VM\n           Set-AzureVMExtension -ExtensionName CustomScriptExtension -VM $VM -Publisher Microsoft.Compute -Version 1.3| Update-AzureVM; \n                    \n           Write-output \"Starting AG Failover\";\n           #Execute the SQL Failover script\n           #Pass the SQL AG path as the argument.\n       \n           $AGArgs=\"-SQLAvailabilityGroupPath sqlserver:\\sql\\sqlazureVM\\default\\availabilitygroups\\testag\";\n       \n           Set-AzureVMCustomScriptExtension -VM $VM -FileUri $sasuri -Run \"AGFailover.ps1\" -Argument $AGArgs | Update-AzureVM;\n       \n           Write-output \"Completed AG Failover\";\n\n       }\n        \n    }\n}</pre>\n<h3></h3>\n<h3>새 ASR 복구 계획 만들기</h3>\n<ol>\n<ol>\n <li>Azure Site Recovery 포털에서 새 복구 계획을 만들고 앱 및 웹 계층 VM을 복구 계획에 추가합니다.</li>\n <li>복구 계획에서 위의 Azure Automation을 호출하는 \"사전 그룹 1 부팅\" 스크립트 단계를 추가합니다.</li>\n <li>\"Group1\"을 앱 계층의 시작 그룹으로 선택하고 \"Group2\"를 웹 계층의 시작 그룹으로 선택하여 복구 계획을 사용자 지정합니다(예: 앱 계층은 웹 계층 전에 시작됩니다).</li>\n <li>웹 계층에 둘 이상의 VM이 있는 경우 그룹 2에 대한 사후 스크립트로 부하 분산 장치를 만드는 스크립트를 추가해야 합니다.</li>\n <li>복구 계획을 저장합니다.</li>\n</ol>\n</ol>\n&nbsp;\n\n<img style=\"float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; padding-right: 0px; border: 0px;\" title=\"recovery-plan2\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/recovery-plan2.jpg\" alt=\"recovery-plan2\" width=\"1024\" height=\"588\" border=\"0\" />\n\n&nbsp;\n<h2></h2>\n<h2>Azure로 복구 계획 장애 조치(failover)</h2>\n복구 계획이 구성되면 이를 사용하여 Azure로 계획되거나 계획되지 않은 장애 조치(failover)를 수행할 수 있습니다.ASR은 앱 및 웹 계층을 Azure로 장애 조치하고 IaaS VM을 만듭니다. ASR은 위의 Azure Automation Runbook을 호출하고 SQL AlwaysOn 가용성 그룹을 장애 조치합니다. 그런 다음 앱 계층을 부팅한 다음 웹 계층을 부팅합니다. 모든 계층이 완료되면 SQL 수신기가 SQL Azure 복제본 인스턴스를 가리키도록 업데이트됩니다.\n\n다음 다이어그램에서는 장애 조치(failover) 후의 상태를 보여 줍니다.\n\n&nbsp;\n\n<img style=\"float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; padding-right: 0px; margin-right: auto; border: 0px;\" title=\"장애 조치(failover) 후\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/after-failover.jpg\" alt=\"after-failover\" width=\"642\" height=\"360\" border=\"0\" />\n\n&nbsp;\n<h2></h2>\n<h2>Azure에서 온-프레미스로 장애 복구</h2>\n온-프레미스 서버가 정상 상태로 돌아가면 SQL Azure 복제본에서 온-프레미스 복제본 복사본으로 복제를 다시 구성할 수 있습니다. 그런 다음 유사한 ASR 복구 계획을 사용하여 애플리케이션을 온-프레미스로 장애 조치(failover)할 수 있습니다.\n\n&nbsp;\n\n지금까지 이제 Azure Site Recovery 및 SQL AlwaysOn 가용성 그룹과 같은 동급 최고의 기술을 결합하여 전체 애플리케이션을 장애 조치(failover)하는 \"단일 클릭\" 복구 계획이 있습니다. 애플리케이션이 공용 사이트인 경우 <a href=\"https://aka.ms/asr_sql_reduce_rto\">Azure Traffic Manager 사용하여 애플리케이션을 복구할 때 RTO를 추가로 최적화하는</a> 방법을 확인합니다."
