### YamlMime:Yaml
ms.openlocfilehash: dbf95eb00f4cd854ea6a2e5874e771639d4d5e5c
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899745"
Slug: introducing-the-windows-azure-appfabric-service-bus-may-2011-ctp
Title: 2011년 5월 WINDOWS Azure AppFabric Service Bus 소개
Summary: '[이 문서는 AppFabric 팀에서 제공했습니다.] 우리가 이야기하는 많은 파트너와 고객은 Service Bus Windows Azure의 주요 차별화 요인 중 하나로 생각한다고 말하고 있습니다...'
Content: <p>[이 문서는 AppFabric 팀에서 제공했습니다.]</p><p>많은 파트너와 고객이 Service Bus Windows Azure 플랫폼의 주요 차별화 요소 중 하나로 생각한다고 말하고 있는데, 이는 고객이 워크로드를 클라우드 인프라로 이동하는 것과 관련하여 현재와 향후 몇 년 동안의 상황을 반영하는 애플리케이션을 빌드하고 상호 연결할 수 있기 때문입니다.  애플리케이션 및 솔루션은 데스크톱 및 디바이스, 고객 소유 및 운영 서버 및 데이터 센터, 프라이빗 및 퍼블릭 클라우드 자산에 걸쳐 있습니다. </p>  <p>10년 이상의 애플리케이션 통합 및 프로세스 간소화 후 LOB(기간 업무) 애플리케이션은 다시 섬이 될 수 없습니다. </p>  <p>애플리케이션이 클라우드로 이동하거나 클라우드 기반 SaaS 솔루션을 개별 고객을 위한 엔터프라이즈 솔루션에 통합해야 하는 경우 통합에는 서비스에 대한 원활한 액세스 및 네트워크 및 트러스트 경계를 넘어 안전하고 신뢰할 수 있는 메시지 흐름과 같은 기능이 항상 필요합니다. 또한 점점 더 많은 애플리케이션이 트러스트 경계를 넘어 페더레이션되고 여러 테넌트에서 작동하도록 빌드됨에 따라 VPN과 같은 클래식 네트워크 페더레이션 기술은 관리해야 하는 임의의 네트워크 트래픽 흐름을 허용하기 때문에 당사자 간에 상당한 수준의 상호 신뢰가 필요하기 때문에 더 이상 적절하지 않은 경우가 많습니다.</p>  <p>클라우드 호스팅 및 클라우드 연결 애플리케이션을 위한 유니버설 연결, 메시징 및 통합 패브릭으로 Service Bus 확장하기 위해 최선을 다하고 있음을 보여주는&rsquo; 새로운 Community 기술 미리 보기를 출시했으며, Azure AppFabric SDK V2.0 CTP &ndash; 5월 업데이트 및 함께 제공되는 샘플에 Windows 살펴보도록 초대합니다&ndash;. &nbsp;</p>  <p>Service Bus 네트워크 및 트러스트 경계를 넘어 글로벌 엔드포인트 페더레이션을 허용하는 풍부한 서비스 릴레이 기능을 제공하는 데 있어 서비스로서의 플랫폼 제품 간에 이미 고유합니다. </p>  <p>현재,&rsquo; 긴 폴링 지원 및 처리량 최적화 연결 지향 이중 TCP 프로토콜을 사용하여 간단하고 광범위하게 상호 운용 가능한 REST 스타일 HTTPS 프로토콜을 통해 신뢰할 수 있는 메시지 큐 및 지속성 있는 게시/구독 메시징을 제공하는 Service Bus 클라우드 기반 메시지 지향 미들웨어 기술의 새로운 세트를 추가해야 합니다. </p>  <p>MSMQ 기술을 소유하지만 완전히 새로운 기술 기반을 기반으로 하는 동일한 팀에서 빌드한 새로운 메시징 기능은 Service Bus&rsquo; 명명 및 검색 기능 및 친숙한 관리 프로토콜 화면과 통합되며 Windows Azure AppFabric Access Control 서비스의 최신 릴리스를 통해 페더레이션된 액세스 제어를 허용합니다. &nbsp;</p>  <h2>큐</h2>  <p>Service Bus 큐는 복제된 지속성 저장소에서 지원되는 새 메시징 인프라를 기반으로 합니다. </p>  <p>각 큐는 이 CTP에서 최대 100MB의 메시지 콘텐츠를 보유할 수 있으며, 이는 서비스가 프로덕션으로 전환됨에 따라 최소 크기만큼 확장할 것으로 예상되는 할당량입니다. 메시지에는 최대 수명이 적용되지 않고 사용자 정의 TL(Time to Live) 기간이 있을 수 있습니다.</p>  <p>개별 메시지의 크기는 256KB로 제한되지만 세션 기능을 사용하면 세션이 특정 소비자에게 고정되는 관련 메시지의 무제한 크기 시퀀스를 만들 수 있으므로 임의 크기의 페이로드 청크를 사용할 수 있습니다. 또한 세션 상태 기능을 사용하면 세션의 메시지를 소비할 때 프로세스에서 진행률을 트랜잭션으로 기록할 수 있으며 세션 기반 상관 관계도 지원하므로 멀티플렉싱된 요청/회신 경로를 간단하게 빌드할 수 있습니다. </p>  <p>큐는 분산된 2단계 트랜잭션과 같은 일반적인 메커니즘이 어려운 트러스트 경계를 넘어 처리 무결성을 보장하는 데 도움이 되는 HTTP API 및 .NET API의 피킹/잠금과 같은 신뢰할 수 있는 배달 패턴을 지원합니다. 또한 인바운드 메시지 중복을 기본적으로 검색하여 간헐적인 네트워크 문제 또는 애플리케이션 크래시로 인해 메시지가 큐에 기록되었는지 확실하지 않은 경우&rsquo; 클라이언트가 부정적인 결과 없이 메시지를 다시 보낼 수 있습니다.</p>  <p>처리하거나 만료할 수 없는 메시지에 대한 배달 못한 편지 기능 외에도 큐는 이후 처리를 위해 메시지를 지연할 수 있습니다. 예를 들어 예약된 처리 순서에서 메시지가 수신되고 프로세스가 추가 진행을 허용하기 위해 특정 메시지를 기다리는 동안 안전하게 측면에 배치해야 하는 경우.</p>  <p>큐는 또한 예약된 배달 &ndash; 을 지원합니다. 즉, 메시지를 큐 인프라에 전달할 수 있지만 메시지는 미리 정해진 시점에만 사용할 수 있게 되므로 간단한 타이머를 빌드하는 매우 우아한 방법입니다. </p>  <h2>토픽</h2>  <p>Service Bus 토픽은 새로운 게시 및 구독 기능 집합을 제공하며 Service Bus 큐 &ndash; 와 동일한 백 엔드 인프라를 기반으로 하며 큐에 대해 방금 설명한 모든 기능을 갖추고 있습니다. </p>  <p>토픽은 큐와 같은 순차적 메시지 저장소로 구성되지만, 게시된 메시지의 복사본을 소비자에게 독립적으로 생성할 수 있는 많은(CTP의 경우 최대 2000개) 동시 및 지속형 구독을 허용합니다. </p>  <p>각 구독은 게시된 시퀀스에서 구독으로 선택된 메시지를 지정하는 간단한 식을 사용하여 규칙 집합을 정의할 수 있습니다. 구독은 사용자 또는 시스템 정의 속성에 특정 값이 있거나 특정 값 범위 내에 있는 모든 메시지 또는 메시지만 선택할 수 있습니다. 규칙에는 메시지가 선택될 때 메시지 속성을 수정할 수 있는 작업이 포함될 수도 있습니다. 예를 들어 특정 기준으로 메시지를 선택하고 세션으로 메시지를 선호하거나 다른 많은 가능한 패턴 중에서 분할 키를 사용하여 메시지를 스탬프할 수 있습니다. </p>  <p>앞에서 언급한 큐의 모든 기능을 사용하여 가상 큐와 같은 각 구독 함수에서 나타내는 필터링된 메시지 시퀀스입니다. 따라서 구독에는 모든 메시지를 가져오는 단일 소비자 또는 선착순으로 메시지를 가져오는 경쟁 소비자 집합이 있을 수 있습니다. </p>  <p>몇 가지 예를 들어 항목은 동일한 정보가 필요한 많은 소비자에게 메시지 팬아웃을 분리하는 데 적합하며, 분할된 작업자 풀에 작업을 분산하는 데 도움이 되며, 이벤트 기반 아키텍처 구현을 위한 훌륭한 기초가 됩니다. </p>  <p>필터링되지 않은 단일 구독을 설정하고 여러 경쟁 소비자가 구독에서 메시지를 끌어오게 하여 큐와 마찬가지로 토픽을 항상 사용할 수 있습니다. 큐에 대한 토픽의 가장 큰 장점은 언제든지 추가 구독을 추가하여 메시지 시퀀스에 대한 추가 탭을 허용할 수 있다는 것입니다. 여기서는 사전 처리 입력 메시지를 보관에 기록하는 감사 탭이 좋은 예입니다. </p>  <h2>Access Control 통합</h2>  <p>이 새로운 CTP는 4월부터 상업적으로 사용 가능한 Access Control V2&rdquo; 서비스와 호환되는 Access Control &ldquo;서비스의 appfabriclabs.com 버전과 페더레이션됩니다. 현재 상업적으로 사용 가능한 버전의 Service Bus Access Control &ldquo;V1&rdquo;과 페더레이션됩니다. </p>  <p>액세스 토큰을 획득하기 위해 Access Control과 상호 작용하는 Service Bus API는 변경되지 않았지만 Access Control &ldquo;V2의 새로운 페더레이션 기능을 더 잘 활용하기 위해 변경 사항을 고려하고 있습니다&rdquo;. </p>  <p>프로그래밍 방식으로 Service Bus 대한 액세스 제어 규칙을 설정하는 고객은 이러한 두 버전의 Access Control 서비스의 관리 API 간에 상당한 차이가 있음을 알게 됩니다. 현재 계획은 고객에게 Service Bus 네임스페이스에 대한 사용자 지정 액세스 제어 규칙을 제공하는 것입니다. 마이그레이션은 V1 및 V2 버전의 Access Control Service를 병렬로 작동하는 일정 기간 동안 옵션이 될 것입니다. 우리는 이 블로그에 이번 주에 오는 초기 세부 사항과 함께 앞으로 몇 개월 동안이 마이그레이션에 대한 구체적인 지침을 게시 할 것입니다.</p>  <h2>무엇이 변경되고 무엇이&rsquo; 제공됩니까?</h2>  <p>클라우드에서 &ndash; 이러한 기능을 Service Bus 이미 사용할 수 있는 &ndash; 기능과 함께 제공하면 클라우드 호스팅 및 클라우드 고급 애플리케이션에 대한 완전히 새로운 범위의 가능성이 열릴 것이라고 믿습니다. 우리는 Service Bus 기반으로 구축 놀라운 비즈니스 솔루션을 보았다 및 고객 피드백에 따라 우리는&rsquo; 메시지 지향 미들웨어 기능의 완전히 기능을 갖춘 세트의 추가는 훨씬 더 강력한 솔루션을 구축 할 수 있도록 할 것이라고 확신. &nbsp;이 미리 보기에 포함된 모든 기능을 2011년 하반기에 상업적으로 사용할 수 있도록 하기 위한 것입니다.</p>  <p>Service Bus PDC10&rsquo; CTP에 추가된 Service Bus 릴레이 기능에 대한 부하 분산 및 트래픽 최적화 기능은 연기되었으며 이 CTP에서 더 이상 사용할 수 없습니다. 그러나 &ldquo;연기되었다고&rdquo; 해서 제거된&rdquo; 것은 &ldquo;아니며 곧 이러한 기능을 CTP 릴리스로 되돌릴 계획입니다. Weve&rsquo;는 Service Bus 백 엔드의 매우 중요한 부분을 변경했음에도 불구하고 Service Bus 현재 프로덕션 릴리스와 이 CTP에서 제공하는 새 버전&rsquo; 간의 이전 버전과의 호환성 등 많은 고객에게 훨씬 더 중요할 것으로 예상되는 기능에 대해 이러한 기능을 거래했습니다. 이미 배포한 Microsoft.ServiceBus.dll 이전 버전과의 호환성을 포함하여 이 CTP의 기능이 프로덕션으로 전환될 때 Service Bus 대한 완전한 이전 버전과의 호환성을 제공하기 위해 최선을 다하고 있습니다.</p>  <p>.NET 이외의 플랫폼에서 앱을 작성하는 고객을 돕기 위해 향후 몇 주 안에 새로운 메시징 기능에 대한 Java 및 PHP 샘플도 릴리스할 예정입니다. 이러한 샘플은 이 CTP 릴리스의 SDK에 포함된 Silverlight 및 Windows Phone 채팅 샘플에 구현된 채팅 클라이언트 버전입니다. </p>  <p>마지막으로, 가장 중요한 것은 Community 기술 미리 보기의 목적은 커뮤니티에서 피드백을 수집하는 것입니다.&nbsp;&nbsp;&nbsp; 제안, 비판, 칭찬 또는 질문이 있는 경우 다음을 알려주세요.<a target="_blank" href="https://social.msdn.microsoft.com/Forums/en-US/appfabricctp/">https://social.msdn.microsoft.com/Forums/en-US/appfabricctp/</a> &nbsp;</p>  <p>당신은 또한 개인적으로 @clemensv 나를 트위터 수 있습니다 그리고 Ill&rsquo; 팀 당신이 무슨 말을 해야 하는지 알려.</p>  <p>&nbsp;</p>  <p>Service Bus 팀의 경우</p>  <p>클레멘스 광대<br>주 기술 책임자<br>Windows Azure AppFabric 서비스 버스</p>
