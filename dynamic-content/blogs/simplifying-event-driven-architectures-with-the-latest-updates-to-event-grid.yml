### YamlMime:Yaml
ms.openlocfilehash: 28f166a32de68b4e16b7d8ac51f16f3722a53dda
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900630"
Slug: simplifying-event-driven-architectures-with-the-latest-updates-to-event-grid
Title: Event Grid에 대한 최신 업데이트를 사용하여 이벤트 기반 아키텍처 간소화
Summary: 이벤트 기반 아키텍처는 점점 더 덜 동적 폴링 기반 시스템을 대체하고 앞지르고 있으며, 서버리스 컴퓨팅의 이점을 IoT 시나리오, 데이터 처리 작업 또는 인프라 자동화 작업으로 가져오고 있습니다.
Content: >-
  <p>이벤트 기반 아키텍처는 점점 더 덜 동적 폴링 기반 시스템을 대체하고 앞지르고 있으며, <a href="https://azure.com/serverless" target="_blank">서버리스</a> 컴퓨팅의 이점을 IoT 시나리오, 데이터 처리 작업 또는 인프라 자동화 작업으로 가져오고 있습니다. 마이크로 서비스의 자연스러운 진화로 전 세계 기업들은 이벤트 중심의 접근 방식을 취하여 기존 애플리케이션에서 새로운 환경을 만들거나 이러한 애플리케이션을 클라우드로 가져와 매일 더 강력하고 복잡한 시나리오를 구축하고 있습니다.</p>


  <p>오늘날 클라우드&rsquo;에서 더 높은 성능과 고급 이벤트 기반 애플리케이션을 구동하는 Event Grid에 대한 일련의 업데이트를 발표하게 되어 매우 기쁩니다.</p>


  <ul>
      <li>IoT Hub 디바이스 원격 분석 이벤트의 공개 미리 보기</li>
      <li>이벤트 처리기로 Service Bus 공개 미리 보기</li>
      <li>자동 서버 쪽 지역 재해 복구</li>
      <li>이제 도메인당 최대 100K 토픽이 포함된 이벤트 도메인의 일반 공급</li>
      <li>1MB 이벤트 지원의 공개 미리 보기</li>
      <li>검색 및 페이지 매김 API 나열</li>
      <li>필터링 깊이가 향상된 고급 필터의 일반 공급</li>
  </ul>


  <h2>Azure 에코시스템과의 확장된 통합</h2>


  <p>Event Grid와 <a href="https://azure.microsoft.com/services/iot-hub/" target="_blank">Azure IoT Hub</a> 통합을 시작한 이래로 요청된 가장 큰 기능 중 하나는 디바이스 원격 분석 이벤트입니다. 오늘, 우리는 마침내 미국 동부,&rsquo; 미국 서부 및 서유럽을 제외한 모든 퍼블릭 지역에서 공개 미리 보기에서 해당 기능을 사용하도록 설정했습니다. 이 기능을 시도하고 비즈니스를 위한 보다 간소화된 IoT 솔루션을 빌드하게 되어 기쁩니다.</p>


  <p>디바이스 원격 분석 이벤트를 구독하면 <a href="https://azure.com/functions" target="_blank">Azure Functions</a> 또는 <a href="https://azure.com/logicapps" target="_blank">Azure Logic Apps</a> 사용하는 서버리스 애플리케이션 및 웹후크를 사용하는 기타 서비스를 포함하여 디바이스의 데이터를 보다 쉽게 솔루션에 통합할 수 있습니다. 이렇게 하면 추가 처리를 위해 디바이스 원격 분석을 폴링하는 추가 서비스가 필요하지 않도록 하여 IoT 아키텍처를 간소화할 수 있습니다.</p>


  <p>IoT Hub는 Event Grid에 디바이스 원격 분석 이벤트를 게시하여 <a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messages-d2c" target="_blank">메시지 라우팅</a>을 통해 지원되는 엔드포인트를 넘어 데이터에 도달할 수 있는 서비스를 확장합니다. 예를 들어 디바이스 쌍 태그로 식별되는 다양한 디바이스 유형에 대한 디바이스 원격 분석 이벤트에 대한 서로 다른 구독을 만들고 디바이스 유형별 고유한 계산을 위해 고유한 Azure Functions 또는 타사 애플리케이션을 트리거하여 다운스트림 워크플로를 자동화할 수 있습니다. 디바이스 원격 분석 이벤트에 대한 Event Grid 구독에 따라 IoT Hub에서 기본 경로를 만들어 모든 Event Grid 구독을 디바이스 원격 분석으로 처리합니다.</p>


  <p>문서의 <a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-event-grid" target="_blank">IoT Hub 디바이스 원격 분석에</a> 대해 자세히 알아보고 <a href="https://feedback.azure.com/forums/321918-azure-iot/" target="_blank">Azure IoT User Voice 포럼</a>을 통해 제안을 계속 제출합니다.</p>


  <p>또한 공개 미리 보기에서 Event Grid에 대한 이벤트 처리기로 Service Bus 추가하고 있으므로 오늘부터 Event Grid의 이벤트를 Service Bus 큐로 직접 라우팅할 수 있습니다. 이제 Service Bus 이벤트 원본 또는 이벤트 처리기 역할을 하여 분산 엔터프라이즈 애플리케이션에서 이벤트 및 메시지를 제공하는 보다 강력한 환경을 만들 수 있습니다. 현재 공개 미리 보기로 제공되며 Service Bus 토픽 및 세션에서는 작동하지 않지만 Service Bus 큐의 모든 계층에서 작동합니다.</p>


  <p>이렇게 하면 추가 처리를 위해 Blob 생성, 디바이스 생성 및 작업 전달 완료와 같은 다른 서비스에서 활동 이벤트를 수신하는 명령 및 제어 시나리오를 사용할 수 있습니다.</p>


  <p>문서의 <a href="https://aka.ms/egsbhandler" target="_blank">대상으로 Service Bus</a> 대해 자세히 알아봅니다.</p>


  <h2>서버 쪽 지역 재해 복구</h2>


  <p>Event Grid에는 이제 새로운 도메인, 토픽 및 이벤트 구독뿐만 아니라 모든 기존 도메인, 토픽 및 이벤트 구독에 적용할 수 있는 메타데이터의 GeoDR(자동 지역 재해 복구)이 기본 제공됩니다. 이렇게 하면 플랫폼에 의해 완전히 관리되는 서비스 중단에 대한 복원력이 크게 향상됩니다. 전체 Azure 지역을 중단하는 경우 Event Grid 서비스에는 이미 모든 이벤트 인프라 메타데이터가 쌍을 이루는 지역에 동기화되어 있으며, 새 이벤트는 사용자의 개입 없이 다시 흐르기 시작하여 서비스 중단을 자동으로 방지합니다.</p>


  <p>재해 복구는 일반적으로 두 가지 메트릭으로 측정됩니다.</p>


  <ul>
      <li><a href="https://en.wikipedia.org/wiki/Disaster_recovery#Recovery_Point_Objective" target="_blank">RPO(복구 지점 목표):</a> 손실될 수 있는 데이터의 분 또는 시간입니다.</li>
      <li><a href="https://en.wikipedia.org/wiki/Disaster_recovery#Recovery_time_objective" target="_blank">RTO(복구 시간 목표):</a> 서비스가 중단될 수 있는 시간(분)입니다.</li>
  </ul>


  <p>Event Grids&rsquo; 자동 장애 조치(failover)에는 메타데이터(이벤트 구독 및 기타) 및 데이터(이벤트)에 대한 다른 RPO&rsquo; 및 RTO&rsquo;가 있습니다. 아래와 다른 사양이 필요한 경우 토픽 상태 API를 사용하여 항상 <a href="https://docs.microsoft.com/en-us/azure/event-grid/custom-disaster-recovery" target="_blank">고유한 클라이언트 쪽 장애 조치(failover</a> )를 구현할 수 있습니다.</p>


  <ul>
      <li>메타데이터 RPO: 0분. 당신은 그 권리를 읽었습니다. Event Grid에서 리소스를 만들 때마다 지역 간에 즉시 복제됩니다. 장애 조치(failover)가 발생할 경우 메타데이터가 손실되지 않습니다.</li>
      <li>메타데이터 RTO: 일반적으로 훨씬 더 빠르게 발생하지만 60분 이내에 Event Grid는 토픽 및 구독에 대한 만들기/업데이트/삭제 호출을 수락하기 시작합니다.</li>
      <li>데이터 RPO: 시스템이 정상이고 지역 장애 조치 시 기존 트래픽을 처리하는 경우 이벤트에 대한 RPO는 약 5분입니다.</li>
      <li>데이터 RTO: 메타데이터와 마찬가지로 일반적으로 훨씬 더 빠르게 발생합니다. 그러나 60분 이내에 Event Grid는 지역 장애 조치(failover) 후 새 트래픽을 수락하기 시작합니다.</li>
  </ul>


  <p>가장&rsquo; 좋은 점은 Event Grid의 메타데이터 GeoDR에 대한 비용이 없다는 것입니다. 서비스의 현재 가격에 포함되며&rsquo; 추가 요금이 발생하지 않습니다.</p>


  <h2>고급 이벤트 기반 워크로드 전원 공급</h2>


  <p>IoT, CRM 또는 재무&rsquo; 웹과 같은 다양한 시나리오에 대한 고급 이벤트 기반 아키텍처를 확인함에 따라 이벤트에서 더 많은 양의 데이터를 처리하는 다중 테넌트 애플리케이션 및 워크로드에 대한 기능을 확장해야 하는 필요성이 증가하고 있습니다.</p>


  <p><a href="https://docs.microsoft.com/azure/event-grid/event-domains" target="_blank">이벤트 도메인은</a> 단일 구문으로 전체 이벤트 인프라를 구성하고, 구독할 수 있는 사용자에 대해 각 항목에 대해 세분화된 인증 규칙을 설정하고, 단일 엔드포인트를 사용하여 모든 이벤트 게시를 관리할 수 있는 기능을 제공합니다. 클래식 펍 하위 아키텍처는 토픽 및 구독에만 빌드되지만 고급 및 고화질 이벤트 기반 아키텍처를 빌드하면 유지 관리 부담이 기하급수적으로 증가합니다. 이벤트 도메인은 관리의 대부분을 처리하여 문제를 해결합니다.</p>


  <p>&rsquo;이제 이벤트 도메인을 일반적으로 사용할 수 있으며,&rsquo; 이를 통해 도메인당 100,000개의 토픽을 사용할 수 있다는 사실을 알려드리게 되어 기쁩니다. 일반 공급으로 이벤트 도메인 제한의 전체 집합은 다음과&rsquo; 같습니다.</p>


  <ul>
      <li>이벤트 도메인당 100,000개 항목</li>
      <li>Azure 구독당 이벤트 도메인 100개</li>
      <li>이벤트 도메인의 토픽당 이벤트 구독 500개</li>
      <li>이벤트 도메인 범위에서 50 &lsquo;개의 firehose&rsquo; 이벤트 구독</li>
      <li>이벤트 도메인에 초당 5,000개의 이벤트</li>
  </ul>


  <p>언제나처럼 이러한 제한이 적합하지 않은&rsquo; 경우 지원 티켓을 통해 또는 이메일로 자유롭게 연락할 수 있습니다. <a href="mailto:askgrid@microsoft.com">askgrid@microsoft.com</a></p>


  <p>그래서 우리는 당신에게 더 높은 용량을 얻을 수 있습니다.</p>


  <p>또한 고급 이벤트 기반 아키텍처는 항상 64KB의 경계에 맞지 않는다는&rsquo; 것을 인정합니다. 이러한 워크로드는 더 간단한 아키텍처를 위해 더 큰 이벤트를 처리해야 하며, 현재&rsquo;는 최대 1MB의 이벤트에 대한 공개 미리 보기를 발표합니다.</p>


  <p>구성 변경이 필요하지 않으며 이는 기존 이벤트 구독에서 작동하며, 64KB 미만의 모든 항목은 일반 공급 SLA에서 계속 적용됩니다. 이를 시도하려면 더 큰 이벤트를 푸시하면 64KB 이상의 이벤트가 64KB 단위로 청구되고 JSON 배열로 Event Grid로 전송되는 이벤트의 일괄 처리 크기 제한은 여전히 총 1MB입니다.</p>


  <h2>이벤트의 간소화된 관리</h2>


  <p>수천 개의 이벤트 구독이 있거나 이벤트 도메인의 일반 공급으로 Azure 구독 주위에 수십만 개의 토픽이 떠있을 수 있습니다. 이러한 리소스를 더&rsquo; 쉽게 검색하고 관리하기 위해 Event Grid 전체에서 목록 검색 및 목록 페이지 매김 API를 도입했습니다. 자세한 내용은 <a href="https://aka.ms/egsearchpagination" target="_blank">Azure Event Grid 설명서</a>의 &ldquo; 모든 세부 정보를 확인하세요.&rdquo;</p>


  <p>이제 Event Grid에서 메시지를 라우팅하는 데 사용되는 <a href="https://docs.microsoft.com/azure/event-grid/event-filtering#advanced-filtering" target="_blank">고급 필터</a>를 일반적으로 사용할 수 있으며 JSON의 중첩된 개체 수는 제한되지 않습니다. 이렇게 하면 추가 처리를 위해 이벤트를 다른 서비스에 전달하기 전에 이벤트를 필터링할 때 더 세분화할 수 있으며, 다른 곳에서 이 필터링을 수행하지 않도록 하여 컴퓨팅 시간과 리소스를 줄일 수 있습니다.</p>


  <p>고급 필터를 아직 사용하지 않은&rsquo; 경우 이벤트의 모든 부분에서 다음 연산자를 사용하여 StringContains, StringBeginsWith, StringEndsWith, StringIn, StringNotIn, NumberGreaterThanThan, NumberGreaterThanOrEquals, NumberLessThan, NumberLessThan, NumberLessThanOrEquals, NumberIn, NumberIn, NumberNotIn, BoolEquals를 사용할 수 있습니다.</p>


  <h2>오늘 시작</h2>


  <p>언제나처럼, 우리는 당신이 이러한 새로운 기능을 사용해 볼 수있는 기회를 얻을 때 당신의 생각, 피드백, 위시 리스트를 듣고 사랑 해요! 이제 다음 리소스로 시작할 수 있으며 피드백을 보내주세요.</p>


  <ol>
      <li>아직 없는 경우&rsquo; <a href="https://azure.microsoft.com/free/serverless/" target="_blank">Azure 체험 계정에</a> 등록</li>
      <li>Event Grid를 사용하여 <a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-event-grid" target="_blank">IoT Hub 디바이스 원격 분석 이벤트</a> 구독</li>
      <li><a href="https://aka.ms/egsbhandler" target="_blank">이벤트 처리기로 Service Bus</a> 사용하는 방법에 대해 자세히 알아보기</li>
      <li><a href="https://docs.microsoft.com/azure/event-grid/event-domains" target="_blank">이벤트 도메인</a>을 사용하여 보다 강력한 다중 테넌트 애플리케이션 빌드</li>
      <li>이러한 새 <a href="https://aka.ms/egsearchpagination" target="_blank">API</a>를 사용하여 수천, 수천 개 이벤트에 대한 검색 및 페이지 매김 수행</li>
      <li><a href="https://docs.microsoft.com/azure/event-grid/event-filtering#advanced-filtering" target="_blank">고급 필터</a>를 사용하여 처리하는 데 필요한 이벤트만 라우팅</li>
  </ol>
