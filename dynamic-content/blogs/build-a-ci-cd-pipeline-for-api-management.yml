### YamlMime:Yaml
ms.openlocfilehash: 760eabd3d3b955a56614d069e2bc36c144e7e9ba
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139911997"
Slug: build-a-ci-cd-pipeline-for-api-management
Title: API Management용 CI/CD 파이프라인 빌드
Summary: API는 평범해졌습니다. 앱, 데이터 및 서비스를 연결하기 위한 사실상 표준이 되었습니다. 더 큰 그림에서 API는 조직에서 디지털 변환을 주도하고 있습니다.
Content: >-
  <p>API는 평범해졌습니다. 앱, 데이터 및 서비스를 연결하기 위한 사실상 표준이 되었습니다. 더 큰 그림에서 API는 조직에서 디지털 변환을 주도하고 있습니다.</p>


  <p>API의 전략적 가치를 통해 CI(연속 통합) 및 CD(지속적인 배포) 파이프라인은 API 개발의 중요한 측면이 되었습니다. 이를 통해 조직은 오류가 발생하기 쉬운 수동 단계 없이 API 변경 배포를 자동화하고, 이전에 문제를 검색하고, 궁극적으로 최종 사용자에게 더 빠르게 가치를 제공할 수 있습니다.</p>


  <p>이 블로그에서는 <a href="https://aka.ms/apimdevops" target="_blank">Azure API Management</a>를 사용하여 게시된 API에 변경 내용을 배포하기 위한 CI/CD 파이프라인을 구현하기 위한 개념 프레임워크를 안내합니다.</p>


  <h2>문제</h2>


  <p>현재 조직에는 일반적으로 여러 배포 환경(예: 개발, 테스트, 프로덕션)이 있으며 각 환경에 대해 별도의 API Management 인스턴스를 사용합니다. 이러한 인스턴스 중 일부는 릴리스 주기가 다른 여러 API를 담당하는 여러 개발 팀에서 공유됩니다.</p>


  <p>따라서 고객은 종종 다음과 같은 과제를 하게 됩니다.</p>


  <ul>
   <li>API Management에 API 배포를 자동화하는 방법</li>
   <li>구성을 한 환경에서 다른 환경으로 마이그레이션하는 방법</li>
   <li>동일한 API Management 인스턴스를 공유하는 여러 개발 팀 간의 간섭을 방지하는 방법</li>
  </ul>


  <p>우리는 아래에 설명된 접근 방식이 이러한 모든 과제를 해결할 것이라고 믿습니다.</p>


  <h2>API Management를 사용하는 CI/CD</h2>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3be93f4e-acea-4771-a62a-f452b79a3fa5.png"><img alt="CI-CD with API Management workflow graph" border="0" height="517" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d9647266-7417-4b03-b091-885956757f9e.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="API Management를 사용하는 CI-CD" width="1024"></a></p>


  <p>제안된 접근 방식은 위의 그림에 나와 있습니다. 이 예제에는 개발 및 프로덕션이라는 두 가지 배포 환경이 있습니다. 각 환경에는 자체 API Management 인스턴스가 있습니다. 프로덕션 인스턴스는 API 게시자라는 지정된 팀에서 관리합니다. API 개발자는 개발 인스턴스에만 액세스할 수 있습니다.&nbsp;</p>


  <p>이 제안된 방법의 핵심은 <a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-authoring-templates" target="_blank">Azure Resource Manager 템플릿</a>의 모든 구성을 유지하는 것입니다. 이러한 템플릿은 소스 제어 시스템에 보관해야 합니다. Git을 예로 사용합니다. 그림에 나와 있는 것처럼 템플릿 컬렉션에 프로덕션 API Management 인스턴스의 모든 구성을 포함하는 Publisher 리포지토리가 있습니다.</p>


  <ul>
   <li><strong>서비스 템플릿:</strong> 모든 서비스 수준 구성(예: 가격 책정 계층 및 사용자 지정 도메인)을 포함합니다.</li>
   <li><strong>공유 템플릿:</strong> API Management 인스턴스 전체에서 공유 리소스를 포함합니다(예: 그룹, 제품 및 ID 공급자).</li>
   <li><strong>API 템플릿: </strong> API 및 해당 하위 리소스(예: 작업 및 정책)의 구성을 포함합니다.</li>
   <li><strong>마스터 템플릿:</strong> <a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-linked-templates" target="_blank">모든 템플릿에 연결하여 모든 항목을 연결합니다</a>.</li>
  </ul>


  <p>API 개발자는 Publisher 리포지토리를 포크하고 복제합니다. 대부분의 경우 API에 대한 API 템플릿에 초점을 맞추고 공유 또는 서비스 템플릿을 변경하지 않아야 합니다.</p>


  <p>Resource Manager 템플릿을 사용할 때 API 개발자에게는 다음 두 가지 과제가 있습니다.</p>


  <ul>
   <li>첫째, API 개발자는 종종 Open API 사양을 사용하며 Resource Manager 스키마에 익숙하지 않을 수 있습니다. 템플릿 만들기를 간소화하기 위해 <a href="https://github.com/Azure/azure-api-management-devops-resource-kit/tree/master/src/APIM_ARMTemplate#Creator">Open API 사양에 따라 API 템플릿 만들기를 자동화</a>하는 유틸리티 도구를 만들었습니다.</li>
   <li>둘째, 이미 API Management를 사용 중인 고객의 경우 리소스 관리자 템플릿에 기존 구성을 추출하는 방법이 또 다른 과제입니다. <a href="https://github.com/Azure/azure-api-management-devops-resource-kit/tree/master/src/APIM_ARMTemplate#Extractor">기존 구성을 기반으로 템플릿을 생성하는</a> 다른 도구를 만들었습니다.</li>
  </ul>


  <p>개발자가 API 개발 및 테스트를 완료하고 API 템플릿을 생성하면 Publisher 리포지토리에 끌어오기 요청을 제출합니다. API 게시자는 끌어오기 요청의 유효성을 검사하고 변경 내용이 안전하고 규정을 준수하는지 확인할 수 있습니다. 대부분의 유효성 검사는 CI/CD 파이프라인의 일부로 자동화할 수 있습니다. 변경 내용이 승인되고 성공적으로 병합되면 API 게시자가 프로덕션 인스턴스에 배포합니다. <a href="https://azure.microsoft.com/en-us/services/devops/pipelines/" target="_blank">Azure Pipelines</a> 사용하여 배포를 쉽게 자동화할 수도 있습니다.</p>


  <p>이 방법을 사용하면 API Management 인스턴스에 대한 API 변경 내용의 배포를 자동화할 수 있으며 한 환경에서 다른 환경으로 변경 내용을 쉽게 승격할 수 있습니다. 다른 API 개발 팀이 서로 다른 API 템플릿 집합에서 작업하므로 서로 다른 팀 간의 간섭 가능성도 줄어듭니다.</p>


  <h2>다음 단계</h2>


  <p>이 <a href="https://aka.ms/apimdevops">GitHub 리포지토리</a>에서 지침, 예제 및 도구를 찾을 수 있습니다. 시도해 보고 피드백과 질문을 알려주세요.</p>


  <p>우리는 고객이 광범위한 엔지니어링 문화와 기존 자동화 솔루션을 제공한다는 것을 알고 있습니다. 여기서 제공하는 접근 방식과 도구는 하나의 크기에 맞는 솔루션이 아닙니다. &#39;솔루션을 확장하고 사용자 지정할 수 있도록 GitHub 모든 항목을 게시하고 오픈 소스로 제공하는 이유입니다.</p>
