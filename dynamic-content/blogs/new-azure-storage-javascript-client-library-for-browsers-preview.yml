### YamlMime:Yaml
ms.openlocfilehash: d9a9e0d317722ba3cba580ff1b1bc97b25b8ff15
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902504"
Slug: new-azure-storage-javascript-client-library-for-browsers-preview
Title: 브라우저용 새 Azure Storage JavaScript 클라이언트 라이브러리 - 미리 보기
Summary: JavaScript용 Azure Storage 클라이언트 라이브러리 발표
Content: >-
  <p>오늘 최신 라이브러리인 <strong>JavaScript용 Azure Storage 클라이언트 라이브러리를</strong> 발표합니다. Node.js 대한 Azure Storage 클라이언트 라이브러리에 대한 수요와 <a href="https://feedback.azure.com/forums/217298-storage/suggestions/3088117-make-javascript-library-for-blobs-and-tables">피드백</a>은 브라우저 호환 JavaScript 라이브러리에서 작업하여 Azure Storage 웹 개발 시나리오를 사용하도록 권장했습니다. 이제 <a href="https://github.com/Azure/azure-storage-node#azure-storage-javascript-client-library-for-browsers">브라우저용 Azure Storage JavaScript 클라이언트 라이브러리</a>의 미리 보기를 릴리스합니다.</p>


  <h2>웹 개발 시나리오 사용</h2>


  <p>Azure Storage용 JavaScript 클라이언트 라이브러리를 사용하면 Blob, 테이블, 큐 및 파일과 같은 스토리지 서비스를 사용하여 많은 웹 개발 시나리오를 사용할 수 있으며 최신 브라우저와 호환됩니다. Table service에 상태 정보를 저장하거나, 모바일 앱에서 Blob 계정에 사진을 업로드하거나, Azure Storage 저장된 동적 데이터로 지원되는 전체 웹 사이트를 저장하는 웹 기반 게임 환경이 될 수 있습니다.</p>


  <p>또한 이 릴리스의 일부로 각 서비스 API를 별도의 JavaScript 파일로 패키징하여 공간을 줄여 줍니다. 예를 들어 Blob Storage에 액세스해야 하는 개발자는 다음 스크립트만 있으면 됩니다.</p>


  <pre class="prettyprint">

  &lt;script type=&rdquo;javascript/text&rdquo; src=&rdquo;azure-storage.common.js&rdquo;/&gt;

  &lt;script type=&rdquo;javascript/text&rdquo; src=&rdquo;azure-storage.blob.js&rdquo;/&gt;</pre>


  <h2>전체 서비스 적용 범위</h2>


  <p>브라우저용 Azure Storage 클라이언트 라이브러리를 사용하여 Browserify를 사용하여 빌드되었기 때문에 브라우저용 새 JavaScript 클라이언트 라이브러리는 최신 REST API 버전 2016-05-31에서 사용할 수 있는 모든 스토리지 기능을 Node.js 지원합니다. Node.js 라이브러리에서 찾을 수 있는 모든 서비스 기능이 지원됩니다. 기존 API 화면 및 <a href="https://azure.github.io/azure-storage-node/">Node.js 참조 API 문서를</a> 사용하여 앱을 빌드할 수도 있습니다.</p>


  <h2>Browserify를 사용하여 빌드</h2>


  <p>오늘날 브라우저는 모든 Node.js 애플리케이션에서 필수적인 <em>require </em>메서드를 지원하지 않습니다&rsquo;. 따라서 Node.js 위해 작성된 JavaScript를 포함하여 브라우저에서 작동하지 않습니다&rsquo;. 이 문제에 대한 인기 있는 해결 방법 중 하나는 Browserify입니다. Browserify 도구는 웹 애플리케이션에서 사용할 수 있도록 필요한 종속성을 단일 JS 파일에 번들로 묶습니다. Browserify를 설치하고 browserify를 실행하는 것만큼 간단하며 <em>node.js -o browser.js</em> 설정됩니다. 그러나, 우리는 이미 당신을 위해이 작업을 수행했습니다. <a href="https://aka.ms/downloadazurestoragejs">JavaScript 클라이언트 라이브러리를 다운로드하기만 하면됩니다</a>.</p>


  <h2>권장 개발 사례</h2>


  <p>JavaScript 클라이언트 라이브러리가 브라우저에서 사용자에게 인증 토큰을 노출하기 때문에 <a href="https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1">SAS 토큰</a>을 사용하여 Azure Storage 인증하는 것이 좋습니다. 범위 및 시간이 제한된 SAS 토큰을 사용하는 것이 좋습니다. 이상적인 웹 애플리케이션에서는 백 엔드 애플리케이션이 로그온할 때 사용자를 인증한 다음 Storage 계정에 대한 액세스 권한을 부여하기 위해 클라이언트에 SAS 토큰을 제공할 것으로 예상됩니다. 이렇게 하면 계정 키를 사용하여 인증할 필요가 없습니다. HTTP POST 요청 시 SAS 토큰을 생성하는 Github 리포지토리의 <a href="https://github.com/Azure-Samples/functions-node-sas-token">Azure Function 샘플을</a> 확인합니다.</p>


  <p>사용자가 로컬 파일 시스템에 액세스하지 못하도록 차단하는 브라우저 샌드박스로 인해 스트림 API를 사용하는 것이 좋습니다. 이렇게 하면 <em>getBlobToLocalFile</em>, <em>createBlockBlobFromLocalFile과 같은 스트림 API를</em> 브라우저에서 사용할 수 없게 됩니다. 대신 <em>createBlockBlobFromStream</em> API를 사용하는 아래 링크의 샘플을 참조하세요.</p>


  <h2>샘플 사용</h2>


  <p>제한된 범위의 SAS 토큰을 생성할 수 있는 웹앱이 있으면 나머지는 쉽습니다. <a href="https://github.com/Azure/azure-storage-node/#azure-storage-javascript-client-library-for-browsers">Github</a>의 리포지토리에서 JavaScript 파일을 다운로드하고 코드에 포함합니다.</p>


  <p>다음은 지정된 텍스트에서 Blob을 업로드할 수 있는 간단한 샘플입니다.</p>


  <p><br>

  1. HTML 코드에 다음 스크립트 태그를 삽입합니다. JavaScript 파일이 동일한 폴더에 있는지 확인합니다.</p>


  <pre class="prettyprint">

  &lt;script src=&quot;azure-storage.common.js&quot;&gt;&lt;/script/&gt;

  &lt;script src=&quot;azure-storage.blob.js&quot;&gt;&lt;/script/&gt;

  </pre>


  <p>2.&rsquo;이제 페이지에 몇 개의 항목을 추가하여 전송을 시작합니다. BODY 태그 내에 다음 태그를 추가합니다. 클릭하면 단추가 uploadBlobFromText 메서드를 호출합니다. 다음 단계에서 이 메서드를 정의합니다.</p>


  <pre class="prettyprint">

  &lt;input type=&quot;text&quot; id=&quot;text&quot; name=&quot;text&quot; value=&quot;Hello World!&quot; /&gt;

  &lt;button id=&quot;upload-button&quot; onclick=&quot;uploadBlobFromText()&quot;&gt;Upload&lt;/button&gt;

  </pre>


  <p>3. 지금까지 클라이언트 라이브러리를 포함하고 사용자에게 텍스트 입력 및 전송을 시작하는 단추를 표시하는 HTML 코드를 추가했습니다. 사용자가 업로드 단추를 클릭하면 uploadBlobFromText가 호출됩니다. 이제 정의할 수&rsquo; 있습니다.</p>


  <pre class="prettyprint">

  &lt;script&gt;

  function uploadBlobFromText() {

  &nbsp;&nbsp;&nbsp;&nbsp; // your account and SAS information

  &nbsp;&nbsp;&nbsp;&nbsp; var sasKey =&quot;....&quot;;

  &nbsp;&nbsp;&nbsp;&nbsp; var blobUri = &quot;https://&lt;accountname&gt;.blob.core.windows.net&quot;;

  &nbsp;&nbsp;&nbsp;&nbsp; var blobService = AzureStorage.createBlobServiceWithSas(blobUri, sasKey).withFilter(new AzureStorage.ExponentialRetryPolicyFilter());

  &nbsp;&nbsp;&nbsp;&nbsp; var text = document.getElementById(&#39;text&#39;);

  &nbsp;&nbsp;&nbsp;&nbsp; var btn = document.getElementById(&quot;upload-button&quot;);

  &nbsp;&nbsp;&nbsp;&nbsp; blobService.createBlockBlobFromText(&#39;mycontainer&#39;, &#39;myblob&#39;, text.value,&nbsp; function(error, result, response){

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (error) {

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert(&#39;Upload filed, open browser console for more detailed info.&#39;);

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; console.log(error);

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert(&#39;Upload successfully!&#39;);

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }

  &nbsp;&nbsp;&nbsp;&nbsp; });

  }

  &lt;/script&gt;

  </pre>


  <p>물론 텍스트에서 Blob을 업로드하는 것은 일반적이지 않습니다. 진행률 추적에 대한 샘플뿐만 아니라 스트림에서 업로드하려면 다음 샘플을 참조하세요.</p>


  <p><br>

  &bull;&nbsp;&nbsp;&nbsp;<a href="https://dmrelease.blob.core.windows.net/azurestoragejssample/samples/sample-blob.html">Blob용 JavaScript 샘플</a><br>

  &bull;&nbsp;&nbsp;&nbsp;<a href="https://dmrelease.blob.core.windows.net/azurestoragejssample/samples/sample-queue.html">큐용 JavaScript 샘플</a><br>

  &bull;&nbsp;&nbsp;&nbsp;<a href="https://dmrelease.blob.core.windows.net/azurestoragejssample/samples/sample-table.html">테이블에 대한 JavaScript 샘플</a><br>

  &bull;&nbsp;&nbsp;&nbsp;<a href="https://dmrelease.blob.core.windows.net/azurestoragejssample/samples/sample-file.html">JavaScript 샘플 for File</a>&nbsp;</p>


  <h2>공유</h2>


  <p>마지막으로 <a href="https://azurestorageslack.azurewebsites.net/">, Slack 채널</a> 에 참여하여 시나리오, 문제 또는 모든 것을 공유하세요. Well&rsquo; be there to help!</p>
