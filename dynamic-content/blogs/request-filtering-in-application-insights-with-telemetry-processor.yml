### YamlMime:Yaml
ms.openlocfilehash: c230d58d32fc1edf7398989b389e78055ce1a2af
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908022"
Slug: request-filtering-in-application-insights-with-telemetry-processor
Title: 원격 분석 프로세서를 사용하여 애플리케이션 Insights 필터링 요청
Summary: 커뮤니티에서 좋은 피드백을 받은 후 새로운 기능인 원격 분석 프로세서에 투자했습니다. 이제 백 엔드 서비스로 전송되기 전에 Application Insights SDK에서 생성된 원격 분석을 검사, 필터링 및 수정할 수 있습니다. 원격 분석 프로세서는 새 버전의 SDK에 포함되어 있습니다.
Content: "<p>커뮤니티에서 <a href=\"https://aka.ms/aiuservoice\">좋은 피드백을</a> 받은 후 새로운 기능인 원격 분석 프로세서에 투자했습니다. 이제&nbsp; 백 엔드 서비스로 전송되기 전에 <a href=\"https://azure.microsoft.com/documentation/articles/app-insights-api-custom-events-metrics/\"><u><font color=\"#0066cc\">애플리케이션 Insights SDK</font></u></a>에서 생성된 원격 분석을 검색, 필터링 및 수정할 수 있습니다. 원격 분석 프로세서는 <a href=\"https://azure.microsoft.com/documentation/articles/app-insights-release-notes-dotnet/\">새 버전의 SDK에</a> 포함되어 있습니다.</p>\n\n<p>데이터를 백 엔드로 보내기 전에 초기화, 필터링 및 샘플링할 수 있으므로 로봇&nbsp;의 요청에 대한 원격 분석 또는 성공적인 종속성 호출을 필터링할 수 있습니다. 즉, 수집된 데이터의 양을 줄일 수 있으므로 관심 있는 원격 분석에 더 집중할 수 있습니다.</p>\n\n<p>필터를 만들려면 ITelemetryProcessor를 구현합니다. 원격 분석 모듈, 원격 <a href=\"https://azure.microsoft.com/documentation/articles/app-insights-api-custom-events-metrics/#telemetry-initializers\">분석 이니셜라이저</a>&nbsp; 및 <a href=\"https://apmtips.com/blog/2015/05/06/diy-data-sampling/\">원격 분석 채널</a>과 같은 또 다른 <a href=\"https://azure.microsoft.com/documentation/articles/app-insights-api-custom-events-metrics/\">확장성 지점</a>입니다.&nbsp;</p>\n\n<h1>원격 분석 프로세서 만들기</h1>\n\n<ol>\n <li><a href=\"https://azure.microsoft.com/documentation/articles/app-insights-release-notes-dotnet/\">SDK를 최신 버전으로 업데이트합니다</a>. 참고: 이 버전은 시험판에 있으며, 실제 API는 나중에 변경될 수 있습니다.</li>\n <li>ITelemetryProcessor를 추가하여 필터&nbsp;를 만듭니다. 원격 분석 모듈, 원격 분석 이니셜라이저 및 원격 분석 채널과 같은 또 다른 확장성 지점입니다.<br />\n원격 분석 프로세서는 일련의 프로세싱을 생성합니다. 원격 분석 프로세서를 인스턴스화할 때 과정에서 다음 프로세서에 대한 링크를 전달합니다. 원격 분석 데이터 요소가 프로세스 메서드에 전달되는 경우 해당 작업을 수행하고 과정에서 다음 원격 분석 프로세서를 호출합니다.</li>\n <li>주 원본 파일(일반적으로 Global.asax.cs)에 새 TelemetryConfiguration을 만듭니다.</li>\n</ol>\n\n<p>구현에 대한 자세한 내용은 <a href=\"https://azure.microsoft.com/documentation/articles/app-insights-api-filtering-sampling/#filtering\">설명서 페이지를</a> 참조하세요.</p>\n\n<h1><font face=\"Calibri\">필터링</font></h1>\n\n<p>많은 고객이 <a href=\"https://azure.microsoft.com/documentation/articles/app-insights-get-started/#comment-2309233065\">중요한 정보의</a> 필터링과 같은 필터링 기능을 요청했습니다. 애플리케이션 Insights 이제 이 기능을 제공합니다. 다음은 유용한 필터의 몇 가지 예입니다.</p>\n\n<h3>가상 요청 필터링</h3>\n\n<p>메트릭 탐색기는 검색 엔진 및 웹 테스트의 요청을 필터링하는 옵션을 제공합니다. SDK에서 전송하지 않음으로써 트래픽을 줄이고 데이터 요소 할당량을 개선할 수 있습니다.</p>\n\n<pre class=\"prettyprint\">\npublic void Process(ITelemetry item)\n{\n    if (!string.IsNullOrEmpty(item.Context.Operation.SyntheticSource))\n    { return; }\n\n    this.Next.Process(item);\n}</pre>\n\n<p><strong>참고:</strong>&nbsp; VirtualSource는 <a href=\"https://azure.microsoft.com/documentation/articles/app-insights-configuration-with-applicationinsights-config/#nuget-package-2\">TelemetryInitialzier</a>에 의해 설정됩니다.</p>\n\n<h3>인증에 실패한 요청 필터링</h3>\n\n<p>이렇게 하면 401&rdquo; 응답으로 &ldquo;요청을 필터링합니다. 401 응답: 인증 실패 - 대부분의 경우 잘못된 이름은 협상&quot; 응답을 의미&quot;하며 별도의 요청 항목으로 추적하지 않으려는&rsquo; 경우입니다. 협상 응답과 실제 실패를 구분하는 더 복잡한 논리가 있을 수 있습니다.&nbsp;</p>\n\n<pre class=\"prettyprint\">\npublic void Process(ITelemetry item)\n{\n    var request = item as RequestTelemetry;\n\n    if (request != null &amp;&amp;\n    request.ResponseCode.Equals(&quot;401&quot;, StringComparison.OrdinalIgnoreCase))\n    {\n        // To filter out an item, just terminate the chain: \n        return;\n    }\n    // Send everything else: \n    this.Next.Process(item);\n}</pre>\n\n<h3>&ldquo;빠른&rdquo; 원격 종속성 호출 필터링</h3>\n\n<p>이렇게 하면 100밀리초 미만의 종속성 호출이 필터링됩니다. 대부분의 경우 빠른 쿼리는 진단에 흥미롭지 않습니다.</p>\n\n<pre class=\"prettyprint\">\npublic void Process(ITelemetry item)\n{\n    var request = item as DependencyTelemetry;\n            \n    if (request != null &amp;&amp; request.Duration.Milliseconds &lt; 100)\n    {\n        return;\n    }\n    this.Next.Process(item);\n}</pre>\n\n<p>이제 원하는 원격 분석을 필터링할 수 있습니다. 원격 분석 프로세서를 사용하면&nbsp; 수집되는 데이터에 대해 더 많은 제어를 할 수 있습니다.</p>\n\n<h1>향후 계획</h1>\n\n<p>애플리케이션 Insights 팀은 개발자에게 양질의 도구를 제공하기 위해 최선을 다하고 있습니다. API는 새로운 기능을 개발함에 따라 변경될 가능성이 높으며, 따라서 새 기능에 대한 피드백이나 권장 사항에 크게 감사드립니다.</p>"
