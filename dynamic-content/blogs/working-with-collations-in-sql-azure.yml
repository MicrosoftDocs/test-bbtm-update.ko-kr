### YamlMime:Yaml
ms.openlocfilehash: 3b2f72765bde0cc1f512518e72997a1cf3740a7e
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900079"
Slug: working-with-collations-in-sql-azure
Title: SQL Azure 데이터 정렬 작업
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] 데이터 정렬은 그리스어 또는 폴란드어와 같은 언어 또는 Latin1과 같은 알파벳에 대한 문자의 적절한 사용을 제어하는 규칙을 인코딩합니다.'
Content: "<p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>데이터 정렬은 그리스어 또는 폴란드어와 같은 언어 또는 Latin1_General(서유럽 언어에서 사용하는 라틴어 알파벳)와 같은 알파벳에 대한 문자의 적절한 사용을 제어하는 규칙을 인코딩합니다. SQL Azure 데이터베이스의 문자 데이터에 대한 기본 데이터 정렬은 <b>SQL_Latin1_General_CP1_CI_AS</b>. 이 데이터 정렬은 SQL Azure 인프라에서 데이터베이스 개체를 정의하는 메타데이터를 정렬하고 비교하는 데도 사용됩니다. 서버 및 데이터베이스 수준 데이터 정렬은 SQL Azure 구성할 수 없습니다. 그러나 열 및 식 수준에서 선택한 데이터 정렬을 사용할 수 있습니다. 이 문서에서는 방법을 보여줍니다.</p>  <p>SQL Azure 서버 및 데이터베이스 데이터 정렬을 구성할 수는 없지만 다음 두 속성을 모두 쿼리할 수 있습니다. </p>  <pre class=\"csharpcode\"><span class=\"kwrd\">SELECT</span> SERVERPROPERTY(<span class=\"str\">'Collation'</span>)  <span class=\"kwrd\">SELECT</span> DATABASEPROPERTYEX(<span class=\"str\">'TestDB'</span>, <span class=\"str\">'Collation'</span>)</pre>      <p>현재 두 쿼리 모두 기본 데이터 정렬인 <b>SQL_Latin1_General_CP1_CI_AS</b> 반환합니다.</p>    <p>SQL Azure 빌드하는 솔루션에 문자 데이터에 대해 다른 데이터 정렬이 필요한 경우 열 수준에서 데이터 정렬을 설정하거나 식 수준 데이터 정렬을 사용하여 명시적으로 특정 데이터 정렬로 캐스팅해야 합니다. 방법을 알아보려면 계속 읽어보세요.</p>    <h2>열 데이터 정렬</h2>    <p>SQL Server Management Studio 스크립트 생성 마법사(이 블로그 게시물에서 스크립트 생성 마법사 사용에 대한 자세한 정보)를 사용하는 경우 기본적으로 열 데이터 정렬이 포함됩니다. \"<a href=\"https://msdn.microsoft.com/en-us/library/bb326600.aspx\">데이터 정렬 포함</a>\" 옵션이 \"True\"(기본값)로 설정되어 있는지 확인하여 이를 확인할 수 있습니다.</p>    <p>이 샘플에서는 특정 데이터 정렬을 사용하여 열을 만드는 방법을 보여 줍니다.</p>    <pre class=\"csharpcode\"><span class=\"kwrd\">CREATE</span> <span class=\"kwrd\">TABLE</span> t  (      id    <span class=\"kwrd\">int</span> <span class=\"kwrd\">IDENTITY</span>(1,1) <span class=\"kwrd\">NOT</span> <span class=\"kwrd\">NULL</span> <span class=\"kwrd\">PRIMARY</span> <span class=\"kwrd\">KEY</span> <span class=\"kwrd\">CLUSTERED</span>,      c1    nvarchar(20) <span class=\"kwrd\">COLLATE</span> SQL_Latin1_General_CP1_CI_AS,  c2    nvarchar(20) <span class=\"kwrd\">COLLATE</span> Japanese_CI_AS  ) </pre>      <p>위의 예제에 대한 열 데이터 정렬 속성을 검색하려면 다음을 수행합니다. </p>    <pre class=\"csharpcode\"><span class=\"kwrd\">SELECT</span> name, collation_name <span class=\"kwrd\">FROM</span> sys.columns      <span class=\"kwrd\">WHERE</span>    object_id = OBJECT_ID(<span class=\"str\">'t'</span>, <span class=\"str\">'U'</span>)          <span class=\"kwrd\">AND</span> name &lt;&gt; <span class=\"str\">'id'</span></pre>      <p>열 또는 식 수준 데이터 정렬을 사용하는 방법에 대한 자세한 내용은 SQL Server 온라인 설명서의 <a href=\"https://msdn.microsoft.com/en-us/library/ms184391.aspx\">COLLATE</a> <a href=\"https://msdn.microsoft.com/en-us/library/ms177439.aspx\">및 설정 및 변경 데이터 정렬</a>을 참조하세요.</p>    <h2>임시 테이블</h2>    <p>메타데이터 개체(예: 로그인, 데이터베이스, 테이블, 뷰 및 열 이름 등)와 함께 기본 데이터 정렬은 변수, GOTO 레이블 및 임시 테이블의 식별자에도 적용됩니다. 임시 테이블 및 테이블 반환 매개 변수(및 연결된 사용자 정의 테이블 형식)는 유의해야 할 흥미로운 사례를 나타냅니다. SQL Azure 데이터베이스의 기본 데이터 정렬은 임시 테이블 또는 사용자 정의 테이블 형식의 문자 데이터 열에 사용되는 데이터 정렬과 동일하지만 데이터베이스에서 열 수준 데이터 정렬을 사용할 때 데이터 정렬 및 데이터 정렬 충돌의 불일치를 가져올 수 있습니다. 또한 열 수준 데이터 정렬을 설정하는 database_default 옵션은 항상 <b>SQL_Latin1_General_CP1_CI_AS</b> 매핑됩니다.</p>    <p>기본이 아닌 데이터 정렬을 사용하는 열이 있는 테이블과 함께 사용할 임시 테이블(또는 테이블 형식)을 만들어야 하는 경우 데이터 정렬이 일치하는 임시 테이블에 열을 만들어야 합니다. 예를 들면 다음과 같습니다.</p>    <pre class=\"csharpcode\"><span class=\"kwrd\">CREATE</span> <span class=\"kwrd\">TABLE</span> #TestTempTable  (      id <span class=\"kwrd\">int</span> <span class=\"kwrd\">IDENTITY</span>(1,1) <span class=\"kwrd\">PRIMARY</span> <span class=\"kwrd\">KEY</span>,       c1 nvarchar(20),      c2 nvarchar(20) <span class=\"kwrd\">COLLATE</span> database_default,      c3 nvarchar(20) <span class=\"kwrd\">COLLATE</span> Japanese_CI_AS,  )</pre>      <p>c1 및 c2 열은 위의 예제에서 동일한 데이터 정렬을 갖습니다.</p>    <p>다음 쿼리는 데이터 정렬 충돌 오류를 반환합니다.</p>    <pre class=\"csharpcode\"><span class=\"kwrd\">SELECT</span> * <span class=\"kwrd\">FROM</span> t <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> #TestTempTable <span class=\"kwrd\">on</span> t.c2 = #TestTempTable.c1  <span class=\"kwrd\">SELECT</span> * <span class=\"kwrd\">FROM</span> t <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> #TestTempTable <span class=\"kwrd\">on</span> t.c2 = #TestTempTable.c2</pre>      <p>이 두 가지는 작동하지만 다음을 수행합니다.</p>    <pre class=\"csharpcode\"><span class=\"kwrd\">SELECT</span> * <span class=\"kwrd\">FROM</span> t <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> #TestTempTable <span class=\"kwrd\">on</span> t.c2 = #TestTempTable.c3  <span class=\"kwrd\">SELECT</span> * <span class=\"kwrd\">FROM</span> t <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> #TestTempTable <span class=\"kwrd\">on</span> t.c2 = #TestTempTable.c2 <span class=\"kwrd\">COLLATE</span> Japanese_CI_AS</pre>      <p>Transact-SQL 위의 수정 사항은 식에서 선언적 데이터 정렬의 예이며, 문이 실행될 때 실행되며 테이블에 저장된 데이터에 영향을 주지 않습니다.</p>    <h2>정적 문자열</h2>    <p>또한 유니코드 문자열 앞에 SQL-92 표준의 국가 언어를 의미하고 대문자여야 하는 대문자 N이 선행되도록 하는 것이 좋습니다. 유니코드 문자열 앞에 N 접두사가 없으면 현재 데이터베이스 데이터 정렬에 해당하는 코드 페이지가 N 접두사로 인해 데이터가 손상될 수 있는 경우 문자를 변환하는 데 사용됩니다.</p>    <p>아래 예제에서 히라가나 문자 E의 첫 번째 항목은 올바르게 변환되는 반면 두 번째 항목은 데이터 손상을 유발합니다. 또한 이 예제에서는 열 데이터 정렬이 변환에 사용되지 않는 것을 보여 줍니다.</p>    <pre class=\"csharpcode\">INSERT <span class=\"kwrd\">INTO</span> t      <span class=\"kwrd\">VALUES</span>(N<span class=\"str\">'え'</span>, N<span class=\"str\">'え'</span>), (<span class=\"str\">'え'</span>, <span class=\"str\">'え'</span>)  <span class=\"kwrd\">SELECT</span> * <span class=\"kwrd\">FROM</span> t</pre>      <p>    <h2>요약</h2>    <p>질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>"
