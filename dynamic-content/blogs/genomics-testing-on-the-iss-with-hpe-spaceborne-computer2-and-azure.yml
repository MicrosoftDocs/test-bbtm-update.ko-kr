### YamlMime:Yaml
ms.openlocfilehash: 427aedb91770b66e4b4e800d4f2c25c95acab4f0
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139901225"
Slug: genomics-testing-on-the-iss-with-hpe-spaceborne-computer2-and-azure
Title: HPE 스페이스본 컴퓨터-2 및 Azure를 사용하여 ISS에서 Genomics 테스트
Summary: Microsoft 뉴스 국제 우주 정거장 (ISS)에 휴렛 팩커드 Enterprise (HPE) 스페이스 본 컴퓨터-2를 칭찬하기 위해 Azure의 사용에 대한 이야기를 발표했다. 이 프로젝트는 에지와 클라우드에 걸쳐 있는 계산 워크플로의 이점을 검증하여 ISS와 지구 간의 제한된 대역폭을 극복하도록 설계되었습니다. Azure Space 팀은 단 3일 만에 전체 실험을 제공했습니다.
Content: >-
  <p><em>&ldquo;오픈 소스의 기능, HPE Spaceborne Computer-2에서 제공하는 컴퓨팅 기능 및 Azure의 확장성 덕분에 개발자는 이 세상에서 벗어난 속도로&rsquo; 공간을 빌드할 수 있습니다.&rdquo;&mdash;</em> Kevin Mack, 수석 소프트웨어 엔지니어, Microsoft</p>


  <p>오늘 아침 Microsoft 뉴스 국제 우주 정거장 (ISS)에 <a href="https://hpe.com/info/spaceborne" target="_blank">HPEs&rsquo; 스페이스 본 컴퓨터-2</a>에 의해 활성화 Azure의 사용에 대한 <a href="https://news.microsoft.com/?post_type=features&amp;p=443506" target="_blank">이야기를 발표했다</a>. 이 프로젝트는 에지와 클라우드에 걸쳐 있는 계산 워크플로의 이점을 검증하여 ISS와 지구 간의 제한된 대역폭을 극복하도록 설계되었습니다. 이 워크플로에서는 HPE Spaceborne Computer-2s&rsquo; 에지 컴퓨팅 플랫폼을 사용하여 ISS에서 대용량 원시 데이터 검사를 처리하고 수행하며, 흥미로운 비트&rdquo;만 &ldquo;포함하는 훨씬 작은 데이터 집합이 지구로 전송됩니다. 여기서 클라우드 리소스는 컴퓨팅 집약적 분석을 수행하여 흥미로운 비트가 실제로 무엇을 의미하는지 확인하는 데 사용됩니다.</p>


  <p>Azure Space 팀은 3일 만에 전체 실험에 필요한 소프트웨어 개발을 수행했습니다.</p>


  <h2>간단한 배경</h2>


  <p>미세 중력 및 우주 환경 연구 실험실인 국제 우주 정거장(ISS)은 20년 동안 인간의 지속적인 존재를 관찰했습니다. 새로운 기술은 정기적으로 전달됩니다, 수행되는 연구를 따라 잡기 위해 필요에 따라. ISS에서 사용되는 컴퓨터는 일반적으로 공간에 필요한 안정성을 제공하는 데 필요한 특수 하드웨어 및 프로그래밍 모델로 사용자 지정 빌드되었습니다. 아쉽게도 이러한 사용자 지정 우주선 시스템을 대상으로 하는 개발자 환경은 복잡하므로 오늘날 대부분의 개발자가 사용하는 상용 시스템에 비해 프로그래밍이 느리고 어렵습니다.</p>


  <p>2017년에 설치된 스페이스본 컴퓨터-1은 HPE가 설계했으며, 최신 상업용 기성 컴퓨터가 우주 발사에서 살아남을 수 있고, 우주 비행사에 의해 설치되고, 우주에서의 방사선 증가로 인해 ISSwithout&mdash;&ldquo; 대칭 이동 비트&rdquo;에서 올바르게 작동할 수 있는지 확인했습니다. 기본적으로 지구상에서 사용되는 컴퓨터 하드웨어가 우주에서 정상적으로 작동하는지 확인하는 것은 1년 간의 테스트였습니다. 이러한 성공을 바탕으로 가혹한 환경을 위해 의도적으로 설계된 기능을 갖춘 에지 컴퓨팅 플랫폼인 HPEs&rsquo; Spaceborne Computer-2는 2021년 4월에 설치되어 컴퓨팅 성능의 두 배에 달하며, 처음으로 인공 지능(AI) 기능을 설치하여 지구에서 사용되는 동일한 프로그래밍 모델과 개발자 환경을 사용하도록 설정하여 우주 탐사 및 연구를 발전시켰습니다.</p>


  <p>여러 가지 면에서 HPE Edgeline EL4000 수렴형 에지 시스템과 HPE ProLiant DL360 Gen10 서버로 구성된 스페이스본 컴퓨터-2는 궁극의 에지 컴퓨팅 디바이스 플랫폼으로, 판도를 바꾸는 컴퓨팅 양을 공간의 가장자리에 배치합니다. 그러나 실제 제한 요소는 ISS와 지구 사이의 대역폭입니다. Spaceborne Computer-2는 사용 가능한 최대 네트워크 속도를 지원하지만, 초당 최대 다운로드 속도 250킬로바이트로 데이터를 지구로 전송하기 위해 NASA로부터 일주일에 2시간의 통신 대역폭 할당만 받습니다.</p>


  <p>경우에 따라 HPE를 통해 제한된 대역폭을 해결할 수 있으므로 연구원들이 스페이스본 컴퓨터-2에서 데이터를 압축한 후 지구로 보낼 수 있습니다. 다른 경우에는 느린 다운링크를 전혀 사용하지 않고도 공간에서 데이터를 완전히 분석할 수 있습니다. 그러나 Spaceborne Computer-2가 제공할 수 있는 것보다 더 많은 컴퓨팅 또는 대역폭이 필요하거나 많은 실험 중 하나의 실험에 할당될 수 있는 연구는 어떨까요? 이러한 시나리오를 해결하기 위해 HPE는 Spaceborne Computer-2를 사용하여 대규모 데이터 집합에 대한 &ldquo;예비 분석 또는 필터링을 수행하고, 흥미롭거나 예상치 못한 것을&rsquo; 추출한 다음, 전체 분석을 위해 지구와 퍼블릭 클라우드로 결과를 버스트하는 데 사용되는 에지&rdquo;-클라우드 환경에 대한 비전을 적용했습니다.</p>


  <h2>Azure Space 실험</h2>


  <p>Microsoft의 Azure Space 팀은 보호 대기권 외부에 있는 것처럼 NASA가 방사선 노출이 증가하는 상태에서 우주 비행사 상태를 모니터링하는 방법을 시뮬레이션하는 실험을 제안했습니다. 이러한 노출은 우주 비행사들이 ISSS&rsquo; 저지구 궤도를 넘어 반 알렌 벨트를 오가면서 증가할 것입니다.</p>


  <p>이 실험은 우주 비행사의 혈액 샘플을 정기적으로 모니터링하는 데 사용되는 ISS 온보딩 유전자 시퀀서에 대한 액세스를 가정합니다. 그러나 유전자 시퀀싱은 2Mbps/초 다운링크&mdash;에 대해 너무 많은 양의 데이터&mdash;량을 생성할 수 있으며 출력은 지속적으로 업데이트되는 대규모 임상 데이터베이스&rsquo;와 비교되어야 합니다.</p>


  <p>이러한 제한을 극복하기 위해 실험에서는 HPE Spaceborne Computer-2를 사용하여 추출된 유전자 서열을 참조 DNA 세그먼트와 비교하는 초기 프로세스를 수행하고 차이점 또는 돌연변이만 캡처한 다음 HPE 지상국에 다운로드합니다.</p>


  <p>지구상에서 데이터는 Azure에 업로드됩니다. 여기서 Microsoft Genomics 서비스는 인간 게놈에서 각 돌연변이가 있는 위치와 변경 유형(삭제)을 결정하는 데 필요한 대로 전체 3기가베이스 쌍 인간 게놈에 대해 다운로드된 데이터(약 70개의 기본 쌍)에서 읽는 짧은 밑 쌍 유전자 서열을 일치시키는 프로세스와 계산 &ldquo;맞춤&rdquo; 작업을&mdash; 수행합니다.  더하기, 복제 또는 교환). 그런 다음 정렬된 읽기는 국립 보건&rsquo;원 dbSNP 데이터베이스에 대해 검사되어 지정된 돌연변이의 건강 영향이 무엇을 의미할지 확인합니다. Azure의 작동을 확인하려면 아래 비디오를 시청하세요.</p>


  <p><a href="https://www.youtube.com/watch?v=wZfIUkcgVxI" target="_blank"><img alt="Genomics testing on the ISS with HPE Spaceborne Computer-2 and Azure " border="0" height="683" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/56f1fcdf-ca48-4a8f-85ce-71ab41624db7.jpg" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="ISS 이미지" width="1024"></a></p>


  <h2>개발 프로세스 및 계산 워크플로</h2>


  <p>전체 실험은 Azure Space 팀과 상위 조직인 Azure 특수 기능, 인프라 및 혁신 팀의 10명의 자원봉사자에 의해 코딩되었습니다. 모든 주요 소프트웨어 구성 요소(ISS 기반 및 Azure 기반)는 Azure Functions 및 Azure Blob Storage 대한 Visual Studio Code, GitHub 및 Python 라이브러리를 사용하여 Python 및 bash로 작성되었습니다. Azure Space의 수석 소프트웨어 엔지니어링 매니저인 David Weinstein은 1일 해커톤과 2일간의 정리 작업을 3일간 진행&mdash;했습니다.</p>


  <p>다음 그래픽은 계산 워크플로를 보여줍니다. Red Hat Linux 7.4를 실행하는 스페이스본 컴퓨터-2의 ISS에서 시작됩니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e01b8826-ca21-4b0b-ab72-97dc99ff6cb1.png"><img alt="Architecture diagram shows how the International Space Station connects to Azure" border="0" height="350" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/296d0349-c76a-466b-8a84-9c2399db08e5.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="Azure 및 국제 우주 정거장" width="624"></a></p>


  <h3>공간 내</h3>


  <ul>
      <li>Linux 컨테이너는 변이된 DNA 조각과 야생 형식(정상 또는 변이되지 않은) 인간 DNA 세그먼트를 나타내는 데이터로 패키지된 Python 워크로드를 호스팅합니다. 80줄의 Python 코드가 있으며 실험을 실행하는 30줄 bash 스크립트가 있습니다.</li>
      <li>Python 워크로드는 돌연변이된 DNA 단편에서 구성 가능한 양의 DNA 서열(유전자 시퀀서 읽기를 모방하고 약 70개의 뉴클레오티드 길이)을 생성합니다.</li>
      <li>Python 워크로드는 awk 및 grep를 사용하여 생성된 읽기를 야생 유형의 인간 게놈 세그먼트와 비교합니다.</li>
      <li>읽기&rsquo;에 대한 완벽한 일치 항목을 찾을 수 없는 경우 잠재적인 변형으로 간주되어 Spaceborne Computer-2 네트워크 연결 스토리지 디바이스의 출력 폴더로 압축됩니다.</li>
      <li>Python 워크로드가 완료되면 압축된 출력 폴더가 rsync를 통해 지구의 HPE 지상국으로 전송됩니다.</li>
  </ul>


  <h3>지구상에서</h3>


  <ul>
      <li>HPE 지상 스테이션은 수신한 데이터를 Azure에 업로드하여 azcopy를 통해 Azure Blob Storage 기록합니다.</li>
      <li>Python으로 작성되고 Azure Functions에서 호스트되는 이벤트 기반 서버리스 함수는 Blob Storage 모니터링하여 새로 받은 데이터를 검색하고 REST API를 통해 Microsoft Genomics 서비스로 보냅니다.</li>
      <li>Azure에서 호스트되는 Microsoft Genomics 서비스는 유전자 시퀀싱 파이프라인을 호출하여 각 읽기를 &ldquo;정렬&rdquo; 하고 전체 참조 인간 게놈과 일치하는 위치, 얼마나 잘 그리고 얼마나 명확하게 일치하는지 결정합니다. (Microsoft Genomics 서비스는 Microsoft가 클라우드용으로 조정한 오픈 소스 Burroughs-Wheeler Aligner 및 Genome Analysis Toolkit 클라우드 구현입니다.)</li>
      <li>정렬된 읽기는 참조 게놈의 변형을 설명하는 표준인 VCF(Variant Call Format)의 Blob Storage 다시 작성됩니다.</li>
      <li>Azure Functions에서 호스트되는 두 번째 서버리스 함수는 각 돌연변이의 결정된 위치를 사용하여 각 돌연변이의 결정된 위치를 사용하여 변형의 임상적 중요성을&mdash; 확인하는 데 필요한 국립 보건&mdash;원에서 호스팅하는 dbSNP 데이터베이스를 쿼리하고 Blob Storage JSON 파일에 해당 정보를 기록합니다.</li>
      <li>Power BI Blob Storage 돌연변이된 유전자의 임상적 중요성을 포함하는 데이터를 검색하고 쉽게 탐색 가능한 형식으로 표시합니다.</li>
  </ul>


  <p>Aligner 및 Analyzer 함수는 총 약 220줄의 코드로, Azure 서비스 및 SDK는 실험에 대한 모든 하위 수준 &ldquo;배관을&rdquo; 처리합니다. 함수는 Blob Storage 업로드에 의해 자동으로 트리거되며, 런타임에 원시 데이터를 구문 분석하고 Microsoft Genomics 및 dbSNP 데이터베이스를 쿼리하는 소량의 코드만 가져오는 올바른 스토리지 계정을&mdash; 가리키도록 구성됩니다.</p>


  <h3>개발 및 테스트</h3>


  <p>개발 및 테스트 중에 개발자는&rsquo; HPE Spaceborne Computer-2 또는 HPE 지상국에 액세스할 수 없었기 때문에 Azure에서 이러한 환경을 다시 만들었으며, <a href="https://github.com/features/codespaces" target="_blank">GitHub Codespaces</a>에 의존하여 속도를 향상시켰습니다. ISS 및 지상국 환경을 모두 ARM(Azure Resource Manager) 템플릿으로 패키지했습니다. 이 템플릿은 스페이스본 컴퓨터-2 환경을 호주의 Azure 데이터 센터에 배포하고 지상국 환경을 버지니아의 Azure 데이터 센터에 배포하여 ISS와 지상국 간의 대기 시간을 시뮬레이션합니다.</p>


  <h2>결과</h2>


  <p>2021년 8월 12일, Azure Space에서 개발한 실험을 포함하는 120MB 페이로드가 ISS에 업로드되어 스페이스본 컴퓨터-2에서 실행되었습니다. 실험을 구성할 수 있으므로 Azure Space는 테스트, 소형 및 중간 시나리오를 해당 순서로 실행할 수 &ldquo;&rdquo;있었습니다.&rdquo; &ldquo;&rdquo;&ldquo; 일주일 후, SBC-2의 첫 번째 실행에서 학습하고 처리를 최적화한 후 팀은 ISS에서 전체 인간 게놈 크기 파일을 실행할 수 있었습니다.</p>


  <p>표 1은 처리 시간 및 데이터 볼륨 측면에서 두 실험의 결과를 보여 줍니다.</p>


  <table border="1" cellpadding="2" cellspacing="0">
      <tbody>
          <tr>
              <td valign="top">&nbsp;</td>
              <td valign="top">
              <p align="center"><strong>테스트</strong></p>
              </td>
              <td valign="top">
              <p align="center"><strong>소형</strong></p>
              </td>
              <td valign="top">
              <p align="center"><strong>중간</strong></p>
              </td>
              <td valign="top">
              <p align="center"><strong>전체 인간 게놈</strong></p>
              </td>
          </tr>
          <tr>
              <td valign="top">
              <p align="center"><strong>검사된 원시 데이터</strong></p>
              </td>
              <td valign="top">
              <p align="center">500KB</p>
              </td>
              <td valign="top">
              <p align="center">6MB</p>
              </td>
              <td valign="top">
              <p align="center">150MB</p>
              </td>
              <td valign="top">
              <p align="center">182GB</p>
              </td>
          </tr>
          <tr>
              <td valign="top">
              <p align="center"><strong>지구로 다운로드됨</strong></p>
              </td>
              <td valign="top">
              <p align="center">4KB</p>
              </td>
              <td valign="top">
              <p align="center">40KB</p>
              </td>
              <td valign="top">
              <p align="center">900KB</p>
              </td>
              <td valign="top">
              <p align="center">13MB</p>
              </td>
          </tr>
          <tr>
              <td valign="top">
              <p align="center"><strong>ISS의 런타임</strong></p>
              </td>
              <td valign="top">
              <p align="center">20초</p>
              </td>
              <td valign="top">
              <p align="center">2분</p>
              </td>
              <td valign="top">
              <p align="center">1시간</p>
              </td>
              <td valign="top">
              <p align="center">78분</p>
              </td>
          </tr>
          <tr>
              <td valign="top">
              <p align="center"><strong>ISS에서 다운로드 시간</strong></p>
              </td>
              <td valign="top">
              <p align="center">&lt;1초</p>
              </td>
              <td valign="top">
              <p align="center">2초</p>
              </td>
              <td valign="top">
              <p align="center">17초</p>
              </td>
              <td valign="top">
              <p align="center">1:56분</p>
              </td>
          </tr>
      </tbody>
  </table>


  <p>실험&rsquo;이 성공적으로 완료되고,&mdash; 클라우드 간 컴퓨팅 워크플로를 사용하여 컴퓨팅 및 대역폭 제약 조건으로 인해 불가능할 수 있는 ISS를 사용하는 고부가가치 사용 사례를 지원하는 방법에 대한 반복 증명을 통해 수집된 데이터가 성공적으로 완료&mdash;되었습니다. ISS에서 유전자 시퀀서의 시뮬레이션된 출력을 전처리하여 유전자 돌연변이만 필터링하지 않으면 150배의 데이터를 지구로 다운로드해야 합니다. 따라서 주어진 대역폭 및 다운링크 창 제약 조건을 다운로드하는 데 2년 이상이 필요한 200GB 원시 전체 인간 게놈 읽기는 2분 만에 13MBwhich&mdash;로 성공적으로 필터링되었습니다.</p>


  <p>마찬가지로 Azure에서 수행되는 모든 처리를&rsquo; 수행하려면 전체 참조 인간 게놈의 복사본과 전체 dbSNP 데이터베이스의 복사본을 업로드해야 합니다. 문제를 복잡하게 하기 위해 dbSNP 데이터베이스는 전 세계 과학자들에 의해 지속적으로 업데이트되고 피어 검토되고 있으며, 이는 공간에서 유용한 복사본을 유지하기 위해 정기적인 동기화가 필요하다는 것을 의미합니다.</p>


  <h2>어디서나 생산적으로 클라우드 애플리케이션 빌드</h2>


  <p>소프트웨어 개발 관점에서 Azure Space가 실험을 제공한 <a href="https://azure.com/developervelocity" target="_blank">개발자 속도</a>는 Python으로 작성된 서버리스 Azure Functions를 사용하여 3일 동안 전달된 모든 구성 요소와 Visual Studio Code 및 GitHub 같은 동급 최고의 개발자 도구를 통해 결과&mdash;만큼 인상적입니다. 다른 사용자의 추가 실험 개발을 지원하기 위해 Azure Space의 Weinsteins&rsquo; 팀은 개발 및 테스트에 사용한 시뮬레이션된 ISS 및 지상국 환경을 포함하는 <a href="https://github.com/Azure/mock-spacestation" target="_blank">Resource Manager 템플릿</a> 을 게시했습니다.</p>


  <p>이러한 기능을 다른 사용자가 사용할 수 있도록 하는 것은 약 1년 전에 공개적으로 발표된 Microsoft 내의 새로운 수직인 Azure Space의 초기 단계 중 하나에 불과합니다. 두 가지 임무: 우주선과 위성을 구축, 발사 및 운영하는 조직을 활성화하고 &ldquo;, 크고 작은 모든 행위자가 Azure에서 오픈 소스에 대한 지원을 지원하는 것과 거의 동일한 방식으로 우주&rdquo; 의 이점을 민주화함으로써 클라우드 컴퓨팅을 민주화하는 데 도움이 되었습니다. 이러한 예 중 하나는 클라우드 규모에서 위성 데이터를 쉽게 처리할 수 있는 기능을 포함하는 위성 운영자&mdash;에 대한 통신 및 제어를 제공하는 지상국 as a Service인 <a href="https://azure.microsoft.com/en-us/services/orbital/#:~:text=Azure%20Orbital%20is%20a%20Ground,store%20your%20data%20at%20scale." target="_blank">Azure Orbital</a>입니다.</p>


  <h2>결론</h2>


  <p>현재 HPEs&rsquo; Spaceborne Computer-2는 에지-클라우드&rdquo; 실험 및 POC(개념 증명)를 사용하도록 설정하는 &ldquo;임무를 수행하고 있습니다. 처음에는 우주 비행사와 NASA가 ISS 자체를 운영하기 위해 의존하는 운영 시스템과 완전히 격리됩니다.</p>


  <p>인류가 우주로 계속 밀어붙이면서 에지에 실제 컴퓨팅 능력을 보유하는 것이 점점 더 중요해질 것입니다. 사용 사례가 증가하고 계산 집약적인 데이터 과학, AI 및 기계 학습 도구를 사용하는 개발자는 항상 차세대 클라우드 네이티브 애플리케이션을 빌드하는 데 사용할 수 있는 컴퓨팅 리소스의 한계를 뛰어넘을 것입니다. 에지-클라우드 컴퓨팅 모델은 이러한 문제에 대한 하나의 솔루션이며, Azure Space의 유전체학 실험은 해당 모델이 모든 사람의 이익을 위해 공간을&rdquo; 민주화하는 데 어떻게 도움이 &ldquo;되는지 검증합니다. Azure Space 팀의 개발자 중 한 명이 말했듯이, &ldquo;모든 고등학교 프로그래밍 클래스가 다운로드하고 사용할 수 있는 도구와 기술을 기반으로 하는 오픈 소스&mdash;가 모두 있기 때문에&rsquo; 누구나 자신의 요구에 맞게 빌드한 것을 조정할 수 있습니다.&rdquo;</p>


  <p><a href="https://azure.com/opensource">Azure의 오픈 소스 개발에</a> 대해 자세히 알아봅니다.</p>
