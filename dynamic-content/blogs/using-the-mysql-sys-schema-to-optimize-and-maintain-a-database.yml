### YamlMime:Yaml
ms.openlocfilehash: 108879afc2fe5ed24f3c3e911f747793e15ce165
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139901987"
Slug: using-the-mysql-sys-schema-to-optimize-and-maintain-a-database
Title: MySQL sys 스키마를 사용하여 데이터베이스 최적화 및 유지 관리
Summary: Azure Database for MySQL 5.7에서 완전히 사용하도록 설정된 MySQL sys 스키마는 읽기 전용 데이터베이스에서 사용자에게 친숙한 보기의 강력한 컬렉션을 제공합니다. MySQL 성능 및...
Content: >-
  <p>Azure Database for MySQL 5.7에서 완전히 사용하도록 설정된 MySQL sys 스키마는 읽기 전용 데이터베이스에서 사용자에게 친숙한 <a href="https://dev.mysql.com/doc/refman/5.7/en/sys-schema-views.html">보기</a> 의 강력한 컬렉션을 제공합니다. MySQL 성능 및 정보 스키마를 기반으로 MySQL sys 스키마를 사용하여 성능 문제를 해결하고 리소스를 효율적으로 관리할 수 있습니다.</p>


  <p>MySQL 5.5에서 처음 사용할 수 있는 MySQL 성능 스키마는 메모리 할당, 저장된 프로그램, 메타데이터 잠금 등과 같은 많은 중요한 서버 리소스에 대한 계측을 제공합니다. 그러나 성능 스키마에는 80개 이상의 테이블이 포함되어 있으며 필요한 정보를 가져오려면 종종 성능 스키마 내의 테이블과 정보 스키마의 테이블을 조인해야 합니다. &rsquo;MySQL sys 스키마를 사용하는 방법을 자세히 살펴보겠습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a2e1212b-90fc-4cb3-b981-f87d055bdc91.png"><img alt="image" border="0" height="522" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/065ebda8-9a2f-456a-a2ca-18364b0214d3.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="이미지" width="287"></a></p>


  <p>sys 스키마에는 52개의 보기가 있으며 각 보기에는 다음 중 하나가 접두사로 추가됩니다.</p>


  <ul>
   <li><strong>Host_summary</strong> 또는 <strong>IO</strong>: I/O 관련 대기 시간</li>
   <li><strong>Innodb</strong>: Innodb 버퍼 상태 및 잠금입니다.</li>
   <li><strong>Memory</strong>:Memory usage by the host and users.</li>
   <li><strong>스키마</strong>: 스키마 관련 정보(예: 자동 증가, 인덱스 등)</li>
   <li><strong>문</strong>: SQL 문에 대한 정보입니다. 전체 테이블 검색 또는 긴 쿼리 시간을 초래한 문일 수 있습니다.</li>
   <li><strong>사용자</strong>: 사용자가 사용하고 그룹화한 리소스입니다. 예: 파일 I/O, 연결 및 메모리.</li>
   <li><strong>대기</strong>: 호스트 또는 사용자별로 그룹화된 대기 이벤트입니다.</li>
  </ul>


  <h2>성능 튜닝</h2>


  <ul>
   <li>IO는 데이터베이스에서 비용이 가장 높은 작업입니다. sys.user_summary_by_file_io 보기를 쿼리하면 평균 IO 대기 시간을 찾을 수 있습니다. 기본 125GB의 프로비저닝된 스토리지를 사용하면 IO 대기 시간이 약 15초입니다.</li>
  </ul>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7ddf63c7-cc93-4ef2-ba98-86c3500a5a71.png"><img alt="image" border="0" height="242" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/261182cf-36de-4472-b569-8847c7e20e70.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="이미지" width="536"></a></p>


  <p>Azure Database for MySQL은 스토리지와 관련하여 IO를 확장하므로 프로비전된 스토리지를 1TB로 늘리면 IO 대기 시간이 571ms로 감소하여 26배 성능이 향상됩니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8ee8be45-21df-4b3e-9c41-5da1d1589fac.png"><img alt="image" border="0" height="221" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/721d6f4f-d678-45dc-ad5b-921d8af5baa8.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="이미지" width="605"></a></p>


  <ul>
   <li>신중한 계획에도 불구하고 많은 쿼리로 인해 여전히 전체 테이블 검색이 발생합니다. 인덱스 유형 및 최적화 방법에 대한 자세한 내용은 <a href="https://aka.ms/mysql_explain_blog">EXPLAIN을 사용하여 MySQL 느린 쿼리를 프로파일하는</a> 블로그 게시물을 참조하세요. 전체 테이블 검사는 리소스를 많이 사용하며 데이터베이스 성능이 저하됩니다. 전체 테이블 검색으로 테이블을 찾는 가장 빠른 방법은 sys.schema_tables_with_full_table_scans보기를 쿼리하는 것입니다.</li>
  </ul>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c490c214-b9a0-4578-b206-d8b05a065339.png"><img alt="image" border="0" height="155" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d4bd552c-27c5-40b3-a27f-65dbab9342c5.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="이미지" width="650"></a></p>


  <ul>
   <li>데이터베이스 성능 문제를 해결하려면 데이터베이스 내부에서 발생하는 이벤트를 식별하는 것이 좋으며, sys.user_summary_by_statement_type 보기를 사용하는 것이 유용할 수 있습니다.</li>
  </ul>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/07ab2283-fb8e-4b75-b6ab-9798b5f378e3.png"><img alt="image" border="0" height="345" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f8326470-0f58-4bc2-aef9-abb819808931.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="이미지" width="638"></a></p>


  <p>이 예제에서 Azure Database for MySQL은 53분 동안 slog 쿼리 로그를 44,579회 플러시했습니다. 그것은&rsquo; 오랜 시간과 많은 IO입니다. 느린 쿼리 로그를 사용하지 않도록 설정하거나 Azure Portal에서 느린 쿼리 로그의 빈도를 줄여 이 작업을 줄일 수 있습니다.</p>


  <h2>데이터베이스 유지 관리</h2>


  <ul>
   <li>InnoDB 버퍼 풀은 메모리에 상주하며 DBMS와 스토리지 사이의 주요 캐시 매커니즘입니다. InnoDB 버퍼 풀의 <a href="https://docs.microsoft.com/en-us/azure/mysql/howto-server-parameters">크기</a> 는 성능 계층에 연결되어 있으며 다른 제품 SKU를 선택하지 않으면 변경할 수 없습니다. 운영 체제의 메모리와 마찬가지로 새로운 데이터를 위한 공간을 확보하기 위해 오래된 페이지가 스왑 아웃(swap out)됩니다. 어떤 테이블이 대부분의 InnoDB 버퍼 풀 메모리를 소비하는지 찾아내려면 sys.innodb_buffer_stats_by_table 보기를 쿼리합니다.</li>
  </ul>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/16cc524c-e778-48d4-80de-6f65243e1028.png"><img alt="image" border="0" height="419" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e19cf9df-2617-4de2-a7b4-d67afeb3f322.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="이미지" width="631"></a></p>


  <p>위의 그래픽에서는 시스템 테이블과 뷰 외에 WordPress 사이트 중 하나를 호스트하는 mysqldatabase033 데이터베이스의 각 테이블이 메모리에 있는 데이터의 16KB 또는 1페이지를 차지하는 것이 분명합니다.</p>


  <ul>
   <li>인덱스는 읽기 성능을 향상시키는 데 유용한 도구이지만 삽입 및 스토리지에 대한 추가 비용이 발생합니다. Sys.schema_unused_indexes 및 sys.schema_redundant_indexes는 사용하지 않은 인덱스나 중복 인덱스에 대한 정보를 제공합니다.</li>
  </ul>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fb975541-6463-4c7a-bab9-3cd67c3e9719.png"><img alt="image" border="0" height="340" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d817e0c8-0dce-421f-a4c8-13f9d2ed7cf8.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="이미지" width="601"></a></p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9ee96c52-e859-4cc6-aa6c-b3c616995b5f.png"><img alt="image" border="0" height="120" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7a426e8d-5c7b-46c4-98c1-2dfd384d039d.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="이미지" width="634"></a></p>


  <p>요약하면 sys 스키마는 성능 튜닝 및 데이터베이스 유지 관리 모두에 유용한 도구입니다. Azure Database for MySQL에서 이 기능을 반드시 활용하세요.</p>


  <h2>참조</h2>


  <ul>
   <li><a href="https://dev.mysql.com/doc/refman/5.7/en/sys-schema-views.html">Sys 스키마 뷰</a></li>
   <li><a href="https://azure.microsoft.com/en-us/blog/performance-best-practices-for-using-azure-database-for-postgresql/">Azure Database for PostgreSQL 사용에 대한 성능 모범 사례</a></li>
  </ul>
