### YamlMime:Yaml
ms.openlocfilehash: 30a90b6a20f72048f896ca6ddfe87f6c87b36552
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900590"
Slug: sneak-peek-a-new-azure-cloud-console
Title: '미리 보기: 새 Azure 클라우드 콘솔'
Summary: '사용자가 명령줄 도구가 설치되지 않은 디바이스에서도 그래픽 및 명령줄 도구를 사용하여 Azure에서 애플리케이션을 빌드할 수 있도록 통합 워크플로를 빌드했습니다. '
Content: >-
  <p>한동안 저는 컨테이너와 컨테이너가 어떻게 혁신을 일으키고 클라우드 네이티브 컴퓨팅의 약속을 진정으로 제공하는지에 대한 열정을 가지고 있습니다. 그러나 Azure를 사용하여 컨테이너 컴퓨팅을 혁신하는 것에 대해 흥분하더라도 Im&rsquo;은 사용자 인터페이스에 대해서도 똑같이 열정적입니다.&nbsp; 결국 클라우드 컴퓨팅은 유용한 인터페이스에서 액세스할 수&rsquo; 없는 경우 쓸모가 없습니다.&nbsp; 따라서 오늘 Im&rsquo;은 Azure Portal의 새 클라우드 콘솔에서 이러한 열정을 함께 가져오는 방법을&rsquo; 보여 줍니다.</p>


  <p>기존 클라우드 사용자 인터페이스는 웹 기반 그래픽 인터페이스 또는 명령줄 터미널 인터페이스로 나뉩니다. 이러한 각 인터페이스는 해당 유틸리티를 제공하며, 다른 사용자는 다른 작업에 대해 서로 다른 인터페이스를 선호합니다. 그러나 대부분의 Azure 사용자는 두 인터페이스를 모두 사용하여 Azure에서 애플리케이션을 관리합니다.&nbsp; Visual Studio 또는 Visual Studio Code 같은 통합 개발 환경 전에 코드를 개발하는 것과 마찬가지로 이러한 인터페이스 간에 전환하려면 애플리케이션 간에 전환해야 하며, 이는 사용자를 느리게 하고 목표를 달성하기 어렵게 만드는 컨텍스트 스위치입니다.&nbsp;  경우에 따라(예: 태블릿 및 기타 모바일 디바이스) 터미널 인터페이스를 사용할 수 없으며 사용자가 디바이스를 전환해야 할 수도 있습니다.</p>


  <p>이러한 요구를 해결하기 위해 사용자가 명령줄 도구가 설치되지 않은 디바이스에서도 그래픽 및 명령줄 도구를 사용하여 Azure에서 애플리케이션을 빌드할&#39;수 있는 통합 워크플로를 빌드했습니다. 현재 Azure Portal에 추가하는 이 새로운 클라우드 셸 환경을 미리 볼&#39;있습니다. 아래 비디오에서 볼 수 있듯이 셸은 포털에 통합되므로 사용자는 그래픽 웹 인터페이스에서 클라우드 리소스를 동시에 보면서 명령줄 환경에 빠르게 드롭할 수 있습니다.</p>


  <h3>Azure 클라우드 콘솔을 사용하여 VM 배포</h3>


  <p><iframe allowfullscreen="" frameborder="0" height="315" src="https://channel9.msdn.com/Blogs/Azure-Linux-Team/Using-Azure-Cloud-Console-to-deploy-a-VM/player" width="560"></iframe></p>


  <p>&nbsp;</p>


  <h3>GIT에서 Azure 클라우드 콘솔 사용</h3>


  <p><iframe allowfullscreen="" frameborder="0" height="315" src="https://channel9.msdn.com/Blogs/Azure-Linux-Team/Using-Azure-Cloud-Console-with-GIT/player" width="560"></iframe></p>


  <p>&nbsp;</p>


  <p>이 환경의 주요 기능은 다음과 같습니다.</p>


  <ul>
      <li>기존 웹 로그인에서 명령줄 도구에 대한 자동 인증</li>
      <li>모든 Azure 명령줄 도구 및 관련 명령줄 유틸리티가 미리 설치됨</li>
      <li>클라우드 셸 세션에서 코드, 구성 및 작업을 유지하는 개인 설정된 영구 작업 영역입니다.</li>
  </ul>


  <p>한 번의 클릭으로 기존 Azure 자격 증명으로 미리 구성된 터미널 명령줄 도구에 삭제됩니다.&nbsp; 이 터미널은 Azure 명령줄 도구뿐만 아니라 기대되는 표준 편집기 및 도구를 갖춘 완전한 기능을 갖춘 환경입니다.&nbsp; 또한 클라우드 셸은 컨텍스트를 유지합니다. 디스크에 파일을 저장하면 다른 디바이스 또는 네트워크에 있는 경우에도 다음 클라우드 셸 세션에서 중단된 위치를 다시 시작할 수 있도록 Azures&rsquo; 클라우드에 유지됩니다.</p>


  <p>그렇다면 클라우드 콘솔은 컨테이너와 어떤 관련이 있을까요? 셸 자체는 새 세션을 시작할 때마다 깨끗하고 일관된 인터페이스를 제공하기 위해 컨테이너로 패키징됩니다.&nbsp; 물론 이는 Azure 2.0 명령줄 도구를 위해 이미 빌드한&#39;컨테이너를 기반으로 합니다. 현재 사용자 고유의 컴퓨터에서 다음을 사용할 수 있습니다.</p>


  <pre class="prettyprint">

  $ docker run -v ${HOME}:/root -it azuresdk/azure-cli-python:latest</pre>


  <p>앞으로, 우리는&#39;우리가 앞으로 몇 개월 동안 일반 공급에 그것을 가지고이 새로운 콘솔 환경에 대한 피드백을 테스트하고 제공하고자하는 몇 강건한 영혼을 찾고 있습니다. 관심이 있으시면 <a href="https://forms.office.com/Pages/ResponsePage.aspx?id=v4j5cvGGr0GRqy180BHbR7e1BxBe77BKjoaBtSzldH1UMFYwTTFMVlhHU0cwN0k4VVFCNEMwU0pHQi4u">등록</a> 해 주시면&#39;연락드리겠습니다!</p>


  <p>&#39;컨테이너가 Azure에서 컴퓨팅에 혁명을 일으키고, 특히 컨테이너 기술을 사용하여 Azure 클라우드에서 애플리케이션을 개발하기 위한 새로운 통합 인터페이스를 제공하는 방법에 대해 매우 기쁘게 생각합니다.</p>
