### YamlMime:Yaml
ms.openlocfilehash: 022c1f369108a18098da4921f602225914945cc4
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139906235"
Slug: azure-cosmosdb-database-for-serverless-era
Title: 'Azure #CosmosDB – 서버리스 시대의 데이터베이스'
Summary: 최근까지 소프트웨어 개발은 서버의 개념을 중심으로 돌아가고 있습니다. 애플리케이션 프로비전, 유지 관리 및 크기 조정은 개발자가 많은 시간과 노력을 기울여야 하는 요소였습니다.
Content: >-
  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4f0e2081-f52f-4eae-afaa-c3dcb6cfc32b.png"><img alt="image" border="0" height="290" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/512b6608-6cef-4b56-ae0d-d894dab4605c.png" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="1024"></a></p>


  <p>최근까지 소프트웨어 개발은 서버의 개념을 중심으로 돌아가고 있습니다. 애플리케이션 프로비전, 유지 관리 및 크기 조정은 개발자가 많은 시간과 노력을 기울여야 하는 요소였습니다.</p>


  <p>우리는 이제 서버리스의 시대에 접어들고 있습니다. 서버리스 아키텍처를 사용하면 완전히 새로운 범위의 애플리케이션, 특히 서버리스 이벤트 기반 앱이 등장합니다. 이벤트가 트리거되면 애플리케이션이 실행되고, 수행해야 하는 작업을 수행하고, 다시 사라집니다. 따라서&rsquo; 서버가 필요할 때까지 서버가 존재하지 않기 때문에 무수한&rdquo; 호출&ldquo;을 시작합니다.</p>


  <p>많은 사용자가 알고 있듯이 <a href="https://azure.microsoft.com/en-us/services/cosmos-db/">Azure Cosmos DB</a>는 <a href="https://youtu.be/aAy635iBB50">전역적으로 배포되고 확장성이 뛰어난 다중 모델 데이터베이스 서비스</a>입니다. 이 서비스는 고객이 모든 지리적 지역에서 처리량과 스토리지를 탄력적으로 수평적으로 확장할 수 있도록 설계되었으며, 99번째 백분위수에서 10ms 대기 시간, 99.99%의 고가용성 및 5개의 잘 정의된 일관성 모델을 개발자에게 제공하여 &lt;데이터의 성능, 가용성 및 일관성을 정확하게 절충합니다. Azure Cosmos DB는 처리량, 대기 시간, 가용성 및 일관성을 위한 <a href="https://azure.microsoft.com/en-us/support/legal/sla/cosmos-db/v1_0/">포괄적인 SLA(서비스 수준 계약)</a>를 제공하는 최초의 글로벌 분산 데이터베이스 서비스이기도 합니다.</p>


  <p>오늘 <a href="https://azure.microsoft.com/en-us/services/cosmos-db/">Azure Cosmos DB</a>와 <a href="https://azure.microsoft.com/en-us/services/functions/">Azure Functions</a> 간의 네이티브 통합 가용성을 발표합니다. 이 네이티브 통합을 사용하면 Azure Cosmos DB 계정에서 직접 데이터베이스 트리거, 입력 바인딩 및 출력 바인딩을 만들 수 있습니다. Azure Functions 및 Azure Cosmos DB를 통해 전역 사용자 기반의 풍부한 데이터에 짧은 대기 시간으로 액세스할 수 있는, 서버를 사용하지 않는 이벤트 구동 앱을 만들고 배포할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/46e71098-271d-454f-9df5-6feb42f02c4a.png"><img alt="image" border="0" height="509" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ec5c4cda-ea39-4b94-b6f8-217b23e6ed8b.png" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="1024"></a></p>


  <p align="center"><strong>그림:</strong> 전자 상거래 서버리스 이벤트 기반 아키텍처의 예</p>


  <p align="left">이 아키텍처의 아름다움은</p>


  <ul>
   <li>시스템을 관리하기 쉬운 <strong>더 작고 간단한 조각으로 세분화</strong> 할 수 있습니다.</li>
   <li>서버 실행 및 유지 관리와 관련된 문제를 개발자가 인프라 대신 <strong>코드에 집중할 수</strong> 있는 지점으로 이동합니다.</li>
   <li>더 간단한 아키텍처는 훨씬 <strong>더 관리가 용이할</strong> 뿐만 아니라 <strong>실행하기에 훨씬 더 경제적</strong>입니다. 필요한 경우 각 함수를 별도로 호출한 다음 다시 사라져 훨씬 더 작은 리소스 공간을 남길 수 있습니다.</li>
   <li>또 다른 큰 장점은 <strong>코드 재사용성</strong>으로 인해 성능이 향상된다는 것입니다.</li>
   <li><strong>Azure Cosmos DB</strong>는 사용자가 있는 곳과 가까운 곳에서 다양한 데이터를 사용할 수 있도록 하여 위의 아키텍처를 더욱 강화합니다.</li>
  </ul>


  <h2>모든 서버리스 앱에 대한 데이터베이스를 Azure Cosmos DB &ndash;</h2>


  <p>Azure Cosmos DB는 미래의 데이터베이스입니다 . 선택한 API 및 데이터 모델을 사용하여 행성 규모 앱을 쉽게 빌드하기 위한 전역적으로 분산된 다중 모델 데이터베이스 서비스입니다. Azure Cosmos DB는 다음과 같은 이유로 모든 서버리스 컴퓨팅 아키텍처에 권장되는 데이터베이스입니다.</p>


  <ul>
   <li><strong>모든 데이터에 즉시 액세스</strong>: Azure Cosmos DB는 기본적으로 모든 데이터를 <a href="https://docs.microsoft.com/azure/cosmos-db/indexing-policies">자동으로 인덱싱하고 해당 인덱</a>스를 즉시 사용할 수 있도록 하기 때문에 저장된 모든 값에 대해 세부적으로 액세스할 수 있습니다. 즉, 데이터베이스에 새 항목을 지속적으로 쿼리, 업데이트 및 추가하고 Azure Functions를 통해 즉시 액세스할 수 있습니다.</li>
   <li><strong>스키마가 없는</strong> 경우 Azure Cosmos DB는 스키마가 없으므로 Azure Function의 모든 데이터 출력을 고유하게 처리할 수&#39;. 이 &quot;핸들&quot; 접근 방식을 사용하면 Azure Cosmos DB에 모든 출력되는 다양한 Functions를 쉽게 만들 수 있습니다.</li>
   <li><strong>확장 가능한 처리량</strong>. Azure Cosmos DB에서 즉시 처리량을 확장 및 축소할 수 있습니다. 동일한 컬렉션을 쿼리하고 쓰는 수백 또는 수천 개의 함수가 있는 경우 <a href="https://docs.microsoft.com/azure/cosmos-db/request-units">RU/s</a>를 확장하여 부하를 처리할 수 있습니다. 모든 함수는 할당된 RU/s를 사용하여 병렬로 작동할 수 있으며 데이터 <a href="https://docs.microsoft.com/azure/cosmos-db/consistency-levels">일관성</a>이 보장됩니다.</li>
   <li><strong>글로벌 복제</strong> Azure Cosmos DB 데이터를 <a href="https://docs.microsoft.com/azure/cosmos-db/distribute-data-globally">전 세계</a>에 복제하여 대기 시간을 줄이고 사용자에게 가장 가까운 지역에 데이터를 배치할 수 있습니다. 모든 Azure Cosmos DB 쿼리와 마찬가지로 트리거의 데이터는 지역에 가장 가까운 Azure Cosmos DB에서 읽습니다.</li>
  </ul>


  <h2>Azure Cosmos DB 및 Azure Functions Now로 수행할 수 있는 작업</h2>


  <p>Azure Cosmos DB와 Azure Functions 간의 네이티브 통합을 사용하면 다음을 수행할 수 있습니다.</p>


  <ol>
   <li><strong>Azure Function에서 Azure Cosmos DB 트리거를 만들 수 있습니다</strong>. 이렇게 하면 이벤트 기반 및 이벤트 기반 서버리스 앱을 매우 쉽게 빌드할 수 있습니다. 이 트리거는 변경 피드 스트림을 사용하여 Azure Cosmos DB 컨테이너에서 변경 내용을 모니터링합니다. 컨테이너를 변경하면 변경 피드 스트림이 트리거로 전송되고, 트리거가 Azure Functions를 호출합니다. 빠른 시작 지침은 <a href="https://aka.ms/cosmosdbtriggerportalfunc">Azure Portal에서 Azure Cosmos DB 트리거 만들기</a>를 참조하세요.</li>
   <li><strong>입력 바인딩을 사용하여 Azure 함수를 Azure Cosmos DB 컨테이너(문서/테이블/그래프 컬렉션)에 바인딩할 수 있습니다</strong>. 입력 바인딩은 함수가 실행되면 컨테이너에서 데이터를 읽습니다.&nbsp; 빠른 시작 지침은 <a href="https://docs.microsoft.com/azure/azure-functions/functions-integrate-store-unstructured-data-cosmosdb">Azure Functions 및 Cosmos DB를 사용하여 구조화되지 않은 데이터 저장</a>을 참조하세요.</li>
   <li><strong>출력 바인딩을 사용하여 Azure 함수를 Azure Cosmos DB 컬렉션에 바인딩할 수 있습니다</strong>. 출력 바인딩은 함수가 완료될 때 컨테이너에 데이터를 씁니다.</li>
  </ol>


  <p>Scott Hanselman 및 Kirill Gavrylyuk에서 Azure Functions에 대한 Azure Cosmos DB 트리거를 소개하는 Azure Friday 비디오를 시청하세요.</p>


  <p><iframe allowfullscreen="" frameborder="0" height="540" src="https://channel9.msdn.com/Shows/Azure-Friday/Severless-Apps-with-Azure-Cosmos-DB-and-Azure-Functions/player" width="960"></iframe></p>


  <h2>소매에서 IoT까지 다양한 Event-Driven 서버리스 앱(분)</h2>


  <p>다음 사용 사례는 데이터를 이벤트 구동 Azure Functions에 연결하여 Azure Cosmos DB 데이터를 최대한 활용할 수 있는 몇 가지 방법을 보여 줍니다.</p>


  <ul>
   <li><strong>소매</strong>: 소매 구현에서 사용자가 바구니에 항목을 추가할 때 이제 선택적 비즈니스 파이프라인 구성 요소에 대한 함수를 만들고 호출할 수 있는 유연성이 있습니다. 변경 피드를 수신 대기하여 Azure Cosmos DB 트리거를 만들고 프로세스에서 중요한 주문 처리 이벤트에 대한 지연이&rsquo; 발생하지 않도록 할 수 있습니다.</li>
   <li><strong>재무</strong>: 금융 애플리케이션에서 은행 계좌 잔액이 특정 임계값 아래로 떨어질 때 함수를 호출할 수 있습니다. <a href="https://docs.microsoft.com/azure/azure-functions/functions-create-scheduled-function">타이머 트리거</a>를 사용하여 <strong>입력 바인딩</strong>을 사용하여 Azure Cosmos DB 컨테이너에 저장된 은행 계좌 잔액 정보를 검색할 수 있습니다. 타이머는 일별 또는 주별 주기로 설정할 수 있습니다. 여기서 사용자는 저균형으로 간주되는 것에 대한 임계값을 설정한 다음 Azure Function의 작업으로 이를 따를 수 있습니다.</li>
   <li><strong>Iot:</strong> IoT 애플리케이션(예: 연결된 자동차 시나리오)에서 <strong>Azure Cosmos DB 트리거</strong>를 사용하여 연결된 자동차에 들어오는 체크 엔진 조명과 같은 자동차 경고와 관련된 이벤트를 트리거할 수 있습니다. 트리거는 센서 데이터 수집에 대한 모든 데이터 변경에 대해 호출되며 임계값 조건이 충족되면 함수는 센서 데이터를 보증 부서로 보낼 수 있습니다. 자동차 유지 관리와 관련된 우편물을 관리하는 작업에 관련 소유자 정보를 보내는 또 다른 함수를 만들 수 있습니다. 함수 중 하나의 출력 바인딩은 다른 Azure Cosmos DB 컨테이너의 자동차 레코드를 업데이트하여 검사 엔진 이벤트에 대한 정보를 저장할 수 있습니다.</li>
   <li><strong>게임:</strong> 게임에서 새 사용자를 만들 때 <a href="https://docs.microsoft.com/azure/cosmos-db/graph-introduction">Azure Cosmos DB Graph API</a>를 사용하여 사용자를 알 수 있는 다른 사용자를 검색할 수 있습니다. 그런 다음 쉽게 검색할 수 있도록 Azure Cosmos DB 데이터베이스에 결과를 쓸 수 있습니다. Azure Cosmos DB 그래프 데이터베이스를 사용하여 모든 사용자를 저장하면 Azure Cosmos DB 트리거로 새 함수를 만들 수 있습니다. 새 사용자를 삽입할 때마다 함수가 호출된 다음 <strong>출력 바인딩</strong>을 사용하여 결과가 저장됩니다. 함수는 그래프 데이터베이스를 쿼리하여 새 사용자와 직접 관련된 모든 사용자를 검색하고 해당 데이터 세트를 함수로 반환할 수 있습니다. 그런 다음 Azure Cosmos DB <a href="https://docs.microsoft.com/azure/cosmos-db/table-introduction">Table 데이터베이스</a>에 키-값 쌍 집합으로 저장할 수 있습니다. 그러면 새 사용자에게 연결된 친구를 표시하는 프런트 엔드 애플리케이션에서 쉽게 검색할 수 있습니다.</li>
  </ul>


  <h2>지금 Azure Cosmos DB 및 Azure Functions 사용해 보기</h2>


  <p>Azure Cosmos DB 및 Azure Functions를 사용해 보기가 매우 쉽습니다. &ndash; Azure Cosmos DB 포털 또는 Azure Functions 포털에서 새 항목 &gt;Azure 함수 추가 &gt; 를 클릭하여 Azure Cosmos DB 트리거를 만들 수 있습니다. 다음 이미지는 Azure Functions 포털의 함수에 Azure Cosmos DB 트리거를 추가하는 방법을 보여 줍니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/db096c50-ef17-4a54-a243-f07bffbf710f.png"><img alt="image" border="0" height="448" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/25ae7209-72b0-49c7-a779-8f3de1684461.png" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="510"></a></p>


  <p>Azure Functions 및 Azure Cosmos DB를 사용하여 전 세계의 수많은 데이터 센터에 이벤트 기반 서버리스 앱을 만들고 배포할 수 있습니다. Azure Functions를 Azure Cosmos DB와 같은 전역 분산 데이터베이스와 결합하면 전 세계 수많은 고객을 위해 데이터에 대한 대기 시간이 매우 짧은 액세스를 제공할 수 있습니다. 대기업에서 개별 개발자에 이르기까지 누구나 몇 분 만에 지구 규모의 서버리스 앱을 빌드할 수 있습니다. 자세한 내용은 <a href="https://aka.ms/cosmos-db-serverless">Azure Cosmos DB: Azure Functions를 사용한 서버리스 데이터베이스 컴퓨팅을 참조하세요</a>. 지금 <a href="https://azure.microsoft.com/try/cosmosdb/">무료로 Azure Cosmos DB를 사용해 볼</a> 수 있으며, 등록 또는 신용 카드가 필요하지 않습니다. 도움이 필요하거나 질문이나 피드백이 있는 경우 <a href="https://stackoverflow.com/questions/tagged/azure-cosmosdb">Stack Overflow의 개발자 포럼에</a> 문의하세요. Twitter <a href="https://twitter.com/search?q=%23cosmosDB&amp;src=typd">#CosmosDB</a><a href="https://twitter.com/AzureCosmosDB">@AzureCosmosDB</a>에서 최신 Azure Cosmos DB 뉴스 및 기능을 최신 상태로 유지하세요.</p>


  <p>-Azure Cosmos DB의 친구</p>
