### YamlMime:Yaml
ms.openlocfilehash: eedd228b011fe4d91d3125d6b2503b1aec17b089
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908778"
Slug: order-query-results-with-azure-documentdb
Title: Azure DocumentDB를 사용하여 쿼리 결과 정렬
Summary: '오늘 SQL 쿼리의 주요 개선 사항을 발표하게 되어 기쁩니다. DocumentDB는 이제 Order By 및 문자열 범위 쿼리를 지원합니다. 이 변경으로 JSON 문서의 문자열, 숫자 또는 부울 속성을 사용하여 쿼리 결과를 정렬할 수 있습니다. '
Content: <p>오늘 SQL 쿼리의 주요 개선 사항을 발표하게 되어 기쁩니다. <strong>DocumentDBnow&nbsp;는 OrderBy&nbsp;</strong> <strong>및 문자열 범위 쿼리를 지원합니다</strong>. 이 변경으로 JSON 문서의 문자열, 숫자 또는 부울 속성을 사용하여 쿼리 결과를 정렬할 수 있습니다. DocumentDB&#39;Order By는 대량의 문서 컬렉션에 대해 짧은 대기 시간 쿼리를 제공하는 데 사용할 수 있으며 aminimal index storageoverhead&nbsp;와 함께&nbsp; 작동하도록 설계되었습니다. Azure DocumentDB는 자동으로 인덱싱된 JSON 데이터를 저장하고 검색하도록 설계된 완전히 관리되는 NoSQL 문서 데이터베이스 서비스입니다. DocumentDBs&rsquo; 자동 인덱싱 및 SQL 쿼리 기능을 사용하면 애플리케이션 환경을 빠르게 빌드하고 반복할 수 있습니다. 이제 모든 기존 및 새 DocumentDB 계정에서 Order By를 사용할 수 있습니다. <a href="https://www.documentdb.com/sql/demo#orderby">DocumentDB 쿼리 플레이그라운드</a>, Azure Preview 포털에서 Rightnow&nbsp;로 순서를 시도<a href="https://azure.microsoft.com/documentation/articles/documentdb-orderby/">하거나 설명서를</a>&nbsp; 읽을 수&nbsp; 있습니다. .NET SDK 버전 1.2.0 이상을 사용하면 LINQ 쿼리 내에서 OrderBy() 또는 OrderByDescending() 절을 사용할 수도 있습니다. <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/07/Order-by-03.png"><img alt="Order by-03" class="alignnone size-medium wp-image-312581" height="369" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Order-by-03-548x369.png" width="548"></a>&nbsp; 쿼리 내에서 Order By 또는 범위 비교를 사용하려면 정렬에 사용되는 JSON 속성에 대한 <em>최대</em> 정밀도로 범위 인덱스를 포함하는 anindex&nbsp; 정책을 지정해야 합니다&nbsp;.&nbsp; 새 컬렉션을 만드는 동안 또는 새 SDK 릴리스 및/또는 REST API를 사용하여 프로그래밍 방식으로 Azure Preview 포털을 통해 이 작업을 수행할 수 있습니다. 문자열 범위 쿼리 및&nbsp; 문자열 정렬을 지원하기 위해&nbsp; 새 컬렉션을 만들 때 범위 인덱&nbsp;슨 문자열 지정을 지원하여 DocumentDB API를 업데이트했습니다. 자세한 내용은 여기에서 인덱싱 정책에 대한 설명서를 참조 <a href="https://azure.microsoft.com/en-us/documentation/articles/documentdb-indexing-policies/#configuring-the-indexing-policy-of-a-collection">하세요</a>. 컬렉션에 대한 인덱싱 정책은 컬렉션 생성 시 구성해야 합니다. 경로를 추가/제거하거나 해시와 범위 인덱싱 간에 전환하는 등 기존 컬렉션의 인덱싱 정책을 수정하는 기능에 대한 작업을 시작했습니다. 여기서 Nuget에서 .NET SDK 버전 1.2.0을 다운로드하여 Order By를 시작 <a href="https://www.nuget.org/packages/Microsoft.Azure.DocumentDB/">합니다</a>. 또한 .NET의 일반적인 사용 패턴에 대한 코드 샘플이 포함된 <a href="https://github.com/Azure/azure-documentdb-net/tree/master/samples/code-samples/Queries.OrderBy">Github 프로젝트를</a> 만들었습니다. 도움이 필요한 경우 <a href="https://stackoverflow.com/questions/tagged/azure-documentdb">스택 오버플</a>로에 대한&nbsp; <a href="https://social.msdn.microsoft.com/forums/azure/en-US/home?forum=AzureDocumentDB">개발자 포럼인 MSDN의Azure DocumentDB 개발자 포럼에</a> 문의하세요.</p>
