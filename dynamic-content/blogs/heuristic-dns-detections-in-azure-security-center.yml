### YamlMime:Yaml
ms.openlocfilehash: 93e708f82889deb12cca458546ea007555cd750c
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139898977"
Slug: heuristic-dns-detections-in-azure-security-center
Title: Azure Security Center의 추론 DNS 검색
Summary: 우리는 많은 고객으로부터 매우 회피적인 위협을 감지하는 데 따른 과제에 대해 들었습니다. 오늘날, 우리는 이 중요한 프로토콜의 악의적인 사용을 탐지하는 더 복잡하고 추론적인 기술 중 일부와 이러한 기술이 일반적인 실제 공격의 주요 구성 요소를 감지하는 방법에 대해 논의하고 있습니다.
Content: >-
  <p>우리는 많은 고객으로부터 매우 회피적인 위협을 감지하는 데 따른 과제에 대해 들었습니다. 지침을 제공하기 위해 <a href="https://blogs.technet.microsoft.com/teamdhcp/2015/11/23/network-forensics-with-windows-dns-analytical-logging/" target="_blank">네트워크 포렌식에 대한 WINDOWS DNS 서버 로깅</a> 및 <a href="https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-dns" target="_blank">Azure DNS 분석 솔루션</a>의 도입을 게시했습니다. 오늘날, 우리는 이 중요한 프로토콜의 악의적인 사용을 탐지하는 더 복잡하고 추론적인 기술 중 일부와 이러한 기술이 일반적인 실제 공격의 주요 구성 요소를 감지하는 방법에 대해 논의하고 있습니다.</p>


  <p>이러한 분석은 고급 대상 침입부터 더 평범한 웜, 봇넷 및 랜섬웨어에 이르기까지 다양한 공격에 공통적인 동작에 초점을 맞춥니다. 이러한 기술은 보다 구체적인 서명 기반 검색을 보완하도록 설계되어 분석가 기반 규칙을 배포하기 전에 이러한 동작을 식별할 수 있는 기회를 제공합니다. 이는 대상 공격의 경우 특히 중요하며, 이러한 활동을 탐지하는 시간은 일반적으로 몇 달 단위로 측정됩니다. 공격자가 네트워크에 더 오래 액세스할수록 최종 정리 및 제거 프로세스가 더 비싸집니다. 마찬가지로, 랜섬웨어의 규칙 기반 검색은 일반적으로 발병 후 며칠 이내에 사용할 수 있지만, 많은 조직에 상당한 브랜드 및 재정적 손상을 피하기에는 너무 늦은 경우가 많습니다.</p>


  <p>이러한 분석은 더 많은 분석과 함께 Azure 기반 서버에서 DNS 로그 수집을 사용하도록 설정하면 Azure Security Center를 통해 사용하도록 설정됩니다. 이 로깅에는 Windows DNS 서버가 필요하지만 검색 자체는 대부분 플랫폼에 구애받지 않으므로 사용 가능한 서버를 사용하도록 구성된 모든 클라이언트 운영 체제에서 실행할 수 있습니다.</p>


  <h2>일반적인 공격 시나리오</h2>


  <p>클라우드 서버에 액세스하려는 악의적인 사용자가 로컬 관리자 암호를 무차별 암호로 추측하여 로그인을 시도하는 스크립트를 시작합니다. 잘못된 로그인 시도 횟수에 제한이 없으므로 며칠 간의 노력에 따라 공격자는 결국 인식된 강력한 암호를 St@1w@rt정확하게 추측합니다.</p>


  <p>로그인에 성공하면 침입자가 즉시 악성 원격 관리 도구를 다운로드하고 설치합니다. 이렇게 하면 사용자 암호 자동 도용, 신용 카드 또는 은행 세부 정보 검색, 후속 무차별 암호 대입 또는 서비스 거부 공격에 대한 지원과 같은 유용한 기능을 사용할 수 있습니다. 실행되면 이 도구는 HTTP를 통해 미리 구성된 명령 및 제어 서버로 주기적으로 비콘을 설정하여 추가 명령을 기다리기 시작합니다.</p>


  <p>이러한 유형의 공격은 감지하기 쉽지만 항상 쉽게 방지할 수 있는 것은 아닙니다. 예를 들어 잘못된 로그인 시도를 제한하는 것은 합리적인 예방 조치로 보이지만 이렇게 하면 잠금을 통해 서비스 거부의 심각한 위험이 발생합니다. 마찬가지로 많은 수의 실패한 로그인을 검색하는 것은 간단하지만, 종종 분산된 무차별 암호 대입 시도의 거의 지속적인 백그라운드 노이즈에서 합법적인 사용자 활동을 구별하는 것이 항상 쉬운 것은 아닙니다.</p>


  <h2>검색 기회</h2>


  <p>많은 분석에서 초기 감염 벡터를 구체적으로 찾고 있지 않습니다. 위의 예제는 무차별 암호 대입 활동에서 잠재적으로 감지되었을 수 있지만 실제로는 합법적인 관리자&rsquo; 데스크톱 또는 성공적인 사회 공학 활동을 악용한 경우처럼 알려진 암호를 사용하는 단일 악성 로그인일 수 있습니다. 따라서 다음 기술은 후속 동작 또는 악성 서비스의 다운로드 및 실행을 검색하려고 합니다.</p>


  <h2>네트워크 아티팩트</h2>


  <p>위에서 설명한 것과 같은 공격은 네트워크를 통해 검색할 수 있는 많은 방법이 있지만 거의 모든 공격의 일관된 기능은 DNS 사용입니다. 사용된 전송 프로토콜에 관계없이 지정된 서버가 해당 도메인 이름으로 연결될 확률이 높습니다. 이렇게 하려면 DNS를 사용하여 이 호스트 이름을 IP 주소로 확인해야 합니다. 따라서 DNS 상호 작용만 분석하면 지정된 네트워크에서 아웃바운드 통신 채널의 유용한 보기를 얻을 수 있습니다. 기본 프로토콜이 아닌 DNS를 통해 분석을 실행하는 추가 이점은 공통 도메인의 로컬 캐싱입니다. 이렇게 하면 네트워크에서의 보급률이 감소하여 분석 프레임워크의 스토리지 및 계산 비용이 모두 줄어듭니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/33d01555-3060-4c7c-9431-6570d4675930.png"><img alt="image" border="0" height="557" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e29dc021-25dc-4f1b-ae0c-5d98675c4473.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="602"></a></p>


  <p align="center"><em>임의 도메인 분석에서 감지된 WannaCry 랜섬웨어입니다.</em></p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c013c9ca-edd4-4088-9965-aa84f3fbc1d4.png"><img alt="image" border="0" height="605" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c34395e9-df1a-4f98-9591-87ce359bf8a4.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="602"></a></p>


  <p align="center"><em>WannaCry 랜섬웨어로 열거된 하드 코딩된 도메인을 나열하는 맬웨어 보고서입니다.</em></p>


  <h2>임의 도메인</h2>


  <p>악성 소프트웨어는 임의로 생성된 도메인을 사용하는 경향이 있습니다. 이는 간단한 언어 문제부터 각 피해자&rsquo;의 모국어에 맞게 도메인을 조정할 필요가 없는 여러 가지 이유 때문일 수 있습니다. 심지어 이러한 이름의 많은 수의 등록의 자동화를 지원하기 위해, 실수로 재사용 또는 충돌의 가능성을 줄일 수 있도록. DBA(도메인 생성 알고리즘)와 같은 기술로 강조 표시되지만, 위의 WannaCry 예제와 같이 정적 다운로드 사이트 및 명령 및 제어 서버에서 자주 사용됩니다.</p>


  <p>이러한 &ldquo;임&rdquo; 의 이름을 검색하는 것이 항상 간단하지는 않습니다. 표준 테스트는 비교적 많은 양의 데이터에서만 작동하는 경향이 있습니다. 예를 들어 Entropy에는 문자 집합의 최소 몇 배 또는 최소 수백 바이트 크기가 필요합니다. 반면 도메인 이름은 길이가 최대 63자입니다. 이 문제를 해결하기 위해 기본 언어 모델링을 사용하여 합법적인 도메인 이름에서 발생하는 다양한 n-gram의 확률을 계산했습니다. 또한 이러한 문자를 사용하여 지정된 이름에서 가능성이 높은 문자 조합의 발생을 감지합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9fc736d7-26f1-4656-9419-6bb9ccd03b41.png"><img alt="image" border="0" height="632" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4b91b362-2550-4269-9f13-32fb32b40ba6.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="622"></a></p>


  <p align="center"><em>섀도 패드 트로이 목마에 의해 임의로 생성 된 도메인 이름의 사용을 자세히 설명하는 맬웨어 보고서.</em></p>


  <h2>주기성</h2>


  <p>언급했듯이, 이 공격에는 명령 및 제어 서버의 주기적인 비콘이 포함되었습니다. 인수를 위해 시간별 HTTP 요청이라고 가정해 보겠습니다&rsquo;. 이 요청을 시도할 때 HTTP 클라이언트는 먼저 로컬 DNS 확인자를 통해 서버&rsquo; 도메인 이름을 확인하려고 시도합니다. 이 확인자는 이러한 해결 방법의 일부 로컬 캐시를 유지하는 경향이 있습니다. 즉, 모든 비콘에 DNS 요청이 표시될 것이라고 보장할 수 없습니다. 그러나 한 시간의 일부 배수에서 이러한 항목을 볼 수 있습니다.</p>


  <p>이러한 주기적 활동을 찾기 위해 유클리드&rsquo; 알고리즘의 버전을 사용하여 각 특정 도메인의 조회 간 시간의 대략적인 일반적인 수수를 추적합니다. 도메인&rsquo; GCD가 허용된 오류(예: 정확한 경우 1)에 속하면 추가 계산에서 무시될 도메인의 블룸 필터에 추가됩니다. 이 오류보다 큰 GCD를 가정하면 현재 GCD 또는 비콘 기간의 추정치와 관찰 횟수를 사용하여 이 기간의 배수에서 이 많은 동시 조회를 관찰할 확률을 계산합니다. 즉, 2초의 배수에서 모두 1/2^3 또는 8에서 1의 3&nbsp; 개의 동시 조회를 일부 도메인에 임의로 볼 수 있습니다. 반면, 이 예제와 마찬가지로 1시간의 배수에서 가장 가까운 초까지 세 개의 임의 조회를 볼 확률은 1/〖3600〗^3&nbsp; 또는 46,656,000,000에서 1입니다. 따라서 시간 델타가 길수록 주기적이라는 것을 확신하기 전에 관찰해야 하는 관찰 수가 줄어듭니다.</p>


  <h2>결론</h2>


  <p>위의 시나리오에서 설명한 것처럼 네트워크 아티팩트 분석은 엔드포인트에서 악의적인 활동을 검색하는 데 매우 유용할 수 있습니다. 이상적인 상황은 네트워크의 모든 컴퓨터에서 모든 프로토콜을 분석하는 것이지만 실제로는 수집 및 처리하기에는 비용이 너무 많이 듭니다. 단일 프로토콜을 선택하면 HTTP와 DNS 중에서 선택할 수 있는 데이터 수집 볼륨을 최소화하면서 악의적인 통신을 검색할 가능성이 가장 높습니다. DNS를 선택하면 직접 IP 연결을 검색할 수 없게 됩니다. 실제로는 고정 IP 주소가 상대적으로 부족하고 방화벽에서 이러한 연결을 차단할 가능성이 있기 때문에 드물게 발생합니다. DNS 검사의 이점은 비교적 작은 데이터 세트의 모든 클라이언트 운영 체제에서 가능한 모든 네트워크 프로토콜에서 연결을 관찰하는 기능입니다. 이 데이터의 압축은 공통 도메인의 호스트 캐싱의 기본 동작에 의해 더욱 도움이 됩니다.</p>


  <p align="left">&nbsp;</p>
