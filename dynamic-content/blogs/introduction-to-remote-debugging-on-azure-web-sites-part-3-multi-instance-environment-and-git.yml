### YamlMime:Yaml
ms.openlocfilehash: e51aaf76e868e7f452c4b7f5f13a23cae91d8f7e
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139901158"
Slug: introduction-to-remote-debugging-on-azure-web-sites-part-3-multi-instance-environment-and-git
Title: Azure 웹 사이트의 원격 디버깅 소개 3부 - 다중 인스턴스 환경 및 GIT
Summary: Azure 웹 사이트 원격 디버깅에 대한 이 시리즈의 이전 두 블로그 게시물에서 VS를 Azure에 연결하는 방법을 살펴보았습니다. 이 3번째 및 마지막 부분에서...
Content: >-
  Azure 웹 사이트 원격 디버깅에 대한 이 시리즈의 이전 두 블로그 게시물에서 VS를 Azure에 연결하는 방법을 살펴보았습니다. 이 시리즈의 마지막 3<sup>번째</sup>  및 마지막 부분에서는 몇 가지 고급 시나리오를 살펴보겠습니다. 여러 인스턴스가 있고 특정 인스턴스를 디버그하려는 경우 서버 쪽 인프라에서 이를 지원합니다. 먼저 여러 인스턴스에 대한 약간의 배경 및 원하는 인스턴스를 지정하는 방법을 설명합니다.


  여러 인스턴스에는 사이트 방문자 세션이 인스턴스에서 지역화되는 내재된 문제가 있습니다.따라서 '방문자 스티커'의 개념이 있어야합니다.사이트 방문자가 처음으로 웹 사이트로 가는 경우 인스턴스가 선택됩니다(임의로 또는 부하 또는 사용자 지정에 따라). 하지만 동일한 인스턴스로의 인스턴스는 <em>ubsequentcallsmustgo</em> <em></em> 입니다.이 작업은 쿠키를 사용하여 수행됩니다.클라이언트(브라우저)가 Azure 호스팅 웹 사이트를 처음 방문할 때 쿠키가 클라이언트에 다운로드됩니다.웹 사이트에 대한 후속 호출은 쿠키에 정의된 인스턴스로 전달됩니다.

  <h4>인스턴스 정의</h4>

  인스턴스 정의는  <em>keyARRaffinity</em>와 함께 쿠키를 사용하여 수행됩니다.각 인스턴스에 임의로 할당된  <em>Thevaluesare</em> 는 고유합니다.Azure SDK의 현재 릴리스에서는 인스턴스 지정이 아직 지원되지 않습니다.그러나 수동 메서드를 사용하여 디버그하려는 인스턴스를 지정할 수 있습니다.   <em>"</em><em>Azure 웹 사이트(Azure 웹 사이트)에 Visual Studio 원격 디버거 연결</em><em>"</em>을 참조하세요.


  사용자 이름을 지정하고 다음을 추가하면 파운드/해시 "#"과 ARR 선호도 쿠키의 처음 몇 문자가 추가됩니다.디버거는 'starts with' 일치를 사용하여 일치하므로 5자면 충분합니다.예:   <em>jaime_e#55f03</em> 의 사용자 이름 <em>jaime_e</em>   <em>55f03</em>으로 시작하는 ARR 쿠키입니다.


  <em>힌트: 자격 증명을 Visual Studio 저장한 경우(Windows 자격 증명 관리 시스템을 사용함) 자격 증명을 삭제하고 VS를 다시 시작하는 "제어판\사용자 계정 및 가족 안전\자격 증명 관리자"로 이동하여 이러한 자격 증명을 지울 수 있습니다.</em>

  <h4>인스턴스 값 찾기</h4>

  인스턴스의 <em>ARRaffinityyy</em> 를 읽으려면 클라이언트에 저장된 쿠키를 찾아 읽는 방법이 필요합니다.클라이언트가 브라우저인 경우 대부분의 브라우저에는 쿠키를 관리하고 보기 위한 도구가 포함된 개발자 모드가 포함됩니다. <a href="https://msdn.microsoft.com/en-us/library/dd565626(v=vs.85).aspx#cacheMenu">ForInternet</a>  <a href="https://developers.google.com/chrome-developer-tools/docs/resources">ExplorerandChromethe</a>  개발자 콘솔에 액세스하는 키는 <em>F12입니다. </em> 클라이언트 및 쿠키를 관리하는 방법에 따라 <em>ARRaffinityvalue</em> 를 읽는 방법이 다를 수 있습니다.


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1808/1362.Jaime-Espinosa_2D00_-FIGURE-12_2E00_.PNG"><img alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1808/1362.Jaime-Espinosa_2D00_-FIGURE-12_2E00_.PNG" border="0"></a>


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1808/0447.Jaime-Espinosa_2D00_-FIGURE-13_2E00_.PNG"><img alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1808/0447.Jaime-Espinosa_2D00_-FIGURE-13_2E00_.PNG" border="0"></a>

  <h4>Azure 웹 사이트에서 GIT 배포와 함께 원격 디버거 사용</h4>

  GIT 배포 소스 코드에서 원격 디버깅을 사용하는 것은 기본적으로 Azure 웹 사이트에서 사용하도록 설정됩니다.GIT를 사용하여 배포되는 소스 코드는 서버 쪽에서 컴파일됩니다. 기호 파일(pdb)은 항상 생성되지만 기본적으로 코드는 디버깅이 아닌 성능 최적화를 사용하여 컴파일됩니다.


  디버그 구성을 사용하여 소스 코드(다시 컴파일을 트리거)를 다시 배포하거나 "내 코드만" 디버깅을 사용하지 않도록 설정하여 원격 디버깅을 사용하도록 설정하는 두 가지 방법이 있습니다.


  아래 메서드 중 하나를 사용하여 디버깅을 최적화하도록 컴파일러에 명시적으로 지시해야 합니다.

  <h4>디버깅을 위한 컴파일러 구성</h4>

  GIT 배포 소스 코드가 컴파일되는 경우 SCM_BUILD_ARGS 키에서 찾은 컴파일러 플래그를 전달합니다.

  <h4>포털을 사용하여 플래그 추가</h4>

  웹 사이트에 대한 Azure Portal의 <strong>Configuretab</strong> 에서 앱 설정이라는 섹션을 찾을 수 있습니다.코드가 컴파일될 때 사용할 키/값 쌍을 추가할 수 있습니다.Key= SCM_BUILD_ARGS, Value= -p:Configuration=Debug


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1808/3288.Jaime-Espinosa_2D002900_-FIGURE-14_2E00_.png"><img alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1808/3288.Jaime-Espinosa_2D002900_-FIGURE-14_2E00_.png" border="0"></a>

  <h4>msbuild 명령에 플래그 추가</h4>

   <a href="https://github.com/projectkudu/kudu/wiki/Customizing-deployments">.deployment 파일</a>에서 컴파일 플래그를 지정할 수도 있습니다. 이 기능은 설정이 리포지토리의 일부가 되도록 하려는 경우에 유용합니다.기본 명령줄의 이전 부분을 재정의합니다.


  SCM_BUILD_ARGS=-p:Configuration=Debug

  <h4>원격 디버깅 시작</h4>

  이 시점부터는 평소처럼 원격 디버깅을 사용합니다.pdb 파일이 클라이언트가 아닌 서버에 있을 때 특히 원격 디버깅을 사용하도록 설정하기 위해 Azure 웹 사이트의 MSVSMON 버전이 변경되었습니다.이 작업은 자동으로 수행되며 다른 작업은 수행할 필요가 없습니다."<em>azure 웹 사이트에 Visual Studio 원격 디버거 연결</em><em>"</em> 이라는 블로그는 시작하는 데 필요한 단계를 보여 줍니다.


  Azure 웹 사이트의 GIT에 대한 자세한 내용은  <a href="https://github.com/projectkudu/kudu/wiki">GitHub Project Kudupage</a> 를 방문하세요.

  <h4>요약</h4>

  이 일련의 블로그 게시물에서는 여러 천사의 원격 디버깅에 대한 주제를 검토했으며, 이 기술을 사용하여 삶을 더 쉽게 만드는 데 대한 몇 가지 도구와 통찰력을 제공했습니다. 당연히 디버깅의 예술은 훨씬 더 광범위한 주제이며, 이 정보가 더 강력하고 안정적인 애플리케이션으로 가는 길에 유용하기를 바랍니다.


  이 시리즈의 1부를 읽으려면 여기를 클릭하십시오.


  이 시리즈의 2부를 읽으려면 여기를 클릭하세요.
