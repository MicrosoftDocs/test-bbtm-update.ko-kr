### YamlMime:Yaml
ms.openlocfilehash: 3391f303156f3f2ffe8da40dea4a068c65960f89
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139901164"
Slug: introducing-windows-azure-appfabric-applications
Title: Windows Azure AppFabric 애플리케이션 소개
Summary: '[이 문서는 AppFabric 팀에서 제공했습니다.] Karandeep Anand  &nbsp;  가 지난 10월 PDC 2010 기조연설에서 애플리케이션을 빌드, 실행 및 관리하는 비전을 공유했습니다...'
Content: '<p>[이 문서는 AppFabric 팀에서 제공했습니다.]</p><p>에 의해 게시 됨 카란데프 아난드</p>  <p>&nbsp;</p>  <p>지난 10월 PDC 2010 키노트에서 Azure에서 안정적으로 대규모 <a href="https://channel9.msdn.com/Events/PDC/PDC10/CS04" target="_blank"></a> 로 애플리케이션을 빌드, 실행 및 관리하는 Windows 비전을 공유했습니다. 그 이후로 팀은 비전을 현실로 만들기 위해 머리를 숙이고 있으며, 지난 달 TechEd 2011에서는 AppFabric 개발자 도구를 사용하여 AppFabric 애플리케이션을 빌드하고 AppFabric 컨테이너 서비스에서 실행하고 AppFabric 애플리케이션 관리자를 사용하여 관리하는 다양한 새로운 기능을 곧 출시할 것이라고 <a href="https://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/COS311" target="_blank">발표</a>&rsquo;했습니다. 오늘, 우리는 우리가 공개적으로 Windows Azure에서 이러한 기능의 첫 번째 Community CTP (기술 미리 보기)를 공유 할 수있는 날이 왔다는 것을 발표하게되어 매우 기쁘게 생각합니다! <a href="https://blogs.msdn.com/b/appfabric/archive/2011/06/20/announcing-the-windows-azure-appfabric-june-ctp.aspx" target="_blank">여기서</a> 발표한 대로 AppFabric의 6월 CTP는 현재 라이브 상태이며, 새 SDK 및 개발자 도구를 다운로드하고 AppFabric Labs 포털에서 <b>무료</b> 계정에 등록하여 시작할 수 있습니다. &rsquo;이제 Weve가 오늘 릴리스된 내용&rsquo;과 AppFabric 애플리케이션 빌드 및 관리를 시작하는 방법에 대해 자세히 알아봅니다.</p>  <p><span style="font-size: x-small;" size="2"><strong>AppFabric 애플리케이션</strong></span></p>  <p>&rsquo;먼저 AppFabric 애플리케이션을 말할 때의 의미를 정의합니다. 간단히 말해서, 웹, 중간 및 데이터 계층에 걸쳐 있고, 외부 서비스로 구성되며, 크기 조정 및 가용성을 위해 클라우드 아키텍처에 기본적으로 기록되는 n계층 .NET 애플리케이션입니다. CTP1에서는 SQL Azure, AppFabric 캐싱, AppFabric Service Bus 및 Azure Storage 같은 다른 Windows Azure 서비스를 사용하는 ASP.NET, WCF 및 Windows Workflow(WF) 애플리케이션에 대한 뛰어난 기본 환경에 초점을 맞추고 있습니다. 목표는 애플리케이션 개발자와 ISV가 이러한 기술을 활용하여 클라우드에서 확장 가능하고 고가용성 애플리케이션을 빌드하고 관리할 수 있도록 하는 것입니다. 또한 목표는 AppFabric 개발자 도구 및 AppFabric 애플리케이션 관리자를 통해 개발자와 IT 전문가 모두 코딩 및 테스트부터 배포 및 관리에 이르기까지 애플리케이션의 전체 수명 주기를 관리할 수 있도록 돕는 것입니다.</p>  <p>&rsquo;이제 퍼즐의 3가지 주요 부분과 AppFabric 애플리케이션의 수명 주기를 통해 이러한 퍼즐이 어떻게 결합되는지 자세히 살펴보겠습니다.</p>  <ol>  <li><b>개발자 도구</b></li>  <li><b>AppFabric 컨테이너</b></li>  <li><b>애플리케이션 관리자</b></li>  </ol>  <p>  <p><span style="font-size: x-small;" size="2"><strong>개발자 도구</strong></span></p>  <p>AppFabric 개발자 도구는 디자인 타임에 AppFabric 애플리케이션을 빌드하고 디버그하는 풍부한 Visual Studio 환경을 제공합니다. 개발자 도구의 주요 목표는 .NET 개발자가 .NET Framework를 통해 기존 기술과 지식을 활용하고 Visual Studio <i>확장</i>하여 Windows Azure에 쉽고 풍부한 방식으로 클라우드 지원 애플리케이션을 빌드할 수 있도록 하는 것입니다. 개발자 도구는 .NET 애플리케이션을 빌드하는 기존 방식의 확장입니다. 또한 추가 도구를 사용하면 개발자가 웹 및 중간 계층에서 실행되는 비즈니스 및 프레젠테이션 논리를 작성할 뿐만 아니라 풍부한 서비스 구성 환경을 통해 다른 서비스와 <i>함께 구성하여</i> 앱을 쉽게 보강하고 확장할 수 있습니다.</p>  <p>개발자 도구의 첫 번째 목표는 개발자가 이미 알고 있는 개념을 기반으로 확장 가능하고 사용 가능한 애플리케이션을 빌드&mdash;할 수&mdash; 있도록 하는 것입니다. AppFabric 컨테이너 서비스는 탄력적으로 크기를 조정하고 애플리케이션을 사용 가능하고 안정적으로 만드는 작업을 많이 수행합니다. 개발자 도구에서는 개발자가 애플리케이션 코드에서 이러한 기능을 활용하도록 하는 데 필요한 디자인 원칙 및 구성 노브 집합을 증류했으며, WCF 서비스 및 워크플로와 같은 기본 제공 구성 요소에 대한 간단한 구성 설정을 통해 이러한 기능을 제공했습니다. 또한 확장 가능하고 복원력 있는 상태 저장 서비스에 대한 상태 관리를 수행하는 강력한 프로그래밍 모델을 제공하지만 나중에 해당 항목에 대해 자세히 설명합니다. 개발자는 원하는 컨트롤의 양에 따라 크기 조정 인스턴스 수, 복제본 수, 분할 정책 등에 대한 의도를 지정합니다. 또는 기본 설정으로 이동하여 런타임에서 대부분의 설정을 관리하도록 할 수 있습니다. 모든 경우에 Azure에 배포될 때 가상화 및 자동 주소 확인과 같은 기본 클라우드 디자인 원칙은 기본 컴퓨팅 또는 네트워크 인프라를 생각할 필요 없이 자동으로 처리됩니다.</p>  <p>두 번째 목표는 오늘날 우리가 볼 수 있는 주요 추세를 기반으로 합니다. 민첩하고 경쟁력을 유지하기 위해 개발자는 핵심 제품에 가치를 더하는 코드를 빌드하는 데 집중하여 기존 서비스를 사용하거나 구성하려고 합니다. 기본 ID 및 액세스 관리에서부터 지역 간 복잡한 다자간 결제 처리에 이르기까지 모든 것을 도와주는 기존 웹 서비스의 대규모 에코시스템이 있습니다. 따라서 서비스 컴퍼지션은 더 이상 사후 고려가 아니라 애플리케이션 설계 및 빌드의 핵심 부분입니다. 이 문제를 해결하는 것은 AppFabric 개발자 도구 환경의 주요 디자인 원칙 중 하나가 되었습니다. 이 도구는 캐싱 또는 Storage 같은 자사 Azure 서비스를 사용하여 애플리케이션을 구성하고 Netflix 또는 PayPal 같은 외부 서비스를 사용할 수 있는 간단하면서도 강력한 환경을 제공합니다. 개발자 도구의 확장성을 통해 기본적으로 제공되는 서비스 구성 요소 목록도 <sup>타사</sup> 서비스 또는 자주 사용하는 사용자 지정 서비스를 포함하도록 확장할 수 있습니다. 아래 스크린샷은 ASP.Net 또는 캐싱(파란색)과 같은 기본 제공 서비스 구성 요소 목록과 Authorize.Net 및 Facebook(검은색)과 같은 사용자 지정 서비스 구성 요소 예제를 보여 줍니다.</p>  <p><a href=""><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="clip_image002" border="0" alt="clip_image002" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7674.clip_5F00_image002_5F00_thumb_5F00_563F6B3F.jpg" width="512" height="387"></a></p>  <p>개발자가 신속하게 시작할 수 있도록 캐싱 또는 풍부한 Silverlight 비즈니스 애플리케이션을 사용하는 고성능 ASP.NET 애플리케이션과 같이 일반적으로 사용되는 패턴을 사용하여 애플리케이션을 빌드하기 위한 몇 가지 템플릿을 제공합니다. 이러한 템플릿은 개발자 도구의 일부로 설치되며 AppFabric 애플리케이션 빌드를 쉽게 시작할 수 있는 방법을 제공합니다.</p>  <p>세 번째 주요 목표는 개발자가 애플리케이션 전체를 빌드하고 디버그할 수 있도록 하는 것입니다. 어떤 웹 사이트 또는 WCF 서비스가 섬이 아닙니다. 각각은 종단 간 다중 계층 애플리케이션의 일부입니다. AppFabric 개발자 도구는 Azure 개발자가 이미 잘 알고 있는 기존 Windows Azure Compute Emulator 기반으로 빌드하여 웹 계층, 중간 계층 및 데이터 계층&mdash;에 분산된 애플리케이션을 빌드하고 실행하는 로컬 시뮬레이션을 허용합니다.</p>  <p>마지막 디자인 피벗은 개발자가 웹 및 중간 계층 코드 아티팩트, 데이터베이스 및 스토리지 리소스 및 애플리케이션에서 참조하는 외부 서비스의 스펙트럼을 기준으로 엔드 투 엔드 다중 계층 애플리케이션을 쉽게 정의할 수 있도록 하는 것입니다. 이 메타데이터는 <b>컴퍼지션 모델로</b> 자동으로 캡처됩니다. 그런 다음, 관리 시스템(<b>Application Manager</b>)이 애플리케이션 수명 주기를 쉽게 관리하는 데 사용할 수 있도록 모델이 애플리케이션과 함께 패키지됩니다.</p>  <p>CTP1을 사용하면 먼저 이러한 핵심 원칙을 중심으로 구축된 <i>엔드 투 엔드</i> 개발자 환경을 사용하도록 설정하는 것이 목표입니다. Well&rsquo;은 향후 도구 반복을 진행하면서 개발 수명 주기의 각 단계에 대한 풍부한 환경을 구축합니다.</p>  <p><span style="font-size: x-small;" size="2"><strong>AppFabric 컨테이너</strong></span></p>  <p><b>AppFabric Container</b> Service는 WCF 및 WF와 같은 중간 계층 코드 또는 사용자 지정 코드를 대규모로 호스트하고 실행하기 위한 새로운 다중 테넌트 중간 계층 컨테이너입니다. AppFabric 컨테이너는 복원력 있고 확장 가능하며 다중 테넌트로 설정되었으며 사용자 지정 코드, WCF 서비스 또는 워크플로를 실행하는 데 필요한 프레임워크 및 런타임으로 미리 프로비전된 대규모 컴퓨터 클러스터로 구성됩니다. AppFabric 컨테이너를 사용하면 개발자와 관리자가 기본 컴퓨팅, 네트워킹 및 스토리지 인프라의 복잡성을 처리할 필요가 없&rsquo;도록 추상화 수준을 높입니다. 개발자는 비즈니스 논리에 집중할 수 있으며 런타임에서 분할, 복제, 상태 관리, 주소 가상화, 동적 주소 확인, 장애 조치, 격리, 복원력, 부하 분산, 라우팅 요청 등의 복잡한 세부 정보를 관리할 수 있습니다. 애플리케이션 관리자를 사용하거나 Visual Studio 직접 AppFabric 컨테이너에 WCF 서비스, 워크플로 또는 사용자 지정 .NET 코드를 패키지하고 삭제하고 컨테이너 호스트에서 애플리케이션을 실행하고 크기를 조정할 수 있습니다. 그런 다음, 앉아서 Application Manager를 통해 서비스의 서비스 수준 목표를 관리합니다.</p>  <p>또한 AppFabric 컨테이너를 사용하면 WCF &amp; Windows 워크플로(WF)에 대해 다양한 호스팅 시나리오 &amp; 구성을 수행할 수 있습니다. AppFabric Container가 제공하는 통합을 통해 조정된 서비스(예: 메시지 활성화 WCF 서비스)를 빌드하고 실행할 수 Service Bus. 또한 AppFabric Container에서 상태를 쉽게 유지하도록 지원하고 관리 엔드포인트를 통해 비즈니스 프로세스 가시성을 제공하여 인스턴스 상태를 가져올 수 있는 풍부한 WF 애플리케이션을 실행할 수 있습니다. Well&rsquo;은 향후 블로그 게시물에서 AppFabric Container를 사용하여 Windows Azure에서 실행할 WCF &amp; WF 애플리케이션을 빌드하는 방법에 대해 자세히 설명합니다.</p>  <p><span style="font-size: x-small;" size="2"><strong>애플리케이션 관리자</strong></span></p>  <p>애플리케이션 관리자는 퍼즐의 마지막 부분입니다. 수명 주기&mdash;를 통해 AppFabric 애플리케이션을 <i>단일 논리 애플리케이션으로</i> 구성, 배포, 제어, 모니터링, 모니터링, 문제 해결 및 크기 조정을 통해 관리할 수 있는 인프라 및 도구입니다. 애플리케이션의 메타데이터(예: 컴퍼지션 모델)를 사용하여 다중 계층 애플리케이션의 구성 요소, 종속성 및 요구 사항을 자동으로 이해하므로 필요하지 않습니다&rsquo;. 아래 스크린샷은 웹, 중간 및 데이터 계층에 걸쳐 있는 샘플 애플리케이션을 보여 줍니다. 애플리케이션은 Windows Azure 및 외부 <sup>타사</sup> 서비스로 구성되지만 Application Manager에서 <i>단일 단위</i>로 관리되고 있습니다.</p>  <p><a href=""><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="clip_image004" border="0" alt="clip_image004" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6254.clip_5F00_image004_5F00_thumb_5F00_2296D4B2.jpg" width="789" height="636"></a></p>  <p>애플리케이션 관리자가 n 계층 애플리케이션을 게시하거나 업로드할 때 가장 먼저 수행하는 작업 중 하나는 종단 간 애플리케이션 구조 및 해당 내용을 이해하는 데 도움이 되는 것입니다. 그런 다음, 자세한 WCF 구성 설정&mdash;과 같은 설정 시간 제한 및 동시 연결 수 또는 프로덕션 및 스테이징에서 연결할 데이터베이스와 같은 간단한 환경 설정을 포함하여 전체 애플리케이션 및 모든 부분을 중앙에서 <b>구성할</b> 수 있습니다. 애플리케이션 구성이 완료되면 한 번의 클릭으로 여러 웹 컨테이너 및 AppFabric 컨테이너에 전체 애플리케이션을 <b>배포</b> 할 수 있습니다. 또한 애플리케이션을 SQL Azure, 캐싱, Blob Storage, Service Bus 큐 등을 포함하되 이에 국한되지 않는 모든 내부 및 외부 참조 서비스에 연결합니다. 또한 ACS(Access Control Service)를 사용하여 네임스페이스를 보호합니다. 여러 계층에 걸쳐 분산 애플리케이션을 배포한 모든 사용자는 한 번의 클릭으로 애플리케이션 관리자가 겪게 될 모든 고통을 이해합니다. 가상 머신, 네트워크 설정 또는 스토리지 구성을 한 번도 처리해야 하는 경우는 한 번도 없습니다.</p>  <p>애플리케이션을 중앙에서 구성하고 배포하는 것 외에도 애플리케이션 관리자는 인증서를 관리하여 애플리케이션을 보호하고, 앱에 대한 모니터링 및 진단 저장소를 자동으로 구성하고, 네임스페이스에 배포된 서비스에 적합한 엔드포인트와 URI를 만들 수 있습니다.</p>  <p>애플리케이션 관리자의 다른 주요 투자는 애플리케이션에 대한 기본 모니터링 및 문제 해결 지원에 있습니다. 배포된 애플리케이션 사용을 시작하면 요청 수, ASP.NET 및 WCF 서비스에 대한 대기 시간 번호 요청,&rsquo; DB 호출 실행 시간 SQL, 캐시 호출 횟수 등과 같은 기본 ASP.NET 메트릭에서 애플리케이션&mdash;에 대해 자동으로 생성되고 수집되는 다양한 메트릭 집합을 확인할 수 있습니다. 개발 중에 코드 한 줄을 작성하지 않고 모두! 또한 이러한 메트릭은 웹 및 AppFabric 컨테이너에서 실행되므로 스케일 아웃된 애플리케이션의 모든 인스턴스에서 집계됩니다. 또한 애플리케이션에서 참조하는 PayPal 서비스와 같은 사용자 지정 구성 요소를 빌드한 경우 CTP1에서 사용자 지정 메트릭을 생성할 수도 있습니다. 그런 다음, 보낸 주문 수, 처리된 $1000 이상의 주문 수와 같은 항목 추적을 시작하고 Application Manager에서 풍부한 차트 컨트롤을 사용하여 다른 기본 제공 메트릭과 함께 렌더링된 사용자 지정 메트릭을 볼 수 있습니다.</p>  <p>비슷한 줄&rsquo;에서 앱이 지정된 시점에 배포되는 웹 및 AppFabric 컨테이너의 모든 인스턴스에서 모든 문제 해결 로그를 수집하고 중앙 집중화하여 분산 애플리케이션의 문제 해결을 훨씬 더 쉽게 만들었습니다(빌드할 때 앱의 진단 수준을 선택할 수 있습니다). 모든 로그는 애플리케이션 관리자의 한 위치에서 사용할 수 있으며, 자세한 디버깅 및 진단을 위해 SvcTraceViewer 도구에서 다운로드한 로그를 열 수 있습니다. 더 이상 수많은 스크립트를 작성하고, 파일을 피어하고, 인프라 문제를 애플리케이션 문제와 분리할 필요가 없습니다. UI를 통해 프로그래밍 방식으로 REST API를 통해 모든 로그를 가져옵니다. 예, 사용자 고유의 사용자 지정 대시보드 및 관리 도구를 사용하여 UI에서 수행할 수 있는 모든 작업을 자동화하거나 프로그래밍 방식으로 액세스할 수 있도록 전체 REST API(및 PowerShell 샘플도 제공)를 제공합니다.</p>  <p>마지막으로 애플리케이션 관리자를 사용하면 한 번의 클릭으로 애플리케이션을 스케일 아웃할 수 있습니다. 애플리케이션의 여러 부분을 확장하려는 인스턴스 수를 선택합니다(청구서를 지불할 때 CTP1의 최대 확장 수에 제한이 있습니다!). &mdash;또한 가동 중지 시간 없이 애플리케이션을 자동으로 탄력적으로 확장합니다.</p>  <p>나는 CTP1 비트로 할 수있는 모든 시원하고 강력한 것들을 설명하는 동안 계속 할 수 있지만, Ill&rsquo;은 우리가이 기술 미리보기를 공유하고 당신이&rsquo; 그들을 시도하고 우리가&rsquo; 구축 한 모든 것을 발견 할 수 있기를 바랍니다 매우 기쁘게 생각합니다 말함으로써이 블로그 게시물을 마무리,  애플리케이션을 빌드하고 관리하는 대화를 다음 단계로 끌어올 수 있습니다. CTP1의 용량이 제한되어 있으므로 무료 계정에 빠르게 등록할 수 있습니다.</p>  <p>우리는 앞으로 흥미로운 로드맵을 가지고 있지만, 우리는&rsquo; 지금 미래의 블로그 게시물에 &ndash; 도착, 당신은 CTP1와 경험에 대해 무슨 말을해야 하는지 <a href="https://social.msdn.microsoft.com/Forums/en-US/appfabricctp" target="_blank">듣고</a> wed&rsquo; 사랑. 앞으로 몇 주 동안&rsquo; 일련의 블로그 게시물을 시청하여 오늘 논의된 3가지 주요 부분&rsquo;의 다양한 시나리오, 기능 및 기능에 대해 더 자세히 설명합니다. 한편 AppFabric June CTP SDK를 사용하여 설치되는 샘플로 시작하거나 <a href="https://msdn.microsoft.com/en-us/library/hh182177.aspx" target="_blank">MSDN</a>에서 사용할 수 있는 자습서를 사용할 수 있습니다. 또한 채널 9에서 론 제이콥스와 제가 위에서 논의한 내용에 대한 간략한 개요와 데모를 제공하기 위해 했던 <a href="https://channel9.msdn.com/Shows/AppFabric-tv/AppFabrictv-Announcing-the-Windows-Azure-AppFabric-June-CTP" target="_blank">이 짧은 비디오를</a> 시청할&rsquo; 수 있습니다.</p>  <p>Windows Azure에서 풍부한 클라우드 애플리케이션을 빌드하고 관리하는 새로운 시대에 오신 것을 환영합니다!</p>  <p><a href="" target="_blank"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="clip_image005" border="0" alt="clip_image005" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5315.clip_5F00_image005_5F00_259A773D.png" width="184" height="104"></a></p>  <p>AppFabric 팀의 카란데프 아난드</p>'
