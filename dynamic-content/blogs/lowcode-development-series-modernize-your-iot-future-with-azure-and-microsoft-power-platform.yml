### YamlMime:Yaml
ms.openlocfilehash: 5e30505fe8152105cb654773ec046e1f02beb70a
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139911764"
Slug: lowcode-development-series-modernize-your-iot-future-with-azure-and-microsoft-power-platform
Title: '로우 코드 개발 시리즈: Azure 및 Microsoft Power Platform을 사용하여 IoT 미래 현대화'
Summary: >
  이번 달 웹 세미나는 "Power Platform을 통해 Azure IoT 미래의 잠금 해제"입니다. 이 블로그에서는 Azure의 LCAD를 간략하게 요약하고, Azure 및 Azure Functions의 IoT 개요, Azure Function을 Power Automate 끌어오는 방법 및 Power Automate 흐름을 Power Apps 통합하는 방법을 제공합니다.
Content: >-
  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4032ef03-0cfe-4e40-a999-e6982b1a3be3.gif"><img alt="Unlock the Future of Azure IoT through Power Platform" height="577" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fa481dc8-7649-479a-a6bc-f9100faeae71.gif" style="display: inline;" title="" width="1024"></a></p>


  <p>2021년에는 매달 Azure 솔루션의 LCAD(로우 코드 애플리케이션 개발)에 대한 월의 웨비나를 다루는 월간 블로그가 있습니다. Azure의 LCAD는 코드가 낮은 Microsoft Power Apps Azure 제품을 통합하는 강력한 개발 기능을 보여 주는 솔루션입니다.&nbsp;&nbsp;</p>


  <p>이번 달&rsquo; 웨비나 Power &ldquo;<a href="https://info.microsoft.com/ww-Landing-UnlocktheFutureofAzureIoTthroughPowerPlatform.html?LCID=EN-US" target="_blank">Platform을 통해 Azure IoT 미래의 잠금 해제</a>입니다.&rdquo; 이 블로그에서는 <a href="https://azure.microsoft.com/en-us/solutions/low-code-application-development/" target="_blank">Azure의 LCAD</a>를 간략하게 요약하고, Azure 및 Azure Functions의 IoT 개요, Azure Functions를 Microsoft Power Automate 끌어오는 방법 및 Power Automate 흐름을 Power Apps 통합하는 방법을 설명합니다.</p>


  <h2>Azure의 LCAD란?&nbsp;</h2>


  <p><a href="https://azure.microsoft.com/en-us/solutions/low-code-application-development/" target="_blank">Azure의 LCAD</a> 는 개발자가 더 적은 코드로 비즈니스 애플리케이션을 더 빠르게 빌드할 수 있도록 돕기 위해 만들어졌습니다. MicrosoftPower&nbsp; Platform을 활용하고 보다 구체적으로 Power Apps 개발자는 Azure 서비스를 통해 Power Apps 확장하고 확장할 수 있습니다. 예를 들어 제조 회사에서 일하는 프로 개발자는 웨어하우스 직원이 들어오는 재고를 추적할 수 있도록 LOB(기간 업무) 애플리케이션을 빌드해야 합니다. 해당 애플리케이션을 빌드, 테스트 및 배포하는 데 몇 달이 걸립니다. Power Apps 사용하면 시간 및 리소스를 빌드&mdash;하는 데 몇 시간밖에 걸리지 않습니다.&nbsp;</p>


  <p>그러나 현재 재고가 낮게 결정되면 웨어하우스 직원이 애플리케이션에서 추가 재고에 대한 조달 주문을 자동으로 배치하기를 원한다고 가정해 봅시다. 과거에 개발 팀은 이전 애플리케이션 반복을 재작업하기 위해 또 다른 무거운 리프트를 필요로 했습니다. Power Apps Azure의 통합으로 인해 전문 개발자는 APIin&nbsp; Visual Studio(VS) 코드를 빌드하고, Azure Portal에 게시하고, API를 Power Apps 내보내서 애플리케이션에 사용자 지정 커넥터로 통합할 수 있습니다.</p>


  <p>나중에 다른 애플리케이션과 함께 사용할 수 있도록 Power Apps&rsquo; 스튜디오에서 동일한 API를 무기한 재사용할 수 있으므로 회사와 개발자가 더 많은 시간과 리소스를 절약할 수 있습니다.</p>


  <h2>Azure 및 Azure Functions의 IoT</h2>


  <p>이 웹 세미나는 Azure IoT Hub 및 Power Apps 사용하여 IoT 디바이스를 제어하는 방법을 이해하는 것을 목표로 합니다. 시작하려면 Azure IoT Hubto&nbsp;에서 코드를 작성하여 IoT 디바이스에 직접 명령을 보냅니다. 이 웨비나에서 Samuel은 node for Azure IoT Hub에 쓴 다음 두 가지 기본 명령인&nbsp; 팬 켜&nbsp;기/해제를 작성했습니다.</p>


  <p>명령은 Azure IoT Hub의 코드를 통해&nbsp; 전송되며, 처음에는 runlocally&nbsp;입니다. 테스트하고 올바르게 실행되는 것으로 확인되면 다음 질문은 전 세계 어디에서 API를 신속하게 호출할 수 있는가하는 것입니다. 대답은 Power Automate 흐름을 만들고 해당 흐름을 Power Apps 연결하는 것입니다. 이 대시보드는 전 세계 어디에서나 IoT 디바이스를 제어하는 완전한 대시보드가 됩니다. 이 작업을 수행하려면 먼저 Azure Function을 만들어야 합니다. 그러면 흐름을 만드는 <strong>Get</strong> 함수를 사용하여 Power Automate 끌어오게 됩니다.</p>


  <p>Azure 함수를 빌드한&#39;먼저 로컬에서 실행하고 테스트한 후 Azure Function URL을 통해&nbsp; 켜기 및 끄기 상태를 테스트합니다. Azure Function에 대한 트리거를 빌드하려면 이 경우 Power Automate 흐름에서 Azure 함수를 확인하고 로컬 기능을 테스트하는 Azure 리소스 그룹을 만들어야 합니다. 테스트에 실패하면 IoT 디바이스에 대한 액세스 토큰을 만들지 않았거나 액세스 토큰이 없을 수 있습니다. 디바이스, IoT 또는 클라우드에 연결하려면 액세스 토큰이 있어야 합니다.</p>


  <p>웹 세미나에서 Samuel은 온/오프 명령에 대한 두 가지 애플리케이션 설정을 함수에 추가했습니다. 이러한 액세스 토큰을 추가하고 IoT 디바이스의 설정을 조정한 후 Samuel은 Azure Function을 성공적으로 실행할 수 있었습니다.</p>


  <h2>Power Automate 사용하여 자동화된 Azure Function</h2>


  <p>Azure Function을 빌드한 후 Power Automate 흐름을 빌드하여 IoT 디바이스를 작동하도록 전역적으로 액세스 가능한 대시보드 빌드를 시작할 수 있습니다. 새뮤얼은 기본 Power Automate 프레임워크를 빌드한 다음 흐름으로 시작하여 흐름이 완료되면 흐름을 테스트하는 방법을 보여 줍니다. HTTP 요청으로 시작하고 <strong>Getcommand</strong>&nbsp;를 구현합니다. 여기에서 IoT 디바이스를 테스트하고 실행할 수 있는 간단한 프로세스입니다.</p>


  <h2>Power Apps Power Automate 흐름</h2>


  <p>Power Automate 흐름을 빌드한 후 팬을 켜고 끄는 간단한 UIto&nbsp;를 개발합니다. 캔버스 Power App을 빌드하고 앱으로 Power Automate 흐름을 가져와서 이 작업을 수행합니다.</p>


  <p>시작하려면 빈 캔버스 앱을 만들고 이름을 지정합니다. Power Apps 리본에서 <strong>단추를</strong> 선택하고 단추&rsquo; 원본을 선택하고 <strong>Power Automate</strong>&nbsp; 및 <strong>흐름 추가를</strong> 선택합니다. Azure IoT 연결된 흐름을 선택하면 deviceits&mdash; 이름이 선택 메뉴에 반영되어야 합니다. 모든 항목이 올바르게 실행되면 IoT 디바이스가 켜집니다. 웨비나에서 Samuel은 시간이 부족하여 캔버스 앱으로 가져오는 새로운 Power Automate 흐름을 만듭니다.</p>


  <h2>자세한 정보</h2>


  <ul>
      <li>Power Platform &rdquo; 을 <a href="https://info.microsoft.com/ww-Landing-UnlocktheFutureofAzureIoTthroughPowerPlatform.html?LCID=EN-US" target="_blank">통해 Azure IoT 웹</a> 세미나 &ldquo; 잠금 해제를 시청하여 Azure IoT 및 Azure Functions를 Power Apps 가져오는 방법에 대해 자세히 알아보세요.</li>
      <li>또한 새 <a href="https://docs.microsoft.com/en-us/learn/paths/transform-business-applications-with-fusion-development/" target="_blank">.NET x Power Apps 학습 경로</a>, Azure Functions와의 통합, Visual Studio 및 API Management를 다루는 <a href="https://register.build.microsoft.com/" target="_blank">Microsoft Build</a> 기간 동안 Azure Learn Livesession&nbsp;에 대한 코드가 낮은 애플리케이션 개발이 있을 것입니다.</li>
  </ul>
