### YamlMime:Yaml
ms.openlocfilehash: fca46a98425cc7e15dce12bd508e3acb06edbd77
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139901232"
Slug: generating-a-bcp-utility-script-for-sql-azure
Title: SQL Azure BCP 유틸리티 스크립트 생성
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] 테이블을 SQL Server SQL Azure 마이그레이션하는 경우 bcp 유틸리티를 사용하여 SQL Server 데이터를 ...로 그리는 것이 가장 쉬운 방법 중 하나입니다.'
Content: <p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>테이블을 SQL Server SQL Azure 마이그레이션하는 경우 <a href="https://msdn.microsoft.com/en-us/library/ms162802(SQL.105).aspx">bcp 유틸리티</a>를 사용하여 SQL Server 데이터를 파일로 그린 다음 파일에서 SQL Azure 데이터를 이동하는 것이 가장 쉬운 방법 중 하나입니다. 그러나 bcp 유틸리티는 각 테이블에 대해 단일 명령을 실행하여 한 번에 하나의 테이블의 데이터를 이동해야 하므로 모든 bcp 유틸리티 명령을 직접 작성하는 것이 지루할 수 있습니다(초기 블로그 게시물에서 SQL Azure bcp 유틸리티를 사용하는 방법에 대한 자세한 정보 알아보기). 단일 일괄 처리 파일을 사용하여 모든 테이블을 이동하는 것이 좋지 않습니까? 이 문서에서는 전체 데이터베이스를 이동하는 데 필요한 모든 bcp 유틸리티 명령을 사용하여 일괄 처리 파일을 만드는 Transact-SQL 스크립트를 제공합니다.</p>  <h4>준비 단계</h4>  <p>아래 스크립트를 실행하기 전에 다음을 수행합니다.</p>  <ul>   <li>bcp 유틸리티를 사용하여 파일을 이동하기 전에 SQL Azure 데이터베이스 스키마를 이미 만들어야 합니다. 스크립트 생성 마법사를 사용하여 이 작업을 수행할 수 있습니다. 자세한 내용은 이전 블로그 게시물을 참조하세요. </li>    <li>SQL Azure 대상 데이터베이스의 테이블은 비어 있어야 합니다. 즉, 동일한 대상 데이터베이스에서 BCP 유틸리티 일괄 처리 파일을 두 번 실행하면 안 됩니다. </li>    <li>아래 스크립트는 원본 SQL Server 데이터베이스에 연결된 SQL Server Management Studio 실행됩니다. 스크립트를 실행하기 전에 원본 SQL Server 및 대상 SQL Azure 서버를 반영하도록 스크립트 맨 위에 있는 변수를 수정해야 합니다. </li> </ul>  <p>Transact-SQL 스크립트는 Transact-SQL PRINT 문을 사용하여 일괄 처리 파일에 대한 명령을 생성합니다. 스크립트를 실행한 후 전체 출력을 .bat 확장이 있는 파일에 복사합니다. 배치 파일이 만들어지면 명령줄에서 실행하여 데이터베이스의 이동을 용이하게 할 수 있습니다.</p>  <h4>기본 키 유지</h4>  <p><b>IDENTITY</b>를 사용하여 데이터베이스에서 기본 키를 생성하는 경우 생성된 bcp 유틸리티 명령은 –E 플래그를 사용하여 기본 키의 번호를 유지합니다. 그러나 외신 키의 참조 무결성은 삽입될 때 검사되지 않습니다. 테이블 간의 종속성에 관계없이 행을 삽입할 수 있도록 이 작업을 수행했습니다. 기본 키는 외세의 키 앞에 삽입할 필요가 없습니다.</p>  <p>기본 키가 다시 생성되지 않으므로 일괄 처리 파일이 실행되는 동안 원본 데이터베이스도 기록되지 않는 한 위반된 제약 조건이 없어야 합니다. 여기에 문제가 있습니다. 원본 데이터베이스가 읽기 전용 모드인지 또는 애플리케이션이 데이터를 쓰고 있지 않은지 확인해야 합니다. bcp 유틸리티 명령은 큰 트랜잭션 내부에 래핑되지 않습니다. 일괄 처리 파일의 첫 번째 명령이 실행되는 시간과 마지막 명령 사이에는 상당한 시간이 있을 수 있습니다. 이렇게 하면 데이터 쓰기가 가능합니다.</p>  <h4>스크립트</h4>  <pre class="csharpcode"><span class="kwrd">SET</span> NOCOUNT <span class="kwrd">ON</span>    <span class="kwrd">DECLARE</span> @DestServer nvarchar(<span class="kwrd">max</span>)  <span class="kwrd">DECLARE</span> @DestDatabase nvarchar(<span class="kwrd">max</span>)  <span class="kwrd">DECLARE</span> @DestLogin nvarchar(<span class="kwrd">max</span>)  <span class="kwrd">DECLARE</span> @DestPassword nvarchar(<span class="kwrd">max</span>)    <span class="kwrd">DECLARE</span> @SrcServer nvarchar(<span class="kwrd">max</span>)  <span class="kwrd">DECLARE</span> @SrcDatabase nvarchar(<span class="kwrd">max</span>)  <span class="kwrd">DECLARE</span> @SrcLogin nvarchar(<span class="kwrd">max</span>)  <span class="kwrd">DECLARE</span> @SrcPassword nvarchar(<span class="kwrd">max</span>)    <span class="rem">-- SQL Azure Server</span>  <span class="kwrd">SET</span>        @DestServer = <span class="str">'yourServer.database.windows.net'</span>  <span class="kwrd">SET</span>        @DestDatabase = <span class="str">'yourDatabase'</span>  <span class="kwrd">SET</span>        @DestLogin = <span class="str">'yourLogin@yourServer'</span>  <span class="kwrd">SET</span>        @DestPassword = <span class="str">'yourPassword'</span>    <span class="rem">-- SQL Server</span>  <span class="kwrd">SET</span>        @SrcServer = <span class="str">'yourServer'</span>  <span class="kwrd">SET</span>        @SrcDatabase = <span class="str">'yourDatabase'</span>  <span class="kwrd">SET</span>        @SrcLogin = <span class="str">'yourLogin'</span>  <span class="kwrd">SET</span>        @SrcPassword = <span class="str">'yourPassword'</span>    <span class="kwrd">PRINT</span> <span class="str">'echo %DATE% %TIME% &gt; bcp.log'</span>  <span class="kwrd">PRINT</span> <span class="str">''</span>    -------------------------------------------------<span class="rem">--</span>    <span class="kwrd">DECLARE</span> @<span class="kwrd">Schema</span> nvarchar(<span class="kwrd">max</span>)  <span class="kwrd">DECLARE</span> @<span class="kwrd">Table</span> nvarchar(<span class="kwrd">max</span>)    <span class="kwrd">DECLARE</span> table_cursor <span class="kwrd">CURSOR</span> <span class="kwrd">FOR</span>      <span class="kwrd">SELECT</span> TABLE_SCHEMA, TABLE_NAME      <span class="kwrd">FROM</span> information_schema.tables       <span class="kwrd">WHERE</span> Table_Type = <span class="str">'BASE TABLE'</span>      <span class="kwrd">OPEN</span> table_cursor;    <span class="rem">-- Perform the first fetch.</span>  <span class="kwrd">FETCH</span> <span class="kwrd">NEXT</span> <span class="kwrd">FROM</span> table_cursor <span class="kwrd">INTO</span> @<span class="kwrd">Schema</span>, @<span class="kwrd">Table</span>;    <span class="rem">-- Check @@FETCH_STATUS to see if there are any</span>  <span class="rem">-- more rows to fetch.</span>  <span class="kwrd">WHILE</span> <span class="preproc">@@FETCH_STATUS</span> = 0  <span class="kwrd">BEGIN</span>        <span class="kwrd">PRINT</span> <span class="str">'REM Download '</span> + @<span class="kwrd">Schema</span> + <span class="str">'.'</span> + @<span class="kwrd">Table</span>      <span class="kwrd">PRINT</span> <span class="str">'echo bcp.exe '</span> + @SrcDatabase + <span class="str">'.'</span> + @<span class="kwrd">Schema</span> + <span class="str">'.'</span> +          @<span class="kwrd">Table</span> + <span class="str">' out '</span> +           @<span class="kwrd">Schema</span> + <span class="str">'.'</span> + @<span class="kwrd">Table</span> + <span class="str">'.bcp -q -h &quot;TABLOCK&quot; -N -CRAW -S'</span> +          @SrcServer + <span class="str">' &gt;&gt; bcp.log'</span>      <span class="kwrd">PRINT</span> <span class="str">'bcp.exe '</span> + @SrcDatabase + <span class="str">'.'</span> + @<span class="kwrd">Schema</span> + <span class="str">'.'</span> + @<span class="kwrd">Table</span> +           <span class="str">' out '</span> + @<span class="kwrd">Schema</span> + <span class="str">'.'</span> + @<span class="kwrd">Table</span> +           <span class="str">'.bcp -q -h &quot;TABLOCK&quot; -N -CRAW -S'</span> + @SrcServer +           <span class="str">' -U'</span> + @SrcLogin + <span class="str">' -P'</span> + @SrcPassword + <span class="str">' &gt;&gt; bcp.log'</span>      <span class="kwrd">PRINT</span> <span class="str">''</span>        <span class="kwrd">PRINT</span> <span class="str">'REM Upload '</span> + @<span class="kwrd">Schema</span> + <span class="str">'.'</span> + @<span class="kwrd">Table</span>      <span class="kwrd">PRINT</span> <span class="str">'echo bcp.exe '</span> + @DestDatabase + <span class="str">'.'</span> + @<span class="kwrd">Schema</span> + <span class="str">'.'</span> +           @<span class="kwrd">Table</span> + <span class="str">' in '</span> + @<span class="kwrd">Schema</span> + <span class="str">'.'</span> + @<span class="kwrd">Table</span> +           <span class="str">'.bcp -q -h &quot;TABLOCK&quot; -N -E -CRAW -S'</span> + @DestServer +          <span class="str">' &gt;&gt; bcp.log'</span>      <span class="kwrd">PRINT</span> <span class="str">'bcp.exe '</span> + @DestDatabase + <span class="str">'.'</span> + @<span class="kwrd">Schema</span> + <span class="str">'.'</span> +           @<span class="kwrd">Table</span> + <span class="str">' in '</span> + @<span class="kwrd">Schema</span> + <span class="str">'.'</span> + @<span class="kwrd">Table</span> +            <span class="str">'.bcp -q -h &quot;TABLOCK&quot; -N -E -CRAW -S'</span> + @DestServer +            <span class="str">' -U'</span> + @DestLogin + <span class="str">' -P'</span> + @DestPassword + <span class="str">' &gt;&gt; bcp.log'</span>      <span class="kwrd">PRINT</span> <span class="str">''</span>           <span class="rem">-- This is executed as long as the previous fetch succeeds.</span>     <span class="kwrd">FETCH</span> <span class="kwrd">NEXT</span> <span class="kwrd">FROM</span> table_cursor  <span class="kwrd">INTO</span> @<span class="kwrd">Schema</span>, @<span class="kwrd">Table</span>;  <span class="kwrd">END</span>    <span class="kwrd">CLOSE</span> table_cursor;  <span class="kwrd">DEALLOCATE</span> table_cursor;</pre>      <h4>요약</h4>    <p>질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>
