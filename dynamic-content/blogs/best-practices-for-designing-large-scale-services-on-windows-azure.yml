### YamlMime:Yaml
ms.openlocfilehash: 2c99bb6e1eabefd6f721138e4620a0cb6e441604
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902209"
Slug: best-practices-for-designing-large-scale-services-on-windows-azure
Title: Windows Azure에서 Large-Scale Services를 디자인하기 위한 모범 사례
Summary: '편집자&rsquo; 주: 오늘의&rsquo; 게시물은 제이슨 로스, 수석 프로그래밍 작가에서 온다. 고객 자문 팀의 새로운 백서에 대한 개요를 제공하며, 모범 사례를 다룹니다.'
Content: '<p><b>편집자&rsquo; 주:</b> 오늘의&rsquo; 게시물은 <a href="https://social.msdn.microsoft.com/profile/jasonroth/" target="_blank">제이슨 로스</a>, 수석 프로그래밍 작가에서 온다. 그는 고객 자문 팀의 새로운 백서에 대한 개요를 제공하며, Windows Azure에서 대규모 서비스를 설계하기 위한 모범 사례를 다룹니다.</p>  <p>최근에 새 백서를 발표했습니다. Windows Azure Cloud Services의 Large-Scale Services 디자인 모범 사례. 이 문서는 실제 고객 참여를 기반으로 하는 디자인 패턴 및 지침의 컴파일입니다. 실제 Windows Azure 애플리케이션에 대해 일관되게 성공한 것으로 입증된 최상의 전략 및 디자인 패턴을 결합합니다.</p>  <h4><b>먼저 플랫폼 이해</b></h4>  <p>이 문서를&rsquo; 읽으면 다음과 같은 세 가지 주요 섹션이 있습니다.</p>  <ul>  <li>디자인 개념</li>  <li>Windows Azure 탐색</li>  <li>모범 사례</li>  </ul>  <p>모범 사례로 직접 건너뛰는 것이 좋습니다. 하지만 이러한 모범 사례는 처음 두 섹션의 정보에서 파생된다는 점에 유의해야 합니다. 모든 애플리케이션은 고유합니다. 먼저 Windows Azure 플랫폼과 일반적인 디자인 원칙을 이해하는 것이 중요합니다. 이는 올바른 최적화를 선택할 뿐만 아니라 올바른 구현을 달성하는 데에도 도움이 됩니다.</p>  <h4><b>좋은 디자인 -- 노력의 가치</b></h4>  <p>모든 대규모 애플리케이션 디자인은 신중한 생각, 계획 및 잠재적으로 복잡한 구현을 사용합니다. Windows Azure의 경우 가장 기본적인 디자인 원칙 중 하나는 스케일 아웃입니다. 스케일 아웃 전략은 점점 더 강력하고 비용이 많이 드는 하드웨어에 투자하는 대신, 더 많은 컴퓨터 또는 서비스 인스턴스를 추가하여 증가하는 수요에 대응합니다.</p>  <p>대부분의 모범 사례에는 각 Windows Azure 서비스에 대한 규모 확장이 포함됩니다. 예를 들어 Windows Azure에서는 SQL Database 실행하는 서버를 확장할 수 없습니다. 대신 추가 SQL Database 인스턴스를 사용할 수 있도록 애플리케이션을 디자인해야 합니다. 여기에는 데이터에 대한 일부 유형의 분할 전략이 포함됩니다.</p>  <p>물론 올바른 분할 전략을 선택하고 파티션 간의 작업을 성공적으로 조정하는 것이 과제입니다. 이 문서에서는 이전 고객 시나리오에서 사용한 실용적인 제안뿐만 아니라 사용자가 선택한 선택에&rsquo; 대한 기술적 이해도를 제공하려고 합니다.</p>  <p>SQL Database 분할이 확장성을 향상시키는 매우 명백한 예일 뿐입니다. 그러나 플랫폼의 강점을 최대화하려면 다른 역할과 서비스가 비슷한 방식으로 확장되어야 합니다. 예를 들어 스토리지 계정에는 트랜잭션 속도에 대한 상한이 있고, 가상 머신에는 CPU 및 메모리에 대한 상한이 있습니다. 최대 규모는 여러 스토리지 계정을 사용하도록 디자인하고 구성 요소가 설정된 크기의 가상 머신에서 확장되는 서비스에 대해 수행됩니다.</p>  <p>확장성은 디자인의 원동력이지만 다른 중요한 디자인 고려 사항이 있습니다. 이 문서에서는 원격 분석 및 진단 데이터 수집을 계획해야 한다고 강조하며, 솔루션의 구성 요소화 및 분할이 증가함에 따라 점점 더 중요해지고 있습니다. 가용성 및 비즈니스 연속성은 논문 전체에서 두 가지 주요 초점 영역입니다. 확장성은 서비스가 중단되거나 데이터를 복구할 수 없게 손실될 때와 관련이 없습니다.</p>  <h4><b>모범 사례 &amp; 플랫폼 진화</b></h4>  <p>Windows Azure는 지속적으로 진화하고 개선하며 새 서비스를 추가하고 있습니다. 최근 릴리스에는 Azure Virtual Network 및 IaaS(Infrastructure as a Service)Windows 같은 새로운 기능이 있습니다. 이러한 새로운 기능은 대규모 애플리케이션에 더 많은 옵션을 제공합니다. 그러나 이 문서는 버전 1.6에 중점을 두고 있으며 플랫폼에 대한 최신 추가 사항 중 일부를 다루지 않습니다.</p>  <p>이 결정의 이유를 이해하려면 이 작업의 목표를 다시 검토해야 합니다. 이 문서는 실제 고객 구현에서 성공한 디자인 지침을 제공하기 위한 것입니다. 이러한 계약을 계획, 테스트 및 반복하는 데 몇 달이 걸릴 수 있으므로 최신 서비스 및 기능 중 일부로 문서를 업데이트하기까지 다소 시간이 걸립니다. 그러나 이 문서의 모든 디자인 원칙은 여전히 적용할 수 있으며, 동일한 유형의 사고는 Windows Azure의 새로운 기능에 적용될 수 있습니다.</p>  <p>앞으로 이러한 모범 사례 중 일부를 실제로 구현하는 방법을 보여 주는 추가 논문, 코드 예제 및 샘플을 개발 중입니다.</p>  <h4><b>검사 목록 아님</b></h4>  <p>모든 사람은 체크리스트를 좋아합니다. 생각은 : 당신이 모든 상자를 확인할 수 있다면, 당신은 당신이 성공할 것을 알고있다. Windows Azure Cloud Services에서 Large-Scale Services 디자인에 대한 모범 사례를 사용하여 정보를 검사 목록으로 보지 않도록 합니다. 애플리케이션은 고유합니다. 이 시점에서 애플리케이션은 중간&rdquo; 규모일 &ldquo;수 있습니다. 플랫폼 및 모범 사례를 이해하면 일부 권장 사항만 단기간에 중요할 수 있습니다. 그러나 앞을 내다보고 나중에 다른 디자인 전략의 일부 또는 전부가 필요할 수 있는 가능성을 계획합니다.</p>  <p>백서에서 아래의 설명 섹션을 사용하여 피드백을 공유하세요.</p>'
