### YamlMime:Yaml
ms.openlocfilehash: f81e32fab5954eb2a7c9b94974cb24677762efe3
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139912750"
Slug: net-manage-azure-container-service-cosmos-db-active-directory-graph-and-more
Title: '.NET: Azure Container Service, Cosmos DB, Active Directory Graph 등 관리'
Summary: .NET용 Azure 관리 라이브러리 1.1을 릴리스했습니다. 이 릴리스에서는 Cosmos DB, Azure Container Service 및 레지스트리 Active Directory Graph...에 대한 지원을 추가합니다.
Content: >-
  <p>.NET용 Azure 관리 라이브러리 1.1을 릴리스했습니다. 이 릴리스에서는 다음을 지원합니다.</p>


  <table border="0" cellpadding="2" cellspacing="0" width="1000">
   <tbody>
    <tr>
     <td valign="top" width="331">Cosmos DB</td>
     <td valign="top" width="334">Azure Container Service 및 레지스트리</td>
     <td valign="top" width="333">Active Directory Graph</td>
    </tr>
   </tbody>
  </table>


  <p><a href="https://github.com/azure/azure-sdk-for-net/tree/Fluent" title="&#10;https://github.com/azure/azure-sdk-for-net/tree/Fluent">https://github.com/azure/azure-sdk-for-net/tree/Fluent</a></p>


  <h2>시작</h2>


  <p>다음에서 1.1을 다운로드할 수 있습니다.</p>


  <p><a href="https://www.nuget.org/packages/Microsoft.Azure.Management.Fluent/"><img alt="Microsoft_Azure_Management_Fluent" border="0" height="20" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7956c36f-2916-4505-8138-528b598347b7.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="Microsoft_Azure_Management_Fluent" width="86"></a></p>


  <h2>DocumentDB API를 사용하여 Cosmos DB 만들기</h2>


  <p>메서드 체인을 사용하여 <code>define() &hellip; create() </code>Cosmos DB 계정을 만들 수 있습니다.</p>


  <pre class="prettyprint">

  var documentDBAccount = azure.DocumentDBAccounts.Define(docDBName)
      .WithRegion(Region.USEast)
      .WithNewResourceGroup(rgName)
      .WithKind(DatabaseAccountKind.GlobalDocumentDB)
      .WithSessionConsistency()
      .WithWriteReplication(Region.USWest)
      .WithReadReplication(Region.USCentral)
      .Create();</pre>

  <p>또한 다음을 수행할 수 있습니다.</p>


  <ul>
   <li><a href="https://github.com/Azure-Samples/cosmosdb-dotnet-create-documentdb-and-configure-for-high-availability" target="_blank">DocumentDB API를 사용하여 Cosmos DB 만들기 및 고가용성 구성</a></li>
   <li><a href="https://github.com/Azure-Samples/cosmosdb-dotnet-create-documentdb-and-configure-for-eventual-consistency" target="_blank">DocumentDB API를 사용하여 Cosmos DB 만들기 및 최종 일관성으로 구성</a></li>
   <li><a href="https://github.com/Azure-Samples/cosmosdb-dotnet-create-documentdb-and-configure-firewall" target="_blank">DocumentDB API를 사용하여 Cosmos DB 만들기, 고가용성 구성 및 승인된 IP 주소 집합의 액세스를 제한하는 방화벽 만들기</a></li>
   <li><a href="https://github.com/Azure-Samples/cosmosdb-dotnet-create-documentdb-and-get-mongodb-connection-string" target="_blank">MongoDB API를 사용하여 Cosmos DB 만들기 및 연결 문자열 가져오기</a></li>
  </ul>


  <h2>Azure Container Registry 만들기</h2>


  <p>amethod 체인을 사용하여 Azure Container Registry를<code> define() &hellip; create() </code> 만들 수 있습니다.</p>


  <pre class="prettyprint">

  var azureRegistry = azure.ContainerRegistries.Define(&quot;acrdemo&quot;)
         .WithRegion(Region.USEast)
         .WithNewResourceGroup(rgName)
         .WithNewStorageAccount(saName)
         .WithRegistryNameAsAdminUser()
         .Create();
  </pre>


  <p>ListCredentials()를 사용하여 Azure Container Registry 자격 증명을 가져올 수 있습니다.</p>


  <pre class="prettyprint">

  RegistryListCredentials acrCredentials = azureRegistry.ListCredentials();</pre>


  <h2>Kubernetes 오케스트레이션을 사용하여 Azure Container Service 만들기</h2>


  <p>메서드 체인을 사용하여 Azure Container Service를 <code>define() &hellip; create() </code>만들 수 있습니다.</p>


  <pre class="prettyprint">

  var azureContainerService = azure.ContainerServices.Define(acsName)
        .WithRegion(Region.USEast)
        .WithNewResourceGroup(rgName)
        .WithKubernetesOrchestration()
        .WithServicePrincipal(servicePrincipalClientId, servicePrincipalSecret)
        .WithLinux()
        .WithRootUsername(rootUserName)
        .WithSshKey(sshPublicKey)
        .WithMasterNodeCount(ContainerServiceMasterProfileCount.MIN)
        .WithMasterLeafDomainLabel(&quot;dns-myK8S&quot;)
        .DefineAgentPool(&quot;agentpool&quot;)
              .WithVMCount(1)
              .WithVMSize(ContainerServiceVMSizeTypes.StandardD1V2)
              .WithLeafDomainLabel(&quot;dns-ap-myK8S&quot;)
              .Attach()
        .Create();</pre>

  <h2>구독 액세스를 사용하여 서비스 주체 만들기</h2>


  <p>메서드 체인을 사용하여 서비스 주체를 만들고 기여자 역할이 있는 구독에 할당할 <code>define() &hellip; create() </code>수 있습니다.</p>


  <pre class="prettyprint">

  var servicePrincipal = authenticated.ServicePrincipals.Define(&quot;spName&quot;)
        .WithExistingApplication(activeDirectoryApplication)
        // define credentials
        .DefinePasswordCredential(&quot;ServicePrincipalAzureSample&quot;)
              .WithPasswordValue(&quot;StrongPass!12&quot;)
              .Attach()
        // define certificate credentials
        .DefineCertificateCredential(&quot;spcert&quot;)
              .WithAsymmetricX509Certificate()
              .WithPublicKey(File.ReadAllBytes(certificate.CerPath))
              .WithDuration(TimeSpan.FromDays(7))
              // export credentials to a file
              .WithAuthFileToExport(new StreamWriter
                                       (new FileStream(authFilePath, FileMode.OpenOrCreate)))
              .WithPrivateKeyFile(certificate.PfxPath)
              .WithPrivateKeyPassword(certPassword)
              .Attach()
        .WithNewRoleInSubscription(role, subscriptionId)
        .Create();
  </pre>


  <p>마찬가지로 다음을 수행할 수 있습니다.</p>


  <ul>
   <li><a href="https://github.com/Azure-Samples/aad-dotnet-manage-service-principals" target="_blank">서비스 주체 관리</a></li>
   <li><a href="https://github.com/Azure-Samples/aad-dotnet-browse-graph-and-manage-roles" target="_blank">그래프(사용자, 그룹 및 멤버) 찾아보기 및 역할 관리</a></li>
   <li><a href="https://github.com/Azure-Samples/aad-dotnet-manage-passwords" target="_blank">암호 관리</a></li>
  </ul>


  <h2>시도</h2>


  <p>GitHub 더 많은 <a href="https://github.com/Azure/azure-sdk-for-net/tree/Fluent#sample-code" target="_blank">샘플을</a> 가져올 수 있습니다. 시도해 보시고 <a target="_blank">이메일을</a> 보내거나 아래에 댓글을 달면 어떻게 되는지 알려주세요.</p>
