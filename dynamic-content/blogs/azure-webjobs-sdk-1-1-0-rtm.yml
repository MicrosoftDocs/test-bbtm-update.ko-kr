### YamlMime:Yaml
ms.openlocfilehash: f45ec04520175dfc3726588ff90101840091ecc9
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139906142"
Slug: azure-webjobs-sdk-1-1-0-rtm
Title: Azure WebJobs SDK 1.1.0 RTM
Summary: 이 릴리스에서는 파일 이벤트, 정기 일정 등을 기반으로 함수를 트리거하는 등 사용자 지정 트리거 및 바인더를 작성할 수 있는 SDK에 대한 새로운 확장성 모델을 엽니다.
Content: >-
  <p>새 기능으로 압축된 Azure WebJobs SDK의 새 RTM 릴리스를 게시했습니다. 이 릴리스에서는 파일 이벤트, 정기 일정 등을 기반으로 함수를 트리거하는 등 사용자 지정 트리거 및 바인더를 작성할 수 있는 SDK에 대한 새로운 확장성 모델을 엽니다. 이제 Azure 큐, Blob, Service Bus, 파일, 타이머, WebHooks &ndash; GitHub, Slack, Instagram, IFTTT 등에서 트리거할 수 있는 함수가 있는 단일 WebJob을 사용할 수 있으므로 WebJobs 개발 및 관리가 간단해졌습니다. 함수가 실패할 때 알림을 보낼 수 있는 경고를 설정할 수도 있습니다. 또한 Weve&rsquo;는 많은 새로운 기능을 추가하고 피드백에 따라 많은 버그 수정을 했습니다.</p>


  <h1>이 릴리스의 기능</h1>


  <p>이 릴리스에는 기존 기능 집합에 대한 핵심 개선 사항뿐만 아니라 고객 트리거 및 바인더를 작성할 수 있는 SDK의 새로운 확장성 모델과 관련된 많은 기능이 포함되어 있습니다. 다음은 이 릴리스의 몇 가지 주요 사항입니다.</p>


  <h3>고유한 트리거 및 바인더를 작성하기 위한 확장 가능 모델</h3>


  <p>SDK의 초기 릴리스는 Azure Queues, Blob 및 Service Bus 이벤트를 기반으로 함수를 트리거하는 데 중점을 두었다. SDK가 릴리스된 이후 개발자는 파일 이벤트, 일정 기반 트리거, SQL 서버의 이벤트 등을 기반으로 함수를 트리거하는 등 더 많은 트리거를 추가하려는 피드백을 많이 받았습니다. 새 확장성 모델을 사용하면 확장 작성자가 새 트리거 및 바인더를 작성할 수 있으며 해당 확장은 애플리케이션의 다른 사용자가 사용할 수 있습니다.</p>


  <p><a href="https://github.com/JasonHaley/Redis.WebJobs.Extensions">Redis.WebJob.Extensions</a> 는 사용자가 Redis의 이벤트를 기반으로 함수를 트리거할 수 있도록 <a href="https://twitter.com/haleyjason">하는 Jason Haley</a> 에서 빌드하는 프로젝트입니다.</p>


  <p>새 확장성 모델을 보여주는 확장이 포함된 새 <a href="https://github.com/Azure/azure-webjobs-sdk-extensions">오픈 소스 리포지토리</a> 를 만들었습니다. 확장성 모델의 아키텍처에 <a href="https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview">대한 자세한 가이드</a> 를 따릅니다. 사용자 고유의 트리거 또는 바인더 작성을 시작하는 데 사용할 수 있는 샘플이 있습니다.</p>


  <h3>새 트리거, 바인더 및 특성</h3>


  <p>이 릴리스에는 SDK가 함수를 트리거하는 여러 가지 새로운 방법이 포함되어 있습니다. 함수를 트리거하는 몇 가지 새로운 방법은 다음과 같습니다.</p>


  <ul>
   <li>TimerTrigger를 사용하여 일정 기반</li>
   <li>FileTrigger를 사용하는 파일 기반 이벤트</li>
   <li>Singleton 특성을 사용하여 특정 함수의 단일 인스턴스만 지정된 시간에 여러 호스트에서 실행되도록 합니다.</li>
   <li>Timeout 특성을 사용하여 함수가 시간 제한 또는 지정된 시간 이후의 시간 제한 허용</li>
   <li>새 SendGrid 바인딩을 사용하여 함수 완료 시 전자 메일 보내기</li>
   <li>ErrorTrigger를 사용하여 일부 오류 임계값(지난 1시간 동안 10개 이상의 오류가 있는 경우 경고 발생)에 따라 함수를 트리거합니다.</li>
   <li>WebHookTrigger를 사용하여 일반 WebHook 이벤트를 기반으로 함수 트리거(<em>미리 보기</em>)</li>
  </ul>


  <p>다음 코드 조각에서는 이러한 모든 이벤트에서 트리거할 수 있는 함수가 있는 WebJob을 보여 줍니다. 이제 볼 수 있듯이 이러한 모든 함수가 다른 이벤트에서 트리거되는 단일 WebJob을 실행할 수 있습니다. 매개 변수 바인딩, 경로 일치 등과 같은 SDK의 모든 기존 기능을 활용할 수도 있습니다.</p>


  <pre class="prettyprint">
      public class Functions
      {
          public static void ProcessTimer([TimerTrigger(&quot;*/15 * * * * *&quot;, RunOnStartup = true)]
          TimerInfo info, [Queue(&quot;queue&quot;)] out string message)
          {
              message = info.FormatNextOccurrences(1);
          }

          public static void ProcessQueueMessage([QueueTrigger(&quot;queue&quot;)] string message,
          TextWriter log)
          {
              log.WriteLine(message);
          }

          public static void ProcessFileAndUploadToBlob(
              [FileTrigger(@&quot;import\{name}&quot;, &quot;*.*&quot;, autoDelete: true)] Stream file,
              [Blob(@&quot;processed/{name}&quot;, FileAccess.Write)] Stream output,
              string name,
              TextWriter log)
          {
              output = file;
              file.Close();
              log.WriteLine(string.Format(&quot;Processed input file &#39;{0}&#39;!&quot;, name));
          }

          [Singleton]
          public static void ProcessWebHookA([WebHookTrigger] string body, TextWriter log)
          {
              log.WriteLine(string.Format(&quot;WebHookA invoked! Body: {0}&quot;, body));
          }

          public static void ProcessGitHubWebHook([WebHookTrigger] string body, TextWriter log)
          {
              dynamic issueEvent = JObject.Parse(body);
              log.WriteLine(string.Format(&quot;GitHub WebHook invoked! (&#39;{0}&#39;, &#39;{1}&#39;)&quot;,
                  issueEvent.issue.title, issueEvent.action));
          }

          public static void ErrorMonitor(
          [ErrorTrigger(&quot;00:01:00&quot;, 1)] TraceFilter filter, TextWriter log,
          [SendGrid(
              To = &quot;admin@emailaddress.com&quot;,
              Subject = &quot;Error!&quot;)]
           SendGridMessage message)
          {
              // log last 5 detailed errors to the Dashboard
              log.WriteLine(filter.GetDetailedMessage(5));
              message.Text = filter.GetDetailedMessage(1);
          }
      }</pre>

  <h1>핵심 SDK의 새로운 기능</h1>


  <p>확장성 모델을 열고 더 많은 트리거 및 바인더를 추가하는 것 외에도 Core SDK에 많은 기능을 추가했습니다. 이 중 상당수는 커뮤니티의 기능 요청이므로 이 릴리스에서 이러한 요청을 완료하게 되어 기쁩니다.</p>


  <ul>
   <li><strong>큐 처리에 대한 더 많은 제어</strong>: 사용자가 더 많은 제어(JobHostQueuesConfiguration)를 가질 수 있습니다.<strong> NewBatchThreshold</strong>) 큐에서 큐에서 제거되는 메시지 수의 동시성 설정에 대해 설명합니다. 또한 사용자는 자체 <strong>QueueProcessor를</strong> 연결하여 큐 메시지 처리 방법을 사용자 지정할 수 있습니다.</li>
   <li><strong>확장 가능한 추적 및 로깅</strong>: 이 릴리스에서는 자체 로거를 연결할 수 있도록 확장성 지점을 제공했습니다.
   <ul>
    <li><a href="https://github.com/Azure/azure-webjobs-sdk-samples/blob/master/BasicSamples/MiscOperations/Program.cs#L54">샘플</a></li>
   </ul>
   </li>
   <li><strong>오류 모니터링 시스템</strong>: 이 기능을 사용하면 호스트 또는 함수에서 오류를 모니터링할 수 있습니다. 경고를 발생시키고 이메일 또는 텍스트를 통해 알림을 보내거나 IFTTT와 같은 다른 시스템을 플러그 인할 수도 있습니다.
   <ul>
    <li><a href="https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Error-Monitoring">샘플</a></li>
   </ul>
   </li>
   <li><strong>여러 스토리지 계정 지원</strong>: 이제 WebJob 함수에서 여러 스토리지 계정을 사용할 수 있습니다. 이렇게 하면 한 스토리지 계정에서 Blob을 읽고 다른 스토리지 계정에 보관하는 등의 시나리오를 수행할 수 있습니다.
   <ul>
    <li><a href="https://github.com/Azure/azure-webjobs-sdk/blob/master/test/Microsoft.Azure.WebJobs.Host.EndToEndTests/MultipleStorageAccountsEndToEndTests.cs#L131">샘플</a></li>
   </ul>
   </li>
   <li><strong>함수 시간 제한을 지정할 수 있습니다</strong>. 사용자 피드백(&ldquo;<a href="https://github.com/Azure/azure-webjobs-sdk/issues/590">연속 웹 작업이 고정되고 추가 QueueTriggers</a>&rdquo; 방지)에 따라 시간 제한 만료 시 함수가 함수 취소를 선언적으로 요청할 수 있는 시간 제한 특성을 추가했습니다. JobHost 수준에서 설정할 수 있습니다.
   <ul>
    <li><a href="https://github.com/Azure/azure-webjobs-sdk-samples/blob/master/BasicSamples/MiscOperations/Functions.cs#L125">샘플</a></li>
   </ul>
   </li>
   <li><strong>함수를 동적으로 사용/사용 안 함: </strong> 이렇게 하면 함수가 트리거되지 않도록 설정할 수 있으며 앱 설정 또는 환경 이름이 될 수 있는 구성 스위치로 제어할 수 있습니다.
   <ul>
    <li><a href="https://github.com/Azure/azure-webjobs-sdk-samples/blob/master/BasicSamples/MiscOperations/Functions.cs#L104">샘플</a></li>
   </ul>
   </li>
   <li>Blob에 대한 <strong>CloudBlobDirectory</strong> 바인딩이 추가되었습니다.</li>
   <li><strong>Blob에 대한 IEnumerable 바인더: </strong> 이제 Blob <strong>컬렉션</strong> (IEnumerable, IEnumerable, CloudBlobContainer 등)에 바인딩할 수 있습니다.
   <ul>
    <li><a href="https://github.com/Azure/azure-webjobs-sdk/blob/master/test/Microsoft.Azure.WebJobs.Host.EndToEndTests/BlobBindingEndToEndTests.cs#L155">샘플</a></li>
   </ul>
   </li>
   <li><strong>WebJobs SDK에서 사용하는 Azure Storage SDK 클라이언트 제어/사용자 지정</strong>: CloudQueueClient/CloudBlobClient/CloudTableClient 등에서 고급 옵션을 지정/설정하기 위해 JobHostConfiguration.StorageClientFactory가 추가되었습니다.</li>
  </ul>


  <h1>ServiceBus 향상된 기능</h1>


  <p>확장성 모델을 여는 과정의 일환으로 이 새로운 확장성 시스템을 기반으로 ServiceBus 트리거 및 바인더를 이동했습니다. ServiceBus를 사용하고 이 버전의 SDK로 업데이트하는 경우 다음과 같이 ServiceBus 트리거 및 바인더를 등록해야 합니다.</p>


  <p>Service Bus 연결 문자열 재정의는 이제 ServiceBusConfiguration에서 제공됩니다. 다음 <a href="https://github.com/Azure/azure-webjobs-sdk-samples/blob/master/BasicSamples/ServiceBus/Program.cs">샘플을</a> 참조하세요.</p>


  <pre>

  public class Program

  {
     public static void Main()
     {
        JobHostConfiguration config = new JobHostConfiguration();
        config.UseServiceBus();
        JobHost host = new JobHost(config);
        host.RunAndBlock();
     }
  }</pre>


  <h3>개선 사항은 다음과 같습니다.</h3>


  <ul>
   <li>ServiceBusConfiguration을 통해 메시지 처리를 심층적으로 사용자 지정할 수 있습니다. <strong>MessagingProvider</strong></li>
   <li>MessagingProvider는 ServiceBus MessagingFactory 및 NamespaceManager의 사용자 지정을 지원합니다.</li>
   <li>새 <strong>MessageProcessor</strong> 전략 패턴을 사용하면 큐/토픽당 프로세서를 지정할 수 있습니다.</li>
   <li>기본적으로 메시지 처리 <strong>동시성</strong> 지원(이전에는 동시성이 없음)</li>
   <li>ServiceBusConfiguration.MessageOptions <strong>를 통해 OnMessageOptions</strong> 의 간편한 사용자 지정</li>
   <li>ServiceBusTriggerAttribute/ServiceBusAttribute에 <strong>AccessRights</strong> 를 지정하도록 허용합니다(관리 권한이 없을 수 있는 시나리오의 경우). <ul>
    <li><a href="https://github.com/Azure/azure-webjobs-sdk-samples/blob/master/BasicSamples/ServiceBus/Functions.cs#L71">샘플</a></li>
   </ul>
   </li>
  </ul>


  <h1>모니터링을 위한 대시보드</h1>


  <p>대시보드를 계속 사용하여 다양한 이벤트를 기반으로 트리거되는 모든 함수를 모니터링할 수 있습니다. 실시간 모니터링, 실시간 I/O, 함수 재생, 함수 중단 등 이전과 동일한 대시보드의 모든 이점을 얻을 수 있습니다. 다음 이미지는 이 특정 WebJob에 대한 대시보드의 Functions 보기를 보여 줍니다.</p>


  <p><img alt="AzureWebJobs" border="0" height="229" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2d251b0a-2046-4d6b-a58e-959e05a3f7c7.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" title="AzureWebJobs" width="606"></p>


  <h1>이 릴리스 다운로드</h1>


  <p>NuGet 갤러리에서 WebJobs SDK를 다운로드할 수 있으며 다음과 같이 NuGet 패키지 관리자 콘솔을 사용하여 NuGet 갤러리에서 이러한 패키지를 설치할 수 있습니다.</p>


  <ul>
   <li><a href="https://www.nuget.org/packages/Microsoft.Azure.WebJobs/">Microsoft.Azure.WebJobs</a> Install-Package</li>
  </ul>


  <p>Microsoft Azure Service Bus 사용하려면 다음 패키지를 설치합니다.</p>


  <ul>
   <li><a href="https://www.nuget.org/packages/Microsoft.Azure.WebJobs.ServiceBus/">Microsoft.Azure.WebJobs.ServiceBus</a> Install-Package</li>
  </ul>


  <p>새로운 트리거(타이머, 파일 등)와 바인더가 새 확장성 모델을 기반으로 하는 새 패키지가 있습니다.</p>


  <ul>
   <li><a href="https://www.nuget.org/packages/Microsoft.Azure.WebJobs.Extensions/">Microsoft.Azure.WebJobs.Extensions</a> Install-Package</li>
  </ul>


  <p><a href="https://sendgrid.com/">SendGrid</a> 서비스를 사용하여 전자 메일을 보낼 수 있는 새 패키지가 있습니다. 이를 사용하여 함수 오류 등과 같은 다양한 오류에 대한 전자 메일 알림을 올릴 수 있습니다.</p>


  <ul>
   <li><a href="https://www.nuget.org/packages/Microsoft.Azure.WebJobs.Extensions.SendGrid/">Microsoft.Azure.WebJobs.Extensions.SendGrid</a> Install-Package</li>
  </ul>


  <p>SDK가 WebHook 이벤트를 기반으로 함수를 트리거할 수 있는 새 패키지입니다. 이 패키지는 현재 미리 보기로 제공됩니다.</p>


  <ul>
   <li><a href="https://www.nuget.org/packages/Microsoft.Azure.WebJobs.Extensions.WebHooks/">Microsoft.Azure.WebJobs.Extensions.WebHooks</a> Install-Package</li>
  </ul>


  <h2>오픈 소스</h2>


  <p>SDK, 확장성 시스템 및 관련 리포지토리의 소스 코드는 다음과 같습니다.</p>


  <ul>
   <li><a href="https://github.com/Azure/azure-webjobs-sdk/">Azure WebJobs SDK</a></li>
   <li><a href="https://github.com/Azure/azure-webjobs-sdk-extensions">Azure WebJobs SDK 확장</a></li>
   <li><a href="https://github.com/Azure/azure-webjobs-sdk-samples/">Azure WebJobs SDK 샘플</a></li>
  </ul>


  <p>피드백에 대한 문제를 열고 해결하려는 문제에 대한 PR&rsquo;을 보내주세요.</p>


  <h2>샘플</h2>


  <ul>
   <li>Blob, 테이블, 큐, 타이머, 파일, WebHook, Service Bus 등에 대한 트리거 및 바인더를 사용하는 방법에 대한 샘플을 찾을 수 있습니다.&nbsp;</li>
   <li>고객이 Blob Storage에서 해당 그림을 처리하는 함수를 트리거하는 그림을 업로드할 수 있는 이미지 처리 웹 사이트인 <b>PhluffyShuffy</b>입니다.</li>
   <li><b>PhluffyLogs</b> 는 WebJob이 앱에서 생성된 로그 파일을 구문 분석하고 로그 파일을 보관하는 예제입니다.</li>
  </ul>


  <h2>설명서</h2>


  <ul>
   <li><a href="https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview">새 트리거 및 바인더 작성 지침</a></li>
   <li><a href="https://channel9.msdn.com/Shows/Cloud+Cover/Episode-183-Azure-WebJobs-Update-with-Pranav-Rastogi">Pranav Rastogi를 사용하여 Azure WebJobs 업데이트</a></li>
   <li><a href="https://channel9.msdn.com/Shows/Web+Camps+TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK">Windows Azure WebJobs SDK를 사용하여 작업을 더 쉽게 만드는 채널 9 비디오</a></li>
   <li><a href="https://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx">Scott Hanselman의 WebJobs 및 SDK 소개</a></li>
   <li><a href="https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/azure-webjobs-recommended-resources">Azure WebJobs &ndash; 권장 리소스</a></li>
   <li><a href="https://channel9.msdn.com/Tags/azurefridaywebjobs">Azure Friday의 WebJobs 비디오 시리즈</a></li>
   <li>매그너스 마틴슨의 비디오 시리즈</li>
   <li><a href="https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs">자습서: Microsoft Azure WebJobs SDK 시작</a></li>
  </ul>


  <h1>피드백 제공 및 도움말 보기</h1>


  <p>질문이 있는 경우 <a href="https://azure.microsoft.com/en-us/support/forums/">Azure 포럼</a>, <a href="https://forums.asp.net/1247.aspx">ASP.NET 포럼</a> 또는 <a href="https://stackoverflow.com/">StackOverflow.com</a>(태그 이름 #Azure-WebJobsSDK)에서 문의하세요.</p>


  <h1>요약</h1>


  <p>이 SDK 릴리스는 완전히 새로운 트리거 및 바인더 세계를 열어 확장 작성자가 선택한 모든 이벤트 유형에 대한 트리거를 작성할 수 있도록 합니다. 파일 이벤트, 타이머/Cron 일정 이벤트, SQL 이벤트, Redis pub/sub 이벤트 등을 예로 들 수 있습니다(아래 추가 설명서 및 샘플에 대한 링크 확인). 트리거는 더 이상 Azure 이벤트에 &ndash; 바인딩되지 않으며 선택한 이벤트 원본을 모니터링하는 트리거를 작성할 수 있습니다. 트리거를 기반으로 앱을 훨씬 쉽게 개발하고 관리할 수 있습니다. 커뮤니티에서 새 트리거 및 바인더를 작성하고 확장성 모델에 대한 피드백을 받을 수 있기를 기대합니다.</p>


  <p>감사합니다!</p>


  <p><em>Azure WebJobs 팀</em><br>

  Twitter에서 최신 업데이트를 찾고 <a href="https://twitter.com/search?q=AzureWebJobs">AzureWebJobs를 사용합니다#</a>.</p>
