### YamlMime:Yaml
ms.openlocfilehash: f87ce01a220e92661073c134cef1c6e86b7b9b00
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900877"
Slug: scheduling-azure-automation-runbooks-with-azure-scheduler
Title: Azure Scheduler를 사용하여 Azure Automation Runbook 예약
Summary: Azure Automation 계정에서 Runbook을 시작하는 새 Azure Scheduler 작업 만들기
Content: >-
  <strong>업데이트 8/5/2015</strong>: Azure Automation에 WebhooksWebhooks" href="https://azure.microsoft.com/en-in/documentation/articles/automation-webhooks/" target="_blank"></a>가 도입<a title="되면서 이제 Azure Scheduler를 사용하여 Runbook을 훨씬 쉽게 예약할 수 있습니다. 프로세스에 대한 Azure Schedulerfor" href="https://azure.microsoft.com/blog/2015/08/05/scheduling-azure-automation-runbooks-with-azure-scheduler-2/"> </a> 추가 세부 정보를 사용하여 Azure SchedulerAzure" href="https://azure.microsoft.com/blog/2015/08/05/scheduling-azure-automation-runbooks-with-azure-scheduler-2/" target="_blank"> postSchedule<a title="</a> Automation Runbook을 사용하는 thisSchedule <a title=" Azure Automation Runbook을 참조하세요.


  오래된 메서드는 다음과 같습니다.


  Azure Automation에는 Automation Runbook을 매일, 매시간 또는 미래의 단일 지점에서 시작할 수 있는 스케줄러가 있습니다. 그러나 일부 고객은 Azure Scheduler에서 제공하는 고급 예약 기능을 사용하여 Runbook을 시작할 수 있습니다. 예를 들어 특정 날짜 또는 분과 같은 보다 세부적인 수준에서 Runbook 작업 예약을 실행하는 것이 있습니다.


  이 게시물에서는 Azure Automation 계정에서 Runbook을 시작하는 새 Azure Scheduler 작업을 만드는 방법을 설명합니다.


  다음은 Automation Runbook을 시작할 Scheduler 작업 설정과 관련된 개략적인 프로세스입니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="SchedulerDiagram" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/SchedulerDiagram.png" alt="SchedulerDiagram" width="600" height="442" border="0" />


  가장 먼저 해야 할 일은 Azure Scheduler 작업과 연결할 Automation Runbook을 만드는 것입니다. 갤러리에서 현재 작업 시간인지 확인하는 Runbook을 가져왔습니다. Scheduler 작업에서 Runbook을 호출하는 방법을 보여주는 샘플일 뿐입니다. Automation 계정에 있는 모든 Runbook을 사용할 수 있습니다. Automation 가져오기 Runbook 마법사의 아래 이미지는 갤러리에서 Runbook을 선택하는 방법을 보여줍니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="GalleryItem" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/GalleryItem.png" alt="GalleryItem" width="600" height="390" border="0" />


  &nbsp;


  이 Runbook을 Automation 계정으로 가져오는 경우 MyWeekDayStartHour 및 MyWeekDayEndHour라는 두 매개 변수를 사용하고 현재 이 두 값 사이에 있으면 true를 반환하거나 그렇지 않으면 false를 반환합니다.


  &nbsp;


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="Get-IsWorkHours" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Get-IsWorkHours.png" alt="Get-IsWorkHours" width="588" height="465" border="0" />


  이 Runbook을 게시한 후에는 Azure Scheduler 작업에서 시작할 수 있습니다.

  Scheduler를 사용하여 Automation Runbook을 쉽게 시작할 수 있도록 이미 만든 작업 컬렉션에서 Azure Scheduler 작업을 만들거나 업데이트하거나 없는 경우 새 컬렉션을 만드는 유틸리티 Runbook을 Automation 갤러리에 추가했습니다. 유틸리티 Runbook을 Set-AzureScheduleWithRunbook이라고 하며 Automation 갤러리 "유틸리티" 범주에서 가져올 수 있습니다. 이 Runbook은 Runbook을 새 Azure Scheduler 작업과 올바르게 연결하는 데 필요한 여러 매개 변수를 사용합니다. 이 Runbook을 시작하려면 먼저 다음 Automation 자산을 만들어야 합니다.

  <h2>AzureCertificateAssetName</h2>

  Azure 구독에 대한 액세스 권한이 있는 관리 인증서를 포함하는 자격 증명 인증서 자산입니다. 이 인증서는 Automation 서비스에 추가할 때 내보낼 수 있는 것으로 표시되어야 합니다. Azure .pfx 인증서를 만들어 Azure를 호출하는 방법을 알아볼 수 있습니다 <a href=""></a>. 이 인증서는 Automation 서비스를 호출하여 Runbook을 시작할 수 있도록 새 Azure 스케줄러 작업으로 전송됩니다.


  <img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="UploadCertificate" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/UploadCertificate.png" alt="UploadCertificate" width="600" height="383" border="0" />

  <h2>AzureCertificatePasswordAssetName</h2>

  관리 인증서에 대한 암호를 포함하는 Automation 변수 자산입니다. Automation 자산에 인증서를 추가할 때 입력한 암호 값입니다. 자동화 서비스에서 인증서를 내보내고 스케줄러 cmdlet이 인증서의 암호를 해독하고 스케줄러 작업으로 보낼 수 있도록 하려면 이 작업이 필요합니다.


  <img style="padding-top: 0px; padding-left: 0px; margin: 0px; padding-right: 0px; border-width: 0px;" title="AzureCertificatePassword" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/AzureCertificatePassword.png" alt="AzureCertificatePassword" width="600" height="381" border="0" />

  <h2></h2>

  <h2>AzureADCredentialAssetName</h2>

  Azure 구독에 대한 액세스 권한이 있는 Azure AD 계정 사용자 이름 및 암호를 포함하는 자격 증명 자산입니다. 이 설정 방법을 읽어 볼 수 있습니다.<a href="https://azure.microsoft.com/blog/2014/08/27/azure-automation-authenticating-to-azure-using-azure-active-directory/">https://azure.microsoft.com/blog/2014/08/27/azure-automation-authenticating-to-azure-using-azure-active-directory/</a> 이렇게 하면 Automation 서비스가 Azure 구독에 인증하고 Azure Automation에서 제공되는 Azure PowerShell cmdlet을 사용하여 새 Scheduler 작업을 만들 수 있습니다.<img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border-width: 0px;" title="AzureCredentialAssetName" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/AzureCredentialAssetName.png" alt="AzureCredentialAssetName" width="600" height="380" border="0" />

  이러한 Automation 자산을 설정한 후에는 갤러리에서 Automation 계정으로 Runbook을 가져와 게시할 수 있습니다.


  Set-AzureScheduleWithRunbook Runbook을 사용하려면 Set-AzureScheduleWithRunbook Runbook에 필요한 매개 변수를 설정한 다음 Set-AzureScheduleWithRunbook에 대한 호출에 전달하는 부모 Runbook에서 호출하려고 합니다. Azure에서 +새로 만들기를 사용하고 Runbook을 빠르게 만들도록 선택하여 이 부모 Runbook을 만들 수 있습니다.이 새 Runbook Configure-AzureScheduleParameters를 호출합니다. 그런 다음 Set-AzureScheduleWithRunbook Runbook에 표시된 예제를 복사할 수 있습니다. 예제 주석 섹션을 선택하고 아래와 같이 이 새 Runbook에 붙여넣습니다.


  &nbsp;

  <pre class="prettyprint">Workflow Configure-AzureScheduleParameters

  {
      $RunbookName = "Get-IsWorkHours"
      $RunbookParameters = @{"MyWeekDayEndHour"=18;"MyWeekDayStartHour"=6}

      Set-AzureScheduleWithRunbook `
          -AccountName finance `
          -AzureCertificatePasswordAssetName CertPassword `
          -AzureCertificateAssetName AzureCert `
          -AzureADCredentialAssetName AzureCred `
          -Runbook $RunbookName `
          -Parameters $RunbookParameters `
          -SchedulerJobCollectionName FinanceJobCollection `
          -SchedulerJobName FinanceDaily `
          -SchedulerLocation "South Central US" `
          -SubscriptionName "Visual Studio Ultimate with MSDN"
  }</pre>

  &nbsp;


  이 예제에서는 $RunbookName Get-IsWorkHours 설정하고 $RunbookParameters 해시 테이블의 MyWeekDayStartHour 및 MyWeekDayEndHour 매개 변수를 설정한 것을 확인할 수 있습니다. 그런 다음 게시된 Set-AzureScheduleWithRunbook Runbook을 호출하고 필요한 매개 변수를 전달하여 Get-IsWorkHours Runbook을 시작할 새 스케줄러 작업을 만듭니다.


  Automation 서비스에서 만든 자산의 이름과 일치하도록 이러한 매개 변수를 수정해야 합니다.


  Runbook이 성공적으로 완료되면 Scheduler의 Azure Portal 내에서 새 스케줄러 작업이 아래와 같이 표시됩니다.


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/01/20/SchedulerJob.png"><img style="padding-top: 0px; padding-left: 0px; padding-right: 0px; border: 0px;" title="SchedulerJob" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/SchedulerJob_thumb.png" alt="SchedulerJob" width="583" height="390" border="0" /></a>


  이제 이 스케줄러 작업을 수정하여 필요한 특정 일정에 대해 되풀이 작업으로 만들 수 있습니다.


  이 유틸리티 Runbook Set-AzureScheduleWithRunbook Automation 갤러리에서 가져오고 Automation과 고급 일정 예약 및 통합을 시작할 수 있습니다. 일정에 따라 수행하는 자동화 작업을 듣는 것이 좋으므로 가능한 한 간단하게 만들 수 있습니다. 아래의 의견에 알려주세요.


  Azure Automation을 시작하기만 하면 되었나요? <a href="https://aka.ms/Q2p1ap" target="_blank">여기서</a> 서비스에 대해 알아보고 Twitter에서 <a href="https://twitter.com/AzureAutomation" target="_blank">Azure Automation</a>을 따르세요.
