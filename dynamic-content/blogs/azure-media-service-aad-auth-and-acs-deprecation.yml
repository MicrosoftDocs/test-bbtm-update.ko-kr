### YamlMime:Yaml
ms.openlocfilehash: f350e628577f8c4cbc0528c0ab66b3127e9150bc
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902298"
Slug: azure-media-service-aad-auth-and-acs-deprecation
Title: Azure Media Services ACS 인증의 AAD 및 사용 중단에 대한 지원을 발표합니다.
Summary: Azure Media Services AAD 인증에 대한 지원 및 ACS 키 지원의 12개월 사용 중단 알림을 발표합니다. 고객은 AAD 빠르게 마이그레이션하는 것이 좋습니다.
Content: "<p>이번 달에는 Azure Media Services Azure Active Directory(AAD) 인증에 대한 지원 릴리스를 발표합니다. REST API 및 .NET 클라이언트 라이브러리의 고객은 이제 AAD 인증을 사용하여 요청에 권한을 부여할 수 있습니다. 또한 AAD 사용자 및 서비스 주체 인증 사용을 간소화하기 위해 Azure Portal에서 새 관리 블레이드를 릴리스합니다.</p>\n\n<p>REST API에 대한 이 업데이트가 릴리스되면 이제 ARM(Azure Resource Management) 서비스에서 제공하는 것과 동일한 RBAC(역할 기반 액세스 관리)를 제공할 수 있습니다. AAD 인증으로 전환하면 이제 특정 사용자 또는 Media Services 계정에 연결된 애플리케이션의 모든 변경 내용을 추적하고 감사할 수 있습니다. 새 Azure Media REST API를 사용하려면 REST API 요청을 만드는 사용자 또는 애플리케이션에 관리하려는 리소스에 대한 기여자 또는 소유자 수준 액세스 권한이 있어야 합니다. Azure 리소스에 대해 역할 기반 액세스 제어가 작동하는 방법에 대한 자세한 내용은 <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure\">Azure 역할 기반 Access Control</a>에서 확인할 수 있습니다.</p>\n\n<h3>중요! <a href=\"https://azure.com/media\" target=\"_blank\">Azure Media Services</a> ACS 인증 지원의 12개월 사용 중단 알림</h3>\n\n<p>Azure Active Directory ACS 토큰 인증 모델(&quot;계정 키&quot;)에 비해 계정의 리소스에 대한 보다 세분화된 액세스를 지원하는 강력한 역할 기반 액세스 제어 기능을 제공하므로 2018년 6월 22일까지 코드를 업데이트하고 ACS에서 AAD 기반 인증으로 마이그레이션하는 것이 좋습니다. 또한 빠른 마이그레이션의 주요 이유는 곧 발표된 ACS 키 기반 인증 시스템의 사용 중단입니다.</p>\n\n<h3>이것은 당신에게 무엇을 의미합니까?</h3>\n\n<ul>\n <li>Microsoft Azure Media Services 2018년 6월 22일에 ACS(Microsoft Azure Access Control Service) 기반 인증에 대한 지원을 종료합니다.</li>\n <li>고객에게 애플리케이션 코드를 업데이트할 수 있는 충분한 시간을 제공하기 위해 12개월&#39; 알림을 제공하여 필요한 전환을 관리합니다.</li>\n</ul>\n\n<h3>어떤 조치를 취해야 하나요?</h3>\n\n<p>애플리케이션이 예상대로 계속 작동하도록 2018년 6월 22일 이전에 다음 작업을 수행하는 것이 좋습니다.</p>\n\n<ul>\n <li>Media Services 위해 작성된 애플리케이션의 코드를 업데이트합니다.</li>\n <li>ACS 기반 인증에서 마이그레이션합니다.</li>\n <li>AAD 기반 인증 사용을 시작합니다.</li>\n</ul>\n\n<p>ACS 인증 토큰을 사용하여 Media Services 위해 작성된 애플리케이션이 프로덕션에서 실패하지 않고 예상대로 계속 작동하도록 <strong>하려면 2018년 6월 22일 또는 그 이전에 완화 단계를 수행해야 합니다</strong>. 아래의 각 새 인증 시나리오를 자세히 검토하고 소스 코드에서 AAD 인증을 사용하도록 업데이트하는 적절한 조치를 취하세요.</p>\n\n<p>Azure Media Services REST API는 대화형 사용자와 웹 API, 중간 계층 또는 디먼 애플리케이션 모두에 대한 인증을 지원합니다. 다음 섹션에서는 REST API 또는 .NET 클라이언트 라이브러리를 통해 직접 작업할 때 AAD 인증을 사용하는 방법에 대해 자세히 설명합니다.</p>\n\n<h2>Media Services AAD 사용자 인증</h2>\n\n<p>Azure Media Services Explorer 도구와 같은 Azure Media Services 계정에 대한 관리 애플리케이션을 빌드하려는 경우 IAM(액세스 제어) 블레이드를 통해 포털의 Media Services 리소스에 대한 액세스 권한이 부여된 사용자&#39;자격 증명으로 로그인하면 됩니다. 이 유형의 솔루션은 다음 시나리오 중 하나에 맞는 서비스와의 인간 상호 작용을 원할 때 매우 유용합니다.</p>\n\n<ul>\n <li>인코딩 작업에 대한 대시보드 모니터링</li>\n <li>라이브 스트림 대한 모니터링 대시보드</li>\n <li>Media Services 계정에서 리소스를 관리하는 데스크톱 또는 모바일 사용자를 위한 관리 애플리케이션입니다.</li>\n</ul>\n\n<p>네이티브 애플리케이션은 먼저 Azure Active Directory 액세스 토큰을 획득한 다음, 해당 액세스 토큰을 사용하여 모든 REST API 호출을 만듭니다. 다음 다이어그램은 일반적인 대화형 애플리케이션 인증 흐름을 보여줍니다. REST API 요청이 성공하려면 호출하는 사용자가 액세스하려는 Azure Media Services 계정의 <b>참가자</b>&rdquo; 또는 &ldquo;<b>소유자</b>&rdquo;여야 합니다&ldquo;. 권한 없는 요청은 상태 코드 401로 실패합니다. 이 오류가 표시되면 Media Services 계정에서 사용자를 <b>참가자</b>&rdquo; 또는 &ldquo;<b>소유자</b>&rdquo;로 &ldquo; 구성했는지 다시 확인하세요. 미디어 계정을 검색하고 액세스 제어&rdquo; 탭을 클릭하여 Azure Portal을 &ldquo;통해 이를 확인할 수 있습니다.</p>\n\n<p><img alt=\"media-services-native-aad-app1\" border=\"0\" height=\"429\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4575527d-da6f-4346-9e16-a18224d4c24b.png\" style=\"border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"media-services-native-aad-app1\" width=\"610\"></p>\n\n<p>MEDIA SERVICES .NET 클라이언트 SDK 사용자는 REST 요청과 통신하기 위해 AAD 인증을 사용하려면 Nuget의 최신 버전(windowsazure.mediaservices 버전 4.1.0.1 이상)으로 업그레이드해야 합니다. 다음 예제에서는 이전에 ACS를 사용하여 .NET 클라이언트 SDK를 인증하는 방법과 AAD 자격 증명을 사용하는 새로운 방법 간의 차이점을 보여 줍니다.</p>\n\n<p><b>참고</b>: 애플리케이션은 새 어셈블리 &quot;<b>Microsoft.WindowsAzure.MediaServices.Client.Common.Authentication.dll&quot;</b> 포함하도록 참조를 업데이트하고 해당 네임스페이스에 대한 참조와 <b>ITokenProvider</b> 인터페이스에 대한 액세스를 얻기 위해 &quot;<b>Microsoft.IdentityModel.Clients.ActiveDirectory</b>&quot; 어셈블리에 대한 참조를 추가해야 합니다.</p>\n\n<p>AAD .NET SDK 사용에 대한 자세한 내용 및 자세한 샘플은 이 개요 및 사용 가능한 <a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureEnvironments.cs\">환경 설정</a> 및 상수에 대해 알아<a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureEnvironmentConstants.cs\">봅니다</a>.</p>\n\n<p>&nbsp;</p>\n\n<h3>ACS 자격 증명을 사용하여 인증하는 사용되지 않는 방법</h3>\n\n<pre class=\"prettyprint\">\n// Create and cache Media Services credentials in a static class variable.\n_cachedCredentials = new MediaServicesCredentials(\n             _mediaServicesAccountName,\n             _mediaServicesAccountKey, \n             &quot;urn:windowsazuremediaservices&quot;,\n             &quot;https://wamsprodglobal001acs.accesscontrol.windows.net&quot;);\n            \n// Used the cached credentials to create CloudMediaContext.\n var mediaContext = new CloudMediaContext(_cachedCredentials);\n mediaContext.Assets.FirstOrDefault();</pre>\n\n<h3>AAD 자격 증명 및 사용자 인증을 사용하여 인증하는 새로운 방법</h3>\n\n<pre class=\"prettyprint\">\nvar tokenCredentials = new AzureAdTokenCredentials(&quot;{YOUR AAD TENANT DOMAIN HERE}&quot;, AzureEnvironments.AzureCloudEnvironment);\nvar tokenProvider = new AzureAdTokenProvider(tokenCredentials);\nvar mediaContext = new CloudMediaContext(new Uri(&quot;YOUR REST API ENDPOINT HERE&quot;), tokenProvider);\nmediaContext.Assets.FirstOrDefault()  // This would return a 401 unauthorized if you are not set up as an authorized user\n</pre>\n\n<p>&quot;AzureEnvironments.AzureCloudEnvironment&quot; 상수는 공용 Azure 데이터 센터에 대해 적절한 환경 변수 설정을 가져오는 .NET SDK의 도우미입니다. 공용 데이터 센터 전용의 Media Services에 액세스하기 위한 미리 정의된 환경 설정이 포함되어 있습니다. 소버린 또는 정부 클라우드 지역의 경우 AzureChinaCloudEnvironment, AzureUsGovernmentEnvrionment 또는 &quot;AzureGermanCloudEnvironment&quot;&quot;를 각각 사용할 &quot; 수 있습니다. &quot;&quot;</p>\n\n<p><b><a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureAdTokenProvider.cs\">azureAdTokenProvider</a></b> 및 <b><a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureAdTokenCredentials.cs\">AzureAdTokenCredentials</a></b> 클래스에서 AAD 액세스 토큰 획득에 대한 많은 세부 정보가 래핑되고 간소화되었습니다. 예를 들어 AAD 기관, Media Services 리소스 URI 또는 네이티브 AAD 애플리케이션 세부 정보를 제공할 필요가 없습니다. 이러한 값은 AAD 액세스 토큰 공급자 클래스에 의해 이미 구성된 잘 알려진 값입니다. .NET 클라이언트 SDK를 사용하지 않는 경우 <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-authentication-libraries\">ADAL 라이브러리</a> 를 사용하여 이러한 매개 변수를 사용하여 액세스 토큰 요청 만들기를 간소화하는 것이 좋습니다. 다음 값은 <b><a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureAdTokenProvider.cs\">기본적으로 AzureAdTokenProvider</a></b> 및 <b><a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureAdTokenCredentials.cs\">AzureAdTokenCredentials</a></b> 클래스에서 사용됩니다.</p>\n\n<p>또한 <b><a href=\"https://github.com/Azure/azure-sdk-for-media-services/blob/dev/src/net/Client/Common/Common.Authentication/AzureAdTokenProvider.cs\">AzureAdTokenProvider</a></b>의 기본 구현을 사용자 고유의 구현으로 바꾸는 옵션도 있습니다.</p>\n\n<h2>Media Services 서비스 주체 인증 AAD</h2>\n\n<p>디먼 서비스, Web API, 소비자(모바일 또는 데스크톱) 및 웹 애플리케이션을 통한 비인간 상호 작용의 경우 Media Services 계정의 리소스에 대한 대화형 로그인 또는 직접 사용자 관리/모니터링이 필요하지 않은 경우 먼저 자체 테넌트에 Azure Active Directory 애플리케이션을 만들어야 합니다.</p>\n\n<p>만든 후에는 IAM(액세스 제어) 블레이드에서 이 애플리케이션 &ldquo;참가자&rdquo; 또는 &ldquo;소유자&rdquo; 수준의 Media Services 계정에 대한 액세스 권한을 부여해야 합니다. 두 단계 모두 Azure Portal 또는 Azure CLI 또는 PowerShell 스크립트를 통해 쉽게 수행할 수 있습니다. AAD 리소스&ldquo;의 경우 참가자&rdquo;는 소유자와 &ldquo;리소스에 대한 액세스 권한이 동일하지만 소유자&rdquo;&rdquo; 역할만 &ldquo;다른 사용자에게 액세스 권한을 부여할 수 있습니다. 현재 이 버전의 Media Services REST API는 엔터티 수준에서 RBAC를 제공하지 않지만, 이는 가을에 향후 API 업데이트를 위한 로드맵에 있는 것입니다. 또한 필요한 애플리케이션을 쉽게 생성하거나 기존 애플리케이션에서 선택할 수 있도록 Media Services 계정에 새 &quot;API 액세스&quot; 블레이드를 제공했습니다.&nbsp; 대신 x509 인증서 또는 ClientID 및 ClientKey를 사용하려는 경우 SDK를 구성하는 방법에 대한 자세한 내용은 설명서를 참조할 수 있습니다.</p>\n\n<p>다음 예제에서는 디먼 애플리케이션이 AAD 웹 애플리케이션 자격 증명을 사용하여 REST 서비스를 사용하여 요청을 인증하는 방법을 보여 줍니다.</p>\n\n<p><img alt=\"media-services-principal-service-aad-app1\" border=\"0\" height=\"403\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/06e7cc0b-4f2c-4ac2-91d2-c1ec62e58a56.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"media-services-principal-service-aad-app1\" width=\"610\"></p>\n\n<h3>ACS 자격 증명을 사용하여 인증하는 사용되지 않는 방법</h3>\n\n<pre class=\"prettyprint\">\n// Create and cache Media Services credentials in a static class variable.\n_cachedCredentials = new MediaServicesCredentials(\n             _mediaServicesAccountName,\n             _mediaServicesAccountKey, \n             &quot;urn:windowsazuremediaservices&quot;,\n             &quot;https://wamsprodglobal001acs.accesscontrol.windows.net&quot;);\n            \n// Used the cached credentials to create CloudMediaContext.\nvar mediaContext = new CloudMediaContext(_cachedCredentials);\n</pre>\n\n<h3>AAD 서비스 주체 및 클라이언트 대칭 키를 사용하여 인증하는 새로운 방법</h3>\n\n<pre class=\"prettyprint\">\nvar tokenCredentials = new AzureAdTokenCredentials(&ldquo;{YOUR AAD TENANT DOMAIN HERE}&rdquo;, new AzureAdClientSymmetricKey(&ldquo;{YOUR CLIENT ID HERE}&rdquo;, &ldquo;{YOUR CLIENT SECRET}&rdquo;), AzureEnvironments.AzureCloudEnvironment);\nvar tokenProvider = new AzureAdTokenProvider(tokenCredentials);\n\nvar mediaContext = new CloudMediaContext(_mediaServicesApiServerUri, tokenProvider);</pre>\n\n<pre class=\"prettyprint\">\nmediaContext.Assets.FirstOrDefault();\n\n</pre>\n\n<h2>새 API 액세스 블레이드를 쉽게 시작할 수 있도록 Media Services</h2>\n\n<p>Azure Active Directory 인증은 AAD 세부 사항에 익숙하지 않은 사용자에게 복잡할 수 있으므로 AAD 대한 지식이 거의 없으므로 매우 쉽게 시작할 수 있도록 하고 싶었습니다. 이러한 이유로 포털에서 이전 ACS &quot;계정 키&quot; 블레이드를 대체할 Media Services 계정에 대한 새 &quot;API 액세스&quot; 블레이드가 도입되었습니다. 또한 사용자가 코드를 업데이트하고 AAD 지원으로 이동하도록 ACS 키를 회전하는 기능을 사용하지 않도록 설정했습니다.<img alt=\"image\" border=\"0\" height=\"182\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7968d69d-5fc0-4897-a48b-95deb3926264.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"이미지\" width=\"275\"></p>\n\n<p>새 API 액세스 블레이드를 사용하면 AAD 훨씬 더 간단하게 Azure Media Services 연결하는 프로세스를 만들 수 있습니다. API 액세스 블레이드를 처음 선택하면 사용자 대화형 관리 애플리케이션에 사용자 인증을 사용하거나 Media Services API와의 비인간 상호 작용을 위해 서비스 주체 및 AAD 애플리케이션을 만드는 옵션을 선택할 수 있습니다.</p>\n\n<p>&nbsp;<img alt=\"image\" border=\"0\" height=\"266\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/54f286b2-22a2-4490-8af3-ea699d3aa07d.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"이미지\" width=\"610\"></p>\n\n<p>사용자 기반 인증 옵션을 선택하면 API를 사용하여 인증하는 데 필요한 모든 Active Directory 정보가 포함된 새 패널이 표시됩니다. 여기에는 ClientID, 도메인 및 리소스와 함께 호출해야 하는 API 엔드포인트가 포함됩니다.</p>\n\n<p>&nbsp;<img alt=\"image\" border=\"0\" height=\"480\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f878beb0-ebbb-4e20-be9e-b3c61398beaf.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"이미지\" width=\"455\"></p>\n\n<p>서비스 주체 인증의 경우 기존 AAD 애플리케이션에서 선택하거나 패널에서 직접 새 값을 만들 수 있는 추가 값과 기능이 표시됩니다.</p>\n\n<p><img alt=\"image\" border=\"0\" height=\"480\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ec931632-609f-4c7a-ad5d-29d90af5d0dc.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"이미지\" width=\"467\"></p>\n\n<p>서비스 주체 블레이드가 열리면 다음 조건을 충족하는 첫 번째 AAD 애플리케이션을 선택합니다.</p>\n\n<ul>\n <li>등록된 AAD 애플리케이션입니다.</li>\n <li>&quot;계정에 대한 기여자&quot; 또는 &quot;소유자&quot; RBAC 권한이 있습니다.</li>\n</ul>\n\n<p>AAD 앱을 만들거나 선택한 후에는 키(클라이언트 암호)를 만들고 복사하고 이 시나리오에서 액세스 토큰을 가져오는 데 필요한 클라이언트 ID(애플리케이션 ID)를 복사할 수 있습니다.<br>\n블레이드에서 새&rdquo; AAD 애플리케이션을 만들도록 선택&ldquo;하거나 구독의 기존 애플리케이션에서 선택할 수 있습니다.&nbsp; 기존 블레이드를 선택하면 선택할 기존 애플리케이션을 나열하는 새 블레이드가 표시됩니다.</p>\n\n<p><img alt=\"image\" border=\"0\" height=\"395\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/aa4053fa-5778-4019-a44e-b9f5edfc58bb.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"이미지\" width=\"800\"></p>\n\n<p>기존 애플리케이션에서 선택하거나 새 애플리케이션을 만들면 사용 권한&rdquo; 관리 또는 &ldquo;애플리케이션&rdquo; 관리에 대한 &ldquo;추가 단추가 표시됩니다.&nbsp; 이러한 설정을 사용하여 AAD 애플리케이션 관리 블레이드를 직접 열어 키 변경 또는 회신 URL 또는 애플리케이션 매니페스트 사용자 지정과 같은 관리 작업을 수행할 수 있습니다.</p>\n\n<p>애플리케이션 관리 단추를 클릭하면 이 애플리케이션을 사용하여 API에 사용할 키를 만들 수 있는 AAD 애플리케이션 관리 블레이드가 표시됩니다.</p>\n\n<p><img alt=\"image\" border=\"0\" height=\"363\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ac337cf4-b8fe-478d-aaab-0a28bf8432f3.png\" style=\"border-width: 0px; margin: 0px auto; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;\" title=\"이미지\" width=\"800\"></p>\n\n<p>도메인에서 AAD 앱을 만들 수 있는 권한이 없는 경우 블레이드의 AAD 앱 컨트롤이 표시되지 않고 경고 메시지가 대신 표시됩니다.</p>\n\n<p>&nbsp;</p>\n\n<h2>Media Services 고객을 위한 다음 단계 및 작업</h2>\n\n<p>이전 ACS 키 기반 인증에서 보다 안전하고 유연하며 역할 기반 Azure Active Directory 서비스로 전환하게 되어 매우 기쁩니다. 모든 Azure Media Services 고객은 최신 .NET SDK를 다운로드하거나 기존 REST 기반 API 호출을 업데이트하여 새 AAD 기반 인증 모델을 사용하도록 즉시 마이그레이션을 시작해야 합니다.</p>\n\n<p>또한 AAD 인증을 통해 더 많은 클라이언트 SDK 언어를 지원하는 새 버전의 REST API를 만들고 있습니다. 업데이트된 API에 대한 자세한 내용은 이후 블로그 게시물에서 제공됩니다.</p>\n\n<p>현재 수행해야 하는 주요 작업은 다음과 같습니다.</p>\n\n<ol>\n <li>using.NET 경우 최신 SDK로 업데이트하고 AAD 인증으로 마이그레이션합니다.</li>\n <li>Media Services API에서 ACS 인증 지원의 사용 중단을 조기에 계획합니다. 이전 ACS 인증 지원은 2018년 6월 22일에 공식적으로 종료됩니다.</li>\n</ol>\n\n<h3>Java SDK 및 오픈 소스 및 Community 기반 클라이언트 SDK</h3>\n\n<p>현재 Java SDK 또는 여러 커뮤니티 중 하나 또는 Media Services 위해 생성된 오픈 소스 클라이언트 SDK 중 하나를 사용하는 경우 현재 몇 가지 옵션이 있습니다.&nbsp;</p>\n\n<p>JAVA 및 PHP용 Azure Media Services 클라이언트 SDK는 이제 Azure Active Directory(AAD) 인증을 지원합니다.&nbsp; 최신 Java SDK 릴리스를 얻으려면Java&nbsp; <a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-java-how-to-use\" style=\"font-family: Tahoma, &quot;Helvetica Neue&quot;, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-weight: 400;\" target=\"_blank\">설명서</a>의 세부 정보를 참조하세요. Media Services 최신 PHP SDK를 다운로드하려면<a href=\"https://packagist.org/packages/microsoft/windowsazure#v0.5.7\" style=\"font-family: Tahoma, &quot;Helvetica Neue&quot;, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-weight: 400;\">Packagist 리포지토리에서 Microsoft/WindowAzurepackage 버전 0.5.7을&nbsp; 찾습니다</a>.<strong></strong>&nbsp;&nbsp;</p>\n\n<p>다른 오픈 소스 라이브러리의 경우 Media Services 팀에서 직접 지원하지 않으므로 커뮤니티 SDK 개발자와 협력하여 시나리오에 대한 AAD 지원하도록 SDK 업데이트의 우선 순위를 지정해야 합니다.</p>\n\n<p>또한 2018년에 출시될 업데이트된 REST API(v3)에서 PHP, Java, Python 등에서 생성된 자동 수집 클라이언트 SDK를 지원하여 AAD 인증을 지원하기 위해 노력하고 있습니다. 미리 보기가 준비되면 새 v3 API 및 클라이언트 SDK로 마이그레이션하는 데 대한 블로그 게시물이 추가될 예정입니다.</p>\n\n<h3>리소스 및 추가 설명서</h3>\n\n<p>자세한 내용, 샘플 코드 및 특정 시나리오 설명서는 다음 문서를 참조하세요.</p>\n\n<ul>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-use-aad-auth-to-access-ams-api\" target=\"_blank\">AAD 인증을 사용하여 API에 액세스</a></li>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-portal-get-started-with-aad\" target=\"_blank\">Azure Portal을 사용하여 AAD 인증 관리</a></li>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-dotnet-get-started-with-aad\" target=\"_blank\">.NET을 사용하여 Media Services API에 액세스하고 AAD</a></li>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-cli-create-and-configure-aad-app\" target=\"_blank\">Azure CLI 2.0을 사용하여 AAD 앱 만들기 및 구성</a></li>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-powershell-create-and-configure-aad-app\" target=\"_blank\">PowerShell을 사용하여 AAD 앱 만들기 및 구성</a>&nbsp;</li>\n <li>AAD 지원하는 Java SDK는 Media Services&nbsp; <a href=\"https://docs.microsoft.com/en-us/azure/media-services/media-services-java-how-to-use\" style=\"font-family: Tahoma, &quot;Helvetica Neue&quot;, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-weight: 400;\" target=\"_blank\">Java 설명서</a>에서 사용할 수 있습니다.</li>\n <li>AAD 지원하는 PHP SDK는Packagist 리포지토리에 있는&nbsp; <strong>Microsoft/WindowAzurepackage</strong>&nbsp;의 반전 0.5.7에서<a href=\"https://packagist.org/packages/microsoft/windowsazure#v0.5.7\" style=\"font-family: Tahoma, &quot;Helvetica Neue&quot;, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-weight: 400;\">&nbsp;</a> 사용할 수 있습니다.</li>\n</ul>\n\n<h3>질문과 함께 문의</h3>\n\n<p>언제나처럼 질문, 의견 또는 피드백이 있는 경우 <a href=\"https://social.msdn.microsoft.com/forums/azure/en-US/home?forum=MediaServices\" target=\"_blank\">MSDN 포럼</a> 에 메시지 또는 질문을 게시하거나 <a href=\"https://stackoverflow.com/questions/tagged/azure-media-services\" target=\"_blank\">Stack Overflow</a>를 사용하세요. 직접 지원을 받으려면 Azure Portal을 통해 <a href=\"https://portal.azure.com/?#blade/Microsoft_Azure_Support/HelpAndSupportBlade\" target=\"_blank\">지원 요청을</a> 제출하세요.<br>\n우리는 또한 통해 <a href=\"https://twitter.com/MSFTAzureMedia\" target=\"_blank\">@MSFTAzureMedia</a> 트위터에서 사용할 수 있습니다.</p>"
