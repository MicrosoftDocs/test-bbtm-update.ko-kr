### YamlMime:Yaml
ms.openlocfilehash: 70213ad8074ab5decf6aaf3e88a883aaf1cab7b8
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899243"
Slug: 7-best-practices-for-continuous-monitoring-with-azure-monitor
Title: Azure Monitor를 사용하여 연속 모니터링에 대한 7가지 모범 사례
Summary: 개발자, SRE, IT Ops 전문가, PM 또는 DevOps 실무자이든 모니터링은 확실히 중요합니다! Azure Monitor는 애플리케이션 및 인프라에서 전체 스택 관찰 가능성을 제공하는 Microsoft의 통합 모니터링 솔루션입니다. 하이브리드/퍼블릭 클라우드에서 성공적인 모니터링 전략을 위한 몇 가지 모범 사례에 대해 알아봅니다.
Content: >-
  <p>개발자, 사이트 안정성 엔지니어, IT Ops 전문가, 프로그램 관리자 또는 DevOps 실무자 모니터링은 확실히 중요합니다! 최신 애플리케이션이 온-프레미스 환경에서 하이브리드 또는 마이크로 서비스 기반이 되면서 기술 세트를 발전시키고 하이브리드/퍼블릭 클라우드에서 성공적인 모니터링 전략을 위한 몇 가지 모범 사례를 채택해야 합니다.</p>


  <p><a href="https://azure.microsoft.com/services/monitor/">Azure Monitor</a> 는 애플리케이션 및 인프라에서 전체 스택 관찰 가능성을 제공하는 Microsofts&rsquo; 통합 모니터링 솔루션입니다. 현재 착용하고 있는 모자에 따라 리소스의 상태에 대한 엔드투엔드 가시성으로 시작하고, 문제의 가장 가능성이 높은 근본 원인으로 드릴다운하고, 실제 코드 줄까지 드릴다운하고, 앱 또는 인프라에서 문제를 해결하고, 몇 분 만에 다시 배포할 수 있습니다. 강력한 모니터링 파이프라인 설정이 있는 경우 고객에게 영향을 미치기 전에 문제를 찾고 해결할 수 있어야 합니다.</p>


  <h2>연속 모니터링</h2>


  <p>많은 사용자가 CI/CD(연속 통합 및 연속 배포)를 DevOps 개념으로 사용하여 사용자에게 지속적인 가치를 제공하기 위해 소프트웨어를 더 빠르고 안정적으로 제공하는 방법을 이미 알고 있습니다. CM(연속 모니터링)은 DevOps 및 IT 운영 주기의 각 단계에서 모니터링을 통합할 수 있는 새로운 후속 개념입니다. 이렇게 하면 개발자, 프로덕션 및 고객을 통해 흐르는 앱 및 인프라의 상태, 성능 및 안정성이 지속적으로 보장됩니다.</p>


  <p><img alt="Continuous Monitoring with Azure Monitor and Azure DevOps" border="0" height="308" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4775d0d3-aad0-4c19-9274-d9a21fa7b5e3.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="DevOps 대한 연속 모니터링" width="610"></p>


  <p>Azure Monitor는 워크플로 전체에서 연속 모니터링을 실제로 사용하도록 설정할 수 있는 도구 중 하나입니다. 배포 및 작업 중에 <a href="https://visualstudio.microsoft.com/">릴리스 관리 및</a> 작업 항목 관리를 위해 Azure DevOps 통합하는 동시에 개발 및 테스트 중에 Visual Studio 및 <a href="https://azure.microsoft.com/services/devops/">Visual Studio Code</a> 원활하게 작동합니다. 기존 IT 프로세스 내에서 문제 및 인시던트를 추적하는 데 도움이 되도록 선택한 ITSM 및 SIEM 도구 간에도 통합됩니다.</p>


  <h2>연속 모니터링에 대한 7가지 모범 사례</h2>


  <h3><em>모든</em> 앱에 대한 모니터링 사용</h3>


  <p>전체 관찰 가능성을 위한 첫 번째 단계는 모든 웹앱 및 서비스에서 모니터링을 사용하도록 설정하는 것입니다. 코드에서 작업하는 경우 .NET, Java, Node.js 또는 기타 프로그래밍 언어로 작성된 앱에 <a href="https://docs.microsoft.com/azure/azure-monitor/">Azure Monitor 애플리케이션 Insights SDK를 추가</a>해야 합니다. 이는 앱 또는 비즈니스와 관련된 사용자 지정 이벤트, 메트릭 또는 페이지 보기를 지정할 수도 있으므로 권장되는 방법입니다.</p>


  <p>코드에 액세스할 수 없는&rsquo; 경우 모니터링, <a href="https://docs.microsoft.com/azure/application-insights/app-insights-vsts-continuous-monitoring">Azure Pipelines 릴리스 템플릿, Azure DevOps</a> <a href="https://azure.microsoft.com/features/devops-projects/">프로젝트, Windows</a> 서버의 <a href="https://docs.microsoft.com/en-us/azure/application-insights/app-insights-monitor-performance-live-website-now?toc=/azure/azure-monitor/toc.json">.NET 앱 상태 모니터</a>, Azure VM 또는 Azure App Services의 확장 등을 사용하도록 설정하는 다른 많은 메커니즘이 있습니다. 모든 앱에서 모니터링을 사용하도록 설정하면 모든 구성 요소에서 엔드 투 엔드 트랜잭션 및 연결을 쉽게 시각화할 수 있습니다.</p>


  <h3>인프라의 <em>모든 </em>관련 구성 요소에 대한 모니터링 사용</h3>


  <p>일반적으로 애플리케이션 스택의 구성 요소에 문제가 있을 수 있는 구성 요소를 예측하기 어렵기 때문에 <em>모든</em> 관련 구성 요소를 모니터링하는 것이 중요합니다. Azure Monitor는 VM, 컨테이너, Storage, 네트워크 또는 기타 Azure 서비스 등 전체 하이브리드 인프라의 상태 및 성능을 추적하는 데 도움이 될 수 있습니다. 대부분의 Azure 리소스에서 플랫폼 <a href="https://docs.microsoft.com/azure/monitoring/monitoring-data-collection?toc=/azure/azure-monitor/toc.json">메트릭, 활동 로그 및 진단 로그</a> 를 자동으로 가져와서 Azure Portal을 클릭하거나 서버에 에이전트를 설치하는 간단한 단추를 사용하여 <a href="https://docs.microsoft.com/azure/monitoring/monitoring-vminsights-overview?toc=/azure/azure-monitor/toc.json">가상 머신</a> 또는 <a href="https://docs.microsoft.com/azure/monitoring/monitoring-container-insights-overview?toc=/azure/azure-monitor/toc.json">AKS 클러스터</a> 에 대한 심층 모니터링을 사용하도록 설정할 수 있습니다.</p>


  <p>확장성 및 코드로서의 인프라의 경우 DevOps 프로젝트, <a href="https://docs.microsoft.com/azure/monitoring/monitoring-vminsights-onboard?toc=/azure/azure-monitor/toc.json">Azure 정책, PowerShell 또는 ARM 템플릿</a>을 활용하여 대규모 리소스 집합에 대한 <a href="https://docs.microsoft.com/azure/monitoring-and-diagnostics/monitoring-create-metric-alerts-with-templates?toc=/azure/azure-monitor/toc.json">경고를 모니터링하고 구성하는 것이</a> 좋습니다. 전체 인프라에서 모니터링을 사용하도록 설정하면 전체 식별 가능성을 확보하고 문제 발생 시 잠재적인 근본 원인을 더 쉽게 발견할 수 있습니다.</p>


  <h3>리소스 그룹의 버킷 관련 리소스</h3>


  <p>현재 Azure의 일반적인 애플리케이션은 VM/App Services 또는 Cloud Services, AKS 클러스터, ACS 또는 Service Fabric 호스트되는 마이크로 서비스에 배포된 모놀리식 앱으로 구성됩니다. 이러한 앱은 Event Hubs, Storage, SQL, Service Bus 등의 종속성을 자주 활용하여 작업을 완료합니다. 많은 고객이 <a href="https://docs.microsoft.com/azure/azure-resource-manager/resource-group-overview">리소스 그룹을</a> 사용하여 애플리케이션을 구성하는 모든 리소스를 버킷팅하고, 동일한 리소스 그룹을 사용하는 경우 <a href="https://docs.microsoft.com/azure/monitoring-and-diagnostics/resource-group-insights">Azure Monitor for Resource Groups</a> 는 전체 스택 애플리케이션의 상태 및 성능을 추적하는 간단한 방법을 제공하는 동시에 조사 또는 디버깅을 위해 각 구성 요소로 드릴다운할 수 있습니다.</p>


  <h3>지속적인 배포를 통해 품질 보장</h3>


  <p><a href="https://azure.microsoft.com/services/devops/pipelines/">Azure Pipelines</a> 연속 배포를 설정하는 좋은 방법이며 CI/CD 테스트가 성공한 경우 코드 커밋에서 프로덕션까지 전체 프로세스를 자동화할 수 있습니다. 배포 전 또는 배포 후 <a href="https://docs.microsoft.com/azure/devops/pipelines/release/approvals/gates?view=vsts">품질 게이트</a> 의 일부로 모니터링을 통합하면 앱이 개발자에서 프로덕션으로 이동함에 따라 KPI(주요 상태 및 성능 메트릭)도 계속 추적할 수 있으며 인프라 환경 또는 규모 차이는 KPI에 부정적인 영향을 미치지 않습니다.</p>


  <p>또한 개발, 테스트, 카나리아, 프로덕션 등과 같은 다양한 배포 환경 간에 <a href="https://docs.microsoft.com/azure/application-insights/app-insights-separate-resources">별도의 모니터링 인스턴스</a> 를 유지하는 것이 좋습니다. 따라서 데이터는 연결된 앱 및 인프라 전반에 걸쳐 관련성이 유지됩니다. 상관 관계를 지정해야 하는 경우 항상 <a href="https://docs.microsoft.com/azure/monitoring-and-diagnostics/monitoring-metric-charts?toc=/azure/azure-monitor/toc.json">메트릭 탐색기</a> 에서 다중 리소스 차트를 디자인하거나 <a href="https://docs.microsoft.com/azure/log-analytics/log-analytics-cross-workspace-search">Log Analytics</a>에서 리소스 간 쿼리를 실행할 수 있습니다.</p>


  <h3>알림 및/또는 수정을 사용하여 실행 가능한 경고 설정</h3>


  <p>강력한 경고 파이프라인을 사용하는 것은 모든 모니터링 전략에 필수적이며 예측 가능한 모든 오류 상태에 대해 실행 가능한 <a href="https://docs.microsoft.com/azure/monitoring-and-diagnostics/monitoring-overview-alerts?toc=/azure/azure-monitor/toc.json">경고를</a> 설정하는 것이 좋습니다. 정적 또는 <a href="https://docs.microsoft.com/azure/monitoring-and-diagnostics/monitoring-alerts-dynamic-thresholds?toc=/azure/azure-monitor/toc.json">동적 임계값</a> 에 따라 경고를 구성하고 그 위에 작업을 설정할 수 있습니다. 이러한 <a href="https://docs.microsoft.com/azure/monitoring-and-diagnostics/monitoring-action-groups?toc=/azure/azure-monitor/toc.json">작업은</a> SMS, 이메일, 푸시 알림 또는 간단한 알림에 대한 음성 호출만큼 간단할 수 있습니다. 웹후크를 통해 기존 ITSM 도구 또는 다른 경고 관리 시스템에 연결할 수도 있습니다. 가능하면 탄력적 워크로드의 경우 Azure Automation Runbook 또는 <a href="https://docs.microsoft.com/azure/monitoring-and-diagnostics/monitor-tutorial-autoscale-performance-schedule?toc=/azure/azure-monitor/toc.json">자동 크기 조정</a> 을 사용하여 수정을 설계하는 방법이 있습니다.</p>


  <h3>보고를 위한 역할 기반 대시보드 및 통합 문서 준비</h3>


  <p>컨퍼런스 프레젠테이션에 있는 대규모 그룹에게 해당 회사의 개발 및 운영에서 동일한 모니터링 솔루션을 이미 사용하고 있는지를 묻는 질문에 대한 답변은 압도적으로 부정적입니다. 성공적인 연속 모니터링 및 빠른 MTTD 및 MTTR 보장을 위해서는 개발 및 운영에서 동일한 원격 분석 및 동일한 도구에 액세스할 수 있어야 합니다. Azure Monitor는 전체 팀을 위한 통합 모니터링 솔루션으로 설계되었으며 일반적인 메트릭 &amp; 로그를 기반으로 <a href="https://docs.microsoft.com/azure/application-insights/app-insights-tutorial-dashboards?toc=/azure/azure-monitor/toc.json">사용자 지정 역할 기반 대시보드</a>를 쉽게 준비할 수 있습니다.</p>


  <p><a href="https://docs.microsoft.com/azure/application-insights/app-insights-usage-workbooks?toc=/azure/azure-monitor/toc.json">통합 문서는</a> 개발 및 작업 간의 지식 공유에 도움이 될 수 있는 또 다른 유용한 기능입니다. 메트릭 차트 및 로그 쿼리를 사용하여 동적 보고서로 준비하거나, 고객 지원 또는 운영에서 기본 문제를 처리하는 데 도움이 되는 개발자가 준비한 문제 해결 가이드로도 준비할 수 있습니다.</p>


  <h3>Build-Measure-Learn을 사용하여 &ldquo;지속적으로 최적화&rdquo;</h3>


  <p>고객에게 적합한 솔루션을 구축하는 것은 처음부터 달성되지 않으며 종종 반복적인 프로세스입니다. 모니터링은 KPI 또는 사용자 동작 메트릭을 지속적으로 추적하고 반복 계획을 통해 최적화할 것을 권장하는 인기 있는 &ldquo;Build-Measure-Learn&rdquo; 철학의 초석 중 하나입니다. Azure Monitor를 사용하면 비즈니스와 관련된 모든 관련 사용자 지정 이벤트, 메트릭 또는 로그를 수집할 수 있으며, 누락된 것으로 보이는 경우 다음 배포에서 새 데이터 포인트를 추가하는 것은 매우 간단합니다.</p>


  <p>Azure Monitor의 다양한 도구를 사용하여 상태, 가용성, 성능 및 안정성을 추적하고 최적화할 수 있으며, 고객 환경을 최적화하기 위한 <a href="https://docs.microsoft.com/azure/application-insights/app-insights-tutorial-users?toc=/azure/azure-monitor/toc.json">최종 사용자 동작 및 참여를</a> 추적할 수도 있습니다. Azure Monitor는 중요한 KPI로 전환하기 위해 집중할 영역의 우선 순위를 지정하는 데 도움이 되는 <a href="https://docs.microsoft.com/azure/application-insights/app-insights-usage-impact?toc=/azure/azure-monitor/toc.json">영향 상관 관계를</a> 제공합니다.</p>


  <h2>다음 단계</h2>


  <p>DevOps 및 IT Ops 프로세스 전반에 걸쳐 앱 및 인프라에서 연속 모니터링 파이프라인을 사용하면 MTTD 및 MTTR을 줄이는 동시에 고객에게 최상의 솔루션을 제공하기 위해 노력할 수 있습니다.</p>


  <p><a href="https://aka.ms/MonitoringDocs">설명서</a>에서 Azure Monitor에 대해 자세히 알아보고 Azure <a href="https://aka.ms/AzMonOverview">Portal의 Azure Monitor 개요</a> 내에서 몇 가지 유용한 자습서 및 비디오를 확인하여 이러한 사례 중 일부를 더 자세히 구현하는 데 도움이 될 수 있습니다.</p>
