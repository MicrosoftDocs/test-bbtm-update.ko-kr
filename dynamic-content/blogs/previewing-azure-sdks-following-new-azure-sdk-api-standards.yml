### YamlMime:Yaml
ms.openlocfilehash: 69669462ebd91a548e614f9955a21a547b2554d0
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139897851"
Slug: previewing-azure-sdks-following-new-azure-sdk-api-standards
Title: 새 Azure SDK API 표준에 따라 Azure SDK 미리 보기
Summary: '오늘 Java, Python, JavaScript 또는 TypeScript 및 .NET에서 Azure Storage, Azure Cosmos DB, Azure Key Vault 및 Azure Event Hubs로 작업하기 위한 새로운 라이브러리 집합을 공유하게 되어 기쁩니다. 이러한 라이브러리는 새 서비스 기능에 대한 액세스를 제공하며, 라이브러리를 더 쉽게 학습하고 소프트웨어에 통합할 수 있다고 믿는 Azure SDK에 새로운 표준 집합을 적용하기 위한 첫 번째 단계를 나타냅니다. '
Content: >-
  <p>&rsquo;이제 Java, Python, JavaScript 또는 TypeScript 및 .NET에서 Azure Storage,&nbsp; Azure Cosmos DB, Azure Key Vault 및 Azure Event Hubs로 작업하기 위한 새로운 라이브러리 집합을 공유하게 되어 기쁩니다. 이러한 라이브러리는 새 서비스 기능에 대한 액세스를 제공하며, 라이브러리를 더 쉽게 학습하고 소프트웨어에 통합할 수 있다고 믿는 Azure SDK에 새로운 <a href="https://aka.ms/azure-sdk-site" target="_blank">표준 집합</a> 을 적용하기 위한 첫 번째 단계를 나타냅니다. 즐겨 찾는 패키지 관리자에서 오늘 이러한 라이브러리를 가져올 수 있으며<a href="https://github.com/Azure/azure-sdk" target="_blank">, GitHub</a> 대한 피드백을 듣고 싶습니다. 시작하려면 아래 링크된 지침을 따르세요.</p>


  <ul>
      <li><a href="https://aka.ms/azure-sdk-preview1-python" target="_blank">Python 릴리스 정보</a></li>
      <li><a href="https://aka.ms/azure-sdk-preview1-java" target="_blank">Java 릴리스 정보</a></li>
      <li><a href="https://aka.ms/azure-sdk-preview1-js" target="_blank">JavaScript 릴리스 정보</a></li>
      <li><a href="https://aka.ms/azure-sdk-preview1-net" target="_blank">.NET 릴리스 정보</a></li>
  </ul>


  <h2>왜 우리는 이것을 하고 있는가?</h2>


  <p>클라이언트 또는 온-프레미스에서 클라우드로 소프트웨어를 이동하는 것은 패러다임 전환과 마찬가지로 Azure 기능의&rsquo; 빠른 혁신을 거치고 개발자에게 소프트웨어를 노출하는 가장 좋은 방법을 알아봅니다. 이제 일부 Azure 서비스가 완성되고 중요 비즈니스용 엔터프라이즈 애플리케이션으로 채택되었으므로 이러한 서비스에 대한 개발자 생산성에 중요한 패턴과 사례를 알아봅니다. 또한 여러분의&rsquo; 의견을 듣고 새로운 노력이 귀하의 제안과&rsquo; 요청을 통합했는지 확인했습니다. 마지막으로, 일관성, 사용 편의성 및 검색 가능성은 Azure SDK 작업과 관련하여 식별된 패턴에도 똑같이 중요하다는 것을 이해합니다.</p>


  <h2>무엇이&rsquo; 다른가요?</h2>


  <p>팀은 후속 블로그 게시물에서 간략하게 설명하려고 하지만 시작하기 위해 피드백에 따라 정의한 일련의 목표에서 큰 변화가 일어났습니다. 다음과 같습니다.</p>


  <ul>
      <li>최고의 언어 에코시스템 라이브러리와 동등한 생산성을 갖춘 사용하기 쉬운 API를 만듭니다.</li>
      <li>사용되는 언어 및 에코시스템에 관용적인 API를 제공합니다.</li>
      <li>시간이 지남에 따라 매우 호환되는 방식으로 진화합니다.</li>
      <li>API와 마찬가지로 설명서 및 샘플에 집중합니다.</li>
      <li>라이브러리를 만드는 방법을 핵심으로 변경합니다.</li>
  </ul>


  <h2>사용 편의성 및 생산성</h2>


  <p>생산성은 그 자체로 다각적인 주제이지만, 생산성의 두 가지 주요 요소는 일관성과 유용성입니다.</p>


  <p>일관성을 유지하기 위해 Azure 개발자와 함께 작업하는 동안 배운 내용을 API 디자인 지침 집합으로 명문화했습니다. 지침 자체는 <a href="https://github.com/Azure/azure-sdk" target="_blank">GitHub 리포지토리</a>에 열려 있으며, 이 공간에 접근하는 방법에 대한 자세한 내용, 일반적인 지침 집합 및 Java, Python, .NET 및 JavaScript에 대한 언어별 지침에 대한 원칙 섹션으로 구성됩니다. 지침을 적용하면 이러한 라이브러리를 더 쉽게 사용하고 배우기 쉬울 수 있다고 생각합니다. 한 라이브러리에서 패턴 또는 API 셰이프를 배울 때 다른 라이브러리에서 동일한 패턴 또는 API 셰이프를 계산할 수 있어야 합니다.</p>


  <p>유용성을 높이기 위해 사용자 피드백을 수집하는 방법을 조정했습니다. 우리는 미리 보기 릴리스, 프로젝트에 대한 개발자와 직접 작업, 다양한 커뮤니티 포럼의 문제에 대응하는 등 업계에서 많은 표준 사례를 계속 수행하지만 다음 단계는 라이브러리를 유용하게 테스트하는 것이었습니다. 오늘 릴리스하는 각 라이브러리에 대해 개발자를 랩에 데려와서 관찰하는 동안 다양한 사용 사례를 통해 작업하게 했습니다. 이 피드백은 라이브러리의 API 셰이프뿐만 아니라 지침을 모두 형성하는 데 중요한 역할을 했습니다.</p>


  <h2>Idiomatic 라이브러리</h2>


  <p>개발자와 대화하는 동안 들었던 피드백의 핵심은 API가 항상 언어로 인체공학을 느끼지 않는다는&rsquo; 것입니다. 이를 해결하기 위해 작성 중인 라이브러리가 해당 언어의 패턴을 따라야 한다는 핵심 원칙 중 하나로 명시적으로 설정했습니다. 또한 지침을 따르도록 각 서비스&rsquo; 라이브러리를 업데이트할 때 Java, Python, JavaScript 및 .NET과 같은 각 언어로 해당 서비스에 대한 라이브러리를 항상 릴리스하도록 보장합니다.</p>


  <h2>호환성</h2>


  <p>호환성은 항상 Microsoft의 값이었습니다. 개발자는 솔루션에 상당한 시간과 비용을 투입하고 지속적으로 작업하는 것을 믿을 수 있어야 합니다. 여기에 긴장이있다. 어떤 경우에는 더 나은 기반을 얻기 위해 호환성이 손상되는 변경을 해야 했습니다. 우리는 그 기초를 맞추는 것이 위에서 설명한 생산성 목표를 달성하는 데 도움이 될 것이라고 믿으며, 일단 설정되면&rsquo; 높은 수준의 호환성을 제공하려고 합니다. 호환성에 대한 마지막 참고 사항으로,&rsquo; 라이브러리를 업그레이드하고 이러한 라이브러리와 함께 다른 소프트웨어 조각을 더 쉽게 사용해야 하는 향후 비호환성 및 버전 관리 복잡성을 줄이기 위해 최대한 최소화하기 위해 노력한 종속성을 살펴보았습니다.</p>


  <h2>설명서</h2>


  <p>좋은 설명서와 샘플을 포함하는 것은 생산성의 한 측면으로 간주될 수 있지만 많은 개발자가 사용할 기술을 선택하는 데 있어 가장 중요한 요소로 평가하기 때문에 이를 자체 목표라고 부르고 싶었습니다. API 자체에서 수행하는 유용성 연구&rsquo;와 마찬가지로, 새 개발자가 Azure 서비스를 빠르게 실험할 수 있도록 Azure 빠른 시작에서 동일한 작업을 수행해 왔습니다. 또한 API 참조 코드 조각과 샘플이 모두 최신이 아니라는 피드백을 받았으며, GitHub API 참조 코드 조각 및 샘플을 정기적으로 빌드하고 설명서에 게시하는 도구를 빌드하고 있습니다.</p>


  <h2>빌드 방법 변경</h2>


  <p>우리는 또한 우리가 함께 일하는 방법과 지역 사회와 우리가 기반으로 구축 하는 것을 변경해야 한다는 것을 발견했습니다. 이를&rsquo; 위해 개발 활동을 몇 가지 주요 리포지토리로 재구성하고 중앙 집중화하기 위한 작업을 시작했습니다.</p>


  <ul>
      <li><a href="https://github.com/Azure/azure-sdk" target="_blank">Azure-sdk</a>: 시작할 중앙 위치 및 디자인 지침과 같은 상위 수준의 토픽을 위한 위치입니다.</li>
      <li>각 언어에 대한 리포지토리: <ul>
          <li><a href="https://github.com/Azure/azure-sdk-for-python" target="_blank">azure-sdk-for-python</a></li>
          <li><a href="https://github.com/Azure/azure-sdk-for-java" target="_blank">azure-sdk-for-java</a></li>
          <li><a href="https://github.com/Azure/azure-sdk-for-js" target="_blank">azure-sdk-for-js</a></li>
          <li><a href="https://github.com/Azure/azure-sdk-for-net" target="_blank">azure-sdk-for-net</a></li>
      </ul>
      </li>
  </ul>


  <p>마지막으로, 모든 라이브러리에서 ID 및 인증, 동기 및 비동기 API, 로깅, 오류 처리, 네트워킹 재시도 등과 같은 일반적인 기능을 제공하는 데 도움이 되는 새로운 핵심 라이브러리를 빌드했습니다.</p>


  <h2>  어떻게 해야 합니까?</h2>


  <p>위에서 설명한 많은 원칙을 준수하는 새 Azure 라이브러리의 미리 보기 릴리스를 공유하게 되어 매우 기쁩니다. 오늘 새 SDK를 다운로드하고 사용해 보시기 권장합니다. 이러한 과정을 돕기 위해 각 라이브러리의 새로운 기능&rsquo;, 패키지를 가져오는 방법 및 미리 보기와 관련된 GitHub 문제를 제출하는 방법을 설명하는 릴리스 정보를 제공합니다.</p>


  <ul>
      <li><a href="https://aka.ms/azure-sdk-preview1-python" target="_blank">Python 릴리스 정보</a></li>
      <li><a href="https://aka.ms/azure-sdk-preview1-java" target="_blank">Java 릴리스 정보</a></li>
      <li><a href="https://aka.ms/azure-sdk-preview1-js" target="_blank">JavaScript 릴리스 정보</a></li>
      <li><a href="https://aka.ms/azure-sdk-preview1-net" target="_blank">.NET 릴리스 정보</a></li>
  </ul>


  <p>GitHub 문제를 제기하는 것 외에도 자유롭게 팔로우하고 트윗하세요<a href="https://twitter.com/azuresdk" target="_blank">@AzureSDK</a>. 라이브러리를 개선하고 Azure에서 훌륭한 소프트웨어를 만들고 문제를 보다 쉽게 해결할 수 있도록 피드백을 받을 수 있기를 기대합니다.</p>
