### YamlMime:Yaml
ms.openlocfilehash: 47cd9783e97333e8ac749659a65bffd49034323c
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899856"
Slug: continuous-integration-and-deployment-to-azure-container-service
Title: Azure Container Service에 대한 지속적인 통합 및 배포
Summary: 오늘날의 기업들은 시장에서의 경쟁력 확보를 위해 신속히 혁신해야 합니다. 차량 공유 회사는 일일 수요 변동에 대응하기 위해 하루에 여러 번 앱을 업데이트해야 할 수 있습니다...
Content: >-
  <p>오늘날&rsquo; 기업은 시장에서 경쟁력을 갖추기 위해 빠른 속도로 혁신해야 합니다. 차량 공유 회사는 일일 수요 변동에 대응하고 가격을 조정하기 위해 하루에 여러 번 앱을 업데이트해야 할 수 있습니다. 위치 기반 소셜 게임 앱은 매일 활성 사용자를 늘리고 앱 스토어 순위에서 1위를 유지하기 위해 지속적으로 새로운 기능을 사용자에게 참여해야 합니다. 고품질의 최신 애플리케이션을 제공하려면 이러한 지속적인 혁신 주기를 가능하게 하는 데 중요한 DevOps 도구와 프로세스가 필요합니다.&nbsp; 개발자는 올바른 DevOps 도구를 사용하여 지속적인 배포를 간소화하고 혁신적인 애플리케이션을 사용자에게&rsquo; 더 빠르게 가져올 수 있습니다. 몇 번이고.</p>


  <p>지속적인 통합 및 배포 사례가 잘 확립되어 있지만 <a href="https://www.microsoft.com/en-us/cloud-platform/containers">, 컨테이너</a> 를 도입하면 특히 다중 컨테이너 애플리케이션을 사용할 때 새로운 고려 사항이 제공됩니다. 11월 7일, ACS(Azure Container Service)에 대한 일련의 업데이트를 <a href="https://azure.microsoft.com/en-us/blog/azure-container-service-the-cloud-s-most-open-option-for-containers/">발표</a> 했습니다. ACS는 클라우드에서 컨테이너 애플리케이션을 실행하는 가장 간소화되고 개방적이며 유연한 방법으로 클라우드 &mdash; 오케스트레이터에서 더 많은 고객 선택을 제공합니다.</p>


  <p>이제 Visual Studio, Visual Studio Team Services 및 오픈 소스 Visual Studio Code 사용하여 다중 컨테이너 Linux 애플리케이션의 <a href="https://channel9.msdn.com/events/connect/2016/204">연속 통합 및 배포</a> 미리 보기를 사용할 수 있습니다. 배포 민첩성을 계속 사용하도록 설정하기 위해 이러한 도구는 선택한 개발 및 CI/CD 솔루션을 사용하여 컨테이너 워크로드에 대한 뛰어난 개발-테스트-프로덕션 배포 환경을 제공합니다.</p>


  <h2>키 사용</h2>


  <h3>Visual Studio Team Services 사용하여 Azure Container Service에 대한 연속 파이프라인 만들기</h3>


  <p>표준 Docker 자산과 함께 선택한 언어(Java, C#, PHP 등) 및 즐겨 찾는 IDE(Eclipse, Visual Studio, IntelliJ 등)를 사용하여 앱을 작성할 수 있습니다. 그런 다음 <a href="https://docs.microsoft.com/en-us/azure/xplat-cli-install">, Azure CLI(명령줄 인터페이스</a> )를 사용하여 간단한 명령을 실행하여 원본 리포지토리를 대상 ACS( <a href="https://aka.ms/acs">Azure Container Service</a> ) 클러스터에 연결하고 다중 컨테이너 Docker 애플리케이션에 대한 컨테이너화된 빌드 및 배포 파이프라인을 설정할 수 있습니다. 따라서 이제 소스 코드가 GitHub 리포지토리에 푸시될 때마다 VSTS를 자동으로 트리거하여 컨테이너 이미지를 빌드 및 태그 지정하고, 단위 테스트를 실행하고, Azure Container Registry로 푸시하고, 가동 중지 시간이 0인 ACS에 배포할 수 있습니다. 미리 보기의 경우 <strong>DC/OS에만</strong> 배포되는 파이프라인 만들기를 지원합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c431ff22-a76b-4260-9a91-b74dee1cf9e6.jpg"><img alt="Sample App Azure Container Release" border="0" height="129" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c4e3732f-4d2c-4aab-a3fd-4873b287a8b0.jpg" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="샘플 앱 Azure Container Release" width="640"></a></p>


  <p>Azure CLI 외에도 CI/CD를 설정하는 유사한 환경은 AZURE Portal(ACS 블레이드) 및 Visual Studio IDE에서도 직접 사용할 수 있습니다.</p>


  <h3>Azure Container Registry를 사용하여 이미지 저장</h3>


  <p><a href="https://azure.microsoft.com/en-us/blog/azure-container-registry-preview/">Azure Container Registry</a> 는 컨테이너 이미지를 호스팅하기 위한 프라이빗 레지스트리입니다. 고객은 Azure Container Registry를 사용하여 모든 유형의 컨테이너 배포에 대한 Docker 형식 이미지를 저장할 수 있습니다. Azure Container Registry는 Docker Swarm, DC/OS 및 Kubernetes를 포함하여 Azure Container Service에서 호스트되는 오케스트레이터와 잘 통합됩니다.&nbsp; 연속 통합 및 배포 도구는 빌드 후 컨테이너 이미지를 Azure Container Registry로 푸시합니다. 나중에 컨테이너 레지스트리에서 이미지를 끌어와 ACS 클러스터에 배포합니다.</p>


  <h3>여러 환경에서 이미지 쉽게 승격</h3>


  <p>연속 통합 및 배포 도구는 변경할 수 없는 서비스 원칙을 지원합니다. 즉, 개발에서 테스트 및 프로덕션과 같은 다운스트림 릴리스 환경으로 이미지를 쉽게 승격할 수 있으며, 중요한 것은 이미지를 승격할 때마다 컨테이너 이미지를 다시 빌드할 필요가 없다는&rsquo; 것입니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c4ee6ae0-c849-42fa-a7b1-c8e371321de3.jpg"><img alt="Azure Container Promoting Images" border="0" height="573" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b2892a68-2c9e-4fe8-95af-b2e11c6abf45.jpg" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Azure Container Promoting Images" width="1024"></a></p>


  <p>이러한 혁신은 컨테이너 에코시스템에 대한 지속적인 투자를 보여주고 DC/OS, Docker Swarm 및 Kubernetes의 선택 오픈 소스 오케스트레이션 기술을 &mdash; 제공하는 유일한 퍼블릭 클라우드 컨테이너 오케스트레이션 서비스를 제공하는 고유한 전략을 강조합니다. 지속적인 통합 및 배포 도구에 대한 지원은 조직이 클라우드에서 컨테이너를 더 쉽게 채택할 수 있도록 전략을 강화합니다.</p>


  <p>고객은 11 &mdash; 월부터 지속적인 통합 및 배포 도구의 미리 보기에 액세스할 수 있습니다. Microsoft 커넥트();!</p>


  <h3>자세한 정보</h3>


  <p>Azure Container Service에 다중 컨테이너 앱의 지속적인 통합 및 배포를 설정하려면 <a href="https://docs.microsoft.com/azure/container-service/container-service-setup-ci-cd">이 자습서</a> 를 확인하세요.</p>
