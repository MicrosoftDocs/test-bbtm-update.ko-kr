### YamlMime:Yaml
ms.openlocfilehash: bb2b9341a3cb78149fea132d512ef8e225a6cee1
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902679"
Slug: azure-sql-data-warehouse-now-supports-aad-large-rows-and-additional-t-sql-features
Title: Azure SQL Data Warehouse는 이제 AAD, 큰 행 및 추가 T-SQL 기능을 지원합니다.
Summary: AAD, 큰 행, 추가 T-SQL 지원 등을 포함하여 Azure SQL Data Warehouse에 대한 몇 가지 향상된 기능을 발표하게 되어 기쁘게 생각합니다.
Content: "<p><a href=\"https://aka.ms/sqldw\" target=\"_blank\">Azure SQL Data Warehouse</a>에 대한 몇 가지 향상된 기능을 발표하게 되어 기쁘게 생각합니다. 안정성 및 안정성 개선 외에도 몇 가지 새로운 기능이 추가되었으며, 그 중 상당수는 고객 피드백에서 직접 결정됩니다. 향후 버전에서 보려는 기능에 대한 피드백이 있는 경우 <a href=\"https://feedback.azure.com/forums/307516-sql-data-warehouse\" target=\"_blank\">피드백</a> 페이지를 사용하세요.</p>\n\n<h1>AAD(Azure Active Directory) 인증</h1>\n\n<p>이제 거의 950만 개의 디렉터리와 6억 개의 사용자 계정을 호스팅하는 <a href=\"https://azure.microsoft.com/services/active-directory/\" target=\"_blank\">Azure Active Directory</a> 데이터 액세스 관리를 크게 간소화할 수 있습니다. AAD 인증을 사용하면 하나의 중앙 위치에서 데이터베이스 사용자 및 기타 Microsoft 서비스 ID를 관리할 수 있습니다. 이제 서비스 간의 원활한 통합을 통해 다음을 수행할 수 있습니다.</p>\n\n<ul>\n <li>개별 사용자 이름 및 암호를 만들지 않고도 최종 사용자에게 데이터 웨어하우스에 대한 액세스를 허용합니다.</li>\n <li>도메인 보안 그룹/사용자를 사용하여 데이터베이스에 대한 Single Sign-On을 제공합니다.</li>\n <li>SQL Data Warehouse에 연결하는 애플리케이션에 토큰 기반 인증을 사용하도록 설정합니다.</li>\n <li>Azure Active Directory 지원하는 Windows 인증 및 기타 형태의 인증을 사용하도록 설정하여 암호 저장을 제거합니다.</li>\n <li>데이터베이스 서비스에서 사용자 ID의 확산을 제거합니다.</li>\n</ul>\n\n<p>자세한 내용은 <a href=\"https://azure.microsoft.com/documentation/articles/sql-data-warehouse-aad-authentication/\" target=\"_blank\">Azure Active Directory 인증을 사용하여 SQL Data Warehouse에 연결</a>합니다.</p>\n\n<h1>큰 행 지원</h1>\n\n<p>큰 행에 대한 지원은 사용자로부터 자주 요청되었습니다. 이 업데이트는 32K보다 큰 행과 8K 이상의 데이터 형식에 대한 지원을 추가합니다. 큰 행 지원은 <a href=\"https://msdn.microsoft.com/library/ms176089.aspx\" target=\"_blank\">varchar(max)</a>, <a href=\"https://msdn.microsoft.com/library/ms186939.aspx\" target=\"_blank\">nvarchar(max)</a>&nbsp; 및 <a href=\"https://msdn.microsoft.com/library/ms188362.aspx\" target=\"_blank\">varbinary(max)</a>에 대한 지원을 추가합니다. 이러한 데이터 형식을 추가하면 기존 테이블 정의에서 더 많은 데이터 형식을 사용할 수 있으므로 클라우드로 더 쉽게 마이그레이션할 수 있습니다.</p>\n\n<p>대규모 행 지원의 첫 번째 반복에서는 향후 업데이트에서 해제될 몇 가지 제한 사항이 있습니다. 이 업데이트에서 큰 행에 대한 로드는 현재 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/sql-data-warehouse-get-started-load-with-azure-data-factory/\" target=\"_blank\">Azure Data Factory</a>(BCP 사용),&nbsp; <a href=\"https://azure.microsoft.com/en-us/documentation/articles/sql-data-warehouse-integrate-azure-stream-analytics/\" target=\"_blank\">Azure Stream Analytics</a>, <a href=\"https://azure.microsoft.com/en-us/documentation/articles/sql-data-warehouse-load-from-sql-server-with-integration-services/\" target=\"_blank\">SSIS</a>, <a href=\"https://azure.microsoft.com/en-us/documentation/articles/sql-data-warehouse-load-with-bcp/\" target=\"_blank\">BCPor</a>&nbsp; .NET SQLBulkCopy 클래스를 통해서만 지원됩니다.&nbsp; 큰 행에 대한 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/sql-data-warehouse-get-started-load-with-polybase/\" target=\"_blank\">PolyBase</a> 지원은 향후 릴리스에서 추가될 예정입니다. Azure SQL Database 마찬가지로 varchar(max)와 같은 새로운 대규모 데이터 형식에 대한 지원은 힙 및 클러스터형 인덱스 테이블로 제한됩니다. 큰 행은 클러스터형 Columnstore 테이블에 대해 지원되며,&rsquo; 나중에 제공되는 클러스터형 Columnstore에서 대규모 데이터 형식만 지원합니다.</p>\n\n<h1>트랜잭션 안전 제한</h1>\n\n<p>긴 롤백을 방지하기 위해 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/sql-data-warehouse-develop-transactions/#transaction-size\"></a><a href=\"https://azure.microsoft.com/documentation/articles/sql-data-warehouse-develop-transactions/#transaction-size\" target=\"_blank\">트랜잭션 크기 제한이</a> 구현되었습니다. 한도는 1시간 넘게 실행할 수 있는 대규모 작업을 실행할 수 있을 만큼 충분히 관대하지만, 여러 시간 동안 실행 가능한 장기 실행 롤백을 방지할 수 있을 만큼 작습니다. 이 안전 제한은 사용자가 장기 실행 트랜잭션 중에 일시 중지를 시도하는 경우처럼 긴 데이터베이스 중단으로 변할 수 있는 조건을 방지하기 위해 마련되었습니다. 일반적으로 성능과 안전을 위해 트랜잭션 크기를 제한하는 것이 좋으며 이를 달성하기 위한 몇 가지 간단한 단계가 있습니다. 트랜잭션 크기를 제한하여 워크로드를 최적화하는 방법에 대한 자세한 내용은 트랜잭션에 대한 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/sql-data-warehouse-develop-best-practices-transactions/\">모범 사례 가이드를 </a>참조하세요.</p>\n\n<h1>향상된 Visual Studio 지원</h1>\n\n<p>Visual Studio 이제 SQL Data Warehouse 지원에 대한 최신 SQL Server Data Tools(SSDT) 버전의 자동 설치 및 업데이트를 지원합니다. 이 향상된 통합은 이제 새 버전이 릴리스될 때 SSDT의 자동 업데이트가 발생하므로 SSDT를 수동으로 검색하고 설치할 필요가 없습니다. 최근에 SSDT에 대한 몇 가지 수정 사항이 있어 SQL Data Warehouse에 대한 지원을 개선했습니다. 이러한 모든 수정 사항이 있는지 확인하려면 현재 14.0.60311.1인 최신 버전의 SSDT를 사용해야 합니다. 최신 SSDT 버전으로 업그레이드하려면 Visual Studio 도구 / 확장 및 업데이트 / 업데이트&hellip; / 제품 업데이트를 클릭한 다음 데이터베이스 도구에 대한 Microsoft SQL Server 업데이트를 찾습니다. 향후 버전의 SSDT는 데이터베이스 프로젝트 지원과 같은 더 많은 기능을 추가할 예정이며, 이 기능은 SQL Database 지원되지만 아직 데이터 웨어하우스에 SQL 않습니다.</p>\n\n<p>SQL Data Warehouse에서 Visual Studio 사용하는 방법에 대한 자세한 내용은 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/sql-data-warehouse-get-started-connect/\" target=\"_blank\">Visual Studio 데이터 웨어하우스를 SQL 커넥트</a> 참조하세요.</p>\n\n<h1>T-SQL 지원</h1>\n\n<p>이전에 SQL Server만 사용할 수 있었던 여러 T-SQL 데이터 형식 및 명령은 이제 SQL Data Warehouse에서 사용할 수 있습니다. 이러한 기능은 기능을 추가하고 두 플랫폼 간의 일부 마이그레이션 작업을 줄입니다.</p>\n\n<h2>Rand()</h2>\n\n<p>이 릴리스에는 의사 임의 부동 소수점 값을 0에서 1로만 반환하는 <a href=\"https://technet.microsoft.com/library/ms177610.aspx\" target=\"_blank\">RAND()</a> 함수도 포함되어 있습니다. 다음 쿼리는 두 개의 임의로 생성된 숫자를 보여 줍니다.</p>\n\n<pre class=\"prettyprint\">\nSELECT RAND(CHECKSUM(NEWID())) as Rand, RAND(8) as RandSeed;</pre>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/21eaac15-a181-492b-893f-fddf95dc740f.jpg\"><img alt=\"rand\" border=\"0\" height=\"47\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/05108bf7-2405-43ad-b4d2-ba848b9411ae.jpg\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" title=\"랜드\" width=\"281\"></a></p>\n\n<h2>Checksum() 및 Binary_Checksum()</h2>\n\n<p>데이터베이스를 한 SQL 플랫폼에서 다른 플랫폼으로 마이그레이션할 때 <a href=\"https://msdn.microsoft.com/library/ms189788.aspx\" target=\"_blank\">CHECKSUM()</a> 및 <a href=\"https://msdn.microsoft.com/library/ms173784.aspx\" target=\"_blank\">BINARY_CHECKSUM()</a> 함수는 플랫폼 간 데이터 전송의 유효성을 검사하는 유용한 방법입니다. 두 함수의 차이점은 문자열 데이터 형식의 처리입니다. 예를 들어 CHECKSUM은 혼합 사례에 대해 동일한 값을 반환하고 BINARY_CHECKSUM 다른 값을 반환합니다.</p>\n\n<pre class=\"prettyprint\">\nSELECT\n    CHECKSUM(&#39;case&#39;) as ChecksumLower,\n    CHECKSUM(&#39;CASE&#39;) as ChecksumUpper,\n    BINARY_CHECKSUM(&#39;case&#39;) as ChecksumBinaryLower,\n    BINARY_CHECKSUM(&#39;CASE&#39;) as ChecksumBinaryUpper;</pre>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2cd28542-a77d-4a24-bf96-4d141fc20ae3.jpg\"><img alt=\"checksum\" border=\"0\" height=\"44\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9fd0524d-eda4-405d-bfc5-da46d261f09c.jpg\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" title=\"체크섬\" width=\"448\"></a></p>\n\n<h2>Numeric, UniqueIdentifier 및 NEWID()</h2>\n\n<p>두 개의 새 데이터 형식이 SQL Data Warehouse:&nbsp;<a href=\"https://msdn.microsoft.com/library/ms187746.aspx\" target=\"_blank\">numeric</a> 및 <a href=\"https://msdn.microsoft.com/library/ms187942.aspx\" target=\"_blank\">uniqueidentifier</a>에 추가되었습니다. 숫자 데이터 형식은 10진수와 같으며 마이그레이션을 더 쉽게 제공합니다. uniqueidentifier는 GUID를 저장하는 방법과 이 데이터 형식을 사용하여 데이터베이스에 대한 마이그레이션을 간소화하는 방법을 제공하는 GUID 데이터 형식입니다. uniqueidentifier와 함께 <a href=\"https://msdn.microsoft.com/library/ms190348.aspx\" target=\"_blank\">NEWID()</a> 함수에 대한 지원이 추가되어 고유한 GUID를 생성할 수 있습니다. 다음은 이러한 새로운 기능에 대한 몇 가지 T-SQL 예입니다.</p>\n\n<pre class=\"prettyprint\">\nCREATE TABLE NewFeaturesTable\n(\n    Id UNIQUEIDENTIFIER NOT NULL,\n    BigText NVARCHAR(MAX) NULL\n)\nWITH (HEAP);\n\nDECLARE @ID UNIQUEIDENTIFIER = NEWID();\nDECLARE @TEXT VARCHAR(MAX) = REPLICATE(&#39;This text will be long...&#39;,1000)\nINSERT INTO NewFeaturesTable (Id, BigText) VALUES (@ID, @TEXT);\n \nSELECT\n    Id,\n    DATALENGTH(BigText) AS [Length],\n    CHECKSUM(*) AS [CheckSum]\nFROM NewFeaturesTable;\n</pre>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/00f4a450-8ed6-455a-8f9a-a100945d4db1.jpg\"><img alt=\"newid\" border=\"0\" height=\"47\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/69613dbc-3ef5-4bff-b3e1-2b8000512d9f.jpg\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" title=\"Newid\" width=\"418\"></a></p>\n\n<h2>새 관리 함수</h2>\n\n<p>데이터베이스에서 보안 원칙을 볼 때 이제 IS_SRVROLEMEMBER<a href=\"https://msdn.microsoft.com/library/ms176015.aspx\" target=\"_blank\">()</a> 함수를 사용하여&nbsp; 사용자의 서버 역할을 확인할 수 있습니다. 이 함수는 false에 대해 0을 반환하고, 역할의 멤버가 아니며, true의 경우 1을 반환합니다. 아래 예제에서 사용자는 sysadmin 역할의 멤버가 아닙니다.</p>\n\n<pre class=\"prettyprint\">\nSELECT IS_SRVROLEMEMBER(&#39;sysadmin&#39;, &#39;Contoso\\Hacker&#39;) as IsMember;</pre>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/aca32133-fab9-4274-97c5-d2902fa74d67.jpg\"><img alt=\"is_srvrolemember\" border=\"0\" height=\"53\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a8fcf32b-9c1a-4575-9dee-c5f62803e0c8.jpg\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" title=\"is_srvrolemember\" width=\"125\"></a></p>\n\n<h2>데이터베이스 속성</h2>\n\n<p>sys.database_service_objectives 보기를 사용하면 여러 <a href=\"https://msdn.microsoft.com/en-US/library/mt712619%28SQL.130%29.aspx?f=255&amp;MSPPError=-2147217396\" target=\"_blank\">SQL</a> 데이터베이스 및 SQL Data Warehouse를 호스트할 수 있는 논리 서버의 모든 데이터베이스에 대해 Database Edition 및 서비스 목표를 쿼리할 수 있습니다. 이 DMV는 논리 마스터 데이터베이스에서 쿼리해야 합니다.</p>\n\n<pre class=\"prettyprint\">\nSELECT a.name, b.edition, b.service_objective\nFROM\n    master.sys.databases a\n    INNER JOIN master.sys.database_service_objectives b\n        ON a.database_id = b.database_id\nORDER BY 1;</pre>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4e26e96e-39e8-4032-8af5-d4b9768355c9.jpg\"><img alt=\"service_objectives\" border=\"0\" height=\"115\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ec4951bf-bc43-4e58-b076-dea1a55aee7b.jpg\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" title=\"service_objectives\" width=\"387\"></a></p>\n\n<p>SQL Data Warehouse를 관리할 때 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/sql-data-warehouse-overview-manage-compute/\" target=\"_blank\">DWU</a>의 현재 사용량과 허용되는 최대 크기의 유효성을 검사할 수 있습니다. 이러한 속성을 쿼리하려면 <a href=\"https://msdn.microsoft.com/library/ms186823.aspx\" target=\"_blank\">DATABASEPROPERTYEX()</a> 함수를 사용합니다. 아래 예제에서는 관심 있는 일반적인 속성을 보여 줍니다.</p>\n\n<pre class=\"prettyprint\">\nSELECT\n    DATABASEPROPERTYEX(&#39;DemoDB&#39;, &#39;Edition&#39;) As Edition,\n    DATABASEPROPERTYEX(&#39;DemoDB&#39;, &#39;ServiceObjective&#39;) as ServiceObjective,\n    DATABASEPROPERTYEX(&#39;DemoDB&#39;, &#39;MaxSizeInBytes&#39;) as MaxSizeInBytes,\n    DATABASEPROPERTYEX(&#39;DemoDB&#39;, &#39;Collation&#39;) as Collation;</pre>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/83638821-3d3e-4f77-b0fa-e7ea617d3823.jpg\"><img alt=\"databasepropertyex\" border=\"0\" height=\"40\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/99f47bac-591e-47d5-8229-ef22420a2f54.jpg\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" title=\"databasepropertyex\" width=\"434\"></a></p>\n\n<h1>보관 데이터 압축</h1>\n\n<p>이 릴리스에서는 클러스터형 Columnstore 테이블에 대한 <a href=\"https://msdn.microsoft.com/library/cc280449.aspx\">보관 압축</a> 을 도입했습니다. 이 선택적 압축 알고리즘을 사용하면 데이터를 저장하는 비용을 줄이기 위한 방법으로 데이터를 추가로 압축할 수 있습니다. 데이터를 쿼리할 때 비용 절감의 절충은 CPU 사용률을 증가합니다. 따라서 자주 쿼리하지 않는 이전 데이터에 이 기능을 사용하는 것이 좋습니다. 아래 예제에서는 <a href=\"https://msdn.microsoft.com/library/ms190273.aspx\" target=\"_blank\">ALTER TABLE</a> 명령을 사용하여 테이블의 이전 데이터 파티션에 보관 압축을 적용하는 방법을 보여 줍니다.</p>\n\n<pre class=\"prettyprint\">\nALTER TABLE FactSales\nREBUILD PARTITION = 1 WITH (DATA_COMPRESSION = COLUMNSTORE_ARCHIVE);</pre>\n\n<h1>의견을 보내 주세요</h1>\n\n<p>기능 계획에서 사용자가 가장 원하는 기능에 우선 순위를 부여하려고 합니다. 추가하려는 기능에 대해 여러분의 의견을 듣고 싶습니다. <a href=\"https://feedback.azure.com/forums/307516-sql-data-warehouse\" target=\"_blank\">UserVoice 피드백</a> 사이트에서 가장 원하는 기능을 알려주세요. 피드백을 제안하거나 투표하는 사용자는 요청에 대해 주기적인 업데이트를 받게 되며 기능이 출시되는 시기를 가장 먼저 알게 됩니다. 피드백을 제공하는 또 다른 방법은 피드백 설문 조사입니다.</p>\n\n<h1>자세한 정보</h1>\n\n<p>SQL Data Warehouse에 대해 자세히 알아보기 위한 많은 리소스가 있습니다. 몇 가지 예를 들면 다음과 같습니다.&nbsp;</p>\n\n<ul>\n <li><a href=\"https://azure.microsoft.com/documentation/articles/sql-data-warehouse-overview-what-is/\" target=\"_blank\">Azure SQL Data Warehouse란?</a></li>\n <li><a href=\"https://azure.microsoft.com/documentation/articles/sql-data-warehouse-best-practices/\" target=\"_blank\">SQL Data Warehouse 모범 사례</a></li>\n <li><a href=\"https://azure.microsoft.com/documentation/videos/index/?services=sql-data-warehouse\" target=\"_blank\">비디오</a></li>\n <li><a href=\"https://social.msdn.microsoft.com/Forums/en-US/home?forum=AzureSQLDataWarehouse\" target=\"_blank\">MSDN 포럼</a></li>\n <li><a href=\"https://blogs.msdn.microsoft.com/sqlcat/tag/sql-dw/\" target=\"_blank\">CAT 팀 블로그</a></li>\n <li><a href=\"https://stackoverflow.com/questions/tagged/azure-sqldw\" target=\"_blank\">스택 오버플로 포럼</a></li>\n</ul>"
