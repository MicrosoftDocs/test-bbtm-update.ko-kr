### YamlMime:Yaml
ms.openlocfilehash: d8a570ba353809f98d89a3498fdd2d753d2105c8
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139912387"
Slug: running-go-applications-on-azure-app-service
Title: Azure App Service에서 Go 애플리케이션 실행
Summary: 이제 Azure App Service에는 Web Apps로 Go를 실행하기 위한 실험적 지원이 포함되어 있습니다.
Content: >-
  <div style="background:#eee;border:1px solid #ccc;padding:5px 10px;">Azure App Service에 대한 실험적 통합 Go 지원은 더 이상 사용되지 않습니다. 자세한 내용은 <em><a href="https://github.com/Azure/app-service-announcements/issues/45">Azure App Service(Windows)에서 Go 도구에 대한 수명 종료 지원을</a></em> 참조하세요.</div>


  <p>이제 Azure App Service에는 웹앱으로 <a href="https://golang.org/">Go</a> 를 실행하기 위한 실험적 지원이 포함되어 있습니다. Azure App Service에서 웹앱용 Go를 실행하고 피드백을 공유하려면 시작하는 방법에 대한 이 문서를 참조하세요. <a href="https://social.msdn.microsoft.com/forums/azure/en-US/home?forum=windowsazurewebsitespreview">피드백은 MSDN 포럼</a>을 통해 제출할 수 있습니다.</p>


  <h3>Azure 구독을 사용하여 소스 제어 배포</h3>


  <p>Go 이진 파일은 Azure App Service 플랫폼과 함께 설치됩니다. 현재 지원되는 버전은 64비트 Go 1.4.2 및 Go 1.5.1입니다. 다음은 소스 제어 배포를 위한 필수 구성 요소입니다.</p>


  <blockquote>

  <p>&middot; 유효한 Azure 구독입니다. 아직 구독이 없는 경우 <a href="https://azure.microsoft.com/en-us/pricing/free-trial/">무료 평가판에 등록</a>하세요.</p>

  </blockquote>


  <blockquote>

  <p>&middot; 로컬 Git에 대해 사용하도록 설정된 소스 제어 배포입니다. 자세한 지침을&nbsp; 찾<a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-publish-source-control/">습니다</a>.</p>

  </blockquote>


  <p>샘플 Go 웹앱을 실행하는 것은 3단계에 불과합니다.</p>


  <p>1)공용 <a href="https://github.com/KuduApps/GoSample">GitHub 리포지토리</a>의 콘텐츠를 로컬 Git 리포지토리로 복제합니다.</p>


  <p>2) 웹앱에서 소스 제어 URL을 가져와서 로컬 리포지토리를 업데이트하여 웹앱 리포지토리를 가리킵니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8dba001d-ed7d-4f30-9e8f-b5f57587c8b0.png"><img alt="image" border="0" height="382" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/76625168-a22f-421a-95d6-854bea0fb98f.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" title="이미지" width="576"></a></p>


  <p>이 예제에서는 로컬 리포지토리를 웹앱 리포지토리로 가리키는 명령은 다음과 같습니다.</p>


  <blockquote>

  <p>git remote set-url origin https://$kudutry@ kudutry.scm.azurewebsites.net/kudutry.git</p>

  </blockquote>


  <p>3) 로컬 리포지토리에서 원격 Azure 리포지토리로 콘텐츠를 푸시합니다.</p>


  <h3>웹앱 구성 이동</h3>


  <p>Azure App Service에서 실행되는 Go 웹앱에 대한 웹앱 구성에는 몇 가지 측면이 있습니다.</p>


  <h5>1) 버전 선택</h5>


  <p>이 블로그 게시물을 작성할 때 Azure App Service 플랫폼은 Go 1.5.1을 기본 버전으로, Go 1.4.2를 선택 가능한 버전으로 지원합니다. 기본이 아닌 버전을 선택하려면 키 &ldquo;GOROOT&rdquo; 및 값 &ldquo;인 D:\Program Files\go\1.4.2를 사용하여 웹앱에 대한 앱 설정을 정의합니다.&rdquo;</p>


  <h5>2) 아티팩트 빌드</h5>


  <p>App Service 배포 스크립트는 임시 Go 작업 영역을 만들고 소스 코드를 $(GOPATH)\src\azureapp 아래에 &ldquo;배치합니다.&rdquo; 최종 빌드 아티팩트가 항상 &ldquo; 다른 non-*.go 파일이 있는azureapp.exe&rdquo; . 이러한 파일을 검사하는 간단한 방법은 Kudu 콘솔 https://{sitename}.scm.azurewebsites.net/DebugConsole 사용하는 것입니다. Kudu 콘솔에서 웹앱의 wwwroot로 이동합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/78f3adf3-907d-4196-9234-411e6f3d8a0f.png"><img alt="image" border="0" height="149" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8c0251dc-b5ef-4832-a4e4-cc053199b46e.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" title="이미지" width="593"></a></p>


  <p>배포 전에 소스 코드의 일부로 web.config 파일을 만들 수 있습니다. 또는 Azure App Service는 HttpPlatformHandler IIS 모듈이 Go 웹앱을 실행할 수 있도록 배포 시 web.config 파일을 생성합니다. HttpPlatformHandlerhere&nbsp;에 대해 자세히 알아봅니<a href="https://www.iis.net/learn/extensions/httpplatformhandler/httpplatformhandler-configuration-reference">다</a>.</p>


  <p>콘텐츠에 web.config 파일을 포함하는 경우 이 섹션에 설명된 구성 요소를 사용할 수 있는지 확인합니다.</p>


  <pre class="prettyprint">

  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;


  &lt;configuration&gt;

      &lt;system.webServer&gt;

          &lt;handlers&gt;

              &lt;add name=&quot;httpplatformhandler&quot; path=&quot;*&quot; verb=&quot;*&quot; modules=&quot;httpPlatformHandler&quot; resourceType=&quot;Unspecified&quot; /&gt;

          &lt;/handlers&gt;

          &lt;!-- For Go webapp, we always generate azureapp.exe in wwwroot --&gt;

          &lt;httpPlatform processPath=&quot;D:\home\site\wwwroot\azureapp.exe&quot; startupTimeLimit=&quot;60&quot;&gt;

          &lt;/httpPlatform&gt;

      &lt;/system.webServer&gt;

  &lt;/configuration&gt;

  </pre>


  <h5>3) 포트 번호</h5>


  <p>Go 애플리케이션은 환경 변수 &ldquo;인 HTTP_PLATFORM_PORT&rdquo; 포트 번호를 읽어야 합니다. 런타임에 HttpPlatformHandler는 Go 웹앱을 실행하는 프로세스에 대한 난수 포트 번호를 생성합니다.</p>


  <h5>4) 콘텐츠 레이아웃</h5>


  <p>Azure App Service의 콘텐츠 레이아웃 요구 사항은 기본 Go 패키지를 프로젝트의 루트에 배치하는 것입니다. 이 레이아웃을 사용하면 App Service 빌드 시스템에서 종속성을 확인하고 올바른 실행 솔루션을 빌드할 수 있습니다.</p>


  <h3>Azure 구독이 없는 평가판 배포</h3>


  <p><a href="https://tryappservice.azure.com/">Azure App Service 평가판 페이지를</a> 통해 Azure 구독 없이도 Go 샘플을 사용해 보세요.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/82141b81-3f16-42d6-8be4-1ec9d56d6d11.png"><img alt="image" border="0" height="308" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/78b23cbd-3dc6-4a24-b43c-e4bcd1472e63.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" title="이미지" width="601"></a></p>


  <p>Go용 만들기&rdquo; 샘플을 클릭하고 &ldquo;지원되는 소셜 계정으로 로그인합니다. Go 웹앱이 만들어지고 URL을 클릭하여 샘플 앱을 경험하고 표시된 옵션 집합에서 앱을 관리하는 옵션을 선택합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e74001fe-8713-486d-b3bc-0aadd79aebab.png"><img alt="image" border="0" height="262" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/59332862-14ea-48e1-9112-c249157b17c4.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" title="이미지" width="611"></a></p>


  <p>샘플 Go 웹앱은 net/http&quot; Go 모듈을 &quot;활용하는 홈페이지를 특징으로 하며, <a href="https://github.com/gin-gonic/gin">진</a> 및 <a href="https://github.com/go-martini/martini">마티니</a> 웹 프레임워크를 &ldquo;보여주는 Try Gin&rdquo; and &ldquo;Try Martini&rdquo; 링크 방문 로그를 표시합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/55d2c232-b87c-4092-87fa-54182feb0a22.png"><img alt="image" border="0" height="254" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/bc59f072-2638-4020-947f-a4242e46ad83.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" title="이미지" width="623"></a></p>
