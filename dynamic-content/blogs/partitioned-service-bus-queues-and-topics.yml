### YamlMime:Yaml
ms.openlocfilehash: f2f95472b695cb2583d71927e85cbfdca37f25af
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908777"
Slug: partitioned-service-bus-queues-and-topics
Title: 분할된 Service Bus 큐 및 항목
Summary: 지난 주 Microsoft는 Azure SDK 2.2 및 Service Bus SDK 2.2를 릴리스했습니다. 이러한 SDK에는 분할된 엔터티라는 새로운 Service Bus 기능이 제공됩니다. 이러한 SDK 사용(또는 api-version=2013-10을 지정하는 중...
Content: >-
  지난 주 Microsoft는 Azure SDK 2.2 및 Service Bus SDK 2.2를 릴리스했습니다. 이러한 SDK에는 분할된 엔터티라는 새로운 Service Bus 기능이 제공됩니다. 이러한 SDK를 사용하거나 HTTP 요청에서 api-version=2013-10을 지정하면 Azure Service Bus 분할된 큐 및 토픽을 만들고 사용할 수 있습니다. 분할된 큐 및 토픽은 향상된 안정성을 제공합니다. 동시에 대부분의 사용 사례에서 최대 메시지 처리량이 더 높아야 합니다.

  <h4>분할된 큐 및 토픽이란?</h4>

  기존 큐 또는 토픽은 단일 메시지 브로커에 의해 처리되고 하나의 메시징 저장소에 저장되는 반면, 분할된 큐 또는 토픽은 여러 메시지 브로커에 의해 처리되고 여러 메시징 저장소에 저장됩니다. 즉, 분할된 큐 또는 항목의 전체 처리량은 단일 메시지 broker 또는 메시징 저장소의 성능으로 제한되지 않습니다. 또한 메시징 스토어가 일시적으로 중단된 경우에도 분할된 큐 또는 항목을 계속 렌더링할 수 없습니다.


  간단히 말해서 분할된 큐 또는 토픽은 다음과 같이 작동합니다. 각 분할된 큐 또는 토픽은 여러 <em>조각으로 구성됩니다</em>. 각 조각은 다른 메시징 저장소에 저장되고 서로 다른 메시지 broker에서 처리됩니다. 분할된 큐 또는 항목으로 메시지를 보내면 Service Bus는 메시지를 조각 중 하나에 할당합니다. 선택 영역은 Service Bus 또는 보낸 사람에서 지정할 수 있는 파티션 키에 의해 임의로 수행됩니다. 클라이언트가 분할된 큐 또는 분할된 토픽의 구독에서 메시지를 수신하려는 경우 Service Bus 모든 조각에서 메시지를 확인합니다. 찾은 경우 하나를 선택하고 수신자에게 해당 메시지를 전달합니다.

  <h4>분할 사용</h4>

  분할된 큐 또는 토픽을 만드는 세 가지 방법 중에서 선택할 수 있습니다. 첫 번째 방법은 애플리케이션에서 큐 또는 토픽을 만드는 것입니다. <a href="https://msdn.microsoft.com/en-us/library/microsoft.servicebus.messaging.queuedescription.enablepartitioning.aspx" target="_blank">QueueDescription.EnablePartitioning</a> 또는 <a href="https://msdn.microsoft.com/en-us/library/microsoft.servicebus.messaging.topicdescription.enablepartitioning.aspx">TopicDescription.EnablePartitioning</a> 속성을 <strong>true</strong>로 설정하여 분할을 사용하도록 설정합니다. 이러한 플래그는 큐 또는 토픽을 만들 때 설정해야 합니다. 기존 큐 또는 토픽에서는 이 속성을 변경할 수 없습니다.


  또는 Visual Studio 분할된 큐 또는 토픽을 만들 수 있습니다. <em>새 큐</em> 및 새 항목 대화 상자 창에 <em>분할 사용</em> 확인란<em>을</em> 추가했습니다.


  <a href=""><img alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6765.2sb.JPG" border="0" /></a>


  <a href=""><img alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8357.1sb.png" border="0" /></a>


  세 번째 옵션은 Windows Azure Portal입니다. 이 기능은 이번 달 말에 출시 예정인 다음 포털 업데이트와 함께 사용할 수 있게 됩니다.


  Azure Service Bus 현재 네임스페이스당 100개의 분할된 큐 또는 토픽만 허용합니다. 또한 분할된 큐 및 토픽은 Azure Service Bus 지원되지만 Windows Server 1.1의 Service Bus 사용할 수 없습니다.

  <h4>파티션 키 사용</h4>

  메시지가 분할된 큐 또는 항목에 큐를 넣으면 Service Bus는 파티션 키의 존재를 확인합니다. 조각을 찾으면 해당 키를 기반으로 조각을 선택합니다. 그렇지 않으면 내부 알고리즘에 따라 조각을 선택합니다.


  <strong>파티션 키 사용 </strong>


  세션 또는 트랜잭션과 같은 일부 시나리오에서는 특정 조각에 메시지를 저장해야 합니다. 이러한 모든 시나리오에서는 파티션 키를 사용해야 합니다. 동일한 파티션 키를 사용하는 모든 메시지는 동일한 조각에 할당됩니다.


  시나리오에 따라 다양한 메시지 속성이 파티션 키로 사용됩니다.

  <p style="padding-left: 30px;"><strong>SessionId</strong>. 메시지에 <a href="https://msdn.microsoft.com/en-us/library/windowsazure/microsoft.servicebus.messaging.brokeredmessage.sessionid.aspx" target="_blank">SessionId</a> 속성이 설정된 경우 Service Bus SessionId 속성을 파티션 키로 사용합니다. 이렇게 하면 동일한 세션에 속한 모든 메시지가 동일한 조각에 할당되고 동일한 메시지 브로커에 의해 처리됩니다. 이렇게 하면 Service Bus 메시지 순서와 세션 상태의 일관성을 보장할 수 있습니다.</p>

  <p style="padding-left: 30px;"><strong>PartitionKey</strong>. 메시지에 <a href="https://msdn.microsoft.com/en-us/library/microsoft.servicebus.messaging.brokeredmessage.partitionkey.aspx" target="_blank">PartitionKey</a> 속성이 설정되어 있지만 SessionId 속성은 설정되지 않은 경우 Service Bus PartitionKey 속성을 파티션 키로 사용합니다. PartitionKey 속성을 사용하여 세션이 아닌 트랜잭션 메시지를 보냅니다. 파티션 키는 트랜잭션 내에서 전송되는 모든 메시지가 동일한 메시징 broker에서 처리되도록 합니다.</p>

  <p style="padding-left: 30px;"><strong>MessageId</strong>. 큐 또는 토픽에 <a href="https://msdn.microsoft.com/en-us/library/windowsazure/microsoft.servicebus.messaging.queuedescription.requiresduplicatedetection.aspx" target="_blank">RequiresDuplicationDetection</a> 속성이 <strong>true</strong>로 설정된 경우 <a href="https://msdn.microsoft.com/en-us/library/windowsazure/microsoft.servicebus.messaging.brokeredmessage.messageid.aspx" target="_blank">SessionId</a> 또는 PartitionKey 속성이 설정되지 않은 경우 MessageId 속성이 파티션 키로 사용됩니다. 이렇게 하면 동일한 메시지의 모든 복사본이 동일한 메시지 브로커에 의해 처리되므로 Service Bus 중복 메시지를 검색하고 제거할 수 있습니다.</p>

  <strong>파티션 키 사용하지 않음</strong>


  파티션 키가 없는 경우 Service Bus 분할된 큐 또는 토픽의 모든 조각에 라운드 로빈 방식으로 메시지를 배포합니다. 선택한 조각을 사용할 수 없으면 Service Bus는 다른 조각에 메시지를 할당합니다. 이러한 방식으로 메시징 저장소를 일시적으로 사용할 수 없음에도 불구하고 보내기 작업은 성공합니다.


  보듯이 파티션 키는 특정 조각에 메시지를 고정합니다. 이 조각이 보관된 메시징 저장소를 사용할 수 없으면 Service Bus는 오류를 반환합니다. 파티션 키가 없으면 Service Bus 다른 조각을 선택할 수 있으며 작업이 성공합니다. 따라서 필요한 경우가 아니면 파티션 키를 제공하지 않는 것이 좋습니다.

  <h4>분할된 엔터티가 포함된 트랜잭션 사용</h4>

  트랜잭션의 일부로 전송되는 메시지는 파티션 키를 지정해야 합니다. SessionId, PartitionKey 또는 MessageId일 수 있습니다. 동일한 트랜잭션의 일부로 전송되는 모든 메시지는 동일한 파티션 키를 지정해야 합니다.


  다음 코드를 사용하여 분할된 큐에 트랜잭션 메시지를 보낼 수 있습니다.


  <a href=""><img alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6574.3sb.JPG" border="0" /></a>


  세션 인식 토픽 또는 큐에 트랜잭션 메시지를 보내려면 메시지에 SessionId 속성이 설정되어 있어야 합니다. 위에서 설명한 대로 SessionId는 파티션 키 역할을 합니다. PartitionKey 속성도 설정하는 경우 SessionId 속성과 동일해야 합니다.


  일반 큐 또는 토픽과 달리 단일 트랜잭션을 사용하여 여러 메시지를 다른 세션으로 보낼 수 없습니다.


  <a href=""><img alt="" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2728.4sb.JPG" border="0" /></a>

  <h4>추가 정보</h4>

  분할된 큐 및 항목 <a href="https://msdn.microsoft.com/en-us/library/dn520246.aspx" target="_blank">https://msdn.microsoft.com/en-us/library/dn520246.aspx</a> 에 대한 자세한 내용을 확인하고 <a href="https://code.msdn.microsoft.com/windowsazure/Service-Bus-Partitioned-7dfd3f1f" target="_blank">Service Bus 분할된 큐 샘플을</a> 확인하세요.
