### YamlMime:Yaml
ms.openlocfilehash: baa3fadd9a452be2419956aefa84152556e519d3
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139907290"
Slug: azure-storage-powershell-v-1-7-hotfix-to-v1-4-breaking-changes
Title: Azure Storage PowerShell v.1.7 – 핫픽스에서 v1.4 호환성이 손상되는 변경
Summary: 호환성이 손상되는 변경 내용은 Azure PowerShell v1.4에서 도입되었습니다. 이러한 호환성이 손상되는 변경 내용은 Azure PowerShell 버전 1.4-1.6 및 버전 2.0 이상에 있습니다. 이러한 호환성이 손상되는 변경 문제를 해결하기 위해 핫픽스가 릴리스되었습니다.
Content: >-
  <div>

  <p>호환성이 손상되는 변경 내용은 Azure PowerShell v1.4에서 도입되었습니다. 이러한 호환성이 손상되는 변경 내용은 Azure PowerShell 버전 1.4-1.6 및 버전 2.0 이상에 있습니다. 영향을 받은 Azure Storage cmdlet은 다음과 같습니다.</p>


  <ul>
      <li><strong>Get-AzureRmStorageAccountKey: </strong> 키 액세스</li>
      <li><strong>New-AzureRmStorageAccountKey: </strong> 키 액세스</li>
      <li><strong>New-AzureRmStorageAccount: </strong> 계정 유형 및 엔드포인트 지정</li>
      <li><strong>Get-AzureRmStorageAccount: </strong> 계정 유형 및 엔드포인트 지정</li>
      <li><strong>Set-AzureRmStorageAccount: </strong> 계정 유형 및 엔드포인트 지정</li>
  </ul>


  <p>cmdlet에 대한 영향을 최소화하기 위해 New-AzureRmStorageAccount, Get-AzureRmStorageAccount 및 Set-AzureRmStorageAccount에 대한 엔드포인트 속성을 지정하는 것을 제외하고 모든 호환성이 손상되는 변경 내용을 해결하는 핫픽스 Azure PowerShell <a data-mce-href="https://github.com/Azure/azure-powershell/releases/tag/v1.7.0-August2016" href="https://github.com/Azure/azure-powershell/releases/tag/v1.7.0-August2016"><u>v1.7</u></a> - 을 릴리스합니다. 즉, 핫픽스를 적용할 수 있는 고객은 코드를 변경할 필요가 없습니다. 이 핫픽스는 Azure PowerShell 버전 2.0 이상에는 존재하지 않습니다. Azure PowerShell v2.0으로 업데이트할 때 위의 cmdlet을 업데이트하도록 계획하세요.</p>


  <p>아래에서는&rsquo; 위의 cmdlet이 다양한 버전의 Azure PowerShell 및 필요한 작업에 대해 작동하는 방법에 대한 예제를 찾을 수 있습니다.</p>


  <h3>Get-AzureRmStorageAccountKey 및 New-AzureRmStorageAccountKey 사용하여 키 액세스</h3>


  <p><strong>V1.3.2 이하:</strong></p>


  <p><code>$key = (Get-AzureRmStorageAccountKey -ResourceGroupName $groupname -Name $accountname).Key1</code></p>


  <p><code>$key = (Get-AzureRmStorageAccountKey -ResourceGroupName $groupname -Name $accountname).Key2</code></p>


  <p><code>$key = (New-AzureRmStorageAccountKey -ResourceGroupName $groupname -Name $accountname -KeyName $keyname).StorageAccountKeys.Key1</code></p>


  <p><code>$key = (New-AzureRmStorageAccountKey -ResourceGroupName $groupname -Name $accountname -KeyName $keyname).StorageAccountKeys.Key2</code></p>


  <p><strong>V1.4-V1.6 및 V2.0 이상:</strong></p>


  <p>이제 cmdlet은 각 키에 대한 속성이 있는 개체가 아닌 키 목록을 반환합니다.</p>


  <p><code># Replaces Key1</code><br>

  <code>$key = (Get-AzureRmStorageAccountKey -ResourceGroupName $groupname -Name $accountname)[0].Value</code></p>


  <p><code># Replaces Key2</code><br>

  <code>$key = (Get-AzureRmStorageAccountKey -ResourceGroupName $groupname -Name $accountname)[1].Value</code></p>


  <p><code># Replaces Key1</code><br>

  <code>$key = (New-AzureRmStorageAccountKey -ResourceGroupName $groupname -Name $accountname -KeyName $keyname).Keys[0].Value</code></p>


  <p><code># Replaces Key2</code><br>

  <code>$key = (New-AzureRmStorageAccountKey -ResourceGroupName $groupname -Name $accountname -KeyName $keyname).Keys[1].Value</code></p>


  <p><strong>V1.7(핫픽스):</strong></p>


  <p>두 메서드가 모두 작동합니다.</p>


  <p><code>$key = (Get-AzureRmStorageAccountKey -ResourceGroupName $groupname -Name $accountname).Key1</code></p>


  <p><code>$key = (Get-AzureRmStorageAccountKey -ResourceGroupName $groupname -Name $accountname)[0].Value</code></p>


  <p><code>$key = (New-AzureRmStorageAccountKey -ResourceGroupName $groupname -Name $accountname -KeyName $keyname).StorageAccountKeys.Key1</code></p>


  <p><code>$key = (New-AzureRmStorageAccountKey -ResourceGroupName $groupname -Name $accountname -KeyName $keyname).Keys[0].Value</code></p>


  <h3>New-AzureRmStorageAccount, Get-AzureRmStorageAccount 및 Set-AzureRmStorageAccount 계정 유형 지정</h3>


  <p><strong>V1.3.2 이하:</strong></p>


  <p><code>$AccountType = (Get-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).AccountType</code></p>


  <p><code>$AccountType = (New-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).AccountType</code></p>


  <p><code>$AccountType = (Set-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).AccountType</code></p>


  <p><strong>V1.4-V1.6 및 V2.0 이상:</strong></p>


  <p>이 cmdlet의 출력에 있는 AccountType 필드의 이름이 Sku.Name.</p>


  <p><code>$AccountType = (Get-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).Sku.Name</code></p>


  <p><code>$AccountType = (New-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).Sku.Name</code></p>


  <p><code>$AccountType = (Set-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).Sku.Name</code></p>


  <p><strong>V1.7(핫픽스):</strong></p>


  <p>두 메서드가 모두 작동합니다.</p>


  <p><code>$AccountType = (Get-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).AccountType</code></p>


  <p><code>$AccountType = (New-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).AccountType</code></p>


  <p><code>$AccountType = (Set-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).AccountType</code></p>


  <p><code>$AccountType = (Get-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).Sku.Name</code></p>


  <p><code>$AccountType = (New-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).Sku.Name</code></p>


  <p><code>$AccountType = (Set-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).Sku.Name</code></p>


  <h3>New-AzureRmStorageAccount, Get-AzureRmStorageAccount 및 Set-AzureRmStorageAccount 엔드포인트 지정</h3>


  <p><strong>V1.3.2 이하:</strong></p>


  <p><code>$blobEndpoint = (Get-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).PrimaryEndpoints.Blob.AbsolutePath</code></p>


  <p><code>$blobEndpoint = (New-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).PrimaryEndpoints.Blob.AbsolutePath</code></p>


  <p><code>$blobEndpoint = (Set-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).PrimaryEndpoints.Blob.AbsolutePath</code></p>


  <p><strong>V1.4-V1.6 및 V2.0 이상:</strong></p>


  <p>PrimaryEndpoints/보조 엔드포인트 Blob/table/queue/file의 출력 형식이 Uri에서 String으로 변경되었습니다.</p>


  <p><code>$blobEndpoint = (Get-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).PrimaryEndpoints.Blob</code></p>


  <p><code>$blobEndpoint = (New-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).PrimaryEndpoints.Blob</code></p>


  <p><code>$blobEndpoint = (Set-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).PrimaryEndpoints.Blob</code></p>


  <p><strong>참고:</strong> 이러한 cmdlet에 대한 ToString() 메서드는 계속 작동합니다. 예를 들면 다음과 같습니다.</p>


  <p><code>$blobEndpoint = (Get-AzureRmStorageAccount -ResourceGroupName $groupname -Name $accountname).PrimaryEndpoints.Blob.ToString()</code></p>


  <p><strong>V1.7(핫픽스):</strong></p>


  <p>이 호환성이 손상되는 변경에 대한 핫픽스가 제공되지 않았습니다. 반환 값 엔드포인트는 문자열이어야 합니다. 이러한 값을&rsquo; Uri로 다시 변경하면 추가 중단이 발생하므로 계속 문자열이 되어야 합니다.</p>


  <h3>다음 단계</h3>


  <ul>
      <li><a href="https://github.com/Azure/azure-powershell/releases/tag/v1.7.0-August2016">Azure PowerShell v1.7(핫픽스)</a>을 다운로드합니다.</li>
      <li>모든 <a href="https://github.com/Azure/azure-powershell/releases">Azure PowerShell 릴리스를 봅니다</a>.</li>
      <li><a href="https://github.com/Azure/azure-powershell/blob/dev/documentation/release-notes/migration-guide.2.0.0.md">Azure PowerShell 2.0에 대한 마이그레이션 가이드</a>를 참조하세요.</li>
  </ul>

  </div>
