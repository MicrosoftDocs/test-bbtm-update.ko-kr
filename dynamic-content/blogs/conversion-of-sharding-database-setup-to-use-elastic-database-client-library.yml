### YamlMime:Yaml
ms.openlocfilehash: 50d2f6e50af33b997c2d0efc43bb1307d1f5b6ff
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139897715"
Slug: conversion-of-sharding-database-setup-to-use-elastic-database-client-library
Title: Elastic Database 클라이언트 라이브러리를 사용하도록 분할된 데이터베이스 설정 변환
Summary: '기존 자체 분할 솔루션을 사용하는 SaaS 애플리케이션 개발자이고 Microsoft의 탄력적 데이터베이스 도구 클라이언트 라이브러리를 사용하도록 애플리케이션을 마이그레이션하려는 경우 여기에서 단계별 지침을 찾을 수 있습니다.  '
Content: >-
  <p style="margin: 0in 0in 10pt;">Elastic Database 클라이언트 라이브러리는 여러 데이터베이스에서 고객 데이터를 분할하고 애플리케이션 스키마를 각 데이터베이스에 복제하여 최대&nbsp; 크기를 달성하려는 모든 애플리케이션 개발자를 위한 훌륭한 도구입니다( &#39;분할&#39; 알려진 패턴).</p>


  <p style="margin: 0in 0in 10pt;">Elastic Database 도구 클라이언트 라이브러리&nbsp;는 스케일 아웃 시나리오에 대한 데이터 배포를 정의할 뿐만 아니라 데이터 배포(분할된 데이터베이스 맵 관리 포함)를 보다 쉽게 관리하고, 특정 테넌트의 데이터가 효율적인 캐싱 메커니즘(데이터 종속 라우팅 포함)으로 저장되는 적절한 데이터베이스로 연결을 라우팅하고, 여러 데이터베이스(다중 분할된 데이터베이스 쿼리 포함)를 쿼리하는 기능을 지원합니다.</p>


  <p style="margin: 0in 0in 10pt;">기존 분할된 솔루션이&nbsp;&nbsp;&nbsp; 있는 경우 Elastic Database 클라이언트 라이브러리를 사용하도록 마이그레이션하고, 이러한 라이브러리에서 제공하는 뛰어난 기능의 이점을 얻을 수 있으며, 자체 분할 솔루션을 유지 관리할 필요가 없도록 마이그레이션하려면 어떻게 해야 하나요?&nbsp;&nbsp;</p>


  <p style="margin: 0in 0in 10pt;">기존 분할 솔루션을 사용하는 SaaS 애플리케이션 개발자이고 Microsofts&rsquo; Elastic Database 도구 클라이언트 라이브러리를 사용하도록 애플리케이션을 마이그레이션하려는 경우 <a href="https://azure.microsoft.com/en-us/documentation/articles/sql-database-elastic-convert-to-use-elastic-tools/"><u>여기에서</u></a> 단계별 지침을 찾을 수 있습니다. &nbsp;</p>


  <p>이제 탄력적 데이터베이스 클라이언트 라이브러리가 <a href="https://azure.microsoft.com/en-us/blog/elastic-database-client-library-is-now-open-sourced/">오픈 소스로 제공됩니다</a>. 소유자를 변경하거나 커뮤니티의 이익을 위해 변경하려는 경우(예! 기여를 수락합니다. 그런 다음 <a href="https://github.com/Azure/elastic-db-tools"><u>GitHub 리포지토리</u></a>에서 소스 코드를 자유롭게 확인할 수 있습니다.</p>
