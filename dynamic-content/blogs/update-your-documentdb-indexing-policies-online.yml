### YamlMime:Yaml
ms.openlocfilehash: 374018c0298a30b65e092c77fcba4216e7721ad6
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139901537"
Slug: update-your-documentdb-indexing-policies-online
Title: 온라인으로 DocumentDB 인덱싱 정책 업데이트
Summary: 이제 DocumentDB는 온라인 인덱스 변환을 지원합니다. 이 릴리스에서는 DocumentDB 컬렉션의 인덱싱 정책 구성을 만들고 수정할 수 있습니다. 인덱스 변환은 온라인/현재 위치에 적용되므로 인덱싱이 진행되는 동안 계속 읽고 쓰고 쿼리할 수 있습니다.
Content: >-
  <p>Azure DocumentDB 내부에는 JSON 및 JavaScript용으로 빌드된 쓰기 최적화 스키마에 구애받지 않은 데이터베이스 엔진 용도가 있습니다. DocumentDB는 개발자가 문서를 인덱싱하기 위해 스키마 또는 보조 인덱스를 제공할 필요가 없습니다. 이를 통해 DocumentDB를 사용하여 애플리케이션 데이터 모델을 신속하게 정의, 반복 및 쿼리할 수 있습니다. 기본적으로 컬렉션에 문서를 추가하면 DocumentDB는 클라이언트에 대한 쓰기를 승인하기 전에 문서의 모든 속성을 동기적으로 자동으로 인덱싱합니다. 문서를 컬렉션으로 업데이트할 때 DocumentDBs&rsquo; 데이터베이스 엔진은 문서를 트리로 변환하고 트리의 경로를 효율적으로 인덱싱, 중복 제거, 복제 및 유지합니다(복제본의 쓰기 쿼럼). 문서를 트리로 처리하고 트리 구조를 효율적으로 인덱싱하면 DocumentDB는 스키마에 구애받지 않으며 보조 인덱스가 필요하지 않습니다.</p>


  <h2>인덱스 사용자 지정</h2>


  <p>모든 DocumentDB 컬렉션에는 인덱스 스토리지 오버헤드, 쓰기 및 쿼리 처리량 및 쿼리 일관성을 포함하여 인덱스 관리의 측면을 제어하는 관련 &ldquo;인덱싱 정책이&rdquo; 있습니다. DocumentDB 컬렉션과 연결된 인덱싱 정책은 일관성 있는 쿼리를 만들기 위해&nbsp; 모든 documentsin&nbsp; 추가의 모든 속성을 자동으로 인덱싱합니다. 기본 인덱싱 정책은 일관된 쿼리를 제공하기 위해 인덱스 스토리지 오버헤드와 쓰기/쿼리 처리량 간의 최적 균형을 맞추지만, 인덱스의 스토리지 오버헤드 간에 세부적인 절충을 수행하는 데 관심이 있는 사용자는 쿼리 일관성을 통해 인덱싱 정책을 업데이트하여 컬렉션과 연결된 인덱스를 추가로 사용자 지정할 수 있습니다.</p>


  <h2>온라인 및 현재 위치 인덱스 변환</h2>


  <p>이전에는 컬렉션을 만들 때만 인덱싱 정책을 설정할 수 있습니다. 오늘 온라인 인덱스 변환 기능의 릴리스를 사용하여 기존 컬렉션에서 인덱싱 정책을 수정할 수 있음을 발표하게 되어 기쁩 <strong>니다 </strong>. 인덱싱 정책의 변경으로 인한 인덱스 변환은 가용성을 위해 <em>온라인으로</em> 수행되고 스토리지 효율성을 위해 <em>현재 위치에서</em> 수행됩니다. <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/08/06/index-150.png"><img alt="index 150" class="alignnone  wp-image-325592" height="468" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/index-150-548x369.png" width="695"></a> 컬렉션의 인덱싱 정책을 변경하면 DocumentDB는 이전 정책에서 새 정책으로 인덱스 변환을 수행합니다. 이 변환은 <strong>비동기 및</strong> <strong>온라인으로</strong> 수행되므로 변환이 진행되는 동안 컬렉션이 쓰기에 계속 사용할 수 있습니다. 인덱스 정책이 업데이트된 후 컬렉션에 기록된 문서는 쿼리에도 사용할 수 있으며, 이전 인덱스는 백그라운드에서 계속해서 새 인덱스로 변환됩니다. 인덱스 변환은 <strong><em>현재 위치에서 </em></strong>수행되도록 설계되었으므로 인덱싱 정책 변경 중에 추가 디스크 공간이 필요하거나 소비되지 않습니다. 컬렉션의 프로비전된 처리량은 변환 중에 완전히 사용할 수 있으므로 앱의 성능에 영향을 미치지 않습니다. .NET SDK를 사용하는 경우&rsquo; 새 <strong>ReplaceDocumentCollectionAsync</strong> 메서드를 사용하여 인덱싱 정책을 변경할 수 있습니다. 그런 다음 <strong>ReadDocumentCollectionAsync</strong> 호출에서 <strong>IndexTransformationProgress</strong> 응답 속성을 사용하여 인덱스 변환의 백분율 진행률을 추적할 수 있습니다. 다른 SDK 및 REST API는 인덱싱 정책을 변경하고 진행 중인 인덱스 변환의 진행 상황을 추적하기 위한 동등한 속성과 메서드를 지원합니다. 언제 DocumentDB 컬렉션에 대한 인덱싱 정책을 변경하나요? 다음은 가장 일반적인 사용 사례 중 일부입니다.</p>


  <ul>
   <li>Order By 및 새로 도입된 문자열 범위 인덱스 종류가 필요한 <a href="https://azure.microsoft.com/blog/2015/07/07/order-query-results-with-azure-documentdb/">문자열 범위 쿼리와</a> 같은 현재 DocumentDB 컬렉션에서 새 인덱싱 기능을 사용하는 경우</li>
   <li>직접 인덱싱할 속성을 선택하고 시간이 지남에 따라 변경하거나 개별 속성의 인덱스 전체 자릿수를 변경하여 쓰기에 대한 처리량과 스토리지 공간을 줄이는 경우.</li>
   <li>더 빠른 쓰기를 위해 지연 인덱싱 모드를 사용하여 대량 데이터를 가져올 때 정상 작업을 위해 일관된 인덱싱으로 전환합니다.</li>
  </ul>


  <p><a href="https://www.nuget.org/packages/Microsoft.Azure.DocumentDB/">여기</a> Nuget에서 .NET SDK 버전 1.3.0을 다운로드하거나 지원되는 다른 플랫폼(Node.js, Java, Python 또는 JavaScript) 중 하나를 다운로드하여 DocumentDB&rsquo; 최신 쿼리 기능 및 인덱스 정책 옵션 중 일부를 시작<a href="https://msdn.microsoft.com/en-us/library/azure/dn781482.aspx">합니다</a>. 또한 인덱스 정책을 만들고 수정하기 위한 코드 샘플이 포함된 <a href="https://github.com/Azure/azure-documentdb-net/tree/master/samples/code-samples/IndexManagement">Github 프로젝트를</a> 만들었습니다. 도움이 필요하거나 질문이 있는 경우 <a href="https://stackoverflow.com/questions/tagged/azure-documentdb">스택 오버플로에 대한 개발자 포럼에</a>&nbsp; 문의하거나 DocumentDB 엔지니어링 팀과 1:1 채팅을 예약하세요. 최신 DocumentDB 뉴스 및 기능을 최신 상태로 유지하려면 Twitter <a href="https://twitter.com/DocumentDB">@DocumentDB</a>에서 팔로우하세요.</p>
