### YamlMime:Yaml
ms.openlocfilehash: ebf17fc643b7359a669781238668ec17f0e8d490
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899368"
Slug: azure-automation-integrating-runbook-source-control-using-visual-studio-online
Title: 'Azure Automation: Visual Studio Online을 사용하여 Runbook 소스 제어 통합'
Summary: 소개 Azure Automation은 Azure 리소스 및 타사 시스템을 관리하는 데 적합할 수 있지만 Azure Automation의 리소스(Runbook, 모듈, 자산 등)를 직접 관리하려는 경우 어떻게 해야 하느냐?...
Content: >-
  <h2>소개</h2>

  Azure Automation은 Azure 리소스 및 타사 시스템을 관리하는 데 적합할 수 있지만 Azure Automation의 리소스(Runbook, 모듈, 자산 등)를 직접 관리하려면 어떻게 해야 할까요?물론 Azure Automation 포털 및 Azure Automation PowerShell cmdlet은 기본 관리 작업을 수행할 수 있는 기능을 제공하지만, 소스 제어 시스템을 사용하여 Runbook, 모듈 및 자산을 저장하여 변경 내용 추적, 감사, 이전 버전에서 복원 및 개발, 스테이징 간에 버전 이동이 가능하도록 하려면 어떻게 해야 하나요?  변경 제어를 허용하는 프로덕션 분기가 있나요?


  약간의 Runbook 매직을 통해 소스 제어 시스템을 기반으로 Automation 리소스를 자체적으로 지속적으로 통합할 수 있도록 Azure Automation을 설정할 수 있습니다. 이 블로그 게시물에서는 Azure Automation을 사용하여 VSO(Visual Studio Online) git 리포지토리를 반복적으로 쿼리하고 이 소스 제어 리포지토리의 모든 Runbook(ps1 파일)을 Automation 계정에 자동으로 게시하는 방법을 구체적으로 설명합니다. 이 블로그는 Runbook에 대해서만 설명하지만, 마찬가지로 Azure Automation을 사용하여 소스 제어에 저장된 모듈과 자산을 Azure Automation에도 지속적으로 통합할 수 있습니다.


  &nbsp;

  <h2>The Sync-VsoGitRunbook Runbook</h2>

  이 블로그인 <strong>Sync-VsoGitRunbook</strong>과 함께 제공되는 Runbook은 이 시나리오에 대한 모든 작업을 수행합니다.이제 이 Runbook을 사용할 수 있습니다.지금 복사본을 잡습니다.


  <a href="https://gallery.technet.microsoft.com/Sync-runbooks-from-Visual-b1186286" target="_blank"><img style="border-width: 0px;" title="Runbook 다운로드" alt="Download runbook" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/BCDLButton.png" width="108" height="29" border="0" /></a>


  아래 그림에서는 소스 제어에 저장된 Runbook을 Azure Automation 계정에 지속적으로 통합하기 위한 전체 프로세스를 강조 표시합니다. 통합의 가장 중요한 부분은 일반적으로 다음과 같이 VSO git 리포지토리를 관리하기만 하면 Runbook을 관리할 수 있다는 것입니다.

  <ul>
   <li>Runbook을 업데이트할 때 해당 업데이트를 커밋하고 VSO git 리포지토리에 푸시합니다.</li>
   <li>업데이트를 되돌리려면 커밋을 되돌리기만 하면 됩니다.</li>
   <li>스테이징 분기의 업데이트를 프로덕션으로 승격하려면 스테이징을 프로덕션에 병합하기만 하면 됩니다.</li>
  </ul>

  <strong>Sync-VsoGitRunbook Runbook</strong>은 매개 변수를 사용하여 동기화할 VSO git 리포지토리와 동기화할 Azure Automation 계정을 알려줍니다. 이 Runbook을 실행하는 Automation 계정 또는 다른 Runbook과 동기화할 수 있습니다. 내부적으로 Runbook은 지정된 VSO git 리포지토리의 콘텐츠를 가져온 다음 Runbook을 재귀적으로(부모 Runbook 앞의 자식 Runbook) 지정된 Azure Automation 계정에 게시합니다.


  Runbook을 수동으로 시작하여 VSO git 리포지토리를 사용하여 Azure Automation 계정의 주문형 동기화를 수행하거나 일정 자산을 사용하여 일정에 따라 동기화를 자동화할 수 있습니다. 다른 Git 분기 및 Azure Automation 계정에 대해 각 실행 일정에 따라 이 Runbook의 여러 실행을 설정하여 QA-프로덕션 변경 제어를 달성할 수 있습니다. 예를 들어 git 스테이징 분기 및 스테이징 자동화 계정에 대한 매개 변수 값이 있는 예약된 Runbook 하나와 git 프로덕션 분기 및 프로덕션 자동화 계정에 대한 매개 변수 값이 있는 예약된 Runbook 하나가 있을 수 있습니다. 이렇게 하면 스테이징 Automation 계정이 스테이징 git 분기와 동기화되고 프로덕션 자동화 계정이 프로덕션 git 분기와 동기화됩니다. git 준비 분기에서 git 프로덕션 분기로 병합하면 업데이트된 Runbook이 프로덕션 Automation 계정으로 자동으로 이동됩니다.


  &nbsp;


  <img style="border: 0px;" title="Runbook 시나리오 흐름 차트" alt="Runbook scenario flow-chart" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/vsogitrunbook_1.png" width="770" height="552" border="0" />


  &nbsp;

  <h2>Visual Studio Online 설정</h2>

  시작하려면 Visual Studio Online 계정이 있고 프로젝트 및 리포지토리가 구성되어 있어야 합니다.<a href="https://go.microsoft.com/fwlink/?LinkId=307137&amp;clcid=0x409" target="_blank">여기에서</a> 시작할 수 있습니다.


  git 프로젝트 및 리포지토리를 구성하려면 이 <a href="https://blogs.msdn.com/b/visualstudioalm/archive/2013/01/30/getting-started-with-git-in-visual-studio-and-team-foundation-service.aspx" target="_blank">블로그</a>를 따르세요.


  &nbsp;

  <h2>샘플 프로젝트 만들기</h2>

  이제 Automation Runbook에 대한 Visual Studio 프로젝트를 만들 준비가 된 것입니다.내 예제에서는 간단한 빈 Project 사용합니다.


  &nbsp;


  <img style="border-width: 0px;" title="빈 프로젝트" alt="Blank project" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/vsogitrunbook_2.png" width="710" height="77" border="0" />


  &nbsp;

  <h2>Runbook에 대한 Project 구조</h2>

  프로젝트의 구조에 관해서는 Runbook을 포함하는 폴더의 계층 구조, 최상위 디렉터리의 상위 Runbook, 하위 디렉터리의 자식, 하위 디렉터리의 하위 디렉터리에 있는 자식, 하위 디렉터리에 대한 하위 디렉터리의 자식 등이 있어야 합니다.  Runbook은 디렉터리 트리를 재귀적으로 안내하고 가장 낮은 하위 디렉터리(대부분의 자식 Runbook)에 Runbook을 먼저 게시하고 위로 이동하여 자식 Runbook을 호출하는 Runbook(부모 Runbook) 앞에 항상 가져옵니다.Azure Automation 서비스에서 모든 자식 Runbook을 먼저 게시해야 하므로 이 작업이 필요합니다.


  다음을 보여 줍니다.


  <img style="border: 0px;" title="부모-자식 디렉터리 구조" alt="Parent to child directory structure" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/vsogitrunbook_3.png" width="536" height="460" border="0" />


  &nbsp;


  Visual Studio 온라인 프로젝트 보기에서 유사한 구조로 다음을 수행합니다.


  &nbsp;


  <img style="border: 0px;" title="VSO의 디렉터리 구조" alt="Directory structure in VSO" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/vsogitrunbook_4.png" width="550" height="436" border="0" />


  &nbsp;

  <h2>VSO를 대체 인증 자격 증명 설정</h2>

  <strong>Sync-VsoGitRunbook Runbook</strong>이 작동하려면 Visual Studio Online 대시보드(오른쪽 위)에서 사용할 수 있는 "내 프로필"에서 구성된 VSO 대체 인증 자격 증명을 사용합니다.


  사용자 프로필 대화 상자에서 자격 증명을 선택하여 대체 인증 자격 증명을 정의합니다.이 사용자 이름 및 암호는 <strong>Sync-VsoGitRunbook Runbook에 대한</strong> 입력으로 사용됩니다.


  &nbsp;


  <img style="border-width: 0px;" title="대체 자격 증명 사용자 프로필 대화 상자" alt="Alternate Credential User Profile dialog" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/vsogitrunbook_5.png" width="764" height="678" border="0" />


  &nbsp;


  &nbsp;

  <h2>Sync-VsoGitRunbook Runbook 시작</h2>

  <ol>
   <li>아직 설정하지 않은 경우 Connect-Azure Runbook을 사용하여 Azure 구독을 관리할 수 있도록 Azure Automation 계정을 설정합니다.자세한 내용은 <a href="https://blogs.technet.com/b/keithmayer/archive/2014/04/06/step-by-step-getting-started-with-windows-azure-automation.aspx" target="_blank">이 블로그 게시물</a> (IIS가 있는 경우) 또는 <a href="https://blogs.technet.com/b/orchestrator/archive/2014/04/10/managing-azure-services-with-the-microsoft-azure-automation-preview-service.aspx" target="_blank">이 블로그 게시물</a> (IIS가 없는 경우)을 참조하세요.</li>
   <li>스크립트 센터에서 Sync-VsoGitRunbook Runbook을 다운로드합니다.  <a href="https://gallery.technet.microsoft.com/Sync-runbooks-from-Visual-b1186286" target="_blank"><img style="border-width: 0px;" title="Runbook 다운로드" alt="Download runbook" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/BCDLButton.png" width="108" height="29" border="0" /></a></li>
   <li>Sync-VsoGitRunbook Runbook 가져오기 및 게시</li>
   <li>다음 Azure Automation 자산 만들기
  <ul>
   <li>자격 증명 – 이 자산에는 대체 인증 자격 증명 사용자 이름 및 암호가 포함됩니다.</li>
   <li>연결 - Automation 계정에 게시된 구독 ID가 있는 Azure 연결 형식 만들기</li>
  </ul>

  </li>
   <li>다음 매개 변수를 사용하여 Sync-VsoGitRunbook Runbook의 일일 일정 추가
  <ul>
   <li>VSOCredentialName - VSO 프로필 대화 상자에서 구성된 VSO 대체 인증 자격 증명 이름 및 암호를 포함하는 자격 증명 자산의 이름입니다.</li>
   <li>VSOAccount – VSO Online의 계정 이름(예: <a href="https://accountname.visualstudio.com)">https://accountname.visualstudio.com)</a></li>
   <li>VSOProject – 리포지토리를 포함하는 VSO 프로젝트의 이름</li>
   <li>VSORepository – Runbook 프로젝트를 포함하는 리포지토리의 이름</li>
   <li>VSORunbookFolderPath – runbook이 있는 루트에 대한 경로를 Project.아래 예제를 사용하여 /Project1/Project1 사용</li>
  </ul>

  </li>

  </ol>

  <blockquote>              <img style="border-width: 0px;" title="Runbook 폴더 경로" alt="Runbook folder path" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/vsogitrunbook_6.png" width="693" height="309" border="0" /></blockquote>

  <ol>

  <ul>
   <li>VSOBranch – 선택 사항으로, 기본값은 "master"입니다. Runbook 세부 정보를 쿼리하는 데 사용되는 분기 이름</li>
   <li>AutomationAccount – Runbook을 동기화해야 하는 Automation 계정의 이름</li>
   <li>AzureConnection – Automation 서비스에서 만든 Azure 연결 설정의 이름입니다.이 연결 설정에는 관리 인증서를 보유하는 인증서 설정의 이름 및 구독 ID가 포함됩니다.</li>
  </ul>

  </ol>

  &nbsp;

  <h2>요약</h2>

  Sync-VsoGitRunbook Runbook은 Runbook에 대한 소스 제어 관리 및 연속 통합을 활용하는 방법을 보여 줍니다.이 블로그 게시물에 설명된 시나리오는 GitHub 같은 다른 온라인 소스 제어 시스템에서도 수행할 수 있습니다.GitHub <a href="https://gallery.technet.microsoft.com/scriptcenter/a-GitHub-Repository-265c0b49" target="_blank">리포지토리의 콘텐츠를</a> Azure Automation에 다운로드하기 시작하기 위해 이미 ScriptCenter에 Azure Automation Runbook이 있습니다. 해당 Runbook을 사용하여 이 블로그 게시물에 설명된 것과 유사한 솔루션을 빌드할 수 있지만 소스 제어 시스템으로 GitHub 대상으로 지정할 수 있습니다. 보듯이 Azure Automation은 진정으로 강력한 자동화 및 통합 서비스입니다.


  아직 Azure Automation 사용자가 아닌가요? <a href="https://account.windowsazure.com/PreviewFeatures?fid=automation" target="_blank">미리 보기에 등록한</a> 다음 <a href="https://azure.microsoft.com/en-us/documentation/articles/automation-create-runbook-from-samples/" target="_blank">시작 가이드</a>를 확인하세요.
