### YamlMime:Yaml
ms.openlocfilehash: 384b8679568d96c628c4fc4f8f7ae6a92f8b1730
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900928"
Slug: sas-update-account-sas-now-supports-all-storage-services
Title: 'SAS 업데이트: 계정 SAS는 이제 모든 스토리지 서비스를 지원합니다.'
Summary: 이제 계정 SAS가 Azure Storage 테이블 및 큐 서비스에도 지원된다는 것을 발표하게 되어 기쁘게 생각합니다.
Content: "<p>SAS(공유 액세스 서명)를 사용하면 고객이 스토리지 계정 키를 공유하지 않고도 스토리지 계정 내의 데이터에 대한 액세스 권한을 위임할 수 있습니다. 2015년 말에 Blob 및 File Services에 대한 지원을 제공하는 계정 SAS라는 새로운 유형의 SAS 토큰을 <a href=\"https://azure.microsoft.com/en-us/blog/azurecon-2015-azure-storage-announcements/\" target=\"_blank\">발표</a> 했습니다.</p>\n\n<p>이제 계정 SAS가 Azure Storage <b>테이블</b> 및 <b>큐</b> 서비스에도 지원된다는 것을 발표하게 되어 기쁩니다. 이러한 기능은 Azure Storage Service <a href=\"https://msdn.microsoft.com/en-us/library/azure/dd894041.aspx\" target=\"_blank\">버전 2015-04-05</a>에서 사용할 수 있습니다.</p>\n\n<p>계정 SAS는 Storage 계정 키와 패리티를 제공하는 하나 이상의 스토리지 서비스의 리소스에 대한 액세스를 위임합니다. 이렇게 하면 Blob 컨테이너, 테이블, 큐 및 파일 공유를 만들고 수정할 수 있는 액세스 권한을 위임하고 서비스 속성 가져오기/설정 및 서비스 통계 가져오기와 같은 메타 데이터 작업에 대한 액세스를 제공할 수 있습니다. 계정 SAS는 보안을 위해 컨테이너 ACL 설정, 테이블 ACL 설정, 큐 ACL 설정 및 공유 ACL 설정을 비롯한 권한 관련 작업에 대한 액세스를 사용하도록 설정하지 않습니다.</p>\n\n<p>아래 코드 조각은 읽기, 쓰기, 나열, 만들기 및 삭제 권한을 포함하여 Blob 및 Table Service에 대한 새 계정 SAS 토큰을 발급하는 데 사용되는 새 액세스 정책을 만듭니다. 계정 SAS 토큰은 지금부터 24시간 후에 만료되도록 구성됩니다.</p>\n\n<pre class=\"prettyprint\">\nSharedAccessAccountPolicy policy = new SharedAccessAccountPolicy()\n{\n    Permissions = SharedAccessAccountPermissions.Read | SharedAccessAccountPermissions.Write | SharedAccessAccountPermissions.List | SharedAccessAccountPermissions.Create | SharedAccessAccountPermissions.Delete,\n    Services = SharedAccessAccountServices.Blob | SharedAccessAccountServices.Table,\n    ResourceTypes = SharedAccessAccountResourceTypes.Container | SharedAccessAccountResourceTypes.Object,\n        SharedAccessExpiryTime = DateTime.UtcNow.AddHours(24),\n        Protocols = SharedAccessProtocol.HttpsOrHttp\n};  \n\n// Create a storage account SAS token by using the above Shared Access Account Policy.\nCloudStorageAccount storageAccount = CloudStorageAccount.Parse(&lsquo;YOUR CONNECTION STRING&rsquo;);\nstring sasToken = storageAccount.GetSharedAccessSignature(policy);</pre>\n\n<p>자세한 내용은 다음 리소스를 참조하세요.</p>\n\n<ul>\n    <li>자습서: <a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-dotnet-shared-access-signature-part-1/\" target=\"_blank\">공유 액세스 서명, 1부: SAS 모델 이해</a></li>\n    <li>API 설명서: <a href=\"https://msdn.microsoft.com/en-us/library/azure/microsoft.windowsazure.storage.sharedaccessaccountpolicy.aspx\" target=\"_blank\">SharedAccessAccountPolicy 클래스 MSDN 설명서</a></li>\n    <li>코드 샘플: <a href=\"https://azure.microsoft.com/en-us/documentation/samples/storage-blob-dotnet-getting-started/\" target=\"_blank\">.NET에서 Azure Blob Service 시작</a></li>\n</ul>\n\n<p>스토리지 계정 키를 공유하는 대신 SAS 토큰을 사용하여 스토리지 사용자에게 액세스를 위임하는 것이 좋습니다. 언제나처럼, 이 게시물에 대한 의견을 통해 추가 질문이 있는 경우 알려주세요.</p>"
