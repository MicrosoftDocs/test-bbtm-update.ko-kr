### YamlMime:Yaml
ms.openlocfilehash: 3b8e5ccc62ef4bd5a27e6ea709249a479bf89aa9
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139913052"
Slug: clustered-columnstore-tables-are-the-new-default-in-azure-sql-data-warehouse
Title: 클러스터형 Columnstore 테이블은 Azure SQL Data Warehouse의 새로운 기본값입니다.
Summary: 클러스터형 columnstore 인덱스는 Azure SQL Data Warehouse에 데이터를 저장할 수는 가장 효율적인 방법 중 하나입니다.
Content: "<p><a href=\"https://msdn.microsoft.com/en-us/library/gg492088.aspx\">클러스터형 columnstore 인덱스는</a> Azure SQL Data Warehouse에 데이터를 저장할 수 있는 가장 효율적인 방법입니다.&nbsp; 클러스터형 columnstore 인덱스가 있는 테이블에 데이터를 저장하는 것은 데이터를 쿼리하는 가장 빠른 방법이며 가장 큰 데이터 압축을 제공하여 스토리지 비용을 낮춥니다.&nbsp; 데이터가 이 최신 기술을 사용하고 있는지 확인하기 위해 클러스터형 columnstore 인덱스는 이제 Azure SQL Data Warehouse의 새 테이블 기본값입니다.</p>\n\n<p>이 변경으로 <a href=\"https://msdn.microsoft.com/en-us/library/mt203953.aspx\">CREATE TABLE</a> 및 <a href=\"https://msdn.microsoft.com/en-US/library/mt204041.aspx\">CREATE TABLE AS SELECT</a> 구문이 약간 변경됩니다. 아래 예제에서는 이제 클러스터형 columnstore 테이블을 만듭니다.</p>\n\n<pre class=\"prettyprint\">\nCREATE TABLE myClusteredColumnstoreTable \n  (\n    id int NOT NULL,\n    lastName varchar(20),\n    zipCode varchar(6)\n  )\nWITH\n  ( \n    DISTRIBUTION = HASH (id)\n  );</pre>\n\n<p>테이블을 이전 기본값인 HEAP으로 만들려면 WITH 절에 이 옵션을 추가하기만 하면 됩니다.&nbsp; 예를 들어 아래 DDL은 HEAP 테이블을 만듭니다.</p>\n\n<pre class=\"prettyprint\">\nCREATE TABLE myHeapTable \n  (\n    id int NOT NULL,\n    lastName varchar(20),\n    zipCode varchar(6)\n  )\nWITH\n  ( \n    DISTRIBUTION = HASH (id), \n    HEAP\n  );</pre>\n\n<p>데이터베이스에 있는 테이블 유형을 확인하려면 다음 쿼리를 실행할 수 있습니다.</p>\n\n<pre class=\"prettyprint\">\nSELECT\n    a.name as schema_name, \n    b.name as table_name,\n    c.type_desc as table_type,\n    c.name as index_name\nFROM\n    sys.schemas a\n    INNER JOIN sys.tables b\n        ON a.schema_id = b.schema_id\n    INNER JOIN sys.indexes c\n        ON b.object_id = c.object_id\nORDER BY\n    1, 2;</pre>\n\n<p>테이블을 힙에서 클러스터형 columnstore로 변환하려면 CREATE CLUSTERED COLUMNSTORE INDEX를 사용할 수 있습니다.</p>\n\n<pre class=\"prettyprint\">\nCREATE CLUSTERED COLUMNSTORE INDEX cciIndex ON myHeapTable;</pre>\n\n<p>테이블을 클러스터형 columnstore에서 힙으로 변환하려면 DROP INDEX를 사용할 수 있습니다.</p>\n\n<pre class=\"prettyprint\">\nDROP INDEX cciIndex ON myHeapTable;</pre>\n\n<p>이 변경의 미묘한 영향은 두 가지가 있으며, 이는 사용자에게 영향을 미칠 수 있습니다.</p>\n\n<ol>\n    <li>로드를 위한 준비 테이블을 만드는 경우, 주요 목적은 데이터를 데이터베이스에 신속하게 로드한 다음, 데이터를&nbsp; apermanent 테이블로 이동하는&nbsp; 것입니다. 이 시나리오에서 힙 테이블이 더 잘 수행된다는 것을 알 수 있습니다.</li>\n    <li>현재 힙 테이블에서 보조 인덱스를 활용하는 자동화가 있는 경우 클러스터형 columnstore 테이블에서 보조 인덱스가 아직 지원되지 않으므로 DDL에 HEAP 키워드를 추가하려고 합니다.</li>\n</ol>"
