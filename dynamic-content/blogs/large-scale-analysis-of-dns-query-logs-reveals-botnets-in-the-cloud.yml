### YamlMime:Yaml
ms.openlocfilehash: 0cbd9ed750158e8925804c6b92d85fad60103852
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905853"
Slug: large-scale-analysis-of-dns-query-logs-reveals-botnets-in-the-cloud
Title: DNS 쿼리 로그의 Large-Scale 분석으로 클라우드의 봇넷 표시
Summary: 데이터 보안 전문가와 사이버 범죄자 간의 군비 경쟁은 빠른 속도로 계속됩니다. 공격자는 그 어느 때보다도 알려진 맬웨어를 배포하여 악의적인 목적으로 컴퓨팅 리소스를 악용합니다.
Content: >-
  <p><em>이 게시물은 Azure Security의 수석 보안 프로그램 관리자인 Tomer Teller가 공동 저술했습니다.</em></p>


  <p>데이터 보안 전문가와 사이버 범죄자 간의 군비 경쟁은 빠른 속도로 계속됩니다. 그 어느 때보다도 공격자는 클라우드에서 실행되는 가상 머신에 봇&rdquo;이라고 &ldquo;하는 맬웨어를 배포하여 악의적인 목적으로 컴퓨팅 리소스를 악용합니다. 보수적인 추정치조차도 적어도 10,000대의 컴퓨터 중 1개는 알려진 일부 Botnet의 일부라는 것을 알 수 있습니다.</p>


  <p>클라우드에서 VM을 더 잘 보호하기 위해 ASC(<a href="https://azure.microsoft.com/en-us/services/security-center/">Azure Security Center</a>)는 DNS 쿼리 로그 분석을 기반으로 하는 정밀도 Botnet 검색을 위해 감독되는 새로운 Machine Learning 모델을 적용합니다. 이 모델은 정밀도 95%와 리콜 43%를 달성하고 맬웨어 방지 회사에서 보고하기 전에 Botnet을 검색할 수 있습니다.</p>


  <h2>Botnet과 해당 CnC 서버 간의 통신 패턴</h2>


  <p>봇은 CnC(명령 및 제어) 서버 또는 서버를 사용하여 공격자(Botmaster)에 의해 제어됩니다. 이 네트워크의 일부인 봇을 Botnet(또는 좀비)이라고 합니다. 일반적인 Botnet(Botnet) 구조체는 다음 그림에 나와 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/620679ef-d83d-40e7-af42-2a3c55007488.jpg"><img alt="The Structure" border="0" height="304" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ea4043de-6ef0-4ad9-8756-11d17b8e5b78.jpg" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="구조체" width="539"></a></p>


  <p>지금까지 CnC 서버에는 고정 IP 주소가 할당되어 있으므로 삭제하거나 블랙리스트를 쉽게 삭제할 수 있습니다. 검색을 방지하기 위해 Botmasters는 더 복잡한 봇/CnC 통신 패턴을 만들어 응답했습니다.</p>


  <p>예를 들어 공격자는 도메인 이름을 사용하여 IP 주소를 자주 변경하는 CnC 서버를 찾는 Fast-Flux(Mehta, 2014)와 같은 방법을 개발했습니다. 또한 DGA( <a href="https://en.wikipedia.org/wiki/Domain_generation_algorithm">도메인 생성 알고리즘</a> )는 다양한 맬웨어 제품군에서 사용되며 Conficker가 가장 악명 높은 예일 수 있습니다. DGA 패턴은 봇에서 CnC 서버에 대한 연결점으로 사용할 수 있는 많은 도메인 이름을 주기적으로 생성하여 작동합니다.</p>


  <p>최근에는 CnC 서버와의 직접 링크를 설정하지 않고도 정보를 전달하기 위해 Botmasters가 소셜 네트워크 및 기타 사용자 생성 콘텐츠 사이트를 악용하고 있습니다. 따라서 보안 전문가는 더 이상 간단한 규칙 기반 접근 방식을 사용하여 이러한 복잡한 통신 패턴을 검색할 수 없습니다.</p>


  <h2>클라우드에서 Botnet을 검색할 수 있는 기회</h2>


  <p>사이버 보안 도메인에서 기계 학습의 일반적인 애플리케이션 중 하나는 변칙 검색입니다. 손상된 컴퓨터가 비정상적인 동작을 보이는 것입니다. 이 가정은 일반적으로 정확하지만 반대의 경우는 거의 없습니다. 따라서 이러한 기술은 낮은 정밀도를 달성하므로 많은 거짓 경보를 생성합니다.</p>


  <p>Microsoft와 같은 클라우드 공급자는 여러 데이터 원본에 대규모 기계 학습을 적용하고 모든 VM 로그의 결합된 보기를 적용하여 훨씬 더 정확하게 Botnet 활동을 검색할 수 있는 고유한 기회를 제공합니다. 격리된 각 컴퓨터의 데이터를 분석하는 대부분의 다른 시스템과 달리, 이 접근 방식은 Botnet에 일반적인 패턴을 효과적으로 파악할 수 있습니다.</p>


  <h2>데이터 수집</h2>


  <p>Azure VM에서 DNS 쿼리 및 응답 데이터를 수집합니다. 로그에는 하루에 약 50TB의 데이터가 포함되며 쿼리 이름, 쿼리된 도메인 이름 서버, DNS 응답 및 기타 DNS 로깅 정보와 같은 정보가 포함됩니다.</p>


  <p>DNS 쿼리 및 응답 데이터 외에도 MICROSOFT 자동화된 TI(위협 인텔리전스) 피드를 사용합니다. 피드에는 Botnet의 일부일 가능성이 높은 디바이스의 IP 주소와 알려진 CnC 서버의 IP 주소 및 도메인에 대한 정보가 포함됩니다.</p>


  <p>최적의 결과를 얻기 위해 Botnet 검색을 2클래스 감독 학습 문제로 모델링합니다. 즉, 특정 날짜에 VM이 해당 VM DNS 쿼리 로그를 기반으로 하는 Botnet의 일부임을&rsquo; 분류합니다. VM 인스턴스는 다음 조건에 따라 Botnet에 참여할 수 있는 것으로 레이블이 지정됩니다.</p>


  <ol>
   <li>VM의 IP 주소는 같은 날의 TI Botnet 피드에 표시됩니다.</li>
   <li>VM은 CnC에 속한 것으로 알려진 도메인을 사용하여 DNS 쿼리를 실행했습니다.</li>
   <li>VM은 발급된 쿼리에 대한 DNS 응답을 받았으며, 그 결과 매핑된 IP는 CnC의 알려진 IP 주소입니다.</li>
  </ol>


  <h2>기능 추출</h2>


  <p>VM 인스턴스는 특정 날짜의 VM을 나타내며 해당 날짜의 TI 피드를 기반으로 봇넷의 가능한 참가자로 레이블이 지정됩니다. 문제에서 기능 추출은 어렵습니다. 지정된 VM에서 액세스하는 도메인의 수는 매우 클 수 있으며 가능한 도메인의 총 수는 매우 많습니다. 따라서 도메인 공간은 거대하고 상대적으로 조밀합니다.</p>


  <p>또한 모델이 지속적으로 사용되므로 학습 중에 도메인에 대한 쿼리가 보이지 않는 경우에도 Botnet을 식별해야 합니다. CnC 서버와의 통신 패턴에 따라 기능은 다음 표에 설명된 인사이트를 캡처해야 합니다.</p>


  <table border="1" cellpadding="2" cellspacing="0" width="1452">
   <tbody>
    <tr>
     <td valign="top" width="499"><strong>이름 </strong></td>
     <td valign="top" width="951"><strong>설명</strong></td>
    </tr>
    <tr>
     <td valign="top" width="499">희귀 도메인</td>
     <td valign="top" width="951">CnC 서버의 도메인 이름은 합법적인 사용자가 거의 요청하지 않으므로 드뭅니다.</td>
    </tr>
    <tr>
     <td valign="top" width="499">젊은 도메인</td>
     <td valign="top" width="951">DGA(도메인 생성 알고리즘)를 사용하는 경우 CnC 서버는 새 도메인 이름을 자주 획득하므로 최근에 등록되는 경향이 있습니다. 대규모 매일 업데이트된 데이터 피드를 사용하여 도메인 이름을 등록 날짜에 매핑합니다.</td>
    </tr>
    <tr>
     <td valign="top" width="499">Botnet에 대한 도메인 특이성</td>
     <td valign="top" width="951">동일한 CnC 서버에서 제어되는 봇넷은 서로 유사성을 포함하면서도 다른 쿼리와 다른 DNS 쿼리를 실행합니다.</td>
    </tr>
    <tr>
     <td valign="top" width="499">존재하지 않는 도메인 응답</td>
     <td valign="top" width="951">
     <p>DGA를 사용하는 경우 Botnets는 해당 시간 동안 CnC 서버의 실제 도메인을 찾기 전에 많은 기존 도메인을 쿼리합니다.</p>
     </td>
    </tr>
   </tbody>
  </table>


  <p>각 인스턴스에 대한 기능을 효율적으로 생성하기 위해 데이터 세트에 두 개의 패스를 적용합니다. 첫 번째 패스에서는 지정된 날짜에 도메인을 다음과 같이 매핑하는 RT(평판 테이블)를 생성합니다.</p>


  <ul>
   <li>희귀도 점수</li>
   <li>젊음 점수</li>
   <li>Botnet 특이한 점수</li>
  </ul>


  <p>두 번째 패스에서는 쿼리한 도메인의 평판 점수를 기준으로 각 인스턴스의 기능을 계산합니다. RT는 다음과 같이 계산됩니다.</p>


  <p align="left"><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4d1d04d1-5ce5-4cea-b974-71881783a5e8.png"><img alt="Screenshot_12" border="0" height="159" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d97d6a28-db3a-4d34-b304-7c186f4c9f6f.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="Screenshot_12" width="454"></a></p>


  <p>지정된 날에 VM에 대한 기능을 생성하기 위해 VM에서 쿼리하는 모든 존재하지 않는 도메인 및 기존 도메인의 집합인 <sub>Dnxand&nbsp;</sub> <sub>Dx </sub>집합을 만듭니다. <sub>Dnx</sub> 및&nbsp;<sub>Dx</sub>의 각 도메인에 대한 평판 테이블의 해당 값을 개별적으로 요약하여 기능 벡터를 생성합니다.</p>


  <p>마찬가지로 쿼리되는 이름 서버(즉, 결국 DNS 쿼리를 해결한 DNS 서버)에도 동일한 작업을 수행합니다. 후자의 기능은 악의적이 아닌 영역의 드문 하위 도메인(예: Yahoo.com 드문 하위 도메인)에 액세스하는 합법적인 시나리오를 식별하는 데 도움이 됩니다. 분류를 위해 기본 매개 변수를 사용하여 Apache Sparks&rsquo; Gradient-Boosted 트리를 사용했습니다.</p>


  <h2>실험적 평가</h2>


  <p>Microsoft TI 피드를 사용하여 매일 Azure VM 인스턴스에 대한 레이블을 생성합니다. 그러나 이러한 레이블은 완벽하지 않습니다. 봇넷은 여전히 꽤 오랜 시간 동안 검색되지 않은 상태로 유지될 수 있습니다. 따라서 피드를 기반으로 생성한 레이블은 포괄적이지 않습니다. 이렇게 하면 피드를 기반으로 추출할 수 있는 레이블과 완벽하게 일치하지 않기 때문에 평가 설정이 표준 분류 문제와 다릅니다. 이렇게 하면 일별 피드에서 이미 사용할 수 있는 정보가 중복됩니다. 대신 TI <em>피드에 표시 <strong>되기 전에</strong> 손상된 VM을 찾는 것이 목표입니다</em>.</p>


  <p>이 점을 염두에 두고 2016년 6월 초부터 일주일 동안 데이터를 학습시켰습니다. 모델은 6월 하순부터 인스턴스를 분류하고 TI 피드에서 생성된 레이블을 기반으로 1주일(7월까지) 평가에 대한 근거를&rdquo; 생성&ldquo;할 수 있도록 합니다. 다음과 같은 혼동 행렬에서 모델의 정확도를 보고합니다.<br>

  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e92c72e3-68b9-4703-bfe1-62be83987359.png"><img alt="Screenshot_13" border="0" height="62" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/47452d30-f782-47e8-800c-608f5ffea65b.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto" title="Screenshot_13" width="410"></a></p>


  <p>행렬에서 모델은 테스트 집합에서 432(411+21) 인스턴스를 Botnet으로 분류한 것을 알아봅니다. 이 중 95%(411)는 결국 인터플로 피드(1주일 이내)에 표시되므로 모델은 95%의 정밀도와 43%의 리콜을 달성합니다. 5%의 명백한 FP는 여전히 피드에 아직 나타나지 않은 Botnet일 수 있으므로 추가 조사가 필요합니다.</p>


  <h2>결론</h2>


  <p>DNS 로그를 기반으로 하는 Botnet 검색을 위한 새로운 감독형 ML 모델을 제공합니다. 맬웨어 방지 공급업체에서 제공하는 위협 인텔리전스 피드를 기반으로 감독된 모델에 대한 레이블을 생성합니다. 모델이 TI 피드의 일부가 되기 전에 봇넷의 일부인 VM을 높은 정확도로 식별할 수 있음을 보여 줍니다. 이 새로운 Botnet 검색 기능은 Azure VM이 맬웨어에 감염될 위험을 줄입니다.</p>
