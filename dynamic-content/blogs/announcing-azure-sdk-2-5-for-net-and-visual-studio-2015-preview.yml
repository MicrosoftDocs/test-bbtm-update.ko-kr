### YamlMime:Yaml
ms.openlocfilehash: 3d362e45b4806a5bbdeac7a6abc8f54dd7b7bb62
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899461"
Slug: announcing-azure-sdk-2-5-for-net-and-visual-studio-2015-preview
Title: .NET용 Azure SDK 2.5 및 Visual Studio 2015 미리 보기 발표
Summary: 오늘 Visual Studio 2012, 2013 및 2015 Preview용 Azure SDK 2.5를 발표하게 되어 기쁩니다. 또한 더 많은 Azure 기능을 추가하는 Visual Studio 2015 Preview를 발표하게 되어 기쁩니다.
Content: "오늘 Visual Studio 2012, 2013 및 2015 Preview용 Azure SDK 2.5를 발표하게 되어 기쁩니다.또한 더 많은 Azure 기능을 추가하는 Visual Studio 2015 Preview를 발표하게 되어 기쁩니다.이 게시물에서는 이러한 릴리스의 기능 및 이러한 릴리스에서 사용할 수 있는 시나리오에 대해 설명합니다.\n\n<span style=\"text-decoration: underline\">.NET용 Azure SDK 2.5 [<a href=\"https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2013AzurePack.appids\">VS 2013VS</a> |  <a href=\"https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs11AzurePack.appids\">2012VS</a> |  <a href=\"https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2015AzurePack.appids\">2015 미리 보기</a>용 다운로드]</span>\n<ul>\n <li><strong>Cloud Services 및 Virtual Machines에 대한 진단 개선</strong> 사항: 이제 진단 기능은 Azure 확장 모델을 사용하므로 다시 배포하지 않고 진단을 켜거나 구성을 업데이트할 수 있습니다.새로운 기능에는 구조화된 로깅을 위한 ETW, 크래시 덤프 및 Virtual Machines 지원이 처음으로 포함됩니다.</li>\n <li><strong>Azure Resource Manager 도구: Azure</strong> Gallery 템플릿을 사용하여 여러 Azure 리소스로 구성된 애플리케이션을 만듭니다.이 환경은 JSON 템플릿 및 매개 변수 파일을 사용하여 선언적이고 반복 가능한 방식으로 복잡한 환경을 만들 수 있는 새로운 클라우드 배포 Project 형식에서 사용할 수 있습니다.</li>\n <li><strong>빠른 시작</strong>: 새 Project 클라우드 파일 &gt; 대화 상자에는 Microsoft Azure &gt; 서비스를 보여 주는 새 템플릿이 포함되어 있습니다.</li>\n <li><strong>WebJobs 원격 디버깅 및 서버 탐색기 지원</strong>: 이전에 콘솔 또는 웹 프로젝트에서 WebJobs를 게시하는 기능을 추가했습니다.이 릴리스에서는 서버 탐색기 지원 및 원격 디버깅을 추가합니다.</li>\n <li><strong>Storage Explorer Blob 폴더 지원: Storage Explorer</strong> 사용하여 Blob Storage 컨테이너에서 폴더 보기 및 만들기</li>\n <li><strong>HDInsight 서버 탐색기 및 Hive 쿼리 지원</strong>: hive 쿼리를 작성하고 Visual Studio 바로 Hive 작업을 봅니다.</li>\n</ul>\n∙\n\n<span style=\"text-decoration: underline\">Visual Studio 2015 미리 보기 [<a href=\"https://aka.ms/vs2015preview\">다운로드</a>]</span>\n\nAzure SDK 2.5는 Visual Studio 2015 미리 보기에서 지원되는 첫 번째 Azure SDK입니다. 위의 Visual Studio 2013 기능 외에도 Visual Studio 2015 미리 보기에는 다음과 같은 기능이 도입되었습니다.\n<ul>\n <li><strong>연결된 서비스 추가</strong>: Azure Storage 및 Mobile Services 같은 서비스에 쉽게 연결합니다.흐름은 적절한 프로젝트 참조를 추가하고, 연결 문자열을 삽입하며, 서비스 사용에 대한 시작 지침을 제공합니다.</li>\n <li><strong>Enterprise SSO</strong>: Azure Active Directory 사용하여 엔터프라이즈 SSO(Single Sign-On)를 쉽게 구성합니다.</li>\n <li><strong>여러 Azure 계정에 커넥트 Visual Studio</strong>: 이제 Visual Studio 로그인하면 Azure 구독에 자동으로 로그인됩니다. 추가 Azure 계정에 로그인하여 모든 계정에서 Azure 구독 및 리소스에 동시에 액세스할 수도 있습니다.</li>\n <li><strong>Azure용 Code Analysis</strong>: 이 NuGet 패키지는 Azure 애플리케이션의 성능, 확장성 또는 보안 문제를 일으키는 코딩 패턴을 식별하는 코드 분석 규칙을 제공합니다.</li>\n <li><strong>ASP.NET 5.0</strong>: Azure에 게시가 미리 보기 탭 및 성능 향상으로 업데이트되었습니다.</li>\n</ul>\n<h1>진단: ETW를 사용하여 향상된 진단 로깅</h1>\n이제 ETW 이벤트 원본을 사용하여 구조화 및 수식 로깅을 수행할 수 있습니다. ETW 이벤트 원본 및 이벤트 ID를 사용하면 애플리케이션 워크플로의 논리적 이벤트 및 단계를 정의할 수 있습니다. 애플리케이션 워크플로의 문제를 진단하는 데 도움이 되도록 여러 계층에서 이벤트를 추적합니다.\n\n이벤트 원본의 로깅을 사용하도록 설정하려면 먼저 원본에서 이벤트 클래스를 정의합니다. 다음 코드 조각은 두 개의 이벤트가 있는 샘플 게스트북 애플리케이션에 대한 <b>EventSource</b> 를 보여 줍니다.\n<pre class=\"prettyprint\">[EventSource(Name=\"Contoso-GuestBook\")]\npublic sealed class GuestBookEventSource: EventSource\n{\n    ...\n\n    [Event(1, Message = \"Added entry in table storage for guest '{1}'\", \nLevel = EventLevel.Informational)]\n    public void GuestBookEntryAdded (string guestName, Guid activityID )\n    {\n        if (this.IsEnabled()) {WriteEvent(1, guestName, activityID);}\n    }\n\n    [Event(2, Message = \"Queued message to process blob '{0}'\", \nLevel = EventLevel.Informational)]\n    public void ThumbnailRequestPosted(string pictureUrl, Guid activityID)\n    {\n        if (this.IsEnabled()) { WriteEvent(2, pictureUrl, activityID);}\n    }\n    ...\n}</pre>\n이벤트를 정의한 후 애플리케이션에 이를 기록합니다. 예를 들어 게스트북 애플리케이션에서 GuestBookEntryAdded 이벤트를 기록합니다.\n<pre class=\"prettyprint\">GuestBookEventSource.Log.GuestBookEntryAdded(\n    entry.GuestName, GuestBookEventSource.CurrentThreadActivityId);</pre>\n코드에서 이벤트를 로깅하고 나면 역할을 마우스 오른쪽 단추로 클릭하고 속성을 선택하여 역할에 대한 진단을 구성 <b>합니다</b>. <b>구성</b> 속성 페이지에서 <b>진단 사용</b>이 선택되어 있는지 확인하고 <b>구성...</b>을 클릭합니다. 클릭합니다.\n\n<b>진단 구성</b> 대화 상자에서 <b>ETW 로그</b> 탭으로 이동하여 <b>ETW 로그 전송 사용을</b> 선택합니다. 이벤트 원본 이름을 지정하고 이벤트 원본 추가 단추를 클릭하여 전송할 적절한 <b>이벤트 원본을 추가</b> 합니다. 추가되면 로그의 스토리지 위치, 로그 수준, 키워드 필터 및 전송 빈도와 같은 추가 속성을 구성합니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/Diagnostics1.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"Diagnostics1\" alt=\"Diagnostics1\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Diagnostics1_thumb.png\" width=\"610\" height=\"454\" border=\"0\" /></a>\n\nCloud Service를 배포하면 대략적인 진단 개요가 표시됩니다. 역할에 대한 진단 데이터를 보려면 해당 데이터를 마우스 오른쪽 단추로 클릭하고 <b>진단 데이터 보기를</b> 선택합니다. 그러면 ETW 로그에 대한 새 섹션이 포함된 진단 요약 페이지가 표시됩니다. 해당 오류를 보려면 적절한 ETW 로그 테이블을 선택합니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image004.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image004\" alt=\"clip_image004\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image004_thumb.png\" width=\"610\" height=\"562\" border=\"0\" /></a>\n\n새 진단 기능은 확장 모델을 사용하므로 클라우드 서비스가 게시된 후 실행 중인 서비스에 대한 진단 구성을 업데이트할 수 있습니다. 이렇게 하려면 <b>서버 탐색기를</b> 열고 역할을 마우스 오른쪽 단추로 클릭하고 <b>진단 업데이트를</b> 선택합니다.\n<h1>진단: 크래시 덤프 구성</h1>\n크래시 덤프를 구성하려면 진단 구성 대화 상자의 <b>크래시 덤프</b> 탭으로 이동합니다. 크래시 덤프를 수집하려는 프로세스의 이름을 추가하면 진단에서 선택한 Blob 컨테이너에서 이를 수집합니다. 기본적으로 클라우드 역할에 대한 가장 일반적인 프로세스는 크래시 덤프 수집을 위해 미리 선택됩니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image006.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image006\" alt=\"clip_image006\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image006_thumb.png\" width=\"610\" height=\"454\" border=\"0\" /></a>\n<h1>진단: Virtual Machines</h1>\n이제 Virtual Machines에서 진단 데이터를 수집하여 애플리케이션을 모니터링하거나 추적 로그를 통해 디버그할 수 있습니다. 진단을 사용하도록 설정하려면 서버 탐색기(<b>서버 탐색기</b> <b>보기</b>&gt;)를 열고 가상 머신을 마우스 오른쪽 단추로 클릭한 다음 <b>구성을 선택합니다.</b>\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image008.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image008\" alt=\"clip_image008\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image008_thumb.jpg\" width=\"429\" height=\"357\" border=\"0\" /></a>\n\n열리는 대화 상자에 <b>설치된 확장 섹션이</b> 표시됩니다. 이 섹션의 드롭다운 메뉴를 클릭하고 <b>Microsoft Monitoring Agent 진단</b> 확장을 선택하고 <b>추가</b>를 클릭합니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image010.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image010\" alt=\"clip_image010\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image010_thumb.png\" width=\"610\" height=\"334\" border=\"0\" /></a>\n\n그러면 진단 구성 대화 상자가 나타납니다. 설정은 PaaS 시나리오에서 본 것과 정확히 동일합니다. 따라서 ETW EventSource를 사용하여 진단 코드를 개발하고 IaaS VM에 대해 정확히 동일한 방식으로 진단 구성을 설정할 수 있습니다. 로그할 항목 구성을 마치면 변경 내용을 저장하고 가상 머신에 변경 내용을 적용하도록 구성을 업데이트합니다.\n\n<em>2.5 릴리스에서 진단 기능의 한 가지 제한 사항은 컴퓨팅 Emulator 애플리케이션을 로컬로 디버그할 때 진단 로그가 캡처되지 않는다는 것입니다. 성능 카운터, IIS 로그 또는 이벤트 로그는 가져올 수 없습니다. 또한 로컬 디버그 시나리오를 위해 로그가 Azure Storage 또는 개발 스토리지로 전송되지 않습니다. 애플리케이션을 로컬로 디버깅하는 동안 애플리케이션 로그를 보려면 Compute Emulator 추적을 표시할 수 있는 System.Diagnostics.Trace를 사용합니다.</em>\n<h1>Azure Resource Manager 도구</h1>\nAzure Resource Manager 도구를 사용하면 더 큰 조직 및 반복성을 위해 리소스 그룹 내에서 리소스를 빠르고 효율적으로 만들고 배포할 수 있습니다.이 도구는 사용자 지정 및 매개 변수화를 허용하는 Azure Gallery 템플릿을 사용하여 한 환경에서 다음 환경으로 이동할 때 비용을 절감합니다.<b>File-New&gt; Project- Cloud-&gt;&gt; Cloud Deployment Project 배포</b> 프로젝트를 만들어 시작합니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image012.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image012\" alt=\"clip_image012\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image012_thumb.png\" width=\"610\" height=\"423\" border=\"0\" /></a>\n\n프로젝트를 만들면 일반적인 Azure Gallery 템플릿 목록을 찾을 수 있습니다. 향후 릴리스에서는 네트워킹, 스토리지, 가상 머신과 같은 다른 Azure 기능을 사용하는 애플리케이션 시나리오에 더 많은 템플릿이 추가될 예정입니다. 빌드 중인 솔루션에 가장 가까운 템플릿을 선택합니다.\n\n<b><a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image014.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image014\" alt=\"clip_image014\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image014_thumb.png\" width=\"610\" height=\"458\" border=\"0\" /></a></b>\n<h2>클라우드 앱 솔루션</h2>\nAzure 갤러리에서 <b>웹 사이트 </b>템플릿을 선택하여 ASP.NET Website Project 및 새 프로젝트 유형인 <b>MyAzureCloudApp.Deployment</b>라는 Azure Resource Manager 배포 프로젝트를 포함하는 솔루션을 만듭니다. 배포 프로젝트에는 배포 템플릿 파일(<b>WebSiteDeploy.json</b>), 템플릿 매개 변수 정의(<b>WebSiteDeploy.param.dev.json</b>) 및 Azure에 리소스를 배포하는 데 사용할 수 있는 PowerShell 스크립트(<b>Publish-AzureResourceGroup.ps1</b>)가 포함됩니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image016.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image016\" alt=\"clip_image016\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image016_thumb.jpg\" width=\"413\" height=\"315\" border=\"0\" /></a>\n\n배포 템플릿 및 매개 변수 파일을 사용하면 클라우드 수명 주기 패턴에서 쉽게 작업하고 이러한 파일을 코드로 구성으로 처리할 수 있습니다. *.dev.json이라는 매개 변수 파일이 기본적으로 만들어집니다. 이 매개 변수 파일을 복사하고 이름을 *.test.json 또는 *.staging.json으로 지정하면 단일 템플릿을 사용하여 여러 환경을 빌드할 수 있습니다.\n\nVisual Studio 기본 제공 JSON 편집기를 사용하여 이러한 JSON 파일을 쉽게 편집할 수 있으며 게시된 JSON 스키마를 기반으로 IntelliSense를 포함합니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/12/image.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"이미지\" alt=\"image\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/image_thumb.png\" width=\"610\" height=\"391\" border=\"0\" /></a>\n<h2>Azure 리소스 만들기</h2>\nAzure에 리소스를 배포하는 가장 간단한 방법은 배포 Project 마우스 오른쪽 단추로 클릭하고 <b>새 배포 배포 &gt; 를 선택하는 것입니다</b>. 그러면 리소스 그룹에 배포 대화 상자가 표시됩니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image018.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image018\" alt=\"clip_image018\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image018_thumb.png\" width=\"500\" height=\"326\" border=\"0\" /></a>\n\n웹 애플리케이션에 필요한 모든 리소스가 포함된 Azure 리소스 그룹을 만들려면 <strong>리소스 그룹</strong> 콤보 상자를 클릭하고 <strong>새로 만들기를 선택하여 리소스 그룹 만들기 대화 상자를 표시</strong>합니다. <b>리소스 그룹 만들기</b> 대화 상자에서 <strong>만들기 </strong>단추를 클릭하면 아직 리소스가 없는 Azure 리소스 그룹이 프로비전됩니다.\n\n배포 템플릿 파일(websitedeploy.json) 및 템플릿 매개 변수 파일(websitedeploy.param.dev.json)은 배포 및 프로비저닝에 대한 세부 정보 또는 리소스를 지정합니다. 스토리지 계정은 애플리케이션 패키지를 Azure Resource Manager에 업로드하는 데 사용되므로 템플릿 배포에 포함될 수 있습니다. 스토리지 계정이 아직 없는 경우 계속하기 전에 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/storage-create-storage-account/\">스토리지 계정을 만들어야</a> 합니다.\n\n<b>매개 변수 편집</b> 단추를 클릭하면 웹 사이트 이름, 웹 호스팅 계획 이름 및 웹 사이트 위치 등을 지정할 수 있는 대화 상자가 표시됩니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image019.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image019\" alt=\"clip_image019\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image019_thumb.png\" width=\"403\" height=\"318\" border=\"0\" /></a>\n\n매개 변수 값은 <b>WebSiteDeploy.param.dev.json</b> 파일에 다시 저장되므로 다음에 이 웹 사이트를 배포할 때 이 정보를 입력할 필요가 없습니다. 로컬 JSON을 사용자 지정하고 저장할 수 있으면 리소스를 다시 배포할 때 오류가 발생할 가능성이 줄어듭니다.\n\n모든 매개 변수가 지정되고 저장되면 <strong>배포</strong> 단추를 클릭하여 애플리케이션 및 리소스를 Azure에 배포합니다. 출력 창에서 자세한 진행률을 볼 수 있으며, 리소스 그룹 및 배포된 모든 리소스를 새롭고 향상된 <a href=\"https://portal.azure.com/\">Azure Portal</a>에서 볼 수 있습니다.\n<h1>퀵 스타트</h1>\n빠른 시작은 Azure SDK 및 기타 라이브러리를 활용하여 Azure 서비스와 상호 작용하는 방법을 보여 주는 샘플 코드를 제공합니다. <b>파일 - 새 Project -&gt; 클라우드 -&gt;&gt; 빠른 시작에서 빠른 시작을 찾습니다</b>.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/12/dialog.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"대화\" alt=\"dialog\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/dialog_thumb.png\" width=\"610\" height=\"423\" border=\"0\" /></a>\n\n현재 릴리스에는 Azure Storage(Blob, 테이블, 큐), DocumentDB, Azure Redis Cache Service, Azure Media Services, Azure WebJobs(Blob, 테이블, 큐, Service Bus 큐) 및 Service Bus(토픽, 큐)를 사용하는 방법을 보여 주는 샘플이 있습니다. MAML(Microsoft Azure 관리 라이브러리)을 사용하여 C#을 사용하여 Azure에서 프로그래밍 방식으로 리소스를 만드는 방법을 보여주는 샘플도 있습니다.\n<h1>WebJobs</h1>\n이제 Azure WebJobs 및 WebJobs SDK가 일반 공급됩니다. WebJobs 및 WebJobs SDK에 대해 자세히 알아보려면 <a href=\"https://aka.ms/webjobs\">Azure WebJobs 권장 리소스</a>를 시작하세요.\n\n이전에 콘솔 또는 웹 프로젝트에서 WebJobs를 게시하는 기능을 추가했습니다. 이 릴리스에서는 원격 디버깅뿐만 아니라 서버 탐색기 지원을 추가합니다.\n<h2>WebJobs SDK가 WebJobs 템플릿에 미리 설치되어 있습니다.</h2>\n이제 WebJobs 프로젝트 템플릿에는 <a href=\"https://go.microsoft.com/fwlink/?LinkID=320976\">WebJobs SDK</a>에 대한 참조가 자동으로 포함됩니다. 프로젝트를 만드는 동안 필요한 WebJob 유형을 지정합니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image023.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image023\" alt=\"clip_image023\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image023_thumb.jpg\" width=\"610\" height=\"325\" border=\"0\" /></a>\n\n주문형 및 예약된 작업의 경우 프로젝트에 삭제된 파일은 예약된 작업 또는 주문형 작업과 관련이 있습니다. 주문형 또는 예약된 작업의 Program.cs 파일에는 WebJob을 명시적으로 실행하기 위한 코드가 포함되어 있습니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image025.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image025\" alt=\"clip_image025\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image025_thumb.jpg\" width=\"610\" height=\"303\" border=\"0\" /></a>\n\n연속 WebJobs는 다른 Program.cs 파일을 가져옵니다. 연속 템플릿 코드에는 WebJob 호스트를 시작하고 종료를 차단하는 호출이 포함됩니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image027.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image027\" alt=\"clip_image027\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image027_thumb.jpg\" width=\"610\" height=\"303\" border=\"0\" /></a>\n\n마찬가지로 연속 WebJob 프로젝트에 삭제되는 Functions.cs 파일의 코드에는 Azure Storage 큐를 보는 데 사용되는 일부 WebJobs SDK 사용 특성이 포함됩니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image029.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image029\" alt=\"clip_image029\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image029_thumb.jpg\" width=\"610\" height=\"300\" border=\"0\" /></a>\n<h2>WebJobs 서버 탐색기 기능</h2>\nWebJobs는 서버 탐색기의 해당 웹 사이트 아래에 표시되며 실행 모드에 따라 그룹화됩니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image031.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image031\" alt=\"clip_image031\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image031_thumb.jpg\" width=\"489\" height=\"520\" border=\"0\" /></a>\n\n각 WebJob 서버 탐색기 노드는 추가된 기능에 대한 상황에 맞는 메뉴 제스처를 노출합니다. WebJob의 대시보드에 도착하는 것은 한 번의 메뉴 클릭만큼 쉽습니다. 개발자는 상황에 맞는 메뉴 제스처를 사용하여 주문형 또는 예약된 WebJobs를 실행하도록 선택할 수도 있습니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image033.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image033\" alt=\"clip_image033\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image033_thumb.jpg\" width=\"610\" height=\"450\" border=\"0\" /></a>\n\n연속 WebJob 노드는 Azure WebJob의 대시보드에 액세스하는 원클릭 방법도 제공합니다. 상황에 맞는 메뉴에서 연속 WebJobs를 시작하거나 중지할 수도 있습니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image035.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image035\" alt=\"clip_image035\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image035_thumb.jpg\" width=\"610\" height=\"507\" border=\"0\" /></a>\n<h2>WebJobs 원격 디버깅</h2>\n또한 연속 WebJobs에 대한 원격 디버깅 지원도 추가되었습니다. 연속 WebJob이 시작되면 연속 웹 작업 노드의 상황에 맞는 메뉴를 통해 디버거 연결 제스처가 표시됩니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image037.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image037\" alt=\"clip_image037\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image037_thumb.jpg\" width=\"610\" height=\"445\" border=\"0\" /></a>\n\n연속 WebJob의 코드에 중단점을 배치하고 디버거를 연결하면 Visual Studio 로컬로 실행되는 것처럼 코드를 단계별로 실행하고 디버그할 수 있습니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image039.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image039\" alt=\"clip_image039\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image039_thumb.png\" width=\"610\" height=\"274\" border=\"0\" /></a>\n<h1>Storage Explorer</h1>\nBlob 폴더를 사용하면 Blob 그룹을 논리 단위로 쉽게 분할할 수 있습니다. 이는 하나의 Blob 컨테이너를 사용하여 모든 정보를 저장하는 경우에 특히 유용합니다. 이러한 Blob 폴더는 문자로 <b>/</b> 구분된 Blob 이름의 접두사일 뿐입니다. 예를 들어 <b>그림</b> 폴더 내에 <b>file.png</b> Blob이 있는 경우 해당 Blob의 URL은 <span style=\"text-decoration: underline\">https:// storageaccountname.blob.core.windows.net/&lt;&gt;&lt; blobcontainernamepictures&gt;/<b>/file.png</b></span> 형식입니다.\n\n이 릴리스부터 Visual Studio Azure Blob 컨테이너의 폴더를 보고 탐색할 수 있습니다. 폴더 내부로 이동하려면 폴더를 두 번 클릭하고 위쪽 화살표를 사용하여 수준을 올려 폴더를 탐색합니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image041.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image041\" alt=\"clip_image041\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image041_thumb.png\" width=\"610\" height=\"208\" border=\"0\" /></a>\n\n또한 업로드 단추를 사용하여 Azure Storage Blob을 업로드할 때 폴더를 만들 수 있습니다.\n<h1>HDInsight 서버 탐색기 및 Hive 쿼리 지원</h1>\n이제 SDK에는 HDInsight의 호스트된 Hadoop 서비스를 사용하여 빅 데이터로 작업하고 Hive를 사용하여 데이터 세트를 쿼리하는 생산성을 높이는 서버 탐색기의 도구가 포함되어 있습니다.\n\n다른 Azure 서비스와 마찬가지로 구독에서 HDInsight 리소스를 찾아보고 일반적인 개발 테스트 작업을 수행할 수 있습니다.서버 탐색기를 사용하여 Hive 테이블을 쉽게 찾아보고, 스키마를 검사하고, 테이블의 처음 100개 행을 쿼리할 수도 있습니다.이렇게 하면 작업 중인 데이터의 모양을 이해할 수 있습니다.\n\n또한 Hive 쿼리를 만들고 작업으로 제출하는 도구도 있습니다. Hadoop 클러스터에 대한 상황에 맞는 메뉴를 사용하여 빠른 스크립트에 대해 \"Hive 쿼리 작성\"으로 즉시 시작합니다. 작업 브라우저 도구를 사용하면 작업 제출 및 상태를 시각화할 수 있습니다.Hive 작업 요약 창에서 요약 및 세부 정보를 얻으려면 작업을 두 번 클릭합니다.아래 예제에서는 지리적 정보가 포함된 테이블을 쿼리하여 모든 국가의 수를 찾은 다음 국가별로 정렬합니다.\n\n마지막으로 HDInsight에서 사용하는 지원 Blob Storage가 탐색기에 나열됩니다.Blob 컨테이너로 이동하여 파일을 사용하여 작업하도록 열 수 있습니다. 백업 저장소는 Azure 대시보드에서 클러스터를 만드는 동안 Hadoop 클러스터와 연결됩니다. Hadoop 클러스터의 관리는 동일한 Azure 대시보드에서 계속 수행됩니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/12/clip_image002.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image002\" alt=\"clip_image002\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image002_thumb.jpg\" width=\"610\" height=\"367\" border=\"0\" /></a>\n\n더 복잡한 스크립트 개발 및 수명 주기 관리를 위해 Visual Studio 내에서 Hive 프로젝트를 만들 수 있습니다. 새 프로젝트 대화 상자(아래 참조)에서 새 HDInsight 템플릿 범주를 찾을 수 있습니다. 유용한 시작 지점은 Hive 샘플 프로젝트 유형입니다. 이 프로젝트는 웹 서버 로그를 처리하는 경우 보다 복잡한 Hive 쿼리 및 샘플 데이터로 미리 채워집니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/12/clip_image0041.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image004[1]\" alt=\"clip_image004[1]\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image0041_thumb.png\" width=\"610\" height=\"423\" border=\"0\" /></a>\n<h1>Visual Studio 2015 Preview</h1>\nAzure SDK 2.5는 Visual Studio 2015 미리 보기에서 지원되는 첫 번째 Azure SDK입니다. 위의 Visual Studio 2013 기능 외에도 Visual Studio 2015 Preview에는 다음과 같은 기능이 도입되었습니다.\n<h1>여러 계정으로 로그인</h1>\nAzure 구독과 연결된 계정으로 Visual Studio 2015 Preview에 로그인하면 자동으로 Azure에 로그인됩니다. 서버 탐색기에 Azure 리소스가 표시됩니다. 더 이상 동일한 계정으로 두 번 로그인할 필요가 없습니다!\n\n이제 여러 계정으로 동시에 로그인할 수도 있습니다. 예를 들어 MSDN 구독과 연결된 Microsoft 계정으로 로그인하고 회사의 구독에 대한 조직 계정으로 동시에 로그인할 수 있습니다. 다른 계정으로 로그인하려면 서버 탐색기에서 Azure 노드를 마우스 오른쪽 단추로 클릭하고 <b>구독 관리를 선택합니다. </b> 그러면 Visual Studio 추가한 모든 계정이 표시되는 Microsoft Azure 구독 관리 대화 상자가 표시됩니다. 새 계정을 추가하려면 계정 추가 링크를 클릭하기만 하면 됩니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image043.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image043\" alt=\"clip_image043\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image043_thumb.png\" width=\"500\" height=\"360\" border=\"0\" /></a>\n\n이 대화 상자에서 계정, 구독, 지역 또는 인증서의 선택을 취소하여 서버 탐색기에서 연결된 리소스를 필터링할 수도 있습니다.\n\n참고: 로그인 기능의 또 다른 개선 사항은 인증서를 가져올 필요 없이 서버 탐색기에서 SQL 데이터베이스를 볼 수 있다는 점입니다. 이 특정 기능은 Visual Studio 2013 업데이트 4 사용할 수도 있습니다. Azure 계정에 로그인하고 서버 탐색기에서 SQL 데이터베이스를 보기만 하면 됩니다.\n<h1>연결된 서비스 추가</h1>\nVisual Studio 2015의 새 연결된 서비스 추가 대화 상자를 사용하면 애플리케이션을 Azure Storage, Azure Mobile Services, Office 365 및 Salesforce에 쉽게 연결할 수 있습니다. Single Sign-On을 Azure Active Directory 설정할 수도 있습니다.\n\nASP.NET 웹 애플리케이션에서 Azure Storage 연결을 추가하려면 참조 노드를 마우스 오른쪽 단추로 클릭하고 <b>연결된 서비스 추가를 선택합니다.</b>\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image045.jpg\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image045\" alt=\"clip_image045\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image045_thumb.jpg\" width=\"436\" height=\"379\" border=\"0\" /></a>\n\n연결된 서비스 추가 대화 상자의 서비스 공급자 목록에서 <b>Azure Storage</b> 선택하고 <b>구성</b>을 클릭합니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image047.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image047\" alt=\"clip_image047\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image047_thumb.png\" width=\"610\" height=\"400\" border=\"0\" /></a>\n\n후속 Azure Storage 대화 상자에는 다양한 구독에서 사용할 수 있는 스토리지 계정 목록이 표시됩니다. 기존 스토리지 계정을 선택하거나 새 스토리지 계정을 프로비전합니다. 계정을 선택한 후 <b>추가 </b>를 클릭하여 애플리케이션에서 해당 스토리지 계정에 연결합니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image049.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image049\" alt=\"clip_image049\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image049_thumb.png\" width=\"610\" height=\"419\" border=\"0\" /></a>\n\n대화 상자는 web.config 선택한 스토리지 계정에 대한 최신 Storage NuGet 패키지 및 연결 문자열을 사용하여 Azure Storage 참조를 추가합니다. 그런 다음 Azure Storage 사용하기 위한 다음 단계를 설명하는 시작 페이지가 표시됩니다. 솔루션 탐색기에서 <b>GettingStarted.html</b> 파일을 마우스 오른쪽 단추로 클릭하고 <b>브라우저에서 보기를</b> 선택하여 시작 페이지를 다시 방문합니다.\n\n연결된 서비스 추가 대화 상자에서 웃는 얼굴 보내기 아이콘을 클릭하여 피드백을 보냅니다. 피드백을 듣고 싶습니다.\n<h1>Single Sign-On Enterprise </h1>\n비즈니스 애플리케이션의 일반적인 작업은 Azure Active Directory 사용하여 엔터프라이즈 Single Sign-On에 대한 애플리케이션을 구성하는 것입니다. 이제 애플리케이션을 빌드하는 동안 애플리케이션을 마우스 오른쪽 단추로 클릭하고 <b>Azure AD 인증 구성</b>을 선택하여 이 작업을 쉽게 수행할 수 있습니다. 그러면 연결된 서비스 추가 환경과 유사한 마법사가 표시되어 Active Directory에서 작동하도록 애플리케이션을 구성하는 과정을 안내합니다. 마법사에서 Active Directory 도메인을 지정하면 해당 Active Directory에 애플리케이션이 등록되고 로그인하라는 메시지가 표시되도록 애플리케이션이 구성됩니다. 애플리케이션을 도메인에 등록하는 것은 개발 테스트 환경에서 시작하는 좋은 방법입니다. 애플리케이션의 수명 주기에서 한 환경에서 다음 환경으로 이동할 때 다른 도메인을 사용하도록 애플리케이션의 구성 파일을 쉽게 다시 구성할 수 있습니다. 이 기능에 <a href=\"https://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/411\" title=\"대한 자세한 내용은 Azure Active Directory 개요\">Azure Active Directory 개요</a> 비디오에서 확인할 수 있습니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/12/foo.png\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/foo-537x369.png\" alt=\"Configure Azure AD Authentication\" width=\"537\" height=\"369\" class=\"alignnone size-medium wp-image-219253\" style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" /></a>\n\n<h1>Azure용 Microsoft Code Analysis 미리 보기</h1>\nVisual Studio 2015 Preview의 .NET Compiler Platform 코드를 작성할 때 코드 문제를 실시간으로 감지하는 새로운 코드 분석 기능을 제공합니다. 이러한 기능을 활용하여 Microsoft Code Analysis for Azure NuGet 패키지를 통해 사용할 수 있는 Azure에 대한 작은 코드 분석 규칙 집합을 준비했습니다. 이러한 규칙은 코드의 문제를 식별하고 가능한 경우 자동 수정을 권장합니다.\n\n패키지를 설치하려면 솔루션을 마우스 오른쪽 단추로 클릭하고 <b>솔루션에 대한 NuGet 패키지 관리를 선택합니다.</b> <b>시험판 포함</b> 확인란이 선택되어 있는지 확인하고 <b>Azure Code Analysis</b> 검색합니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image051.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image051\" alt=\"clip_image051\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image051_thumb.png\" width=\"610\" height=\"96\" border=\"0\" /></a>\n\n<b>Microsoft.VisualStudio.Azure.CodeAnalysis</b> 패키지를 찾아야 합니다<b>.</b> 솔루션에서 프로젝트를 선택하고 <b>설치</b> 를 클릭하여 해당 프로젝트에 대한 코드 분석을 사용하도록 설정합니다. 분석기가 프로젝트에 추가되면 코드 분석이 항상 실행됩니다. 전체 솔루션에서 코드 분석을 실행하려면 솔루션을 빌드합니다. 소스 파일을 편집할 때 코드 분석 경고 또는 오류가 오류 목록에 자동으로 표시됩니다.\n\n코딩할 때 문제가 있는 줄에는 빨간색(오류의 경우) 또는 녹색(경고의 경우) 밑줄이 표시됩니다. 밑줄이 그은 코드 위로 마우스를 가져가서 자세한 정보를 가져옵니다. 문제 옆에 있는 전구를 클릭하여 수정에 대한 추가 세부 정보를 가져옵니다. 예를 들어 아래 스크린샷은 비동기로 선언되는 작업자 역할의 Run() 메서드에 대한 코드 문제를 보여 줍니다. 이는 작업자 역할에서 일부 비동기 작업을 수행할 수 있는 일반적인 시나리오입니다. 그러나 Run() 메서드 자체를 비동기로 선언하면 무한 루프에서 역할이 다시 시작됩니다. 문제를 감지하고 전구 메뉴를 통해 모든 비동기 작업을 다른 메서드로 이동하는 Run() 메서드를 리팩터링하는 자동 수정을 제공합니다.\n\n<b><a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/clip_image053.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"clip_image053\" alt=\"clip_image053\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image053_thumb.png\" width=\"610\" height=\"206\" border=\"0\" /></a></b>\n\n모든 코드 문제에 자동 수정이 있는 것은 아닙니다. 자동 수정을 제공할 수 없는 경우 전구 메뉴에서 문제를 해결하는 방법을 설명하는 설명서를 안내합니다.\n\nNuGet 패키지에 제공되는 코드 분석 규칙은 새 .NET 컴파일러에서 코드 분석 기능을 소개하도록 설계된 규칙의 초기 집합일 뿐입니다. 피드백을 받으면 더 많은 규칙을 제공하고 환경을 계속 반복합니다.\n<h1>ASP.NET 5.0 게시</h1>\n프로젝트를 마우스 오른쪽 단추로 클릭하고 게시를 선택하여 ASP.NET 5.0(vNext) 프로젝트를 <b>게시</b>할 수 있습니다. 이 릴리스의 새로운 기능으로 이제 미리 보기 탭이 활성화되어 업로드할 파일을 확인할 수 있습니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/11/09/Publish1.png\"><img style=\"padding-top: 0px;padding-left: 0px;padding-right: 0px;border-width: 0px\" title=\"Publish1\" alt=\"Publish1\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Publish1_thumb.png\" width=\"610\" height=\"479\" border=\"0\" /></a>\n<h1>요약</h1>\nAzure SDK 2.5 및 Visual Studio 2015 미리 보기를 사용하면 그 어느 때보다 쉽게 풍부한 클라우드 애플리케이션 개발을 시작할 수 있습니다. Azure Developer Center의 증가하는 .NET 개발자 리소스 집합과 함께 오늘날의 릴리스는 개발 환경을 더 즐겁고 효율적으로 만들어야 합니다. 이전 버전의 호환성이 손상되는 변경 내용 및 미리 보기 기능의 알려진 문제에 대한 자세한 내용은 <a href=\"https://msdn.microsoft.com/en-us/library/azure/dn873976.aspx\">Azure SDK 2.5 릴리스 정보를</a> 참조하세요.\n\nAzure 계정이 아직 없는 경우 무료 평가판에 등록하고 현재 위의 모든 기능을 사용할 수 있습니다. 그런 다음 <a href=\"https://azure.microsoft.com/en-us/develop/net/\">Azure 개발자 센터를</a> 방문하여 앱을 빌드하는 방법에 대해 자세히 알아볼 수 있습니다. SDK를 시작하는 방법에는 두 가지가 있습니다.\n<ul>\n <li><span style=\"text-decoration: underline\">로컬로 SDK 설치</span>: <a href=\"https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2013AzurePack.appids\">VS 2013VS</a> |  <a href=\"https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs11AzurePack.appids\">2012VS</a> |  <a href=\"https://www.microsoft.com/web/handlers/webpi.ashx/getinstaller/VWDOrVs2015AzurePack.appids\">2015 미리 보기</a>용 다운로드</li>\n <li><span style=\"text-decoration: underline\">Azure의 VM 이미지</span>: Azure SDK 2.5를 시작하는 가장 빠른 방법은 Azure Virtual Machine 갤러리에서 Azure SDK 2.5 또는 Visual Studio Community 2013에서 Visual Studio 2015 Preview용 이미지를 사용하는 것입니다. 이러한 두 이미지는 모두 모든 Azure 고객이 사용할 수 있습니다. MSDN 구독자인 경우 Visual Studio 업데이트 4 및 Azure SDK 2.5로 업데이트된 Windows 8.1 및 Windows Server 2012 기반으로 추가 Visual Studio 2013 이미지를 활용할 수도 있습니다.</li>\n</ul>\n<h1>크레딧</h1>\n<i>이 블로그 문서는 여러 사람의 공동 작업입니다. Saurabh Bhatia 및 Azure Cloud Tools 팀에 큰 감사드립니다.</i>"
