### YamlMime:Yaml
ms.openlocfilehash: 7a567ff13afe1c43fdf7677a9ed4652c28c9b8ef
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139897959"
Slug: leveraging-the-oms-search-api-in-an-azure-automation-runbook
Title: Azure Automation Runbook에서 OMS Search API 활용
Summary: OMS 검색 API를 사용하면 Azure Automation을 사용하여 경고, 알림 및 수정 시나리오를 사용할 수 있습니다. 샘플 및 지침은 이 블로그 게시물을 확인하세요!
Content: "<p><strong>업데이트 2016년 4월 5일:</strong> 이 블로그 게시물은 이제 <a href=\"https://blogs.technet.microsoft.com/privatecloud/2016/04/05/using-the-oms-search-api-with-native-powershell-cmdlets/\" target=\"_blank\">이</a>&nbsp; 블로그 게시물로 대체됩니다.</p>\n\n<p><strong>업데이트</strong>: Azure Automation용 PowerShell 모듈에 대한 후속 블로그 게시물은 <a href=\"https://azure.microsoft.com/blog/2015/08/11/powershell-module-for-the-oms-search-api/\">여기에서</a> 찾을 수 있습니다. <a href=\"https://azure.microsoft.com/en-us/documentation/articles/operational-insights-api-log-search/\" target=\"_blank\">OMS Search API</a> 의 가용성은 OMS( <a href=\"https://www.microsoft.com/oms\" target=\"_blank\">Operations Management Suite</a> )의 로그 분석 데이터를 기반으로 경고, 알림 및 잠재적 수정을 포함하는 자동화 시나리오를 사용하도록 설정했습니다. 이 블로그 게시물에서는 Azure Automation Runbook을 사용하여 <a href=\"https://en.wikipedia.org/wiki/Honeypot_(computing)\" target=\"_blank\">허니팟</a> 계정을 모니터링하는 샘플 시나리오에 대해 설명합니다. 이 Runbook은 누군가가 특정 서버에서 이 계정으로 로그온을 시도했는지 확인합니다. 허니팟 계정은 종종 악의적인 공격자가 모니터링이 설정되는 특정 계정을 사용하도록 유도하는 데 사용됩니다. 또한 온-프레미스 리소스를 활용할 뿐만 아니라 Azure Automation에 업로드할 PowerShell 모듈이 없을 때 발생할 수 있는 문제를 해결하기 위해 Hybrid Runbook Worker를 사용하는 방법도 살펴보겠습니다. Runbook은 OMS 검색 API와 통신하며 검색을 실행하거나 저장된 검색 결과를 검색할 수 있습니다. 쿼리 결과에 따라 수정 작업을 수행하거나 경고 및 알림 목적으로 다른 Runbook을 호출하도록 결정할 수 있습니다.&nbsp; 고객과의 대화 중에 OMS가 OMS 검색 쿼리 결과에 따라 작업을 수행하기 위해 유사한 System Center SCOM(Operations Manager) 작업 통합이 있는지 여러 번 물었습니다. 이 블로그 게시물을 통해 이러한 옵션을 탐색할 수 있습니다. 하지만 한 가지 지적할 점은 SCOM을 사용할 때 에이전트는 로컬에서 특정 조건이 true인지 확인하고 그에 따라 동작하지만, OMS 시나리오에서는 정보가 먼저 OMS로 전송되는 동안 인덱싱 및 분석되어 해당 데이터에 대해 쿼리할 수 있습니다. <a href=\"https://azure.microsoft.com/en-us/documentation/articles/operational-insights-api-log-search/\" target=\"_blank\">OMS Search API</a> 공지에서 설명한 대로 API를 활용하는 세 가지 옵션이 있습니다.</p>\n\n<ul>\n <li><a href=\"https://msdn.microsoft.com/library/azure/dn910477.aspx\" title=\".NET용 .NETLibrary\"> 라이브러리</a></li>\n <li><a href=\"https://msdn.microsoft.com/library/azure/mt163658.aspx\" title=\"REST APIREST\"> API</a></li>\n <li><a href=\"https://github.com/projectkudu/ARMClient\" title=\"ARMClientARMClient\"></a></li>\n</ul>\n\n<p>이 블로그 게시물에서 Im&rsquo;은 <a href=\"https://github.com/projectkudu/ARMClient\" target=\"_blank\">Github</a>에서 다운로드 할 수있는 <strong>ARMClient</strong>를 사용합니다. ARMClient는 실제로 PowerShell 모듈 &ldquo;로 그대로&rdquo; 사용하고 Azure Automation에 업로드할 수 없습니다. 그러나 Runbook이 로컬로 실행되므로 ARMClient와 같은 로컬 리소스에 액세스할 수 있으므로 이 문제를 해결할 수 있는 Azure Automation Hybrid Runbook Worker를 테스트할 수 있는 좋은 기회입니다.</p>\n\n<h2>좋아, 기본 사항을 설정하는 시간</h2>\n\n<p>그래서 우리는 이것을 가능하게하기 위해 무엇을해야합니까? 기본 사항:</p>\n\n<ul>\n <li>먼저 OMS 구독이 있어야 합니다. 아직 등록하지 않은&rsquo; 경우 <a href=\"https://www.microsoft.com/oms\" target=\"&quot;_blank\">여기에서</a> 무료 평가판을 신청하세요!</li>\n <li>검색 데이터를 제공하려면 OMS에 보고하는 OMS 에이전트가 있어야 합니다.</li>\n <li>OMS에서 사용자 지정 쿼리 만들기, 테스트 및 저장 및 데이터 반환 확인</li>\n <li>마지막으로 OMS Search API Runbook에 대한 Azure Automation 계정이 필요합니다.</li>\n</ul>\n\n<p>&nbsp; 이 블로그 게시물에서는 다음을 안내합니다.</p>\n\n<ul>\n <li>Hybrid Runbook Worker 설정</li>\n <li>ARM 클라이언트 설치</li>\n <li>OMS Search API Runbook 작성</li>\n <li>OMS에서 저장된 검색 만들기</li>\n <li>Azure Automation Runbook을 사용하여 Honeypot 계정 모니터링</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h3>1. Hybrid Runbook Worker 설정</h3>\n\n<p>Brian Wren은 Hybrid Runbook Worker를 설정 및 구성하는 방법에 대한 훌륭한 <a href=\"https://azure.microsoft.com/en-in/documentation/articles/automation-hybrid-runbook-worker/\" target=\"&quot;_blank\">게시물을</a> 작성했습니다. 설명된 대로 모든 OMS 에이전트를 활용하여 Hybrid Runbook Worker가 될 수 있습니다. OMS 에이전트 중 하나에 로그인하고 관리자 PowerShell 세션을 시작하고 다음을 입력합니다.</p>\n\n<blockquote>\n<pre class=\"prettyprint\">\nImport-Module HybridRegistration\nImport-Module &quot;C:Program Files\\Microsoft Monitoring Agent\\Agent\\AzureAutomationFiles\\HybridRegistration\\HybridRegistration.psd1&quot;\nAdd-HybridRunbookWorker &ndash;Name &lt;String&gt; -EndPoint &lt;Url&gt; -Token &lt;String&gt;</pre>\n</blockquote>\n\n<p>곧 Hybrid Runbook Worker가 Azure Automation 포털에 표시됩니다. <a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/20/Hybrid-runbook-shows-up.jpg\"><img alt=\"Hybrid runbook shows up\" border=\"0\" height=\"402\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Hybrid-runbook-shows-up_thumb.jpg\" style=\"border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"하이브리드 Runbook이 표시됩니다.\" width=\"332\"></a> &nbsp;</p>\n\n<h3>2. ARMClient 설치</h3>\n\n<p>ARMClient 설치의 경우 먼저 ChocolateyChocolatey\"></a>를 설치한 다음 ARMClienthere</a>에 설명<a href=\"https://github.com/projectkudu/ARMClient\" title=\"된 ARMClient\"> 패키지를 설치<a href=\"&quot;https://chocolatey.org/\" title=\"해야 합니다.</p>\n\n<blockquote>Chocolatey 설치를 실행 <strong><em>하기 전에</em></strong> <strong>시스템 변수를</strong> 업데이트하여 Azure Automation Runbook이 ARMClient를 찾아서 액세스할 수 있도록 Chocolatey가 설치될 위치를 제어해야 합니다.</blockquote>\n\n<p><a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/17/environment-variables.png\"><img alt=\"environment variables\" border=\"0\" height=\"377\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/environment-variables_thumb.png\" style=\"border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"환경 변수\" width=\"338\"></a> Automation Runbook에서 ARMClient를 사용하게 되므로 로그온할 필요가 없으므로 자동화에 더 친숙한 <strong>서비스 주체</strong> 를 사용합니다. 설정 및 구성은 여기에 설명되어 <a href=\"https://blog.davidebbo.com/2014/12/azure-service-principal.html\">있습니다</a>. 이 설정이 완료되면 먼저 Hybrid Runbook Worker에서 ARMClient PowerShell 스크립트를 로컬로 테스트하여 ARMClient가 OMS에 성공적으로 연결할 수 있는지 확인하는 것이 좋습니다. ARMClient를 사용하여 PowerShell 스크립트를 테스트하려면 다음 정보가 있어야 합니다.</p>\n\n<ul>\n <li>서비스 주체 정보: tenantID, 사용자 이름 및 암호</li>\n <li>Azure 구독 ID</li>\n <li>OMS 작업 영역 이름</li>\n <li>OMS 리소스 그룹 ID</li>\n</ul>\n\n<p>&nbsp; ARMClient를 성공적으로 설치한 후 Hybrid Runbook Worker에서 다음 PowerShell 스크립트를 실행하여 연결을 테스트할 수 있습니다.</p>\n\n<blockquote>\n<pre class=\"prettyprint\">\n$AzureSubscription = &quot;YourAzureSubscription&quot;\n$OMSResourceGroupId = &quot;YourOMSResourceGroupID&quot;\n$OMSWorkspaceName = &quot;YourOMSWorkspaceName&quot;\n\n#login with Service Principal, syntax armclient, spn(=TenantID), Username, Password\n$SPNforOMS = &quot;YourSPN&quot;\n$AzureUserNameForOMS = &quot;YourAzureUserNameForOMS&quot;\n$AzureUserPasswordForOMS = &quot;YourAzureUserNameForOMSPassword&quot;\n\narmclient spn $SPNforOMS $AzureUserNameForOMS $AzureUserPasswordForOMS\n\narmclient get /subscriptions/$AzureSubscription/resourceGroups/$OMSResourceGroupId/providers/Microsoft.OperationalInsights/workspaces?api-version=2015-03-20</pre>\n</blockquote>\n\n<pre class=\"prettyprint\">\n\n&nbsp;</pre>\n\n<p>이 PowerShell 스크립트를 실행하면 다음과 <a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/21/runbook-output.png\"><img alt=\"runbook output\" class=\"alignnone size-medium wp-image-325081\" height=\"175\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/runbook-output-636x175.png\" width=\"636\"></a> 같이 표시됩니다. <a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/21/Powershell.png\">&nbsp;</a></p>\n\n<h3>3. OMS Search API Runbook 작성</h3>\n\n<p>이제 Hybrid Runbook Worker에서 ARMClient를 설치하고 OMS 작업 영역에 대한 연결을 테스트하여 첫 번째 OMS Search API Runbook을 작성했습니다. ArmClient를 로컬로 테스트한 이전 단계&rsquo;와 실제로 유사한 여러 자산을 Azure Automation에 만들어야 합니다.</p>\n\n<blockquote>\n<table border=\"1\" cellpadding=\"2\" cellspacing=\"0\" width=\"597\">\n <tbody>\n  <tr>\n   <td valign=\"top\" width=\"136\"><strong>자산 유형</strong></td>\n   <td valign=\"top\" width=\"157\"><strong>이름</strong></td>\n   <td valign=\"top\" width=\"302\"><strong>설명</strong></td>\n  </tr>\n  <tr>\n   <td valign=\"top\" width=\"135\">자격 증명</td>\n   <td valign=\"top\" width=\"162\">AzureUserNameForOMS</td>\n   <td valign=\"top\" width=\"298\">OMS 사용자 이름 및 암호</td>\n  </tr>\n  <tr>\n   <td valign=\"top\" width=\"134\">변수</td>\n   <td valign=\"top\" width=\"167\">AzureSubscription</td>\n   <td valign=\"top\" width=\"295\">Azure 구독 ID</td>\n  </tr>\n  <tr>\n   <td valign=\"top\" width=\"133\">변수</td>\n   <td valign=\"top\" width=\"171\">OMSResourceGroupID</td>\n   <td valign=\"top\" width=\"293\">OMS 리소스 그룹 ID</td>\n  </tr>\n  <tr>\n   <td valign=\"top\" width=\"132\">변수</td>\n   <td valign=\"top\" width=\"174\">OMSWorkspaceName</td>\n   <td valign=\"top\" width=\"291\">OMS 작업 영역 이름</td>\n  </tr>\n  <tr>\n   <td valign=\"top\" width=\"132\">변수</td>\n   <td valign=\"top\" width=\"176\">SPNforOMS</td>\n   <td valign=\"top\" width=\"290\">OMS의 서비스 주체 이름</td>\n  </tr>\n </tbody>\n</table>\n</blockquote>\n\n<p>첫 번째 OMS Search API Runbook Im&rsquo;은 매개 변수(<strong>$query</strong>)로 전달할 수 있는 <strong>동적 검색 쿼리</strong>를 활용하고 시간 <strong>범위가 있는 시작/종료 날짜를</strong> 활용하여 결과를 제한합니다.</p>\n\n<blockquote>\n<pre class=\"prettyprint\">\nworkflow Invoke-OMSsearchQuery\n{\nparam\n (\n [Parameter(Mandatory=$false)]\n [string]$StartDate = &quot;2015-07-10&quot;,\n [Parameter(Mandatory=$false)]\n [string]$StartTime = &quot;09:00&quot;,\n [Parameter(Mandatory=$false)]\n [string]$EndDate = &quot;2015-07-15&quot;,\n [Parameter(Mandatory=$false)]\n [string]$EndTime = &quot;09:00&quot;,\n [Parameter(Mandatory=$false)]\n [string]$query = &quot;Type=SecurityEvent EventID=4625 | Measure Count() by TargetAccount&quot;\n )\n#Retrieve stored variables\n$AzureSubscription = Get-AutomationVariable -Name &#39;AzureSubscription&#39;\n$OMSWorkspaceName = Get-AutomationVariable -Name &#39;OMSWorkspaceName&#39;\n$OMSResourceGroupId = Get-AutomationVariable -Name &#39;OMSResourceGroupId&#39;\n\nWrite-Output &quot;Executing runbook on hybrid runbook worker: $env:ComputerName&quot;\n\n#login with a Service Principal, syntax armclient, spn(=TenantID), Username, Password\n$SPNforOMS = Get-AutomationVariable -Name &#39;SPNforOMS&#39;\n$cred = Get-AutomationPSCredential -Name &#39;AzureUserNameForOMS&#39;\n$null = ARMClient.exe spn $SPNforOMS $cred\n\n#Use a dynamic OMS search\n$QueryRange = $StartDate + &quot;T&quot; + $StartTime + &quot;:00.231Z&#39;,&#39;end&#39;:&#39;&quot; + $EndDate + &quot;T&quot; + $EndTime + &quot;:00.231Z&#39;&quot;\n$query = &quot;{&#39;query&#39;:&#39;$query&#39;,&#39;start&#39;:&#39;$QueryRange}&quot;\n$json = armclient post /subscriptions/$AzureSubscription/resourceGroups/$OMSResourceGroupId/providers/Microsoft.OperationalInsights/workspaces/$OMSWorkspaceName/search?api-version=2015-03-20 $query | ConvertFrom-Json\n$queryResults = $json.value\nWrite-Output &quot;**** Executing query**_ &quot; $query\nWrite-Output &quot;Query results: &quot; $queryResults\n}</pre>\n</blockquote>\n\n<p>&rsquo;Runbook을 게시하고 Hybrid Runbook Worker에서 실행합니다. 재부팅되었거나 종료된 컴퓨터를 반환하는 다음 쿼리를 사용합니다.</p>\n\n<blockquote><strong>형식: </strong> 이벤트 종료 EventLog:System NOT (Source:Microsoft-Windows-WAS)<strong> 원본: </strong>User32<strong>&nbsp; EventID: </strong>1074 | 컴퓨터별 측정값 개수()</blockquote>\n\n<p><a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/17/startRunbook.png\"><img alt=\"startRunbook\" border=\"0\" height=\"423\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/startRunbook_thumb.png\" style=\"border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"startRunbook\" width=\"207\"></a> 쿼리 결과를 적절하게 다시 가져옵니다. <a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/21/Output.png\"><img alt=\"Output\" border=\"0\" height=\"641\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Output_thumb.png\" style=\"border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"출력\" width=\"952\"></a></p>\n\n<h3>4. OMS에서 저장된 검색 만들기</h3>\n\n<p>허니팟 계정 Runbook은 <strong>저장된 OMS 검색</strong>을 활용합니다. 이렇게 하면 범위가 제한되고 정확한 검색이 있을 뿐만 아니라 구문 오류도 방지됩니다. OMS에서 검색을 저장하려면 <strong>로그 검색</strong> 기능을 사용하여 검색을 실행하고 테스트하기만 하면 됩니다. Im&rsquo;은 검색 범위를 WHDVM1 컴퓨터 1&rdquo;로만 &ldquo;축소합니다.<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/17/oms-saved-query.png\"><img alt=\"oms saved query\" border=\"0\" height=\"249\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/oms-saved-query_thumb.png\" style=\"border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"oms 저장된 쿼리\" width=\"499\"></a> <strong>저장</strong> 선택 및 <strong>이름</strong> 및 <strong>범주 </strong>제공(최종 Runbook의 뒷부분에서 사용) <a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/17/oms-save-query.png\"><img alt=\"oms save query\" border=\"0\" height=\"323\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/oms-save-query_thumb.png\" style=\"border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"oms 쿼리 저장\" width=\"369\"></a></p>\n\n<h3>5. Azure Automation을 사용하여 Honeypot 계정 모니터링</h3>\n\n<p>&rsquo;이제 <strong>저장된 OMS 쿼리</strong>를 사용하여 모니터링하는 Runbook을 작성하고 허니팟 계정이 특정 서버(예: 도메인 컨트롤러)에 로그온하는 데 사용되었을 때 알려주는 모든 필수 구성 요소를 설정하고 테스트했습니다. 저장된 검색을 관심 있는 특정 서버로 축소했으므로 Runbook에서 계정을 필터링하는 간단한 논리만 빌드하면 됩니다. 물론 OMS에서도 전체 및 잠긴 저장된 쿼리를 활용할 수 있었습니다. 알림 파트의 경우 <strong>Send-AlertNotification</strong> Runbook에 저장된 <strong>Send-MailMessage</strong> PowerShell cmdlet을 활용합니다.</p>\n\n<blockquote>\n<pre class=\"prettyprint\">\nworkflow Send-AlertNotification\n{\n param (\n  [Parameter(Mandatory=$true)] [string]$BodyText,\n  [Parameter(Mandatory=$true)] [string]$Subject\n )\n $Cred = Get-AutomationPSCredential -Name &#39;EmailCredentials&#39;\n Send-MailMessage `\n -From &quot;OMS Alerts &lt;FromEmail@outlook.com&gt;&quot; `\n -Subject $Subject `\n -To &quot;XWING Alerts &lt;ToEmail@outlook.com&gt;&quot; `\n -Body $BodyText `\n -SmtpServer &quot;smtp.live.com&quot; `\n -Credential $Cred `\n -UseSsl\n}</pre>\n</blockquote>\n\n<p>&nbsp;<strong>Send-AlertNotification</strong> Runbook은 전자 메일 계정에 저장된 자격 증명을 사용합니다.</p>\n\n<table border=\"1\" cellpadding=\"2\" cellspacing=\"0\" width=\"597\">\n <tbody>\n  <tr>\n   <td valign=\"top\" width=\"136\"><strong>자산 유형</strong></td>\n   <td valign=\"top\" width=\"157\"><strong>이름</strong></td>\n   <td valign=\"top\" width=\"302\"><strong>설명</strong></td>\n  </tr>\n  <tr>\n   <td valign=\"top\" width=\"135\">자격 증명</td>\n   <td valign=\"top\" width=\"162\">EmailCredentials</td>\n   <td valign=\"top\" width=\"298\">전자 메일 이름 및 암호</td>\n  </tr>\n </tbody>\n</table>\n\n<p>마지막 Azure Automation Runbook <strong>Check-OMSHoneyPotLogon</strong> 에서 모든 부분이 함께 제공됩니다. 아래에는 OMS 저장된 검색(<strong>$SavedSearchName</strong>)이 있으며 <strong>, $BodyText</strong> 변수는 전자 메일 본문을 구성하고 마지막으로 <strong>Send-AlertNotification</strong> Runbook을 호출합니다.</p>\n\n<blockquote>\n<pre class=\"prettyprint\">\nworkflow Check-OMSHoneyPotLogon\n{\nparam\n (\n  [Parameter(Mandatory=$false)]\n   [string]$StartDate = &quot;2015-07-16&quot;,\n  [Parameter(Mandatory=$false)]\n   [string]$StartTime = &quot;09:00&quot;,\n  [Parameter(Mandatory=$false)]\n   [string]$EndDate = &quot;2015-07-17&quot;,\n  [Parameter(Mandatory=$false)]\n   [string]$EndTime = &quot;17:00&quot;,\n  [Parameter(Mandatory=$false)]\n   [string]$SavedSearchName = &quot;honeypot|honeypot logon&quot;,\n  [Parameter(Mandatory=$false)]\n  [boolean]$Alert = $false\n )\n#Retrieve stored variables\n$AzureSubscription = Get-AutomationVariable -Name &#39;AzureSubscription&#39;\n$OMSWorkspaceName = Get-AutomationVariable -Name &#39;OMSWorkspaceName&#39;\n$OMSResourceGroupId = Get-AutomationVariable -Name &#39;OMSResourceGroupId&#39;\n \nWrite-Output &quot;Executing runbook on hybrid runbook worker: $env:ComputerName&quot;\n#login with a Service Principal, syntax armclient, spn(=TenantID), Username, Password\n$SPNforOMS = Get-AutomationVariable -Name &#39;SPNforOMS&#39;\n$cred = Get-AutomationPSCredential -Name &#39;AzureUserNameForOMS&#39;\n$null = ARMClient.exe spn $SPNforOMS $cred\n\n#Use a saved search\n$OMSsavedSearch = armclient get /subscriptions/$AzureSubscription/resourceGroups/$OMSResourceGroupId/providers/Microsoft.OperationalInsights/workspaces/$OMSWorkspaceName/savedSearches/&quot;$SavedSearchName&quot;?api-version=2015-03-20\n$query = $OMSsavedSearch | ConvertFrom-Json\n$query = $query.properties.Query\nWrite-Output &quot;Retrieved Query: $SavedSearchName&quot;\n$QueryRange = $StartDate + &quot;T&quot; + $StartTime + &quot;:00.231Z&#39;,&#39;end&#39;:&#39;&quot; + $EndDate + &quot;T&quot; + $EndTime + &quot;:00.231Z&#39;&quot;\n$query = &quot;{&#39;query&#39;:&#39;$query&#39;,&#39;start&#39;:&#39;$QueryRange}&quot;\n$json = armclient post /subscriptions/$AzureSubscription/resourceGroups/$OMSResourceGroupId/providers/Microsoft.OperationalInsights/workspaces/$OMSWorkspaceName/search?api-version=2014-10-10 $query | ConvertFrom-Json\nWrite-Output &quot;_*** Executing query*** &quot; $query\n\n#Check our Honeypot Account\n$Accounts = $json.value.targetusername\nforeach ($Account in $Accounts)\n {\n          if($Account -eq &quot;LocalAdmin&quot;)\n          {\n     $Alert = $true\n     $AccountName = $Account\n    }\n } \n\nif($Alert -eq $true)\n {\n  Write-Output &quot;Raising Alert! Logon attempt found for account: $AccountName&quot;\n$BodyText = @&quot;\nLogon attempt detected for account:\n$AccountName\n&quot;@\n\n#Invoking Send-AlertNotification runbook\nWrite-Output &quot;Sending email...&quot;\nSend-AlertNotification `\n  -Subject &quot;Logon attempt detected for account $AccountName&quot; `\n  -BodyText $BodyText\n }\n}</pre>\n</blockquote>\n\n<p>&rsquo;Hybrid Runbook Worker에서 Runbook을 시작하고 출력을 살펴보겠습니다.<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/21/Hybrid-Runbook.png\"><img alt=\"Hybrid Runbook\" border=\"0\" height=\"334\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Hybrid-Runbook_thumb.png\" style=\"border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"Hybrid Runbook\" width=\"883\"></a> 및 전자 메일은 다음과 같습니다. <a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/20/Email-alert-sent.jpg\"><img alt=\"Email alert sent\" border=\"0\" height=\"236\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Email-alert-sent_thumb.jpg\" style=\"border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;\" title=\"보낸 전자 메일 경고\" width=\"505\"></a></p>\n\n<h3>결론</h3>\n\n<p>OMS Search API가 출시되면서 OMS 분석 데이터를 기반으로 다양한 자동화 시나리오를 사용할 수 있게 되었습니다. 이 블로그 게시물의 솔루션 샘플은 OMS에 연결하고 OMS에서 풍부한 분석 데이터를 활용하는 간단한 예제일 뿐입니다. 행복한 자동화!</p>"
