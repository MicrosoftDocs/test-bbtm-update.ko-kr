### YamlMime:Yaml
ms.openlocfilehash: a982741a64583737b92534dc88129670a581c400
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139906762"
Slug: hot-patching-sql-server-engine-in-azure-sql-database
Title: Azure SQL Database 핫 패치 SQL Server 엔진
Summary: 클라우드 데이터베이스 서비스의 세계에서는 데이터에 중단 없이 액세스하는 것보다 고객에게 더 중요한 것은 거의 없습니다. 높은 트랜잭션 속도를 경험하는 온라인 게임 및 금융 서비스와 같은 산업에서 가장 작은 중단조차도 최종 사용자의 경험에 잠재적으로 영향을 미칠 수 있습니다.
Content: >-
  <p>클라우드 데이터베이스 서비스의 세계에서는 데이터에 중단 없이 액세스하는 것보다 고객에게 더 중요한 것은 거의 없습니다. 높은 트랜잭션 속도를 경험하는 온라인 게임 및 금융 서비스와 같은 산업에서 가장 작은 중단조차도 최종 사용자&rsquo; 환경에 잠재적으로 영향을 미칠 수 있습니다. Azure SQL Database 항상 최신 버전의 SQL 엔진을 사용하지만 이 상록 상태를 유지하려면 데이터베이스를 오프라인으로 전환할 수 있는 서비스에 대한 주기적인 업데이트가 필요합니다. 이러한 이유로 엔지니어링 팀은 워크로드 중단을 줄이는 혁신적인 기술 개선 작업을 지속적으로 진행하고 있습니다.</p>


  <p>오늘&rsquo; 게시물은 Visual C++ 컴파일러 팀과 공동으로 워크로드에 영향을 주지 않고 SQL Server 엔진을 패치하는 방법을 설명합니다.<br>

  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/95afd15f-e32b-4a73-9a14-a430b7e0fde0.png"><img alt="A diagram showing the details of how hot patching works." src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7ae6ad19-6dca-456e-b6dd-21137cacc933.png" style="border: 0px currentcolor; margin-right: auto; margin-left: auto; display: block; background-image: none; width: 900px; height: 556px;" title="740 블로그"></a></p>


  <p style="text-align: center;"><em>그림 1 &ndash; 핫 패치는 커버 아래에 표시됩니다. 낮은 수준의 세부 정보에 관심이 있는 경우&rsquo; <a href="https://techcommunity.microsoft.com/t5/Azure-SQL-Database/Hot-Patching-SQL-Server-Engine-in-Azure-SQL-Database/ba-p/849700" target="_blank">기술 블로그 게시물을</a> 참조하세요.</em></p>


  <h2>문제점</h2>


  <p>Azure SQL Database 실행하는 SQL 엔진은 고객이 자체 서버에서 실행하는 것과 동일한 엔진의 최신 버전입니다. 단, 관리 및 업데이트가 있습니다. SQL Server 또는 기본 인프라(예: <a href="https://azure.microsoft.com/en-us/services/service-fabric/" target="_blank">Azure Service Fabric</a> 또는 운영 체제)를 업데이트하려면 SQL Server 프로세스를 중지해야 합니다. 해당 프로세스가 주 데이터베이스 복제본을 호스트하는 경우 장애 조치(failover)가 필요한 다른 컴퓨터로 복제본을 이동합니다.</p>


  <p>장애 조치(failover) 중에 데이터베이스가 1초 동안 오프라인 상태일 수 있으며 여전히 99.995% SLA를 충족할 수 있습니다. 그러나 주 복제본의 장애 조치(failover)는 실행 중인 쿼리 및 트랜잭션을 중단하기 때문에 워크로드에 영향을 줍니다. 이러한 상황을 해결하기 위해 <a href="https://docs.microsoft.com/en-us/sql/relational-databases/indexes/guidelines-for-online-index-operations?view=sql-server-2017" target="_blank">다시 시작 가능한 인덱스(re)빌드</a> 및 <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-accelerated-database-recovery" target="_blank">가속 데이터베이스 복구</a> 와 같은 기능을 빌드했지만 실행 중인 모든 작업이 자동으로 다시 시작되는 것은 아닙니다. 업그레이드로 인해 중단된 복잡한 쿼리 또는 트랜잭션을 다시 시작하는 데 비용이 많이 들 수 있습니다. 따라서 장애 조치(failover)가 빠르더라도 해당 장애 조치(failover)를 방지하려고 합니다.</p>


  <p>SQL Server 및 전체 Azure 플랫폼은 플랫폼 가용성 및 안정성에 상당한 엔지니어링 노력을 투자합니다. SQL 데이터베이스에는 모든 데이터베이스의 <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-high-availability" target="_blank">여러 복제본이 있습니다</a>. 업그레이드하는 동안 핫 대기를 즉시 인계할 수 있는지 확인합니다.</p>


  <p>Weve&rsquo;는 광범위한 Azure 및 Service Fabric 팀과 긴밀히 협력하여 장애 조치(failover) 횟수를 최소화했습니다. 업그레이드를 위해 데이터베이스를 처음 장애 조치(failover)하기로 결정한 경우 OS, Service Fabric 및 SQL Server 스택의 모든 구성 요소에 업데이트를 동시에 적용합니다. Azure 지역의&rsquo; 핵심 업무 시간 동안 배포를 방지하는 자동 일정 예약이 있습니다. 장애 조치(failover) 직전에 활성 트랜잭션을 드레이닝하여 중단을 방지하려고 합니다. 데이터베이스 워크로드 패턴을 활용하여 워크로드에 가장 적합한 시간에 장애 조치(failover)를 수행합니다.</p>


  <p>이 모든 경우에도 SQL 엔진을 새 버전으로 업데이트하려면 프로세스를 다시 시작하고 데이터베이스&rsquo; 주 복제본을 한 번 이상 장애 조치(failover)해야 한다는 사실에서 벗어나지 않습니다&rsquo;. 아니면 우리는?</p>


  <h2>핫 패치 및 결과</h2>


  <p><a href="https://en.wikipedia.org/wiki/Patch_(computing)#Hot_patching" target="_blank">핫 패치</a> 는 프로세스를 다시 시작하지 않고 실행 중인 프로세스에서 메모리 내 코드를 수정합니다. 이 경우 sqlservr.exe 다시 시작하지 않고 SQL Engine에서 C++ 코드를 수정하는 기능을 제공합니다. 다시 시작하지 않으므로&rsquo; 주 복제본을 장애 조치(failover)하고 워크로드를 중단하지 않습니다&rsquo;. 패치하는 동안 SQL Server 작업을 일시 중지할 필요도&#39;. 핫 패치는 물론 패치 페이로드 이외의 사용자 워크로드에서 눈에 띄지 않습니다!</p>


  <p>핫 패치는 기존의 업그레이드를 대체하지 않으며 업그레이드를 &ndash; 다시 시작하면 보완됩니다. 핫 패치에는 현재 주요 새 기능이 도입되는 경우와 같이 많은 변경 내용이 있는 경우 적합하지 않은 제한 사항이 있습니다. 그러나 더 작고 타겟팅된 변경에 적합합니다. 일반적인 SQL 버그 수정의 80% 이상이 핫 패치가 가능합니다. 핫 패치의 이점은 다음과 같습니다.</p>


  <ul>
   <li><strong>워크로드 중단</strong>&nbsp; 감소 - 다시 시작하지 않음은 데이터베이스 장애 조치(failover)가 없고 워크로드에 영향을 주지 않음을 의미합니다.</li>
   <li><strong>더 빠른 버그 수정</strong>&nbsp; - 이전에는 버그 수정의 긴급성과 배포 시 고객 워크로드에 미치는 영향에 대해 검토했습니다. 워크로드 영향으로 인해 전 세계 출시에 버그 수정이 중요하지 않은 경우가 있습니다. 핫 패치를 사용하면 이제 전 세계적으로 버그 수정을 즉시 배포할 수 있습니다.</li>
   <li>더 빨리 &nbsp; <strong>사용할 수 있는 기능</strong> - 하루에 여러 번 실행되는 500,000개 이상의 기능 테스트와 모든 새로운 기능에 대한 철저한 테스트를 통해 고객이 새로운 기능을 사용할 수 있게 된 후 문제를 발견할 수 있습니다. 이러한 경우 기능을 사용하지 않도록 설정하거나 예약된 다음 전체 업그레이드까지 라이브 이동을 지연해야 할 수 있습니다. 핫 패치를 사용하면 문제를 해결하고 기능을 더 빨리 사용할 수 있습니다.</li>
  </ul>


  <p>우리는 2018 년에 생산에서 첫 번째 핫 패치를했습니다. 그 이후로 매월 수백만 개의 SQL 서버를 핫 패치했습니다. 핫 패치는 SQL Database 배송 속도를 50% 증가시키는 동시에 가용성을 향상합니다.</p>


  <h2>핫 패치 작동 방식</h2>


  <p>기술적으로 관심이 있는 경우 <a href="https://techcommunity.microsoft.com/t5/Azure-SQL-Database/Hot-Patching-SQL-Server-Engine-in-Azure-SQL-Database/ba-p/849700" target="_blank">기술 블로그 게시물을</a> 참조하여 핫 패치가 커버 아래에서 작동하는 방식에 대한 자세한 설명을 확인하세요. 섹션 3에서 읽기를 시작합니다.</p>


  <h2>단어 닫기 및 다음 단계</h2>


  <p>이 기능을 사용하면 이제 도구를 개선하고 제한 사항을 제거하여 빠른 처리로 더 많은 변경 내용을 핫 패치할 수 있도록 하기 위해 노력하고 있습니다. 지금은 핫 패치는 Azure SQL Database만 사용할 수 있지만 언젠가는 SQL Server 수도 있습니다. 관심이 있다면 알려주세요 <a href="mailto:SQLDBArchitects@microsoft.com" target="_blank">SQLDBArchitects@microsoft.com</a> .</p>


  <p>우리가 작업하는 멋진 기술에 대한 자세한 내용을 보려면 아래의 의견과 질문을 남기거나 위의 전자 메일에 문의하십시오.</p>
