### YamlMime:Yaml
ms.openlocfilehash: 583874a4ca1fa752612575de4cc8994f4affe113
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139907543"
Slug: thought-leaders-in-the-cloud-talking-with-jonathan-ellis-co-founder-of-riptano
Title: '클라우드의 사고 리더: 립타노의 Co-Founder 조나단 엘리스와 이야기'
Summary: Jonathan Ellis는 Apache Software Foundation의 Cassandra 프로젝트의 의장이며 Cassandra에 대한 소프트웨어, 지원 및 교육을 제공하는 상업 법인인 Riptano의 공동 창립자입니다. 이전...
Content: "<p><a target=\"_blank\" href=\"\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6406.face2.png\" border=\"0\" style=\"float: right;\"></a>Jonathan Ellis는 Apache Software Foundation의 Cassandra 프로젝트의 의장이며 Cassandra에 대한 소프트웨어, 지원 및 교육을 제공하는 상업 법인인 Riptano의 공동 창립자입니다. 2010년 봄 Riptano가 설립되기 전에 Jonathan은 Rackspace의 시스템 설계자였으며, 그 전에는 <a target=\"_blank\" href=\"https://mozy.com/\">Mozy</a>에서 대규모 스토리지 시스템을 설계하고 구축했습니다.</p>  <p>이 인터뷰에서는 다음을 다룹니다.</p>  <ul>  <li><strong>Cassandra 분산 데이터베이스, 원래 페이스 북에 의해 개발</strong></li>  <li><strong>클라우드의 중요한 이점 지연된 용량 계획</strong></li>  <li><strong>Cassandra와 같은 데이터베이스 이전에는 Web 2.0 선조가 NoSQL 방식으로 SQL 데이터베이스를 사용하여 중단되었습니다.</strong></li>  <li><strong>관계형 및 분산 데이터베이스를 사용하여 크기 조정에 대한 논란 및 옵션</strong></li>  <li><strong>레딧과 디그와 같은 카산드라로 이동하려는 유명인사 시도</strong></li>  <li><strong>Cassandra의 미래를 위해 저장되는 기능</strong></li>  </ul>  <p><span style=\"font-size: small;\"><span style=\"font-family: Times;\"><o:p></o:p></span><span style=\"font-family: Symbol;\"></span></span></p>  <ul class=\"unIndentedList\">  </ul>  <p><strong>로버트 더프너:</strong> 조나단, 당신은 자신과 카산드라 Project 소개하고, Cassandra의 상단에 <a target=\"_blank\" href=\"\">Riptano</a>가 제공하는 것을 설명하는 데 잠시 걸릴 수 있습니까?</p>  <p><strong>조나단 엘리스:</strong> 확실. 저는 올해 초 Apache 인큐베이터를 졸업하고 최상위 프로젝트가 된 Apache Cassandra의 프로젝트 의장입니다. 우리는 Riptano, Rackspace, Twitter, Digg의 기여자와 커밋자 및 프로젝트에 패치를 기여한 오픈 소스 커뮤니티에 100 명 이상의 긴 꼬리를 가지고 있습니다. </p>  <p>Cassandra에서 작업을 시작했을 때 Rackspace에 있었기 때문에 오픈 소스 성공 스토리입니다. Rackspace는 클라우드에 배포하는 고객을 돕기 위해 분산 데이터베이스가 필요하다는 것을 알고 있었고, Rackspace는 내부적으로 이러한 종류의 규모에 대한 필요성이 있을 만큼 충분히 커지고 있기 때문입니다.</p>  <p>페이스 북은 2008 년 7 월에 Cassandra에 소스를 발표, 나는 정말 그것을 집어 랙 스페이스에서 그것으로 실행. 다른 회사들은 Digg와 Twitter와 함께 가장 초기의 몇 가지 회사로 참여했으며, 전체가 부품의 합보다 커졌습니다.</p>  <p>페이스 북이 오픈 소스 때, 그것은 매우 유망한 기초를 했다, 하지만 그것은 그들의 사용 사례를 처리 하기 위해 특별히 설계 되었다 분명 했다. 오픈 소스가 된 후 훨씬 더 강력한 솔루션이 되었습니다.</p>  <p>저는 4월에 Matt Pfeil과 함께 Riptano를 시작하여 카산드라 주변의 상업적 지원과 서비스를 제공했습니다. 우리는 우리가 현재 제공하고있는 지원과 서비스를 보완 할 Ripcord라는 Cassandra에 대한 성능 제품군의 베타를 가지고하려고합니다.</p>  <p><strong>로버트:</strong> 분산 데이터베이스는 클라우드의 기본 요소입니다. 구글은 BigTable을 개발하고, 아마존은 SimpleDB를 개발하고, Microsoft는 Azure Table Storage 개발했으며, 페이스 북은 궁극적으로 Cassandra가된 것을 개발했습니다. 이러한 유형의 분산 비관계형 스토리지가 클라우드 개발에 매우 중요한 이유를 Windows Azure 커뮤니티에 알려줄 수 있나요?</p>  <p><strong>조나단:</strong> 나는 몇 가지 이유가 있다고 생각합니다. 첫째, 사람들이 클라우드에 배포할 때 필요에 따라 크기를 조정하는 기능에 익숙해지고 있습니다. 일부 API 요청 호출만 수행하고 용량이 50% 더 높습니다. 기존 데이터베이스는 그렇게 작동하지 않습니다. </p>  <p>이 크기 조정 기능은 클라우드가 이륙하는 이유 중 일부입니다. 사람들은 마지막 순간까지 용량 계획을 연기할 수 있으며 해당 스위치를 돌릴 수 있기 때문에 안전할 것이라는 것을 알 수 있습니다.</p>  <p>기존 데이터베이스는 요청 시 확장할 수 없습니다. 확장에 대한 두 가지 방법이 있습니다. 즉, 배포할 비용이 점점 더 많은 플랫폼을 구입하여 수직 크기 조정을 수행하거나 분할, 가로 및 수직 분할을 통해 임시 크기 조정을 수행합니다.</p>  <p>이 방법의 문제는 이것이 분할 전략이라고 결정하면 성능의 다음 순서로 이동하는 것이 어렵다는 것입니다. 또한 각 애플리케이션에 대해 매우 일회성입니다. 이베이는 2002년에 Sun이 Oracle을 실행하기 위해 판매할 수 있는 가장 큰 서버를 능가하기 때문에 이 접근 방식을 개척하여 수십 대의 컴퓨터를 분할했습니다.</p>  <p>그들은 8 년 동안 그 기술을 가지고 있었지만, 오픈 소스로 원하더라도 이러한 종류의 솔루션이 본질적으로 애플리케이션 투명하지 않고 한 가지 사용 사례와 매우 밀접하게 연결되어 있기 때문에 다른 인프라에 유용하게 적용 할 수 없습니다.</p>  <p><strong>로버트:</strong> 이러한 기술이 지원하는 스토리지의 규모에 충격을 받았습니까? 플리커(Flickr)는 매분 3,000장의 사진을 업로드하고, Facebook은 21페타바이트 데이터 저장소에 하루 12테라바이트 단위로 무언가를 추가합니다. 사용자가 생성한 콘텐츠 사이트에서 저장한 데이터가 상상할 수 없을 정도로 클 수 있다는 사실을 처음 알게 된 때는 언제인가요?</p>  <p><strong>조나단:</strong> Cassandra에서 작업을 시작하기 전에 내 배경은 Mozy라는 백업 회사를 위해 페타바이트 규모의 스토리지 시스템을 구축하는 것이었기 때문에 그 아이디어에 익숙했습니다.</p>  <p>하지만 구조화되지 않은 데이터를 처리하고 있지만 데이터베이스를 사용하려면 대기 시간이 짧고 변동성이 낮아야 하므로 여러 가지 면에서 더 쉬운 문제입니다. 물론 짧은 대기 시간처럼 S3을 사용하는 사용자도 예상하는 크기가 데이터베이스에서 응답할 것으로 예상하는 것과는 다른 순서입니다.</p>  <p><a target=\"_blank\" href=\"\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4747.cassa.png\" border=\"0\" style=\"float: left;\"></a>카산드라는 느슨하게 NoSQL 운동이라는 용어의 일부입니다. 대부분의 경우 사람들이 NoSQL 데이터베이스를 생각할 때 비관계형 데이터 저장소라고 할 수 있는 Hadoop 및 HTFS와 같이 대기 시간이 매우 낮은 구조화된 데이터를 대상으로 하는 것을 의미합니다. 구조화되지 않은 데이터를 처리하는 것일 뿐이며 데이터베이스보다 분산 파일 시스템에 더 가까운 것입니다.</p>  <p><strong>로버트:</strong> 분명히, 페이스 북은 여전히 MySQL을 사용하지만, 그들은 본질적으로 NoSQL 방식으로 사용하고 있습니다.</p>  <p><strong>조나단:</strong> 오른쪽, 페이스 북의 인프라의 많은 Cassandra에 그들의 작품을 선행, 그리고 그것은 트위터에서 비슷한 이야기. 이베이는 오라클을 사용하고 있으며, NoSQL 방식으로도 매우 많이 사용하고 있습니다. 이러한 프로젝트가 오늘 시작되었다면 다른 결정을 내릴 것이라고 생각하지만, 투자를 하고 문제를 다림질했기 때문에 전환할 동기가 낮습니다.</p>  <p>Cassandra의 프로젝트 의장으로서, 나는 카산드라 전도사의 조금이지만, 나는 그것에 대해 독단적이지 않다. 성숙한 CTO가 되는 과정의 일부는 새로운 프로젝트에 대해 Cassandra를 매우 신중하게 평가하는 것이 합리적이지만 엔지니어가 모든 프로젝트에 대해 새로운 반짝이는 것을 쫓는 것을 막는 것입니다. Cassandra는 레거시 데이터에 대해 5년 전과 동일한 접근 방식을 취하는 대신 새 애플리케이션을 위한 확장 가능한 인프라를 보유하는 목표를 달성할 수 있습니다.</p>  <p><strong>로버트:</strong> 저는 종종 새로운 Azure 고객에게 클라우드에서 SQL 저장소를 사용하는 시기에 대해 이야기합니다. Google은 로드맵에 관계형 데이터베이스를 SQL, SQL Azure 보유하고 있으며, Amazon은 <a target=\"_blank\" href=\"https://blog.programmableweb.com/2009/10/28/amazon-launches-rds-a-relational-database-in-the-cloud-service/\">관계형 데이터베이스 서비스를</a> 제공합니다. 많은 사람들이 MySQL이든 다른 것이든 간에 기존 RDBMS를 Amazon EC2에 로드합니다.</p>  <p>그러나 일부 시나리오에서는 여전히 관계형 스토리지가 필요한 것 같습니다. 주로 레거시 애플리케이션을 지원하거나 새로운 클라우드 개발을 위해 지원한다고 보나요, 아니면 관계형 데이터베이스가 클라우드 컨텍스트에서 여전히 중요하다고 생각하십니까?</p>  <p><strong>조나단:</strong> 관계형 데이터베이스가 중요하게 유지될 것이라고 생각합니다. 그들은 몇 가지 중요한 문제를 해결하고, 그들 주위에 도구의 매우 풍부한 생태계가있다, 이는 낮은 시장에 시간을 유지. 나는 Cassandra가 SQL Server 같은 것으로 시작한 다음 더 큰 기계를 구입하는 유리한 가격 / 성능이 더 이상 존재하지 않는 지점에 도달 한 회사에 특히 매력적이라고 생각합니다. 규모에 대한 압력으로 느끼는 고통은 Cassandra와 같은 새로운 기술을 배우는 고통보다 큽니다.</p>  <p>나는 지난 달 JavaOne에서 Cassandra에 대해 말했고, 청중의 3 분의 2는 가까운 장래에 데이터 요구가 더 이상 단일 컴퓨터에 맞지 않을 것이라고 말했습니다. 기존의 관계형 데이터베이스는 옵션이 아니며, 이 시점에서 Oracle RAC 및 SAN 기반 솔루션 또는 Exadata와 같은 항목을 살펴볼 수 있습니다. 이 두 가지 모두 수백만 달러에서 시작하거나 Cassandra와 같은 분산 시스템을 탐색하기 시작할 수 있습니다.</p>  <p>따라서 관계형 데이터베이스를 사용하는 사람들은 주로 크기 조정 측면 때문에 때로는 안정성 측면에서 Cassandra로 이동하려고 합니다. Cassandra는 <a target=\"_blank\" href=\"https://blog.reddit.com/2010/07/your-gold-dollars-at-work.html\">하나 이상의 데이터 센터가 실패</a> 하고 클라이언트가 다른 데이터 센터에 액세스해야 하는 경우를 준비하는 측면에서 여러 데이터 센터를 매우 잘 처리합니다.</p>  <p>질문으로 돌아가려면 일부 애플리케이션이 특성 때문에 관계형 데이터베이스에 적합하다고 생각합니다. 문제의 특성이 제한된 문제 도메인, 제한된 양의 데이터, 초당 제한된 수의 쿼리 또는 관계형 기능을 사용할 만큼 중요하기 때문에 크기 조정은 문제가 되지 않습니다.</p>  <p>어떤 경우에는 엑사다타와 같은 문제에 돈을 던질 가치가 있다고 생각합니다. 나는 JP 모건 체이스 때문에 오라클 복제가 손상되고, 그래서 그들은 백업에서 복원했다 때문에 몇 주 전에 중단이 있었다 같은 상황의 관점에서 생각하고 있어요.</p>  <p>나는 내부 정보가 없지만, 내가 읽은 내용에서, 이것은 기본적으로 모든 것에 대한 데이터베이스이기 때문에 복잡했습니다. 관계형 데이터베이스를 범용 리포지토리로 사용하는 것을 점점 더 많이 보게 될 것입니다.</p>  <p>사람들은 복잡성이 낮고 총 소유 비용이 낮으며 안정성이 높아서 Cassandra에 적합한 데이터를 시스템에 배치하는 것이 좋은 이유라는 것을 깨닫게 될 것입니다. 이렇게 하면 상대적으로 작은 코어에서 관계형 스토리지를 잘하는 것으로 되돌릴 수 있습니다.</p>  <p><strong>로버트:</strong> 다시 1 월에 2008, 제목 아래 데이비드 드위트와 마이클 <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Michael_Stonebraker\">스톤 브라커</a>에 의해 작성 된 블로그 게시물이 있었다, \"MapReduce: 거꾸로 주요 단계.\" 그들은 새로운 것이 아니라 잘 알려진 기술의 특정 구현으로 최적이 아닌 하위 구현으로 특징 지어 줍니다. 그들은 또한 DBS 사용자가 의존하게 된 모든 도구와 호환되지 않는다고 말했습니다.</p>  <p>반면, GigaOM의 최근 보고서에 따르면 현재 RDBMS에 저장된 <a target=\"_blank\" href=\"https://gigaom.com/2010/07/12/nosql-pioneers-are-driving-the-webs-manifest-destiny/\">데이터의 15%에서 40% 사이</a> 가 Cassandra와 같은 비관계형 플랫폼에 더 적합할 것입니다. 기존 관계형 데이터 시스템과 NoSQL 중심 DB 모델 간의 관계가 시간이 지남에 따라 어떻게 진화할 것이라고 생각하십니까?</p>  <p><strong>조나단:</strong> 이것은 많은 사람들에게 혼란의 지점입니다. 나는 관계형 데이터베이스가 확장되지 않는다고 여러 번 말한 반면 스톤 브라커는 \"글쎄, 버티카는 잘 스케일링, 대단히 감사합니다.\" 차이점은 Vertica, Teradata 및 Greenplum과 같은 항목은 분석 데이터베이스를 통해 관계형 모델을 제공하므로 대기 시간이 매우 긴 쿼리 볼륨이 낮다는 것입니다. 데이터는 시스템에 자주 대량 로드되지만 초당 수천 또는 수백만 개의 요청 속도로 사용자 요청에 응답하지 않습니다.</p>  <p>따라서 Stonebraker가 MapReduce 관계형에 대해 이야기할 때 분석의 맥락에서 말하고 있습니다. 솔직히, 스톤 브라커는 자신의 상업 벤처를위한 플랫폼으로 데이터베이스 세계의 원로 정치가로 자신의 위치를 사용하는 역사를 가지고있다.</p>  <p>이 경우, MapReduce 솔직히 지금 마음 공유의 관점에서 자신의 회사 버티카의 엉덩이를 걷어 차고있다, 나는 그것이 그 기사의 동기를 부여 생각합니다. 이러한 마인드셰어 관계는 Hadoop에게 특히 그렇습니다. Hadoop HTFS는 구조화되지 않은 스토리지 솔루션에 더 가까우지만 대기 시간에 별로 신경 쓰지 않는 분석에 적합합니다.</p>  <p>즉, 내가 이전에 언급 한 무언가로 돌아갑니다 : 어떤 사람들은 NoSQL에 Hadoop을 덩어리, 하지만 당신은 낮은 대기 시간 및 초당 요청의 수백만에 대한 요구 사항 OLTP 또는 트랜잭션 처리에 대해 얘기하는 경우, 그 Hadoop 같은 것을 포함하지 않을 것이다.</p>  <p>그러나 최신 NoSQL 데이터베이스 중 일부는 OLTP 중심 제품에 분석 기능을 통합하기 시작했습니다. 예를 들어 Cassandra는 1월에 Cassandra에 있는 데이터에 대해 Hadoop 작업을 실행하기 위한 지원을 추가했습니다.</p>  <p>오래 전에 데이터베이스 환경에서 시작한 경우 라이브 애플리케이션을 실행하는 데이터베이스 컴퓨터가 하나 있었을 때와 분석 쿼리를 실행한 슬레이브가 있었던 시절을 기억합니다. 동일한 시스템입니다. 당신은 내보내기와 부하를 할 필요가 없습니다, 그것은 당신의 ops 팀에 대한 인생을 정말 즐거운합니다.</p>  <p>잠시 동안, 당신은 그렇게 할 수 없습니다. 동일한 종류의 시스템에서 둘 다 수행할 수 없으므로 분석 데이터를 Vertica와 같은 항목 또는 별도의 Hadoop 클러스터에 로드하여 분석 쿼리를 수행해야 했습니다.</p>  <p>따라서 Cassandra를 사용하여 Cassandra 클러스터에 대해 라이브 애플리케이션을 실행하고 Hadoop 쿼리를 실행하기 위해 데이터를 여러 노드에 복제하여 두 워크로드가 서로 간섭하지 않도록 할 수 있습니다. 사람들은 당신이 단일 시스템에서 그렇게 할 수있는 그 이야기를 정말 좋아합니다.</p>  <p><strong>로버트:</strong> 그것은 정말 작업에 대 한 올바른 도구를 선택의 기본 문제에 온다, 그리고 난 단지 데이터베이스로 MapReduce 보고 잘못 된 인상을 생성 생각. 내가 그 초기 게시에 본 의견 중 하나는 작업에 대 한 올바른 도구를 선택 생각 하는 경우, MapReduce 기본적으로 매우 큰 데이터 집합을 처리 하는 컴퓨터를 많이 사용 하 여 메커니즘.</p>  <p>Digg가 Cassandra를 구현하는 데 <a target=\"_blank\" href=\"https://www.datacenterknowledge.com/archives/2010/09/08/digg-downtime-debacle-debated/\">있어 겪은 어려움</a> 에 대한 최근 논의가 있었으며, 10일 만에 초기 마이그레이션이 완료된 레딧의 Cassandra <a target=\"_blank\" href=\"https://blog.reddit.com/2010/03/she-who-entangles-men.html\">로의 성공적인 이동</a> 과 Digg의 노력을 비교하는 데 도움이 되었습니다.</p>  <p>조직에서 이러한 유형의 스토리지를 성공적으로 처리하기 위해 해결해야 한다고 생각하는 핵심 관심사 또는 변경 사항 중 일부는 무엇이라고 생각하십니까?</p>  <p><strong>조나단:</strong> 우선, 케빈 로즈가 카산드라를 디그의 문제에 대한 약간의 희생양으로 만들었다고 생각합니다. Quora 토론에서, Digg 엔지니어의 몇 가지가 나와서 Cassandra가 가진 문제에 대한 책임이 없다고 말했습니다. </p>  <p>외부에서 보면 Digg가 한 번에 너무 많이 변경하려고 시도한 것처럼 보였는데, 이는 이전 시스템을 버리고 새로운 syst m에 넣을 때 고전적인 운영 위험 신호입니다. 그들의 방어에서, 나는 그들이 새로운 애플리케이션 디자인을 가진 새로운 데이터베이스로 이동하고 있기 때문에, 그렇지 않으면 그것을 할 수있는 방법을 확실하지 않다, 그러나 당신이 그런 전환을 할 때 항상 위험이있다.</p>  <p>대조적으로, 레딧이 만든 변화는 훨씬 간단했다. 애플리케이션은 동일하게 유지되었으며 캐싱 계층을 MemcacheDB에서 Cassandra로 변경했습니다. 특히 Cassandra와 같은 새로운 기술을 사용하면 증분 접근 방식을 제어하는 것이 확실히 더 쉽습니다.</p>  <p>디그 녀석들은 대부분 통제불능의 완벽한 폭풍에 맞은 것 같은 느낌이 들기 때문에 기분이 좋지 않습니다. 그들은 6 월에 Cassandra 자체의 파일럿을했다, 나는 생각, '09, 그들은 그것으로 경험을 얻기 위해 카산드라에 자신의 v3 사이트의 일부를 이식. 그들이 모든 것을 올바르게 한 것 같지만, 머피의 법칙은 어쨌든 그들을 얻었다.</p>  <p><strong>로버트:</strong> 실제로. 과거에는 Cassandra가 잃을 여유가 있는 데이터를 위한 <a target=\"_blank\" href=\"https://spyced.blogspot.com/2010/04/cassandra-fact-vs-fiction.html\">허구</a> 라고 말했습니다. 몇 달 전에 블로그에 게시하게 된 원인을 확장할 수 있나요?</p>  <p><strong>조나단:</strong> 사람들은 Cassandra뿐만 아니라 모든 최신 NoSQL 데이터베이스를 브러시로 칠하는 경향이 있습니다. 그 뒤에 진실의 커널은 많은 NoSQL 데이터베이스는 단순히 내구성에 관심이 없다는 것입니다. 즉, 내 데이터베이스에 업데이트 요청을 보내면 데이터베이스가 이를 승인하고 데이터베이스가 전원을 잃고 다시 온라인 상태가 되면 해당 업데이트가 실제로 존재할 수도 있고 그렇지 않을 수도 있습니다.</p>  <p>많은 NoSQL 데이터베이스가 내구성을 제공하지 않는다는 사실은 부분적으로 구현하기 어려운 기능이기 때문이며, 이를 무시하면 더 높은 성능을 얻을 수 있기 때문입니다. 그럼에도 불구하고 Cassandra는 내구성을 제공하며 로그 기반 스토리지 특성은 한 번 작성된 Cassandra 데이터 파일이 제자리에서 업데이트되지 않는다는 것을 의미합니다. 더 이상 필요하지 않고 Cassandra에 의해 가비지 수집될 때까지 변경할 수 없습니다. 따라서 실제로 제자리에 덮어쓰는 기존 시스템보다 내부적으로 더 안전한 디자인입니다.</p>  <p><strong>로버트:</strong> 그 해명 주셔서 감사합니다. 기어를 조금 이동하고 오픈 소스 프로젝트와 그들과 제휴 상업 엔터티 사이의 관계에 대해 이야기하고 싶습니다. 마음에 오는 한 가지 문제는, 예를 들어, 사람들은 때때로 순전히 지역 사회 지향보다 정식 우선 전략의 더 많은 추구와 일반적으로 마크 셔틀 워스와 정식 리더십을 비난한다는 것입니다.</p>  <p>나는 IBM에 있을 때 내부에서 비슷한 상황을 경험하고 우리는 우리가 Apache Geronimo의 주요 기여자를 인수하는 Gluecode를 인수했다. IBM의 동기에 대해서도 많은 질문이 있습니다. Cassandra 커뮤니티가 Riptano 주변에 있을 수 있는 이러한 유형의 우려를 탐색하는 것에 대해 어떻게 생각하세요?</p>  <p><strong>조나단:</strong> 가장 먼저 고려해야 할 것은 Cassandra 자체에 대한 모든 변경 사항과 개선 사항이 오픈 소스 프로젝트와 Apache Foundation으로 돌아가는 것입니다. 프로젝트에 대한 우리의 커밋자는 Apache와 기여자 라이선스 계약에 서명했기 때문에 그런 점에서 문제가 없습니다. </p>  <p>나는 사람들이 그것을보고 우리가 모두를 위해 윈 - 윈을 만들기 위해 노력하고 있다는 것을 깨닫게 될 것이라고 생각합니다. 나는 우리가 충분히 성공하면, 어떤 사람들은 우리가하는 일에 화가 될 것이라는 점을 의심하지 않으며, 우리는 그것이 나올 때 그것을 처리해야합니다. 예를 들어 Red Hat과 같은 선의의 회사가 있더라도 어떤 사람들은 자신이 하는 일에 화가 났고, 나는 그것이 영토와 함께 온다고 생각합니다.</p>  <p><strong>로버트:</strong> 나는 확실히 그 분야에서 도전의 공정한 몫을 했다, 하지만 난 회사 엔터티와 오픈 소스 프로젝트 사이 매우 건강 한 관계가 있을 수 있습니다 믿습니다., MySQL 및 OpenOffice 커뮤니티와 오라클의 이동 방향 같은 경우에도 불구 하 고.</p>  <p><strong>조나단:</strong> 일부 회사는 다른 회사보다 더 나은 작업을 수행했으며 이러한 예제를 따르려고 노력하고 있습니다.</p>  <p><strong>로버트:</strong> <a target=\"_blank\" href=\"https://news.ycombinator.com/item?id=1502756\">해커 뉴스 스레드</a> 의 최근 코멘트는 트위터가 자신의 데이터 저장소로 Cassandra와 함께 앞으로 이동하지 않은 이유는 단순히 그들이 모든 데이터를 마이그레이션하는 데 걸리는 시간이었다 제안했다. 그래도 트위터가 오늘 깨끗한 슬레이트에서 시작할 수 있다면, 나는 그들이 카산드라와 함께 갈 것이라고 생각합니다. 그것이 참된 진술이라고 생각하십니까?</p>  <p><strong>조나단:</strong> 나는 그들이 오늘 처음부터 시작했다면 트위터가 실제로 카산드라를 사용할 것이라고 공정한 가정이라고 생각합니다. 데이터 마이그레이션에 대한 시간 요구 사항에 대한 언급이 기억나고, 정확하지 않다고 생각합니다. 기본적으로 이러한 상황에서는 애플리케이션이 Cassandra와 기존 데이터 저장소 모두에 대한 권한을 수행하기 시작합니다. 그런 다음 이전 데이터 집합으로 Cassandra를 채웁니다.</p>  <p>시간이 좀 걸릴 것이지만, 그들이 어떻게 해야 할지 알고 있는 것입니다. 라이언 킹은 자신의 블로그뿐만 아니라 이것에 대해 Quora에 게시했습니다. 그를 의역하기 위해, 그것은 내가 이미 작동하는 시스템을 수정하는 데 시간을 소비하지 않도록하는 CTO의 책임 중 하나에 대해 말한 것으로 돌아갑니다.</p>  <p>그들은 충분히 잘 작동하는 시스템을 가지고 있으며, 이미 작동하는 것을 이동하는 것보다 리소스가 Cassandra의 지리적 위치와 같은 최신 프로젝트를 수행하는 데 더 잘 쓰일 것이라는 것을 올바르게 깨달았습니다.</p>  <p><strong>로버트:</strong> 우리는 우리의 시간의 끝에 점점, 그래서 마무리, 카산드라의 미래에 대한 당신의 생각은 무엇입니까, 당신은 카산드라와 Riptano가 지원하기 위해 진화 볼 수있는 몇 가지 시나리오 또는 기능은 무엇입니까?</p>  <p><strong>조나단:</strong> 우리는 정말 흥미 진진한 Cassandra의 우리의 0.7 버전을 출시하려고합니다. 0.7에서 지난 1년 반 정도 동안 수행해 온 몇 가지 문제를 해결하기 위해 이전 릴리스보다 더 오래 걸렸습니다. 우리는 적어도 다음 해에 대한 이전 버전과의 호환성을 보장하기 위해 돌아갈 수 있도록 한 릴리스에서 모든 비호환성을 없애고 싶었습니다.</p>  <p>흥미로운 기능 중 하나는 보조 인덱스 지원입니다. Cassandra는 행 내에 여러 열을 포함할 수 있으므로 행을 구체화된 뷰로 사용할 수 있으므로 정확히 키-값 데이터베이스가 된 적이 없습니다. 매우 큰 행을 가질 수 있으며 더 복잡한 쿼리에 응답할 수 있습니다. 행 키로 데이터에 액세스한 다음 해당 행의 일부 하위 집합을 요청할 수 있습니다.</p>  <p>예를 들어 보조 인덱스는 사용자 테이블이 있고 1976년에 태어난 사용자를 표시하려는 경우 Cassandra에게 생년월일 열에 인덱스를 작성하도록 지시하고 해당 쿼리를 지원하기 위해 데이터 구조를 빌드하도록 할 수 있는 경우를 지원합니다. 이는 사람들이 익숙한 풍부한 쿼리 지원의 종류에 훨씬 더 가까워지고, 이는 진입 장벽을 훨씬 낮출 것입니다.</p>  <p><strong>로버트:</strong> Windows Azure 고객 및 개발자 커뮤니티에 Cassandra 및 Riptano에 대한 의견을 들을 수 있는 기회를 제공해 주셔서 감사합니다.</p>  <p><strong>조나단:</strong> 감사합니다.</p>  <p><iframe scrolling=\"no\" frameborder=\"0\" src=\"https://www.facebook.com/plugins/like.php?href=;layout=box_count&amp;show_faces=false&amp;width=300&amp;action=like&amp;font=segoe+ui&amp;colorscheme=light&amp;height=50\" style=\"width: 300px; height: 50px; overflow: hidden;\"></iframe><br><a data-url=\"\" data-count=\"horizontal\" data-via=\"Windowsazure\" href=\"https://twitter.com/share\" class=\"twitter-share-button\">짹짹</a>  <script src=\"https://platform.twitter.com/widgets.js\" type=\"text/javascript\"></script>  <d--></d--><d--></d--></p>"
