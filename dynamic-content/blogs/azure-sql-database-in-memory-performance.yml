### YamlMime:Yaml
ms.openlocfilehash: c0b9f2ed5a6e6cc7c7bf3b8c2f1b095503da4b41
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139903038"
Slug: azure-sql-database-in-memory-performance
Title: Microsoft Azure SQL Database In-Memory 기술로 탁월한 성능을 제공합니다.
Summary: In-Memory 기술은 이제 Azure SQL Database 일반 공급되어 트랜잭션 처리, 분석 및 하이브리드 트랜잭션 및 분석 워크로드(HTAP)의 성능을 최적화합니다.
Content: >-
  <p>Azure SQL Database 기본 제공 In-Memory 기술은 이제 Premium 풀을 포함한 Premium 데이터베이스 계층에 일반 공급됩니다. 메모리 내 기술은 OLTP(트랜잭션), 분석(OLAP) 및 혼합 워크로드(HTAP)의 성능을 최적화하는 데 도움이 됩니다. 이러한 기술을 사용하면 주문 처리(<b>11배 성능 증가</b>)를 위해 <b>초당 75,000개 트랜잭션</b>을 Azure SQL Database &ndash; 놀라운 성능을 달성하고 쿼리 실행 시간을 15초에서 0.26(<b>57X perf</b>)으로 줄일 수 있습니다<i>.</i> 또한 P2 데이터베이스에서 추가 비용 없이 In-Memory 기술을 구현하여 트랜잭션에 대한 9X 성능 증가 또는 분석 쿼리에 대한 10배 성능 향상을 얻는 비용을 &ndash; 절감할 수도 있습니다. 이러한 성능 및 비용 절감 결과에 대한 자세한 내용은 아래를 참조하세요.</p>


  <ul>
   <li><b>메모리 내 OLTP </b>는 처리량을 늘리고 트랜잭션 처리 대기 시간을 줄입니다. 거래 및 게임과 같은 시나리오는 실제로 성능 이점을 볼 수 있습니다. 또 다른 일반적인 시나리오는 이벤트 또는 IoT 디바이스에서 데이터 수집입니다. 캐싱, 데이터 로드, 임시 테이블 및 테이블 변수 시나리오의 속도를 높이기 위해 사용할 수도 있습니다.</li>
   <li><b>클러스터형</b> <b>Columnstore 인덱스는 </b>스토리지 공간(최대 10배)을 줄이고 보고 및 분석 쿼리의 성능을 향상시킵니다. 데이터베이스에 있는 더 많은 데이터에 적합한 데이터 마트에서 팩트 테이블과 함께 이 기능을 사용하여 성능을 향상시킵니다. 운영 데이터베이스에 있는 기록 데이터와 함께 이 기능을 사용하여 최대 10배 더 많은 데이터를 보관하고 쿼리할 수 있습니다.</li>
   <li><b>HTAP(하이브리드 트랜잭션 및 분석 처리)</b>&nbsp;용 비클러스터형 Columnstore 인덱스는 비용이 많이 드는 ETL 프로세스를 실행하고 데이터 웨어하우스가 채워질 때까지 기다릴 필요 없이 운영 데이터베이스를 직접 쿼리하여 비즈니스에 대한 <b>실시간 인사이트를</b> 얻습니다. 비클러스터형 Columnstore 인덱스를 사용하면 OLTP 데이터베이스에서 분석 쿼리를 매우 빠르게 실행하는 동시에 운영 워크로드에 미치는 영향을 줄일 수 있습니다.</li>
   <li>메모리 내 OLTP 및 Columnstore는 결합될 수도 있음: columnstore 인덱스를 포함한 메모리 최적화 테이블이 있을 수 있으며 이를 통해 트랜잭션 처리를 매우 빠르게 수행하고 동일한 데이터에 대한 분석 쿼리를 실행할 수 있습니다.</li>
  </ul>


  <p>Quorum Business Solutions는 Microsoft Azure 실행되는 석유 및 가스 산업의 현장 운영을 위한 혁신적인 SaaS(Software as a Service) 솔루션을 제공합니다. In-Memory OLTP를 통해 더 많은 데이터베이스 처리량에 더 많은 지출을 하지 않고도 새 고객을 온보딩하고 훨씬 더 큰 규모의 조직을 지원함으로써 비즈니스를 성장시킬 수 있었습니다.</p>


  <blockquote>

  <p><b><img alt="clip_image002" border="0" height="55" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ba3287ae-18d6-4978-940c-5b50fbb1b372.jpg" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="" width="174"></b> <i>&ldquo;clip_image002 확장 가능한 성능은 24/7/365를 실행해야 하는 석유 및 가스용 IoT 플랫폼에서 매우 중요합니다.&nbsp; 몇 가지 주요 작업을 위해 Azure SQL Database In-Memory OLTP 테이블과 네이티브 컴파일 저장 프로시저를 추가하면 전체 DTU 사용량이 즉시 70% 감소했습니다.&nbsp; 메모리 내 테이블이 없으면 성능을 유지하기 위해 플랫폼의 여러 영역에 상당한 노력이 필요했을 것입니다.&nbsp; 데이터 중심 서비스의 경우 메모리 내 지원은 데이터베이스 외부에서 거의 또는 전혀 변경되지 않고 기존 애플리케이션에 즉시 규모를 제공합니다.&rdquo; </i><i>Mark Freydl, 솔루션 설계자, 쿼럼 비즈니스 솔루션</i>&nbsp;</p>


  <p>Azure SQL Database 쿼럼 비즈니스 솔루션&rsquo; 사용 및 In-Memory OLTP에서 볼 수 있는 이점에 대한 자세한 내용은 이 <a href="https://aka.ms/quorumcasestudy">사례 연구를</a> 참조하세요.</p>

  </blockquote>


  <p>Spotlight는 고객&rsquo; 데이터 센터 및 클라우드에서 SQL Server 배포 모니터링을 위해 Quest에서 제공하는 솔루션입니다. In-Memory OLTP를 활용하여 Quests&rsquo; 고객이 환경의 잠재적인 문제에 대해 매우 빠르게 학습할 수 있도록 요청 및 이벤트 처리 속도를 향상합니다.</p>


  <blockquote>

  <p><i><img alt="quest-logo" border="0" height="42" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/095495b7-d911-46f3-9d63-9de13c7a27df.png" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="quest-logoQuests" width="156">&ldquo;&rsquo; 고객은 스포트라이트를 사용하여 SQL Server 환경의 문제에 대해 적시에 알릴 수 있습니다. Quest는 Azure SQL Database In-Memory OLTP를 사용하여 추천 기능을 신속하게 빌드하고 고객에게 제공할 수 있는 강력한 기반을 제공합니다. In-Memory OLTP를 사용하면 처리량이 매우 높고 T-SQL &ndash; 기반으로 유연하고 잘 이해되는 프로그래밍 모델의 모든 유용성을 얻을 수 있으므로 스포트라이트 고객에게 고품질 환경을 매우 신속하게 제공할 수 있습니다.&rdquo; Patrick OKeeffe&rsquo;, executive</i> <i>디렉터, 소프트웨어 엔지니어링(정보 관리)</i></p>

  </blockquote>


  <p>M-Files는 정보 사일로를 제거하고 핵심 비즈니스 시스템 및 디바이스에서 올바른 콘텐츠에 빠르고 쉽게 액세스할 수 있는 엔터프라이즈 정보 관리 솔루션을 제공합니다. 비클러스터형 columnstore 인덱스를 사용하면 문서 데이터에 대해 매우 빠른 분석 쿼리를 실행할 수 있으므로 M-Files&rsquo; 고객은 인사이트를 얻고 정보를 훨씬 더 빠르게 찾을 수 있습니다.</p>


  <blockquote>

  <p><img alt="clip_image006" border="0" height="44" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6124ebbe-d55b-4f98-a939-8dd1a12b376b.jpg" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="clip_image006" width="146">&ndash;<i>&ldquo;빠른 분석 쿼리와 온라인 트랜잭션은 M-Files 구현에서 중요한 성공 요소입니다. Azure SQL Database 및 2016년 Microsoft SQL Server 업데이트할 수 있는 비클러스터형 columnstore 인덱스를 추가하면 온라인 트랜잭션 처리에 상당한 성능 비용 없이 중요한 워크로드에서 10배 이상의 빠른 쿼리를 달성할 수 있습니다. 이 변경으로 인해 애플리케이션의 코드 변경이 필요하지 않았으며, 온-프레미스 클라이언트와 Azure의 M-Files Cloud Vault 사용자에게 즉각적인 성능 향상을 제공했습니다.&rdquo; Antti Nivala, 설립자 및 CTO</i></p>

  </blockquote>


  <h2>성능 및 비용 절감 혜택</h2>


  <p>In-Memory OLTP 및 Columnstore 인덱스 모두 CPU 및 IO와 같은 리소스를 보다 효율적으로 활용하여 각각의 성능 이점을 얻을 수 있습니다. 각 Azure SQL Database 가격 책정 계층에는 할당된 특정 양의 리소스가 있습니다. In-Memory 기술은 리소스 효율이 높기 때문에 가격 책정 계층을 늘리지 않고도 성능 향상을 달성할 수 있습니다. 반대로 데이터베이스에서 In-Memory 기술을 채택할 때 더 낮은 가격 책정 계층으로 동일한 성능 수준을 달성할 수 있습니다.</p>


  <p>Azure SQL Database <b>메모리 내 OLTP</b>에 대한 일부 성능 결과:</p>


  <ul>
   <li>P15(쓰기 시 가장 높은 계층)의 <a href="https://github.com/Microsoft/sql-server-samples/tree/master/samples/features/in-memory/benchmark-order-processing">주문 처리 벤치마크</a>(배율 계수 100, 클라이언트 400개): In-Memory OLTP를 사용하는 초당 트랜잭션 수(TPS)는 <b>75,000</b>개이며, 기존 테이블 및 저장 프로시저가 있는 6,800TPS와 비교하여 In-Memory OLTP를 사용한 <b>11배 성능 향상</b>으로 이어집니다.</li>
   <li>또한 성능 계층이 낮을 경우 인상적인 결과가 표시됩니다. 워크로드가 동일한 P2의 경우(배율 5, 클라이언트 200개 포함): 1,000개에 비해 In-Memory OLTP를 사용하는 TPS는 8,900TPS입니다.</li>
   <li>기존 TVP(테이블 반환 매개 변수)를 메모리 최적화 TVP로 바꿔서 30~40% 성능 향상: <a href="https://blogs.msdn.microsoft.com/sqlserverstorageengine/2016/04/07/a-technical-case-study-high-speed-iot-data-ingestion-using-in-memory-oltp-in-azure/">Azure에서 In-Memory OLTP를 사용하여 고속 IoT 데이터 수집</a></li>
  </ul>


  <p><a href="https://azure.microsoft.com/documentation/articles/sql-database-in-memory/#b-install-the-in-memory-analytics-sample">이 페이지의</a> 샘플을 사용하여 <b>Columnstore</b> 인덱스에 대한 성능 결과:</p>


  <ul>
   <li>P15 데이터베이스(작성 당시 가장 높은 성능 계층)를 사용하여 쿼리는 Columnstore에서 0.26초 만에 실행되지만 페이지 압축과 함께 기존 인덱스를 사용할 때는 15초 만에 실행됩니다. 이는 <b>58X</b>의 성능 향상으로 이어집니다!</li>
   <li>가격 책정 계층이 낮더라도 P1 데이터베이스를 사용하는 경우 쿼리는 Columnstore에서 4.8초 안에 실행되는 반면, 페이지 압축과 함께 기존 인덱스를 사용하여 27초 안에 실행됩니다. 가격 책정 계층을 늘리지 않고도 5.6배의 성능 향상!</li>
  </ul>


  <h2>현재 Azure SQL Database In-Memory 기술 사용해 보기</h2>


  <p>Azure SQL Database In-Memory 기술에 대한 자세한 내용, 시작하는 방법에 대한 팁 및 샘플은 <a href="https://aka.ms/sqldbinmem">SQL In-Memory 설명서를 참조하세요</a>.</p>


  <p>&nbsp;</p>


  <p><i>향후 몇 주 동안 개별 In-Memory 기술에 대한 자세한 내용은 이 블로그를 계속 시청하세요!</i></p>
