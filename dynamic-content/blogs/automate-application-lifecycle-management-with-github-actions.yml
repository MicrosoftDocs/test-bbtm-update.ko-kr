### YamlMime:Yaml
ms.openlocfilehash: f378c77fabdfeb08522085b0b2012ee44cf65d87
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139901430"
Slug: automate-application-lifecycle-management-with-github-actions
Title: GitHub Actions를 사용하여 애플리케이션 수명 주기 관리 자동화
Summary: '2021년에는 매월 Azure 솔루션의 LCAD(Low-code Application Development)에 대한 월의 웨비나를 다루는 월간 블로그를 공개할 예정입니다. '
Content: >-
  <p>2021년에는 매월 Azure 솔루션의 LCAD(Low-code Application Development)에 대한 월의 웨비나를 다루는 월간 블로그를 공개할 예정입니다. Azure의 LCAD는 저코드 Microsoft Power Apps 및 익숙한 Azure 제품을 통합하는 강력한 개발 기능을 보여 주는 새로운 솔루션입니다.&nbsp;</p>


  <p>이번 달&rsquo; 웨비나에서는 &lsquo;<a href="https://info.microsoft.com/ww-ondemand-develop-test-and-deliver-applications-with-github-actions-for-power-platform.html?lcid=en-us" target="_blank">GitHub 작업 및 Power Apps 사용하여 ALM(애플리케이션 수명 주기 관리) 프로세스를 개발</a>합니다.&rsquo; 이 블로그&nbsp;에서는 웹 세미나 및 사용 사례에서 가장 널리 사용되는 세 가지 제품인 Azure의 LCAD가 무엇인지 강조 표시하고 웹 세미나&#39;콘텐츠에 대해 자세히 알아볼 수 있는 지원 설명서를 제공합니다.&nbsp;</p>


  <h2>Azure에서 LCAD(로우 코드 애플리케이션 개발)란?</h2>


  <p>Azure에서 LCAD(하위 코드 애플리케이션 개발)는 개발자가 더 적은 코드로 비즈니스 애플리케이션을 더 빠르게 빌드하고, Power Platform을 활용하고, 특히 Power Apps Azure 서비스에서 Power Apps&mdash; 확장하고 확장할 수 있도록 지원하도록 만들어졌습니다.&nbsp;</p>


  <p>예를 들어 제조 회사에서 일하는 프로 개발자는 웨어하우스 직원이 들어오는 인벤토리를 추적할 수 있도록 LOB(기간 업무) 애플리케이션을&nbsp; 빌드해야 합니다. 해당 애플리케이션을 빌드, 테스트 및 배포하는 데 몇 달이 걸리지만 Power Apps&nbsp; 빌드하는 데 몇 시간이 걸릴 수 있으므로 시간&nbsp; 및 리소스를 절약할 수 있습니다.</p>


  <p>그러나 현재 재고가 낮게 결정되면 웨어하우스 직원은 애플리케이션이 추가 재고에 대한 조달 주문을 자동으로 배치하기를 원한다고 말합니다&nbsp;. 과거에는 개발 팀이 이전 애플리케이션 반복을 다시 작업하기 위해 또 다른 무거운 리프트가 필요합니다. Power Apps 및 Azure의 통합으로 인해 전문 개발자는 VS(Visual Studio) 코드에서 API를 빌드하고, Azure Portal에 게시하고, API를 Power Apps 내보내서 애플리케이션에 사용자 지정 커넥터로 통합할 수 있습니다. 그 후 Power Apps 스튜디오에서 동일한 API를 무기한&rsquo; 재사용할 수 있으며, 나중에 다른 애플리케이션&mdash;과 함께 사용하면 회사와 개발자가 더 많은 시간과 리소스를 사용할 수 있습니다.&nbsp;</p>


  <p>이는 Azure 솔루션에서 LCAD의 기능을 강조하는 한 가지 시나리오일 뿐입니다. 솔루션 자체에 대해 자세히 알아보려면 <a href="https://azure.microsoft.com/en-us/solutions/low-code-application-development/" target="_blank">Azure 지원 설명서에서 LCAD를</a> 참조&nbsp;하세요. 이번 달&rsquo; 웨비나에서는 위의 시나리오와 같이 애플리케이션 수명 주기 관리를 자동화하는 기능에 중점을 두고 GitHub 작업을 통해 개발자를 위한 개발 프로세스를 더욱 신속하게 처리하고 간소화할 수 있습니다.&nbsp;</p>


  <h2>웹 세미나 콘텐츠</h2>


  <p>이 웨비나에서는 Fusion Development&rsquo;를 시민 개발자를 활용하여 저코드 애플리케이션을 직접 빌드하고, 개발 팀에 대한 부담을 더욱 줄이고,&nbsp; 이러한 애플리케이션을 사용자 지정 코드로 확장하여 시민 개발자&#39;반쪽을 만나는 전문 개발자를 만나는 프로세스라고 설명&lsquo;합니다.&nbsp;</p>


  <p>웹 세미나에는 두 가지 데모가 포함됩니다.&nbsp; API 관리 및 Power Apps 통합과 GitHub Actions를&nbsp; 사용하여 지속적인 통합,&nbsp; CI/CD(지속적인 업데이트&nbsp;) 파이프라인을 만드는 방법에 대해 설명합니다.&nbsp;</p>


  <p>API 관리 및 Power Apps 통합은 Power Apps Azure의 확장성 없음 기능, API를 Power Apps 내보내는 방법 및 추가 라이선스 비용 없이 Microsoft Teams 통해 API 관리를 Power Apps 연결하는 방법을 다룹니다.</p>


  <p>Azure API Management 지원 API를 Power Platform에 신속하게 게시하여 쉽게 검색하고 사용할 수 있도록 Azure API Management 커넥터를 도입하여 Azure 서비스에 연결하는 앱을 만드는 데 걸리는 시간을 크게 단축했습니다.</p>


  <p>즉, 이제 기업은 Azure Portal에서 몇 번의 클릭만으로 시민 개발자가 이러한 자산을 사용할 수 있게 함으로써 Azure에서 호스팅되는 기존 자산의 혜택을 누릴 수 있으므로 Power Apps 또는 Power Automate Maker 환경에서 사용자 지정 커넥터를 만드는 추가 단계를 제거할 수 있습니다.</p>


  <p><a href="https://help.github.com/articles/about-github-actions" target="_blank">GitHub 작업</a> 데모에서는 개발자&#39;자동화된 소프트웨어 개발 수명 주기 워크플로를 빌드하는 기능을 다룹니다. 개발자는 Microsoft Power Platform용 GitHub 작업을 사용하여 리포지토리에 워크플로를 만들어 앱을 빌드, 테스트, 패키지, 릴리스 및 배포하고,&nbsp; 자동화를 수행하고, Microsoft Power Platform에서 빌드된 봇 및 기타 구성 요소를 관리할 수 있습니다.</p>


  <p>웹 세미나는 현재 <a href="https://info.microsoft.com/ww-ondemand-develop-test-and-deliver-applications-with-github-actions-for-power-platform.html?lcid=en-us" target="_blank">주문형</a>으로 사용할 수 있으며, 2월의 웨비나에서는 Azure 및 Power Apps SAP의 통합을 다룹니다.</p>


  <h2>지원 문서</h2>


  <p>Power Apps 및 Azure 웹 사이트:</p>


  <ul>
      <li><a href="https://azure.microsoft.com/en-us/solutions/low-code-application-development/" target="_blank">Azure 웹 사이트의 LCAD</a>.</li>
      <li><a href="https://powerapps.microsoft.com/en-us/power-apps-and-azure/" target="_blank">Azure와 프로 개발자 및 Microsoft Power Apps 위한 Power Apps</a>.</li>
  </ul>


  <p>Power Platform 및 Azure API Management 통합:</p>


  <ul>
      <li><a href="https://powerapps.microsoft.com/en-us/blog/azure-api-management-connector-on-the-power-platform/" target="_blank">Power Platform 블로그 게시물의 Azure API Management 커넥터</a>.</li>
      <li><a href="https://docs.microsoft.com/en-us/azure/api-management/export-api-power-platform" target="_blank">Azure API Management에서 Power Platform으로의 Export API 단계별 지침</a>입니다.</li>
  </ul>


  <p>Power Platform 및 GitHub Actions 자동화된 SDLC(소프트웨어 개발 수명 주기) 워크플로:</p>


  <ul>
      <li><a href="https://powerapps.microsoft.com/en-us/blog/github-actions-for-the-power-platform-now-available-in-preview/" target="_blank">Power Platform에 대한 GitHub 작업은 이제 미리 보기 블로그 게시물에서 사용할 수 있습니다</a>.</li>
      <li><a href="https://docs.microsoft.com/en-us/power-platform/alm/devops-github-actions" target="_blank">Power Platform에 대한 GitHub 작업 개요</a>입니다.</li>
      <li><a href="https://docs.microsoft.com/en-us/power-platform/alm/devops-github-available-actions" target="_blank">기능 설명서</a>.</li>
      <li><a href="https://www.youtube.com/watch?v=Bk4KpE_6YtY&amp;feature=youtu.be" target="_blank">소스 제어 및 자동화된 배포 데모</a>.</li>
      <li><a href="https://github.com/microsoft/powerplatform-actions-lab" target="_blank">소스 제어 및 자동화된 배포 데모의 실습.</a></li>
      <li><a href="https://github.com/microsoft/powerplatform-actions" target="_blank">Power Platform 및 GitHub 작업 리포지토리</a>.</li>
  </ul>
