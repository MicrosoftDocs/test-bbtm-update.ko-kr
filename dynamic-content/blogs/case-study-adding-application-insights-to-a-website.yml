### YamlMime:Yaml
ms.openlocfilehash: 0c300b91d8f9b824b5fe9ee49948097e0da18735
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139907241"
Slug: case-study-adding-application-insights-to-a-website
Title: '사례 연구: 웹 사이트에 애플리케이션 Insights 추가'
Summary: 이 게시물은 애플리케이션 Insights 온보딩할 때의 일반적인 단계를 강조 표시하고 이전에 문서화되지 않은 몇 가지 기술을 다룹니다.
Content: >-
  <p>우리 팀은 GetGlimpse.com 웹 사이트에 애플리케이션 Insights 추가하는 데 도움을 주었습니다. 엿볼 오픈 소스 프로젝트, 그래서 우리는 잡초&rsquo;가 우리가 길을 따라 만든 결정의 일부를 공유 생각했다. 이 게시물은 애플리케이션 Insights 온보딩할 때의 일반적인 단계를 강조 표시하고 이전에 문서화되지 않은 몇 가지 기술을 다룹니다.</p>


  <p>개발자는 웹 사이트가 안정적이고 빠르며 사용자의&rsquo; 요구 사항을 충족하는지 확인하려고 합니다. 다음 릴리스를 준비할 때 더 많은 정보에 입각한 결정을 내리기 위해 애플리케이션 Insights 사이트에 추가하여 성능 및 사용량을 모니터링했습니다.</p>


  <p>GetGlimpse.com ASP.NET MVC 애플리케이션입니다. 사이트&rsquo; 소스 코드는 GitHub Azure Web App으로 배포됩니다.</p>


  <h1>프로세스</h1>


  <p><a href="https://azure.microsoft.com/documentation/articles/app-insights-start-monitoring-app-health-usage/">웹앱을 Application Insights 온보딩하는 표준 절차를</a> 시작했습니다. 엿보기 사이트를 사용하여 여러 단계를 더 진행했습니다.</p>


  <ol>
   <li>Azure 웹앱 설정에서 계측 키를 읽습니다.</li>
   <li>JavaScript 로드를 최적화합니다.</li>
   <li>불필요한 모듈을 제거합니다.</li>
   <li>빌드 버전으로 태그가 지정된 원격 분석을 가져옵니다.</li>
   <li>전체 예외 보고를 추가합니다.</li>
  </ol>


  <p>이러한 단계를 수행한 후에는 연구 결과에 대한 요약과 개요가 표시됩니다.</p>


  <h1>Azure Web App 설정에서 계측 키 읽기</h1>


  <p>애플리케이션 Insights 계측 키는 원격 분석을 볼 수 있도록 원격 분석을 올바른 리소스로 보냅니다. 일반적으로 ApplicationInsights.config 파일에 배치하고 애플리케이션이 해당 파일에서 선택합니다.</p>


  <p>그러나 Azure Web App에서는 대신 Azure Web App 환경 변수에서 계측 키를 읽을 수 있습니다. 다양한 배포에 대해 계측 키를 재정의할 수 있도록 이 작업을 수행했습니다. string ikeyValue = Environment.GetEnvironmentVariable(&quot;APPINSIGHTS_INSTRUMENTATIONKEY&quot;);<br />

  <br />

  if (!string. IsNullOrEmpty(ikeyValue))<br />

  {<br />

  &nbsp;&nbsp; TelemetryConfiguration.Active.InstrumentationKey = ikeyValue;<br />

  }</p>


  <div align="left">&nbsp;</div>


  <div align="left">이 작업을 수행하려면 <a href="https://azure.microsoft.com/documentation/articles/insights-perf-analytics/">Azure Application Insights 확장을</a> 웹앱에 추가하거나 웹 사이트 설정에서 계측 키를 수동으로 설정할 수 있습니다.</div>


  <h1>JavaScript 로드 최적화</h1>


  <p><a href="https://azure.microsoft.com/documentation/articles/app-insights-javascript/">클라이언트 쪽 데이터 수집</a> 을 사용하려면 JavaScript 코드를 페이지에 삽입해야 합니다. 표준 조언은 일반적으로 다음과 같은 마스터 페이지에 포함시켜 사이트의 &ndash; 모든 웹 페이지의 머리글에 이 코드를 배치하는 것입니다.</p>


  <pre class="prettyprint">

  Views/Shared/_Layout.cshtml.</pre>


  <p>그러나 이 코드는 다소 클 수 있습니다(거의 1KB). 모든 페이지에 대해 다운로드하는 오버헤드를 줄이기 위해 브라우저가 여러 페이지에 캐시할 수 있도록 별도의 JavaScript 파일을 만들었습니다. 이로 인해 페이지 로드 시간이 향상되었습니다.</p>


  <h3>애플리케이션 Insights 조각을 저장할 새 JavaScript 파일 만들기</h3>


  <p><a href="https://github.com/Glimpse/Glimpse.Site/blob/master/source/Glimpse.Site/Scripts/ApplicationInsightsSnippet.js">스크립트 파일에</a>&nbsp;는 애플리케이션 Insights 빠른 시작/&ldquo;내 웹 페이지&rdquo; 블레이드를 모니터링하기 위한 코드 가져오기 코드 조각이 포함되어 있지만 끝에 한 가지 변경 내용이 있습니다.</p>


  <pre class="prettyprint">

  }({
      instrumentationKey: window.instrumentationKey
  });</pre>


  <p>계측 키를 하드 코딩하는 대신 window.instrumentationKey로 대체했습니다. 이것은 한 곳에서만 키를 하드 코딩하는 우리의 목표와 일치합니다.</p>


  <h3>서버에서 계측 키 설정</h3>


  <p>ASP.NET 웹 페이지는 런타임에 생성되므로 서버 SDK에서 계측 키를 설정할 수 있습니다. Razor 구문(다른 프레임워크에 맞게 조정해야 하는 경우&rsquo;)을 사용하여 <a href="https://github.com/Glimpse/Glimpse.Site/blob/master/source/Glimpse.Site/Views/Shared/_Layout.cshtml">_Layout</a> (마스터) 페이지에서 키를 설정합니다.</p>


  <pre class="prettyprint">
   &lt;script language=&quot;javascript&quot;&gt;
          window.instrumentationKey = &quot;@Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active.InstrumentationKey&quot;;
      &lt;/script&gt;
      @Scripts.Render(&quot;~/bundles/headsitejs&quot;)</pre>

  <p>Scripts.Render 줄은 여러 스크립트의 로드를 최적화하는 ASP.NET <a href="https://go.microsoft.com/fwlink/?LinkId=301862">번들 기능을</a> 사용합니다.</p>


  <h3>스크립트 파일에 대한 번들 정의</h3>


  <p>마지막으로, 코드 파일을 로드하기 위해 <a href="https://github.com/Glimpse/Glimpse.Site/blob/master/source/Glimpse.Site/App_Start/BundleConfig.cs">AppStart/BundleConfig.cs</a> 에 새 스크립트 번들을 추가했습니다.</p>


  <pre class="prettyprint">
    bundles.Add(new ScriptBundle(&quot;~/bundles/headsitejs&quot;).Include(
                  &quot;~/Scripts/ApplicationInsightsSnippet.js&quot;));</pre>

  <h3>이점</h3>


  <p>우리의 목표는 계측 키를 설정할 수 있는 장소를 한 곳에 두는 것이었습니다. 이렇게 하면 계측 키를 간단하고 깔끔하게 업데이트할 수 있습니다. 페이지 크기를 1K로 줄이는 이점은 무시할 수 있지만 더 큰 웹 사이트의 경우 빠르게 추가됩니다. 애플리케이션 Insights&rsquo; JavaScript 코드를 캐시하고 페이지 크기를 줄이는 조합은 설치에 가치가 있습니다.</p>


  <h1>불필요한 모듈 제거</h1>


  <p><a href="https://github.com/Glimpse/Glimpse.Site/blob/master/source/Glimpse.Site/ApplicationInsights.config">ApplicationInsights.config</a> 이 앱에 필요하지 않은&rsquo; 원격 분석 이니셜라이저가 있습니다. 이 이니셜라이저는 Azure 클라우드 서비스에서 사용되지만 앱은 Azure Web App으로 배포됩니다.</p>


  <pre class="prettyprint">

  &lt;Add Type=&quot;Microsoft.ApplicationInsights.WindowsServer.AzureRoleEnvironmentTelemetryInitializer, Microsoft.AI.WindowsServer&quot; /&gt; </pre>


  <p>또한 Azure Web Apps에서 아직 작동하지 않는&rsquo; 성능 카운터 모듈도 제거했습니다.</p>


  <p>이러한 제거의 성능 향상을 목표로 했다.</p>


  <h1>빌드 버전으로 태그가 지정된 원격 분석 가져오기</h1>


  <p>개발자는 종종 앱에 업데이트를 배포합니다. 예외 또는 기타 원격 분석을 조사할 때 데이터가 제공되는 버전이 명확하지 않은&rsquo; 경우가 있습니다. 그러나 애플리케이션 Insights 사용하면 빌드 버전을 모든 원격 분석에 속성으로 쉽게 추가할 수 있으므로 해당 속성 또는 필터를 확인할 수 있습니다.</p>


  <div>buildinfo.config<a href="https://apmtips.com/blog/2015/06/18/application-versioning-semantic-or-automatic/">생성</a>하려면 MSBuild 가져와야 합니다. 기본 csproj 파일에서 다음을 추가했습니다.<font face="Courier New">&nbsp;</font></div>


  <blockquote>

  <pre class="prettyprint">

  &lt;PropertyGroup&gt;
   &lt;GenerateBuildInfoConfigFile&gt;true&lt;/GenerateBuildInfoConfigFile&gt;
   &lt;IncludeServerNameInBuildInfo&gt;true&lt;/IncludeServerNameInBuildInfo&gt;
  &lt;/PropertyGroup&gt;</pre>

  </blockquote>


  <p>빌드 정보가 있으면 애플리케이션 Insights 웹 모듈은 <a href="https://azure.microsoft.com/documentation/articles/app-insights-diagnostic-search/">진단 검색</a>을 수행하거나 <a href="https://azure.microsoft.com/documentation/articles/app-insights-javascript/">메트릭을 탐색</a>할 때 버전별로 필터링할 수 있도록 원격 분석의 모든 항목에 빌드 버전을 속성으로 자동으로 추가합니다.</p>


  <p>MSBuild 사용하여 웹앱을 빌드하는 경우에만 올바른 빌드 번호가 표시됩니다. &rsquo;Visual Studio 로컬 빌드 프로세스는 버전 속성에 자리 표시자만 배치합니다.</p>


  <h1>전체 예외 보고 추가</h1>


  <p><a href="https://azure.microsoft.com/documentation/articles/app-insights-asp-net-exceptions/#web-api-1x">애플리케이션 Insights 예외를 보고</a>하려면&nbsp; 웹앱에 몇 가지 추가 코드가 필요합니다. 기술은 앱 유형에 따라 달라집니다. Glimpses&rsquo; Web API의 경우 프로젝트 솔루션에 <a href="https://github.com/Glimpse/Glimpse.Site/commit/a4d2fd0334328976d43f03f9a0c2d704d05955f8">4개의 파일을 추가/수정</a> 해야 했습니다.</p>


  <p><a href="https://github.com/Glimpse/Glimpse.Site/blob/a4d2fd0334328976d43f03f9a0c2d704d05955f8/source/Glimpse.Site/Telemetry/ApplicationInsightsErrorAttribute.cs">ApplicationInsightsErrorAttribute.cs</a>에서 특성을 정의했습니다. 이렇게 하면 예외가 적용되는 모든 클래스의 예외가 보고됩니다.</p>


  <pre class="prettyprint">

  using System;

  using System.Web.Mvc;

  using Microsoft.ApplicationInsights;

  using Microsoft.ApplicationInsights.DataContracts;


  namespace Glimpse.Site.Telemetry

  {
      [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, Inherited = true, AllowMultiple = true)]
      public class ApplicationInsightsErrorAttribute : <font style="background-color: #ffff00">HandleErrorAttribute</font>
      {
          private TelemetryClient client = new TelemetryClient();

          public override void OnException(ExceptionContext filterContext)
          {
              if (filterContext != null &amp;&amp; filterContext.HttpContext != null &amp;&amp; filterContext.Exception != null)
              {
                  //If customError is Off, then AI HTTPModule will report the exception
                  if (filterContext.HttpContext.IsCustomErrorEnabled)
                  {
                      ExceptionTelemetry exc = new ExceptionTelemetry(filterContext.Exception);
                      exc.HandledAt = ExceptionHandledAt.Platform;
                      client.TrackException(exc);
                  }
                  base.OnException(filterContext);
              }
          }
      }
  }</pre>


  <p><font style="background-color: #ffff00">참고</font>: Glimpse.site 이미 오류 처리가 있었습니다. 오류 처리를 위해 설명서에서 권장하는 대로 ExceptionFilterAttribute 또는 ExceptionLogger 대신 HandleErrorAttribute를 사용했습니다.</p>


  <p><b><a href="https://github.com/Glimpse/Glimpse.Site/blob/a4d2fd0334328976d43f03f9a0c2d704d05955f8/source/Glimpse.Site/App_Start/FilterConfig.cs">FilterConfig.cs</a></b>에서 애플리케이션 Insights 오류 특성 필터를 추가했습니다. 이렇게 하면 특성이 모든 클래스에 효과적으로 적용됩니다.</p>


  <pre class="prettyprint">

  using System.Web.Mvc;

  using Glimpse.Site.Telemetry;


  namespace Glimpse.Site

  {
      public class FilterConfig
      {
          public static void RegisterGlobalFilters(GlobalFilterCollection filters)
          {
              filters.Add(new ApplicationInsightsErrorAttribute());
          }
      }
  }

  </pre>


  <p><b><a href="https://github.com/Glimpse/Glimpse.Site/blob/a4d2fd0334328976d43f03f9a0c2d704d05955f8/source/Glimpse.Site/Glimpse.Site.csproj">Glimpse.Site.csproj</a></b>에서는 새 ApplicationInsightsErrorAttribute.cs 파일을 포함했습니다.</p>


  <pre class="prettyprint">

  &lt;Compile Include=&quot;Telemetry\ApplicationInsightsErrorAttribute.cs&quot; /&gt;</pre>


  <h1>결과</h1>


  <p>애플리케이션 Insights Glimpse 사이트의 개발자에게 유용한 데이터를 제공했습니다. 전반적인 발견은 엿보기 사이트가 잘 실행되고 있으며 대부분의 고객은 좋은 경험을 가지고 있습니다. 엿볼 개발자는 자신의 사이트가 안정적이고 잘 작동 인상을 받고 있었다; 애플리케이션 Insights 이를 안심시켰습니다. Glimpse 사이트는 대규모 커뮤니티와 함께 지속적으로 진화하고 있으므로 외부 사이트에는 더 이상 엿보기 사이트에 존재하지 않는 페이지에 대한 링크가 있었습니다.</p>


  <p>Glimpse 팀은 다른 사이트의 오래된 링크를 인식하지 못했기 때문에 응용 프로그램 Insights 손상된 링크로 인해 수집된 오류의 수를 보고 놀랐습니다. 이러한 끊어진 링크는 고객의 적은 비율에 대한 경험의 품질을 감소시켰습니다. 대부분의 고객은 Glimpse 사이트에 대한 훌륭한 경험을 가지고 있습니다. 그러나 환경을 더욱 효율적으로 만들기 위해 가장 많이 발생한 예외를 심사했습니다. 다음은 찾은 예외의 몇 가지 예입니다.</p>


  <h3>파일을 찾을 수 없습니다.</h3>


  <p>System.IO.FileNotFoundException에서 D:\home\site\wwwroot\Views\Docs\Wiki\Content\Custom-Runtime-Policy.md&#39; &#39;파일을 찾을 수 없습니다.</p>


  <p>이 예외는 무서운 것처럼 보일 수 있지만 자세한 분석에 따르면 링크가 끊어진 것으로 나타났습니다. 파일 이름이 바뀌었지만 누군가가 이전 설명서 페이지에 액세스하려고 했습니다.</p>


  <h3>키를 찾을 수 없음 예외</h3>


  <p>System.Collections.Generic.KeyNotFoundException</p>


  <p>이 예외를 조사한 후 개발자는 사용자가 해당 버전의 Glimpse를 업그레이드할 때 이 예외가 발생할 수 있음을 발견했습니다. PowerShell 스크립트를 통해 업그레이드하는 경우 NuGet 패키지는 사용자가 어떤 버전을 사용 중인지 혼동할 수 있습니다. 이 때문에 NuGet 패키지는 서버에서 예기치 않아 유효하지 않은 쿼리 문자열을 만듭니다.</p>


  <h3>Window.onerror</h3>


  <p>오류: 개체가 이 속성 또는 메서드를 지원하지&#39;않습니다.</p>


  <p>이 오류를 검사한 후 Glimpse 팀은 window.onerror를 지원하지 않는 Windows Media Center에 IE8 버전이 있기 때문에 문제가 발생했음을 발견했습니다. 오류가 일반적이지 않았습니다.</p>


  <h3>CORS 스크립트 오류</h3>


  <p>브라우저&rsquo; 동일한 원본 정책은 이 예외의 세부 정보를 가져오지 못하게 합니다. 웹 페이지와 다른 원본에서 로드된 스크립트에서 예외가 발생했습니다. 도메인 간 오류 보고의 경우 적절한 CORS HTTP 헤더와 함께 crossorigin 특성을 사용할 수 있습니다. 자세한 내용은 을 참조 <a href="https://www.w3.org/TR/cors/">https://www.w3.org/TR/cors/</a>하세요.</p>


  <p>경우에 따라 JavaScript 오류가 발생하고 보안 정책으로 인해 오류가 매우 유용하지 않습니다. 예외를 발생시키는 스크립트가 사용자가 예외를 경험하는 도메인과 다른 도메인에서 호스트되므로 문제가 발생합니다. 보안 제한으로 인해 애플리케이션 Insights 이러한 종류의 오류에 대한 추가 정보가 표시되지 않습니다. 그러나 이 예외는 드물었으며 우선 순위가 아닌 한 스크립트에서 발생했습니다.</p>


  <p>Glimpse 사이트에 애플리케이션 Insights 추가하면 Glimpse 개발자에게 원격 분석 기능이 있습니다. 사이트 유용성 및 성능을 개선하기 위해 이 데이터를 사용할 계획입니다. 전반적으로 그들은 그들의 사용자의 대부분은 그들의 사이트에 완벽 한 경험을 찾을 매우 행복 했다. 이 분석에 도움을 <a href="https://github.com/nikmd23">준 닉 몰나르</a> 와 <a href="https://github.com/avanderhoorn">앤서니 반 데르 호른</a> 에게 감사드립니다.</p>


  <h1>요약</h1>


  <p>애플리케이션 Insights 온보딩하면 유용한 원격 분석을 엿볼 수 있습니다. 이 프로세스 중에 사용한 기술 중 일부는 권장되며 더욱 풍부한 애플리케이션 Insights 환경에 기여할 수 있습니다.</p>
