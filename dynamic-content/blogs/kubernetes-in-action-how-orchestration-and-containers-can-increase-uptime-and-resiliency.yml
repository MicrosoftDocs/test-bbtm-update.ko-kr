### YamlMime:Yaml
ms.openlocfilehash: 47faf66c107eb81d223c40775742a8f6ceecbc29
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899712"
Slug: kubernetes-in-action-how-orchestration-and-containers-can-increase-uptime-and-resiliency
Title: 'Kubernetes 작동: 오케스트레이션 및 컨테이너가 작동 시간과 복원력을 높일 수 있는 방법'
Summary: Azure에서 Azure Container Service 및 Kubernetes 지원을 확장하기 위해 Deis 인수를 완료한 지 약 한 달이 지났습니다. 두 팀이 오는 것을 보는 것은 정말 환상적이었습니다...
Content: >-
  <p>&rsquo;Azure에서 Azure Container Service 및 Kubernetes 지원을 확장하기 위해 Deis 인수를 완료한 지 약 한 달이 지났습니다. 두 팀이 함께 모여 함께 일하기 시작하는 것을 보는 것은&rsquo; 정말 환상적이었습니다. 특히 Ive&rsquo;는 Helm 팀을 더 잘 알고 Azure Container Service에서 Helm과 Kubernetes 간의 긴밀한 통합을 구축하는 방법을 알아보게 되어 기뻤습니다.</p>


  <p>컨테이너 및 Kubernetes는 클라우드에서 개발된 소프트웨어의 조작성과 안정성을 크게 향상시킬 수 있습니다. 먼저 컨테이너 자체는 모든 종속성을 포함하는 변경할 수 없는 패키지입니다. 즉, 랩톱에서 작업 솔루션을 빌드하는 경우 Azure에 배포할 때 동일하게 실행된다는 강력한 확신이 있습니다.</p>


  <p style="text-align: center;">&nbsp;<iframe allowfullscreen="" frameborder="0" height="360" src="https://www.youtube.com/embed/6dNkYykHXBw" width="640"></iframe></p>


  <p>또한 Kubernetes와 같은 오케스트레이터는 자동 상태 검사 기반 다시 시작 및 모니터링과 같은 애플리케이션 관리 모범 사례에 대한 기본 지원을 제공합니다. 이러한 기본 기능 외에도 Kubernetes는 서비스의 자동 롤아웃 및 롤백을 수행하는 기능을 제공하므로 업데이트 중에 새 버전의 서비스가 실패하더라도 최종 사용자 트래픽에 영향을 주지 않고 서비스의 라이브 업데이트를 수행할 수 있습니다. 이러한 모든 도구는 사용자가 프로토타입에서 신뢰할 수 있는 프로덕션 시스템으로 애플리케이션을 쉽게 사용할 수 있음을 의미합니다.</p>


  <p>그러나 대부분의 경우 사용자 고유의 코드를 배포하지 않고&rsquo; 다른 사용자가 개발한 오픈 소스 소프트웨어(예: MongoDB 또는 고스트 블로깅 플랫폼)를 사용합니다. 이 곳은 Deis의 Helm 도구가 정말 빛을 발하는 곳입니다. Helm은 클러스터의 패키지 관리자이며 apt, homebrew 또는 yum과 같은 단일 컴퓨터 패키지 관리자를 사용한 사용자에게 친숙한 인터페이스를 제공하지만 Helm의 경우 전체 Kubernetes 클러스터에 소프트웨어를 설치합니다. 몇 가지 명령줄에서 애플리케이션에서 사용할 수 있도록 복제된 신뢰할 수 있는 버전의 MongoDB를 설치할 수 있습니다.</p>


  <p>개발자&rsquo;가 Azure에서 확장 가능하고 신뢰할 수 있는 분산 애플리케이션을 더욱 쉽게 빌드할 수 있도록 Deis의 Helm 및 기타 멋진 오픈 소스 도구를 Azure Container Service에 더 잘 통합할 수 있게 되어 정말 기쁩니다. Kubernetes가 운영자에 대한 작업을 변경하는 방법에 대한 자세한 내용과 예제를 보려면 Microsoft Mechanics에서 컨테이너, Kubernetes 및 Azure를 시연하고 논의하는 Microsoft Mechanics의 최근 모습을 확인하세요.</p>


  <p>Brendan Burns, Azure Container Service&nbsp;</p>
