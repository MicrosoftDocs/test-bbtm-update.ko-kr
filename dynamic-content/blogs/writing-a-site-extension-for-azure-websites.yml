### YamlMime:Yaml
ms.openlocfilehash: 7cc3abfb938d2639aafb14cf2856be773b8ef183
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139897062"
Slug: writing-a-site-extension-for-azure-websites
Title: Azure Websites용 사이트 확장 작성
Summary: Azure Websites 사이트 확장 기능을 사용하면 개발자가 기본적으로 Azure Website에서 실행할 수 있는 "앱"을 작성하여 관리 기능을 추가할 수 있습니다. 이러한 확장은 다음과 같습니다.
Content: "<p>Azure Websites 사이트 확장 기능을 사용하면 개발자가 기본적으로 Azure Website에서 실행할 수 있는 \"앱\"을 작성하여 관리 기능을 추가할 수 있습니다. 이러한 확장은 다른 사용자도 확장을 설치하고 사용할 수 있도록 <a href=\"https://www.siteextensions.net/\">사이트 확장 갤러리</a>에 게시할 수 있습니다. 사이트 확장을 작성하는 것은 일반 웹 사이트를 작성하는 것과 크게 다르지 않습니다. 유일한 차이점은 코드가 사이트에 설치되는 방식입니다.</p> <h4></h4> <h4>SCM 사이트</h4> <p>Azure Website를 만들 때마다 관리/디버깅에 사용되며 항상 SSL을 통해 실행되는 해당 \"SCM\"(사이트 제어 관리자) 사이트도 얻게 됩니다. SCM 사이트의 URL은 항상 기본 호스트 이름과 동일하며 \"scm\"입니다. 예를 들어 내 사이트가 \"demo.azurewebsites.net\"인 경우 SCM 사이트는 \"demo.scm.azurewebsites.net\"입니다. 사이트에 대해 설치된 모든 사이트 확장은 여기를 통해 액세스할 수 있습니다.</p> <p>&nbsp;</p> <h4>사이트 확장 작성 및 로컬 테스트</h4> <p>이 예제에서는 Visual Studio 2013 사용하여 기존 파일 카운터 사이트 확장을 ASP.Net MVC 애플리케이션으로 다시 작성하지만 익숙한 편집기를 사용할 수 있습니다. 여기에서 이 샘플에 대한 코드를 가져올 수 <a href=\"https://github.com/projectkudu/FileCounterMVC\">있습니다</a>.</p> <ol> <li>먼저 \"FileCounterMVC\"라는 새 \"ASP.Net 웹 애플리케이션\"을 만듭니다. \"빈\" 템플릿을 선택하고 \"MVC\" 확인란을 클릭합니다. (2012년 Visual Studio 새 프로젝트 대화 상자에서 \"ASP.Net MVC 빈 Project\"을 선택할 수 있습니다.<br><a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/01NewProject.png\"><img title=\"01-NewProject\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"01-NewProject\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/01NewProject_thumb.png\" width=\"1197\" height=\"829\"></a>  <li>솔루션 탐색기에서 \"컨트롤러\" 폴더를 마우스 오른쪽 단추로 클릭하고 \"HomeController\"라는 새 \"MVC 5 컨트롤러 - 비어 있음\" 컨트롤러를 추가합니다.  <li>HomeController.cs 파일이 열리면 아래 코드를 추가합니다. \"if-else\" 문을 사용하면 Visual Studio 사이트를 로컬로 실행할 수 있습니다. Azure Websites는 항상 공용 사이트의 실제 경로를 포함하는 \"home\"이라는 환경 변수를 정의하기 때문에 작동합니다. 사이트 확장은 SCM 사이트 내에서 실행되므로 이 변수를 사용하여 공용 사이트의 실제 경로를 파악할 수 있습니다. 정의되지 않은 경우 사이트의 콘텐츠 폴더가 현재 사이트 루트라고 가정합니다. <br></li><pre class=\"prettyprint\">using System;\nusing System.IO;\nusing System.Web.Mvc;\n\nnamespace FileCounterMVC.Controllers\n{\n    public class HomeController : Controller\n    {\n        public ActionResult Index()\n        {\n            string siteFolder;\n            int fileCount;\n\n            if (Environment.GetEnvironmentVariable(\"home\") != null)\n            {\n                // Maps to the physical path of your site in Azure\n                siteFolder =\n                    Environment.ExpandEnvironmentVariables(@\"%HOME%\\site\\wwwroot\");\n            }\n            else\n            {\n                // Maps to the current sites root physical path.\n                // Allows us to run locally.\n                siteFolder = Server.MapPath(\"/\");\n            }\n\n            fileCount =\n                Directory.GetFiles(\n                    siteFolder,\n                    \"*.*\",\n                    SearchOption.AllDirectories).Length;\n\n            return View(model: fileCount);\n        }\n    }\n}</pre>\n<p></p>\n<li>보기를 추가하려면 \"Index()\" 메서드 내의 어딘가를 마우스 오른쪽 단추로 클릭하고 \"보기 추가\"를 클릭합니다.&nbsp; \"보기 추가\" 대화 상자에서 \"레이아웃 페이지 사용\" 확인란의 선택을 취소하고 \"추가\"를 클릭합니다.&nbsp; 이제 \"Index.cshtml\"이라는 뷰가 있어야 합니다. \n<li>다음 코드를 복사하여 인덱스 보기에 붙여넣습니다. <br></li><pre class=\"prettyprint\">@model int\n@{Layout = null;}\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width\" /&gt;\n    &lt;title&gt;File Counter MVC&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt; \n        &lt;h1&gt;Your site has @Model files!&lt;/h1&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre>\n<p></p>\n<li>\"F5\"에 도달하면 IIS Express 로컬로 앱을 실행하여 작동하는지 테스트할 수 있습니다.&nbsp; 사이트 폴더를 로컬 사이트 폴더에 매핑했으므로 FileCounterMVC 앱의 파일 수를 가져옵니다. <a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/09debugger.png\"><img title=\"09 디버거\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"09-debugger\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/09debugger_thumb.png\" width=\"647\" height=\"329\"></a> </li></ol>\n<p>&nbsp;</p>\n<h4>Azure 웹 사이트에서 개인 사이트 확장 테스트</h4>\n<p>이제 사이트 확장을 로컬로 테스트했으므로 Azure Website에서 개인 사이트 확장으로 설치할 수 있습니다.</p>\n<ol>\n<li>프로젝트의 루트에 applicationHost.xdt 파일을 추가합니다. 이 파일을 사용하면 SCM 사이트에 사용되는 applicationHost.config 파일을 앱에 필요한 변경 내용으로 변환할 수 있습니다. 대부분의 앱에서 다음 applicationHost.xdt 파일은 앱 경로 변경 내용을 제외하고 사용하기에 충분할 수 있지만 자세히 알아보려면 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-transform-extend/\">여기</a>를 방문하세요. <b><i>솔루션 탐색기에서 파일을 마우스 오른쪽 단추로 클릭하고 속성으로 이동한 다음 \"출력 디렉터리에 복사\" 설정을 \"최신인 경우 복사\"로 설정해야 합니다.</i></b> <br></li><pre class=\"prettyprint\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt; \n&lt;configuration xmlns:xdt=\"\"&gt;\n  &lt;system.applicationHost&gt;\n    &lt;sites&gt;\n      &lt;site name=\"%XDT_SCMSITENAME%\" xdt:Locator=\"Match(name)\"&gt;\n        &lt;application path=\"/filecounterMVC\" applicationPool=\"%XDT_APPPOOLNAME%\" xdt:Transform=\"Insert\"&gt;\n          &lt;virtualDirectory path=\"/\" physicalPath=\"%XDT_EXTENSIONPATH%\" /&gt;\n        &lt;/application&gt;\n      &lt;/site&gt;\n    &lt;/sites&gt;\n  &lt;/system.applicationHost&gt;\n&lt;/configuration&gt;<br></pre>\n<p></p>\n<li>프로젝트의 루트에 \"build.cmd\"라는 파일을 추가하고 다음 콘텐츠를 복사합니다.&nbsp; 이 스크립트는 앱을 쉽게 빌드하고 \" 아래의 웹 사이트에서 실행할 준비가 된 양식으로 구성할 수 있는 샘플 빌드 스크립트입니다. \\artifacts\" 폴더입니다.&nbsp; 이 스크립트를 실행하는 것은 Visual Studio \"웹 애플리케이션 프로젝트 - 게시 -&gt;&gt; 파일 시스템에\" 작업을 마우스 오른쪽 단추로 클릭하는 것과 기능적으로 동일하다는 것을 아는 것이 좋을 수 있습니다.&nbsp; 파일을 추가한 후 명령 프롬프트에서 \"build.cmd\"를 실행하여 빌드합니다. <br></li><pre class=\"prettyprint\">if not exist ..\\artifacts mkdir ..\\artifacts\n\"%windir%\\Microsoft.NET\\Framework\\v4.0.30319\\MSBuild.exe\" FileCounterMVC.csproj /p:webpublishmethod=filesystem;PublishUrl=..\\artifacts /t:WebFileSystemPublish<br></pre>\n<p></p>\n<li>프로젝트를 빌드했으므로 테스트할 SCM 사이트에 업로드할 준비가 되었습니다.&nbsp; 브라우저를 열고 ; 으로 이동합니다 https://sitename.scm.azurewebsites.net/debugconsole.&nbsp. 또는 로 https://sitename.scm.azurewebsites.net이동한 다음 \"디버그 콘솔\" 링크를 클릭할 수 있습니다. \n<li>디버그 콘솔에서 \"<span style=\"font-family: 'Courier New'\">mkdir SiteExtensions\\FileCounterMVC</span>\"를 실행합니다.&nbsp; 그런 다음 FileCounterMVC 디렉터리로 이동합니다.&nbsp; Chrome 또는 Firefox를 사용하는 경우 \"아티팩트\" 폴더의 콘텐츠를 끌어서 놓을 수 있습니다(아래 참조).&nbsp; IE를 사용하는 경우 먼저 아티팩트 폴더의 콘텐츠를 압축한 다음 화면 오른쪽에 zip 파일을 끌어서 놓아 디버그 콘솔의 압축을 풉니다.<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/15CopyToSCMSite.png\"><img title=\"15-CopyToSCMSite\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"15-CopyToSCMSite\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/15CopyToSCMSite_thumb.png\" width=\"1457\" height=\"932\"></a> <br>\n<li>콘텐츠가 복사되면 사이트를 다시 시작해야 합니다.&nbsp; 가장 쉬운 방법은 페이지 맨 위에 있는 \"사이트 확장\" 탭을 클릭한 다음 \"사이트 다시 시작\" 단추를 클릭하는 것입니다. \n<li>이제 개인 버전의 FileCounterMVC 사이트 확장이 설치되었으므로 URL https:// sitename.scm.azurewebsites.net/FileCounterMVC&lt;&gt; 눌러 탐색할 수 있습니다.&nbsp; 사이트 확장은 파일 경로를 \"홈\" 환경 변수에 매핑했기 때문에 공용 사이트(SCM 사이트가 아님)의 파일 수를 제공해야 합니다.&nbsp; 공용 사이트에서 파일을 추가/제거하고 파일 카운터 사이트 확장자를 새로 고치는 경우 파일 개수가 변경됩니다. URL이 어떻게 \"/FileCounterMVC\"에 매핑되었는지 궁금한 경우 디버그 콘솔을 사용하여 생성된 applicationHost.config 파일을 검사할 수 있습니다.&nbsp; 먼저 C:\\DWASFiles\\Sites1sitename\\Config로 이동하여 \"편집\" 단추를 클릭하여 \"applicationHost.config.base\" 파일을 연 다음 \"&lt;사이트\" 섹션을 검색합니다&gt;.&nbsp;\\~&lt;&gt; 이름 앞에 \"~\"가 추가된 사이트 항목은 SCM 사이트입니다.&nbsp; 해당 사이트 내에는 사전 설치된 사이트 확장인 여러 앱이 이미 나열되어 있음을 알 수 있습니다.&nbsp; 이제 사이트에 사용되는 실제 구성 파일인 \"applicationHost.config\" 파일을 열면 아래와 같이 \"FileCounterMVC\"라는 새 앱 항목이 표시됩니다.&nbsp; 어떻게 작동했나요?&nbsp; SCM 사이트가 로드되면 \"SiteExtensions\" 폴더 아래에서 applicationHost.xdt 파일을 찾습니다.&nbsp; 이 파일을 찾으면 applicationHost.config.base 파일을 필요한 설정으로 applicationHost.config 파일로 변환하는 데 사용합니다.&nbsp; 꽤 깔끔한 응?<br></li><pre class=\"prettyprint\">&lt;site name=\"~1ehdemo\" id=\"154213853\"&gt;\n  &lt;!-- Other apps are not shown. --&gt;\n  &lt;application path=\"/filecounterMVC\" applicationPool=\"~1ehdemo\"&gt;\n    &lt;virtualDirectory path=\"/\" physicalPath=\"D:\\home\\SiteExtensions\\FileCounterMVC\" /&gt;\n  &lt;/application&gt;\n&lt;/site&gt;</pre>\n<p></p></ol>\n<p>&nbsp; </p>\n<h4>SiteExtensions.net 호스트된 공용 사이트 확장 갤러리에 게시</h4>\n<p>개인 사이트 확장을 구축하는 것은 훌륭하지만 사랑을 공유하고 싶지 않습니까? 사이트 확장 갤러리에 사이트 확장을 업로드하면 다른 Azure Websites 사용자가 사이트에 확장을 쉽게 설치할 수 있습니다. FileCounterMVC 예제를 사용하여 수행하는 방법은 다음과 같습니다.</p>\n<ol>\n<li>애플리케이션의 루트에 FileCounterMVC.nuspec을 추가합니다.&nbsp; 아래 콘텐츠를 복사하고 정보와 일치하는 데 필요한 필드를 변경합니다.&nbsp; <strong>파일을 마우스 오른쪽 단추로 클릭하고 속성으로 이동한 다음 \"출력 디렉터리로 복사\" 설정을 \"최신인 경우 복사\"로 설정해야 합니다.</strong> <pre class=\"prettyprint\">&lt;?xml version=\"1.0\"?&gt;\n&lt;package &gt;\n  &lt;metadata&gt;\n    &lt;id&gt;filecountermvc&lt;/id&gt;\n    &lt;title&gt;File Counter MVC&lt;/title&gt;\n    &lt;version&gt;1.0.1&lt;/version&gt;\n    &lt;authors&gt;Elliott Hamai&lt;/authors&gt;\n    &lt;licenseUrl&gt;https://opensource.org/licenses/Apache-2.0&lt;/licenseUrl&gt;\n    &lt;projectUrl&gt;https://github.com/projectkudu/FileCounterMVC&lt;/projectUrl&gt;\n    &lt;requireLicenseAcceptance&gt;false&lt;/requireLicenseAcceptance&gt;\n    &lt;description&gt;A sample mvc Site Extension that counts the number of files in the web root&lt;/description&gt;\n    &lt;iconUrl&gt;https://raw.githubusercontent.com/projectkudu/FileCounterMVC/master/FileCounter50x50.png&lt;/iconUrl&gt;\n    &lt;tags&gt;filecounter sample siteextension&lt;/tags&gt;\n  &lt;/metadata&gt;\n  &lt;files&gt;\n    &lt;file src=\"**\\*.*\" target=\"content\" /&gt;\n  &lt;/files&gt;\n&lt;/package&gt;</pre>\n<li>\"build.cmd\"를 실행하여 프로젝트를 \"artifacts\" 폴더로 다시 빌드합니다. \n<li>여기에서 nuget.exe 명령줄 유틸리티를 다운로드합니다 <a href=\"https://docs.nuget.org/docs/start-here/installing-nuget\">https://docs.nuget.org/docs/start-here/installing-nuget</a>. \n<li>\"artifacts\" 폴더에서 다음 명령을 실행하여 부모 디렉터리 아래에 NuGet 패키지(FileCounterMVC.1.0.1.nupkg)를 생성합니다. <pre class=\"prettyprint\">nuget pack FileCounterMVC.nuspec -outputdirectory ..\\ –nopackageanalysis</pre>\n<li>브라우저를 열고 다음으로 이동합니다. <a href=\"https://www.siteextensions.net/\">https://www.siteextensions.net/</a> \n<li>무료 계정에 로그인하거나 등록합니다.&nbsp; 그런 다음, \"업로드 사이트 확장\" 링크로 이동합니다. \n<li>이전에 만든 nupkg 패키지를 추가하고 \"업로드\"를 클릭합니다.<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/19UploadSiteExtension2.png\"><img title=\"19-UploadSiteExtension2\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"19-UploadSiteExtension2\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/19UploadSiteExtension2_thumb.png\" width=\"1255\" height=\"856\"></a> <br>\n<li>다음 페이지에서는 추가하는 패키지에 대한 많은 정보를 확인하도록 요청합니다.&nbsp; 아래쪽에는 \"검색 결과에 나열됨\"이 표시됩니다.&nbsp; \"예\"를 선택하면 사이트 확장이 사이트 확장 갤러리에 공개적으로 나열됩니다.&nbsp; 데모에서는 \"예\", \"제출\"을 차례로 선택합니다.<br><br><a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/20UploadSiteExtensionpublish.png\"><img title=\"20-UploadSiteExtensionpublish\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"20-UploadSiteExtensionpublish\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/20UploadSiteExtensionpublish_thumb.png\" width=\"317\" height=\"180\"></a><br> </li></ol>\n<h4>Azure 사이트 확장 갤러리를 통해 사이트 확장 설치</h4>\n<p>사이트 확장을 게시했으므로 사이트에 설치할 수 있습니다.</p>\n<ol>\n<li>먼저 디버그 콘솔을 사용하여 사이트에서 FileCounterMVC 폴더를 삭제하여 아무 것도 없는지 확인합니다. \n<li>\"portal.azure.com\" -&gt; \"웹 사이트 찾아보기\" -&gt; \"사이트 이름\"으로 이동합니다. \n<li>사이트 블레이드 아래쪽에서 \"확장\"이라는 부분을 클릭한 다음 \"추가\"를 클릭합니다.<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/21AzureGallery.png\"><img title=\"21-AzureGallery\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"21-AzureGallery\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/21AzureGallery_thumb.png\" width=\"1784\" height=\"1036\"></a> <br>\n<li>옵션 목록에서 새 확장을 찾을 수 있습니다.&nbsp; 이를 선택하고 약관에 동의한 다음 \"확인\"을 클릭합니다.&nbsp; 이렇게 하면 수동으로 수행했던 것처럼 사이트 확장을 설치하고 사이트를 다시 시작합니다.<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/22azuregalleryclean.png\"><img title=\"22-azuregallery-clean\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"22-azuregallery-clean\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/22azuregalleryclean_thumb.png\" width=\"1788\" height=\"1035\"></a><br> \n<li>포털에서 \"성공\"을 보고한 후 \"설치된 사이트 확장\" 블레이드를 열고 \"파일 카운터 MVC\" 확장을 클릭할 수 있습니다.&nbsp; 새 블레이드에서 \"찾아보기\"를 클릭하여 확장으로 직접 이동하여 작동하는지 확인합니다.<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/23siteextensionbrowse.png\"><img title=\"23-siteextensionbrowse\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"23-siteextensionbrowse\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/23siteextensionbrowse_thumb.png\" width=\"1784\" height=\"1036\"></a><br> </li></ol>\n<h4>MyGet에서 호스트되는 프라이빗 사이트 확장 갤러리에 게시</h4>\n<p>사이트 확장을 공개적으로 사용할 수 있도록 설정하지 않거나 SiteExtensions.net 사용을 커밋하지 않고 전체 워크플로를 테스트하려는 경우 프라이빗 피드를 사용하도록 사이트를 구성할 수 있습니다. 이 예제에서는 프라이빗 MyGet 피드를 사용하여 내 사이트 확장을 호스트하는 방법을 안내합니다.</p>\n<ol>\n<li>브라우저를 열고 <a href=\"https://www.myget.org/\">https://www.myget.org/</a>으로 이동합니다. \n<li>계정이 없는 경우 로그인하거나 등록합니다. \n<li>새 피드를 만들고 \"패키지 추가\" 단추를 클릭합니다.<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/24mygetupload.png\"><img title=\"24-myget-upload\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"24-myget-upload\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/24mygetupload_thumb.png\" width=\"1289\" height=\"658\"></a> <br>\n<li>이전에 만든 nupkg 패키지를 선택하고 \"추가\"를 클릭합니다.\n<li>\"피드 세부 정보\" 페이지로 이동하여 \"피드 URL\"을 기록해 둡니다.<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/25mygetcopyfeed.png\"><img title=\"25-myget-copyfeed\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"25-myget-copyfeed\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/25mygetcopyfeed_thumb.png\" width=\"1287\" height=\"570\"></a> <br>\n<li>로 돌아갑니다<a href=\"https://portal.azure.com\">https://portal.azure.com</a>.&nbsp; 사이트 블레이드를 열고 \"사이트 설정\" 부분을 클릭합니다. \n<li>\"사이트 설정\" 블레이드에서 SCM_SITEEXTENSIONS_FEED_URL라는 앱 설정을 추가하고 해당 값을 MyGet 피드로 설정합니다.&nbsp; 그런 다음 \"저장\"을 클릭합니다.<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/26portalappsetting.png\"><img title=\"26-portal-appsetting\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"26-portal-appsetting\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/26portalappsetting_thumb.png\" width=\"1923\" height=\"1033\"></a><br> \n<li>\"성공\" 메시지가 표시되면 \"사이트\" 블레이드에서 \"확장\" 부분을 클릭하고 이전과 같이 확장을 추가합니다.&nbsp; 이제 피드에서 사용할 수 있는 확장과 몇 가지 다른 특수 확장만 표시해야 하므로 확장 목록이 평소보다 작다는 것을 알 수 있습니다. </li></ol>"
