### YamlMime:Yaml
ms.openlocfilehash: c363df24f3e8c0b9434d96b9c0c8203878e7018c
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905552"
Slug: device-provisioning-identity-attestation-with-tpm
Title: '디바이스 프로비전: TPM을 사용하여 ID 증명'
Summary: IoT Hub Device Provisioning Service를 사용하여 디바이스를 안전하게 프로비전하는 사람들은 HSM(하드웨어 보안 모듈)을 사용하여 디바이스에 키를 저장하기 시작할 기회를 얻게 됩니다.
Content: >-
  <p><a href="https://docs.microsoft.com/en-us/azure/iot-dps">IoT Hub Device Provisioning Service를 사용하여 디바이스를 안전하게 프로비전하는</a> 사람들은 HSM(하드웨어 보안 모듈)을 사용하여 디바이스에 키를 저장하기 시작할 기회를 얻게 됩니다. 하드웨어 보안 모듈은 암호화 키 및 작업을 보호합니다. HSM은 디바이스 소프트웨어 및 펌웨어 버그로 인한 주요 손상에 대해 높은 수준의 보호를 제공하며 일반적으로 하드웨어 공격에 대한 좋은 보호를 제공합니다. 하드웨어 기반 보안은 디바이스 복제의 위험을 줄이고, 공급망 보안을 개선할 수 있으며, Device Provisioning Service를 사용하여 안전하고 신뢰할 수 있는 디바이스 등록을 부트스트랩할 수 있습니다. 일부 사용자는 HSM을 사용하는 데 익숙하지 않을 수 있으며, Device Provisioning Service가 디바이스 ID의 유효성&rsquo;을 검사하는 방법, 특히 TPM&rsquo;을 사용하는 경우, 그리고 왜 그렇게 안전한지 정확히 궁금해합니다. 이 게시물에서는 TPM을 사용할 때 ID 증명 프로세스를 설명합니다.</p>


  <p>TPM은 신뢰할 수 있는 플랫폼 모듈을 의미하며 HSM의 한 유형입니다. 이 블로그 게시물에서는 불연속, 펌웨어 또는 통합 TPM을 사용하는 것으로&rsquo; 가정합니다. 소프트웨어 에뮬레이트된 TPM은 프로토타이핑 또는 테스트에 적합하지만 불연속, 펌웨어 또는 통합 TPM이 제공하는 것과 동일한 수준의 보안을 제공하지 않습니다. 프로덕션 환경에서 소프트웨어 TPM을 사용하지 마세요&rsquo;. TPM 형식에 대해 <a href="https://trustedcomputinggroup.org/wp-content/uploads/TPM-2.0-A-Brief-Introduction.pdf" target="_blank">자세히 알아봅니다</a>.</p>


  <p>이 문서는 인증을 위해 X.509 인증서를 사용하는 디바이스가 아니라 HMAC 키 지원 및 인증 키가 있는 TPM 2.0을 사용하는 디바이스에만 관련이 있습니다. TPM은 신뢰할 수 있는 컴퓨팅 그룹의 업계 전체 ISO 표준이며 <a href="https://trustedcomputinggroup.org/tpm-library-specification/">전체 TPM 2.0 사양</a> 또는 <a href="https://www.iso.org/standard/66510.html">ISO/IEC 11889 사양</a>에서 TPM에 대해 자세히 확인할 수 있습니다. X.509 인증서를 사용하는 Device Provisioning Service의 보안 하드웨어에 대해 자세히 알아보려면 <a href="https://azure.microsoft.com/en-us/blog/azure-iot-supports-new-security-hardware-to-strengthen-iot-security/">이 블로그 게시물을</a> 확인하세요. 이 문서에서는 공개 및 프라이빗 키 쌍과 암호화에 사용되는 방법을 잘 알고 있다고 가정합니다.</p>


  <p>&rsquo;Device Provisioning Service 디바이스 SDK &ndash; 를 사용하여 이 모든 혼란을 처리하므로 이 중 어떤 작업도&rsquo; 구현할 필요가 없습니다&rsquo;. TPM을 새로운 일부 사람들은 보안 칩으로 무슨 일이 일어나고 있는지&rsquo;, 왜 그렇게&rsquo; 안전한지 더 잘 이해하기를 원하며,이 게시물은 그들을 위한 것입니다.</p>


  <p>TPM은 신뢰의 보안 루트로 EK(인증 키)라고 하는 것을 사용합니다. EK는 TPM에 고유하며 이를 기본적으로 변경하면 디바이스를 새 디바이스로 변경합니다. &#39;SRK(스토리지 루트 키)라고 하는 TM에 있는 또 다른 유형의 키가 있습니다. SRK는 TPM의 소유권을 가져온 후 TPM&#39;소유자가 생성할 수 있습니다. TPM의 소유권을 가져오는 것은 누군가가 HSM에서 암호를 설정한다고 말하는 &quot;TPM 관련 방법입니다.&quot; TPM 디바이스를 새 소유자에게 판매하는 경우 새 소유자는 TPM의 소유권을 가져와 새 SRK를 생성할 수 있습니다. 그러면 이전 소유자가 TPM을 사용하지&#39;수 있습니다. SRK는 TPM의 소유자에게 고유하므로 해당 소유자에 대한 TPM 자체로 데이터를 봉인하는 데 SRK를 사용할 수 있습니다. SRK는 해당 키를 저장하도록 소유자에 대한 샌드박스를 제공하고 디바이스 또는 TPM이 판매되는 경우 액세스 취소 가능성을 제공합니다. 그것은 새로운 집으로 이동처럼&#39;: 소유권을 복용하는 것은 문에 자물쇠를 변경하고 이전 소유자 (SRK)에 의해 남아있는 모든 가구를 파괴하지만, 당신은 집의 주소를 변경할&#39;없습니다 (EK). 그것은&#39;완벽한 비유는 아니지만, 당신은 아이디어를 얻을. 디바이스가 설정되고 사용할 준비가 되면 EK 및 SRK를 모두 사용할 수 있습니다.</p>


  <p style="text-align: center;"><br>

  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c14c9f70-bc9f-42af-82cf-3522d755806c.png"><img alt="image" border="0" height="233" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/29da2da6-f812-47ed-b5b4-ca4dae9cfdf8.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="이미지" width="610"></a></p>


  <p>TPM의 소유권을 가져오는 한 가지 참고 사항: TPM의 소유권을 가져오는 것은 TPM 제조업체, 사용 중인 TPM 도구 집합 및 디바이스 OS를 비롯한 많은 것들에 따라 달라집니다. 시스템과 관련된 지침을 따라 소유권을 가져옵니다.</p>


  <p>디바이스 프로비저닝 서비스는 EK(EK_pub)의 공용 부분을 사용하여 디바이스를 식별하고 등록합니다. 디바이스 공급 업체는 제조 또는 최종 테스트하는 동안 EK_pub를 읽을 수 있으며 프로비전에 연결할 때 디바이스를 인식할 수 있도록 EK_pub를 프로비저닝 서비스에 업로드할 수 있습니다. Device Provisioning Service는 SRK 또는 소유자를 확인하지 않으므로 &ldquo;TPM을&rdquo; 지우면 고객 데이터가 지워지지만 EK(및 기타 공급업체 데이터)는 유지되며 프로비전에 연결할 때 Device Provisioning Service에서 디바이스를 계속 인식합니다.</p>


  <p>TPM이 있는 디바이스를 디바이스 프로비저닝 서비스에 처음 연결하면 서비스는 먼저 등록 목록에 저장된 EK_pub에 대해 제공된 EK_pub를 확인합니다. EK_pub가 일치하지 않는 경우 디바이스는 프로비전되지 않습니다. EK_pub가 일치하는 경우 서비스는 디바이스에서 nonce 챌린지를 통해 EK의 프라이빗 부분 소유권을 증명하도록 요구하며, 이는 ID를 증명하는 데 사용되는 안전한 챌린지입니다. 디바이스 프로비저닝 서비스는 nonce를 생성한 다음, 초기 등록 호출 중에 디바이스에서 제공되는 SRK 및 EK_pub로 이를 차례로 암호화합니다. TPM은 항상 EK 보안의 프라이빗 부분을 유지합니다. 이렇게 하면 위조를 방지하고 SAS 토큰이 권한 있는 디바이스에 안전하게 프로비전됩니다.</p>


  <p>&rsquo;증명 프로세스를 자세히 살펴보겠습니다.</p>


  <p><strong>1단계: </strong> 디바이스가 Device Provisioning Service에 처음 연결하고 프로비저닝을 요청하면 TPM에서 등록 ID, ID 범위 및 EK_pub 및 SRK_pub 서비스를 제공합니다. 서비스는 디바이스에 암호화된 nonce를 다시 전달하고 디바이스에서 nonce의 암호를 해독하고 다시 연결하고 프로비전을 마치도록 SAS 토큰에 서명하는 데 사용하도록 요청합니다.</p>


  <p>&nbsp;</p>


  <p style="text-align: center;"><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b468b985-bcdd-4778-a402-0d9e93700a21.png"><img alt="image" border="0" height="263" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a99e09a4-5fd4-45c0-8fe4-39f425c7ee0c.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="이미지" width="610"></a></p>


  <p><strong>2단계:</strong> 디바이스는 nonce를 사용하고 EK 및 SRK의 프라이빗 부분을 사용하여 nonce를 TPM으로 해독합니다. nonce 암호화의 순서는 변경할 수 없는 EK에서 SRK로 트러스트를 위임하며, 새 소유자가 TPM의 소유권을 가져오는 경우 변경이 가능합니다.</p>


  <p>&nbsp;</p>


  <p style="text-align: center;"><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8b338b49-b44d-463b-8308-3455eb59fbe5.png"><img alt="image" border="0" height="342" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/50cd0f99-4bb7-4ce4-a8b7-8d568258e238.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="이미지" width="330"></a></p>


  <p><strong>3단계:</strong> 그런 다음, 디바이스는 암호 해독된 nonce를 사용하여 SAS 토큰에 서명하고 서명된 SAS 토큰을 사용하여 Device Provisioning Service에 대한 연결을 다시 설정할 수 있습니다. Nonce 챌린지가 완료되면 서비스는 디바이스에서 프로비전을 허용합니다.</p>


  <p>&nbsp;</p>


  <p style="text-align: center;"><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5b780932-fa49-4bd1-bda0-afebc3cf3b11.png"><img alt="image" border="0" height="233" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0c2a25a1-2ab2-48de-be43-19214bebeb6d.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="이미지" width="610"></a></p>


  <p>이제 디바이스가 IoT Hub에 연결할 수 있으며, 디바이스&rsquo; 키가 안전하게 저장되어 있다는 사실에 안심할 수 있습니다. 이제 Device Provisioning Service가 TPM을 사용하여 디바이스&rsquo; ID를 안전하게 확인하는 방법을 알게 되었으므로 SDK <a href="https://docs.microsoft.com/en-us/azure/iot-dps/quick-setup-auto-provision">를 사용하여 자동 프로비저닝을 사용하여</a> 흐름을 처리할 수 있습니다.</p>


  <p>리머릭으로 요약하려면 다음을 수행합니다.</p>


  <p>멋진 nonce 챌린지가 식별합니다.<br>

  권한을 부여하려는 디바이스<br>

  그리고 자동 프로비전<br>

  ID 정밀도<br>

  TPMs&rsquo; 키 스토리지 연습</p>
