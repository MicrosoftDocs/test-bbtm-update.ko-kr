### YamlMime:Yaml
ms.openlocfilehash: ba3190924703e159fa7da5246057c6be255073a1
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905701"
Slug: windows-azures-flat-network-storage-and-2012-scalability-targets
Title: Azure의 Flat Network Storage 및 2012 확장성 목표 Windows
Summary: 올해 초, 모든 데이터 센터에 azure를 Windows 위한 플랫 네트워크를 배포하여 Windows Azure Storage 위한 플랫 네트워크 Storage(FNS)를 만들었습니다. 우리는 평면 네트워크 디자인을 사용하여 ...
Content: '<p>올해 초, 모든 데이터 센터에 azure를 Windows 위한 플랫 네트워크를 배포하여 Windows Azure Storage 위한 플랫 네트워크 Storage(FNS)를 만들었습니다. 스토리지 클라이언트에 매우 높은 대역폭 네트워크 연결을 제공하기 위해 플랫 네트워크 디자인을 사용했습니다. 이 새로운 네트워크 디자인 및 결과 대역폭 향상을 통해 <a href="https://www.windowsazure.com/en-us/home/scenarios/virtual-machines/" target="_blank">Windows Azure Virtual Machines</a>를 지원할 수 있으며, 여기서 VM <a href="https://blogs.msdn.com/b/windowsazurestorage/archive/2012/06/28/exploring-windows-azure-drives-disks-and-images.aspx" target="_blank">영구 디스크</a>를 Windows Azure Storage 지속형 네트워크 연결된 Blob으로 저장할 수 있습니다. 또한 새 네트워크 디자인을 사용하면 컴퓨팅과 스토리지 간에 상당한 대역폭이 필요할 수 있는 MapReduce 및 HPC와 같은 시나리오를 사용할 수 있습니다.</p>  <p>Windows 시작부터 고객 VM 기반 계산을 스토리지와 분리하여 각각 독립적으로 확장할 수 있도록 하여 다중 테넌트 제공을 더 쉽게 하고 격리를 더 쉽게 제공하기로 결정했습니다. 해결해야 하는 시나리오에 대해 이 작업을 수행하려면 네트워크 규모 및 처리량의 양자 도약이 필요했습니다. 그 결과 FNS에서 Windows Azure 네트워킹 팀(Albert Greenberg 아래)과 Windows Azure Storage, 패브릭 및 OS 팀이 몇 가지 하드웨어 및 소프트웨어 네트워킹 개선 사항을 만들고 배포했습니다.</p>  <p>새 스토리지 하드웨어 및 높은 대역폭 네트워크에 대한 변경 사항은 아래에 설명된 대로 1세대(Gen 1) 하드웨어와 비교할 때 2세대 스토리지(Gen 2)의 상당한 개선 사항으로 구성됩니다.</p>  <table border="1" cellspacing="0" cellpadding="0">  <tbody>  <tr>  <td valign="top" width="66">  <p>Storage SKU</p>  </td>  <td valign="top" width="120">  <p>노드 네트워크 속도 Storage</p>  </td>  <td valign="top" width="162">  <p>컴퓨팅과 Storage 간의 네트워킹</p>  </td>  <td valign="top" width="126">  <p>Load Balancer</p>  </td>  <td valign="top" width="145">  <p>저널링에 사용되는 Storage 디바이스</p>  </td>  </tr>  <tr>  <td valign="top" width="66">  <p>Gen 1</p>  </td>  <td valign="top" width="120">  <p>1Gbps</p>  </td>  <td valign="top" width="162">  <p>계층적 네트워크</p>  </td>  <td valign="top" width="126">  <p>하드웨어 Load Balancer</p>  </td>  <td valign="top" width="145">  <p>하드 드라이브</p>  </td>  </tr>  <tr>  <td valign="top" width="66">  <p>Gen 2</p>  </td>  <td valign="top" width="120">  <p>10Gbps</p>  </td>  <td valign="top" width="162">  <p>플랫 네트워크</p>  </td>  <td valign="top" width="126">  <p>소프트웨어 부하 분산 장치</p>  </td>  <td valign="top" width="145">  <p>SSD</p>  </td>  </tr>  </tbody>  </table>  <p>&nbsp;</p>  <p>Gen 2 SKU의 배포는 소프트웨어 개선 사항과 함께 <a href="https://research.microsoft.com/pubs/80693/vl2-sigcomm09-final.pdf" target="_blank">플랫 네트워크</a> 토폴로지에서 컴퓨팅과 스토리지 간에 상당한 대역폭을 제공합니다. Windows Azure용 플랫 네트워크의 특정 구현을 Quantum 10(Q10&rdquo;) 네트워크 아키텍처라고 합니다&ldquo;. Q10은 완전히 차단되지 않는 10Gbps 기반의 완전 메시된 네트워크를 제공하여 각 Windows Azure 데이터 센터에 대해 50Tbps를 초과하는 집계 백플레인을 제공합니다. 안정성 및 처리량의 또 다른 주요 개선 사항은 하드웨어 부하 분산 장치에서 소프트웨어 부하 분산 장치로 이동하는 것입니다. 그런 다음 여기에 설명된 스토리지 아키텍처 및 디자인이 새로운 Q10 네트워크를 완전히 활용하여 Windows Azure Storage 플랫 네트워크 스토리지를 제공하도록 조정되었습니다.</p>  <p>이러한 개선 사항을 통해 Gen 2 하드웨어 SKU에서 모든 새 스토리지 계정이 만들어지는 Windows Azure Storage 대한 확장성 목표의 증가를 발표하게 되어 기쁘게 생각합니다.<strong><em> </em></strong> 이러한 새로운 확장성 목표는 <strong><span style="text-decoration: underline;">2012년 6월 7<sup>일</sup></span></strong> 이후에 생성된 모든 스토리지 계정에 적용됩니다. 이 날짜 이전에 만든 Storage 계정에는 <a href="https://blogs.msdn.com/b/windowsazurestorage/archive/2010/05/10/windows-azure-storage-abstractions-and-their-scalability-targets.aspx" target="_blank">여기에</a> 설명된 이전 확장성 목표가 있습니다. 아쉽게도 스토리지 계정을 마이그레이션하는 기능은 제공하지 않으므로 2012년 6월 7<sup>일</sup> 이후에 생성된 스토리지 계정만 이러한 새로운 확장성 목표를 가지고 있습니다.</p>  <p>스토리지 계정의 생성 날짜를 확인하려면 새 포털로 이동하여 스토리지 계정을 클릭하고 아래와 같이 빠른 보기 섹션에서 오른쪽의 생성 날짜를 확인할 수 있습니다.</p>  <p><a href="" target="_blank"><img style="display: inline; background-image: none;" title="accountcreationdate" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2211.accountcreationdate_5F00_thumb_5F00_4696B3CC.jpg" alt="accountcreationdate" width="728" height="625" border="0"></a></p>  <h4>Storage 계정 확장성 목표</h4>  <p>2012년 말까지 플랫 네트워크 디자인에 대한 소프트웨어 개선 사항을 롤아웃할 예정입니다. 6월 7<sup>일</sup> 이후에 만든 <strong>단일 스토리지 계정에</strong> 대해 다음과 같은 확장성 <strong>목표를</strong> 제공합니다. 2012.</p>  <ul>  <li><strong>용량</strong> &ndash; 최대 200TB</li>  <li><strong>트랜잭션을</strong> &ndash; 초당 최대 20,000개의 엔터티/메시지/Blob</li>  <li><strong>지역 중복</strong><strong> 스토리지 계정</strong><strong>의 대역폭 </strong>  <ul>  <li>수신 - 초당 최대 5기가비트</li>  <li>Egress - 초당 최대 10기가비트</li>  </ul>  </li>  <li><strong>로컬 중복</strong><strong> 스토리지 계정</strong><strong>의 대역폭 </strong>  <ul>  <li>수신 - 초당 최대 10기가비트</li>  <li>Egress - 초당 최대 15기가비트</li>  </ul>  </li>  </ul>  <p>Storage 계정에는 지역 중복 Storage 제공하는 지역 복제가 기본적으로 설정됩니다. 고객은 지역 복제를 해제하여 로컬 중복 Storage 사용하여 지역 중복 Storage 더 높은 수신 및 송신 대상(2012년 말까지)에 비해 할인된 가격을 제공할 수 있습니다. 지역 중복 Storage 및 로컬 중복 Storage 대한 자세한 내용은 여기를 참조하세요.</p>  <p>스토리지 계정에서 달성한 실제 트랜잭션 및 대역폭 대상은 개체 크기, 액세스 패턴 및 애플리케이션이 나타내는 워크로드 유형에 따라 크게 달라집니다. 이러한 목표를 초과하려면 여러 스토리지 계정을 사용하고 Blob 컨테이너, 테이블 및 큐 및 개체를 해당 스토리지 계정 간에 분할하도록 서비스를 빌드해야 합니다. 기본적으로 단일 Windows Azure 구독은 20개의 스토리지 계정을 가져옵니다&nbsp;. 그러나 데이터(예: 페타바이트)를 더 저장해야 하는 경우 <a href="https://support.microsoft.com/oas/default.aspx?prid=13185&amp;st=1" target="_blank">고객 지원에</a> 문의하여 더 많은 스토리지 계정을 가져올 수 있습니다.</p>  <h4>파티션 확장성 대상</h4>  <p>스토리지 계정 내에서 모든 개체는 <a href="https://blogs.msdn.com/b/windowsazurestorage/archive/2010/05/10/windows-azure-storage-abstractions-and-their-scalability-targets.aspx" target="_blank">여기에</a> 설명된 대로 파티션으로 그룹화됩니다. 따라서 스토리지 추상화 <strong>에 대한 단일 파티션의 성능 목표를</strong> 이해하는 것이 중요합니다(아래 큐 및 테이블 처리량은 1KB의 개체 크기를 사용하여 달성됨).</p>  <ul>  <li><strong>단일 큐</strong>&ndash; 큐의 모든 메시지는 단일 큐 파티션을 통해 액세스됩니다. 단일 큐는 다음을 처리할 수 있도록 대상으로 지정됩니다.  <ul>  <li>초당 최대 2,000개의 메시지</li>  </ul>  </li>  <li><strong>단일 테이블 파티션</strong>&ndash; 테이블 파티션은 파티션 키 값이 동일한 테이블의 모든 엔터티이며 일반적으로 테이블에는 많은 파티션이 있습니다. 단일 테이블 파티션의 처리량 대상은 다음과 같습니다.  <ul>  <li>초당 최대 2,000개 엔터티</li>  <li>단일 테이블이 아닌 단일 파티션에 대한 것입니다. 따라서 분할이 좋은 테이블은 위에서 설명한 전체 계정 대상인 초당 최대 20,000개의 엔터티를 처리할 수 있습니다.</li>  </ul>  </li>  <li><strong>단일 Blob</strong>&ndash; Blob의 파티션 키는 &ldquo;컨테이너 이름 + Blob 이름&rdquo;이므로 Blob을 파티션당 단일 Blob으로 분할하여 서버 전체에 Blob 액세스를 분산할 수 있습니다. 단일 Blob의 대상 처리량은 다음과 같습니다.  <ul>  <li>최대 60MBytes/sec</li>  </ul>  </li>  </ul>  <p>위의 처리량은 하이 엔드 대상입니다. 애플리케이션에서 수행할 수 있는 작업은 액세스하는 개체의 크기, 작업 유형(워크로드) 및 액세스 패턴에 따라 달라집니다. 모든 서비스에서 워크로드에 대한 파티션 수준에서 성능을 테스트하는 것이 좋습니다.</p>  <p>애플리케이션이 워크로드에 대해 파티션이 처리할 수 있는 제한에 도달하면 503 Server Busy&rdquo; 또는 &ldquo;500 작업 시간 제한&rdquo; 응답을 다시 &ldquo;가져오기 시작합니다. 이 경우 애플리케이션은 재시도에 지수 백오프를 사용해야 합니다. 지수 백오프는 파티션에 대한 부하를 감소시키고 해당 파티션에 트래픽의 급증을 완화할 수 있습니다.</p>  <p>요약하면 플랫 네트워크 스토리지를 제공하는 첫 번째 단계를 발표하게 되어 기쁩니다. 컴퓨팅과 스토리지 간의 대역폭을 개선하고 시간이 지남에 따라 스토리지 계정 및 파티션의 확장성 목표를 높이는 데 계속 투자할 계획입니다.</p>  <p>브래드 칼더와 아론 오구스<br>Microsoft Azure Storage</p>'
