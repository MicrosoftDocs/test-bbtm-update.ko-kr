### YamlMime:Yaml
ms.openlocfilehash: 612af54b52a0a731b31cc82b02b8942d1e015601
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139898829"
Slug: versions-revisions
Title: 버전 & 수정 버전
Summary: 오늘 Azure API Management에서 버전 및 수정 버전에 대한 지원의 공개 미리 보기를 발표하게 되어 기쁩니다! 이 새로운 기능을 사용하면 API의 변경 및 수명 주기를 관리하는 방법을 유연하게 제어할 수 있습니다.
Content: >-
  <p>오늘 Azure API Management에서 버전 및 수정 버전에 대한 지원의 공개 미리 보기를 발표하게 되어 기쁩니다! 이 새로운 기능을 사용하면 API의 변경 및 수명 주기를 관리하는 방법을 유연하게 제어할 수 있습니다.</p>


  <h2>버전 &amp; 수정 내용이란?</h2>


  <p>이러한 용어는 두 가지 고유하지만 관련된 기능이므로 먼저 이러한 용어 &ndash; 의 의미를 설명하는 데 도움이 됩니다.</p>


  <ul>
      <li>버전을 사용하면 관련 API 그룹을 개발자에게 표시할 수 있습니다. 버전은 버전 번호(선택한 값의 문자열) 및 버전 관리 체계(경로, 쿼리 문자열 또는 헤더)를 통해 차별화됩니다.</li>
      <li>수정 버전을 통해 안전한 제어 방식으로 API를 변경할 수 있습니다. 변경하려면 새 수정 버전을 만듭니다. 그런 다음 API 소비자를 방해하지 않고 API를 편집 및 테스트할 수 있습니다. 준비가 되면 수정 버전을 동시에 최신 상태로 &ndash; 만들 수 있으며, 새 변경 로그에 항목을 게시하여 API 소비자가 변경된 내용을 최신 상태로 유지할 수 있습니다.</li>
  </ul>


  <h2>그렇다면 이러한 새로운 기능으로 무엇을 할 수 있을까요?</h2>


  <p>수정 버전으로 다음을 수행할 수 있습니다.</p>


  <ul>
      <li>프로덕션 API를 방해하지 않고 API Management API 정의 &amp; 정책을 안전하게 변경합니다.</li>
      <li>게시하기 전에 변경 내용을 사용해 보세요.</li>
      <li>개발자가 새로운 기능을 이해할 수 있도록 변경 내용을 문서화합니다.</li>
      <li>문제가 발견되면 롤백합니다.</li>
  </ul>


  <p>버전을 사용하면 다음을 수행할 수 있습니다.</p>


  <ul>
      <li>여러 버전의 API를 동시에 게시</li>
      <li>경로/쿼리 문자열 또는 헤더를 사용하여 버전을 구분합니다.</li>
      <li>버전을 식별하려는 문자열 값(숫자, 날짜, 이름)을 사용합니다.</li>
      <li>개발자 포털에서 함께 그룹화된 API 버전을 표시합니다.</li>
  </ul>


  <p>새 Azure Portal에서 API 화면의 상황에 맞는 메뉴에서 버전 및 수정 버전 기능을 찾을 수 있어야 합니다.</p>


  <h2>FAQ</h2>


  <p><strong>Q. 버전 수정 버전을 &amp; 사용해야 하나요?</strong><br>

  A. 아니요! 기존 고객은 이전과 마찬가지로 API Management를 계속 사용할 수 있습니다. 유일한 차이점은 각 API에 하나의 수정 버전이 있다는 것입니다(어떤 방식으로든 해당 API의 작업에 영향을 미치지 않아야 합니다).</p>


  <p><strong>Q. 버전 &amp; 수정 버전을 함께 사용해야 하나요?</strong><br>

  A. 아니요! 버전을 사용할 수 있고 수정 버전을 사용할 수 없으며 버전이 아닌 수정 버전을 사용할 수 있습니다.</p>


  <p><strong>Q. 버전 &amp; 수정은 어떻게 관련되어 있나요?</strong><br>

  A. 각 버전에는 버전이 없는 API와 마찬가지로 여러 개의 수정 버전이 있을 수 있습니다. 수정 버전에 호환성이 손상되는 변경 내용이 있거나 정식으로 수정 버전을 베타/테스트 버전으로 전환하려는 경우 수정 버전 탭의 수정 상황에 맞는 메뉴에서 수정&rsquo; 버전에서 버전 만들기를 선택할 &lsquo;수 있습니다.</p>


  <p><strong>Q. 새 API를 만드는 Im&rsquo;입니다. 처음부터 버전을 사용하도록 설정해야 하나요?</strong><br>

  A. API에 대한 사용 사례에 따라 달라지므로 이에 대한 단점은 없습니다.</p>


  <p><strong>Q. 수정 버전을 사용하여 오류/오류가 발생할 경우 변경 내용을 롤백할 수 있나요?</strong><br>

  A. 예</p>


  <p><strong>Q. 수정 버전이 소스 제어 또는 CI/CD 시스템을 대체합니까?</strong><br>

  A. 아니요. 수정은 제어의 추가 계층입니다. API Management 서비스와 함께 CI/CD 시스템, GIT, VSTS, ARM 등을 사용하는 경우 계속 수행해야 합니다.</p>


  <p><strong>Q. 개발자가 수정 개인 URL을 볼 수 있나요?</strong><br>

  A. 수정 버전&rsquo; 개인 URL을 사용하려면 호출자가 호출을 구성하기 위해 수정 번호를 알고 있어야 하지만, 수정 버전의 개인 주소는 현재 수정 버전과 동일한 보안 컨텍스트를 갖습니다(물론 해당 수정 버전에서 의도적으로 변경하지 않는 한 정책 변경). 테스트에 사용하지 않는 경우 개인 수정 URL을 사용하지 않도록 설정하는 것이 좋습니다.</p>


  <p>이해하고 시작하는 데 도움이 되도록 다음을 살펴보세요.</p>


  <ul>
      <li>자체 Darrel Miller <a href="https://blogs.msdn.microsoft.com/apimanagement/2017/09/13/api-versioning-with-azure-api-management/">를 사용하여 API 버전 관리</a> 이해; 그리고 어떻게 이 기능을 빌드하기로 결정했습니다.</li>
      <li><a href="https://docs.microsoft.com/en-us/azure/api-management/api-management-get-started-revise-api">수정 버전을 시작합니다</a>.</li>
      <li><a href="https://docs.microsoft.com/en-us/azure/api-management/api-management-get-started-publish-versions">버전을 시작합니다</a>.</li>
      <li>아래 비디오에서 이 기능이 종단 간 작동 방식을 확인하세요.</li>
  </ul>
