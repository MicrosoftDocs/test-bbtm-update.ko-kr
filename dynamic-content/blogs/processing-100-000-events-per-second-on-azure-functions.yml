### YamlMime:Yaml
ms.openlocfilehash: 432ed1060ddd6dfded9f1334a17332022190bfcd
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900971"
Slug: processing-100-000-events-per-second-on-azure-functions
Title: Azure Functions에서 초당 100,000개 이벤트 처리
Summary: 고객은 종종 Azure Functions에 대한 소비 계획의 확장성 및 처리량 제한에 대해 문의합니다. 짧은 대답은 항상 "워크로드의 모양에 따라 달라집니다."입니다.
Content: >-
  <p>고객은 <a href="https://azure.microsoft.com/en-us/services/functions/" target="_blank">종종 Azure Functions</a>에 대한 소비 계획의 확장성 및 처리량 제한에 대해 문의합니다. 짧은 대답은 항상 &ldquo;워크로드의 모양&rdquo;에 따라 달라집니다. 오늘은 Azure Functions에서 대규모 Event Hub/IOT Hub 워크로드를 실행하는 방법과 플랫폼에서 얻을 수 있는 성능을 최대화하기 위해 알아야 할 몇 가지 주요 사항에 대해 이야기하고 싶습니다.</p>


  <p><a href="https://blogs.msdn.microsoft.com/azurecat/2017/01/05/hello-world-welcome-to-azurecat-guidance/">Azure CAT 팀과</a> 협력하여 Azure Functions 및<a href="https://azure.microsoft.com/en-us/services/event-hubs/"> Event Hubs</a>를 사용하여 간단하지만 대표적인 이벤트 처리 파이프라인을 빌드하고 원격 분석이 <a href="https://azure.microsoft.com/en-us/services/application-insights/">Application Insights</a> 진행됩니다.</p>


  <p style="text-align: center;"><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/845cecf2-f8a7-436d-88d8-1d38bc1d019e.png"><img alt="image1" border="0" height="360" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e919f9db-bc0f-48bf-b5b7-05765bf310f0.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="image1" width="1022"></a></p>


  <p>또한 Functions에서 실행되는 부하 생성기는 수집 이벤트 허브에 일괄 처리된 메시지를 씁니다. 이러한 메시지는 지정된 센서의 판독값 집합을 나타냅니다. 함수는 수집 이벤트 허브에서 메시지를 선택하고, 일괄 처리에서 개별 판독값을 추출하고, 대상 이벤트 허브에 기록하여 그 과정에서 추가 원격 분석으로 메시지를 보강합니다. 소비 계획에서 동일한 함수 앱 내에 있는 두 개의 함수는 각각 개별 판독값을 처리하고 집계된 원격 분석을 App Insights 보냅니다.</p>


  <h2>성능</h2>


  <p>총 9일 동안 초당 100,000개의 이벤트 대상 부하로 시스템을 실행했습니다. 이 기간 동안 시스템은 총 760억 개의 이벤트를 처리했습니다. 예를 들어, 수집 허브에 메시지를 쓰고 날씨/지진 함수에서 메시지를 처리하는 데 걸리는 시간 등 파이프라인의 e2e 대기 시간을 측정했습니다. 결과는 다음과 같습니다.</p>


  <p>E2E 대기 시간 백분위수</p>


  <table border="1" cellpadding="0" cellspacing="0" class="MsoNormalTable" style="border: currentcolor; border-image: none; border-collapse: collapse; mso-border-alt: solid #a3a3a3 .5pt; mso-yfti-tbllook: 1184; mso-padding-alt: 0in 0in 0in 0in;" summary="" title="" width="1758">
   <tbody>
    <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes;">
     <td style="padding: 4pt; border: 1pt solid rgb(163, 163, 163); border-image: none;" valign="top" width="237">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>P50</b></p>
     </td>
     <td style="border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: rgb(163, 163, 163) rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; border-image: none; mso-border-left-alt: solid #a3a3a3 1.0pt;" valign="top" width="237">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>P90</b></p>
     </td>
     <td style="border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: rgb(163, 163, 163) rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; border-image: none; mso-border-left-alt: solid #a3a3a3 1.0pt;" valign="top" width="237">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>P95</b></p>
     </td>
     <td style="border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: rgb(163, 163, 163) rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; border-image: none; mso-border-left-alt: solid #a3a3a3 1.0pt;" valign="top" width="256">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>P99</b></p>
     </td>
     <td style="border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: rgb(163, 163, 163) rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; border-image: none; mso-border-left-alt: solid #a3a3a3 1.0pt;" valign="top" width="256">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>P99.9</b></p>
     </td>
     <td style="border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: rgb(163, 163, 163) rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; border-image: none; mso-border-left-alt: solid #a3a3a3 1.0pt;" valign="top" width="276">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>P99.99</b></p>
     </td>
     <td style="border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: rgb(163, 163, 163) rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; border-image: none; mso-border-left-alt: solid #a3a3a3 1.0pt;" valign="top" width="254">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;"><b>Max</b></p>
     </td>
    </tr>
    <tr style="mso-yfti-irow: 1; mso-yfti-lastrow: yes;">
     <td style="border-width: medium 1pt 1pt; border-style: none solid solid; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163); padding: 4pt; border-image: none; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="237">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">1,102.42ms</p>
     </td>
     <td style="border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; mso-border-left-alt: solid #a3a3a3 1.0pt; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="237">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">2,755.56ms</p>
     </td>
     <td style="border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; mso-border-left-alt: solid #a3a3a3 1.0pt; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="237">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">3,788.30ms</p>
     </td>
     <td style="border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; mso-border-left-alt: solid #a3a3a3 1.0pt; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="256">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">11,894.12ms</p>
     </td>
     <td style="border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; mso-border-left-alt: solid #a3a3a3 1.0pt; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="256">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">50,367.23ms</p>
     </td>
     <td style="border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; mso-border-left-alt: solid #a3a3a3 1.0pt; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="276">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">111,240.50ms</p>
     </td>
     <td style="border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: currentcolor rgb(163, 163, 163) rgb(163, 163, 163) currentcolor; padding: 4pt; mso-border-left-alt: solid #a3a3a3 1.0pt; mso-border-top-alt: solid #a3a3a3 1.0pt;" valign="top" width="254">
     <p style="margin: 0in 0in 0pt; vertical-align: baseline;">239,890.10ms</p>
     </td>
    </tr>
   </tbody>
  </table>


  <p>간단히 설명합니다.</p>


  <ul>
   <li>
   <p>메시지의 절반이 수집 허브에 기록된 후 1.2초 이내에 처리되었습니다.</p>
   </li>
   <li>
   <p>10개 메시지 중 9개가 3초 만에 처리되었습니다.</p>
   </li>
   <li>
   <p>1000개 메시지 중 999개가 1분 만에 처리되었습니다.</p>
   </li>
   <li>
   <p>모든 메시지는 5분 안에 처리되었습니다.</p>
   </li>
  </ul>


  <h2>모니터링</h2>


  <p>Azure Functions에는 WebJobs 대시보드 및 애플리케이션 Insights 두 가지 기본 제공 모니터링 솔루션이 있습니다. Azure Functions와 App Insights 간의 통합은 현재 미리 보기로 제공됩니다. 대시보드는 더 오래 실행되는 작업을 염두에 두고 설계되었으며 초당 10,000개 이상의 함수 실행이 발생하는 시나리오에 최적화되지 않았습니다&rsquo;. 다행히 App Insights 매우 강력한 원격 분석 시스템이며&rsquo; 대규모 시나리오에서 Azure Functions와 잘 작동하도록 했습니다.</p>


  <p>App Insights를 켜는 것은 정말 쉽습니다. 함수 앱에 계측 키를 추가하면 Azure Functions가 자동으로 App Insights 데이터를 보내기 시작합니다. 자세한 내용은 블로그 &quot; 를 참조하세요. <a href="https://blogs.msdn.microsoft.com/appserviceteam/2017/04/06/azure-functions-application-insights/" target="_blank">이제 Azure Functions는 Application Insights 직접 통합됩니다</a>.&quot;</p>


  <p>Azure 대시보드는 매우 사용자 지정할 수 있으며 앱 Insights 시각적 구성 요소를 고정하는 데 큰 지원을 제공합니다. 이 시나리오에 매우 유용한 모니터링 대시보드를 구성하는 데 한두 시간밖에 걸리지 않습니다.</p>


  <p style="text-align: center;"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/eee53d00-4335-4036-9c98-15c7dd72d9c5.png"></p>


  <h2>구성</h2>


  <p>이 결과를 달성하기 위해 몇 가지 주목할 만한 구성을 선택했습니다.</p>


  <ul>
   <li>
   <p>함수는 메시지를 일괄 처리로 처리합니다.</p>
   </li>
   <li>
   <p>모니터링 및 원격 분석에 애플리케이션 Insights 사용하기 위해 WebJobs 대시보드를 사용할 수 없습니다.</p>
   </li>
   <li>
   <p>각 이벤트 허브는 100개의 파티션으로 구성됩니다.</p>
   </li>
  </ul>


  <ul>
   <li>
   <p>데이터가 파티션 키 없이 이벤트 허브로 전송됩니다.</p>
   </li>
   <li>
   <p>프로토콜 버퍼를 사용하여 이벤트가 직렬화됩니다.</p>
   </li>
  </ul>


  <p>이러한 각 항목에 대한 자세한 내용은 아래를 참조하세요.</p>


  <h2>일괄 처리</h2>


  <p>이벤트 허브 트리거 함수를 작성하여 단일 메시지 또는 메시지 일괄 처리를 처리할 수 있습니다. 후자는 훨씬 더 나은 성능 특성을 가지고 있습니다. 분할자 함수를 예로 들어 줍니다.</p>


  <pre>

  public static async Task Run(


  EventData[] sensorEvent,


  PartitionContext partitionContext,


  IAsyncCollector&lt;EventData&gt; outputWeatherData,


  IAsyncCollector&lt;EventData&gt; outputSeismicData,


  TraceWriter log)


    {

     foreach (var sensorData in sensorEvent)

      {


  SensorType sensorType = SensorType.Unknown;

     try

        {                   

     if (sensorData.Properties.ContainsKey(&quot;SensorType&quot;))

          {


  System.Enum.TryParse(sensorData.Properties[&quot;SensorType&quot;].ToString(), out sensorType);


          }


          await ProcessEvent(sensorData, sensorType, partitionContext, outputWeatherData, outputSeismicData);


        }


  catch(Exception ex)


        {


  telemetryHelper.PostException(ex, sensorData, partitionContext.Lease.PartitionId, sensorType.ToString());


        }


      }                                   


    }</pre>


  <p>이 코드에 대해 유의해야 할 주요 사항은 다음과 같습니다.</p>


  <ul>
   <li>
   <p>이벤트 배열은 한 번의 실행으로 함수에 전달됩니다.</p>
   </li>
   <li>
   <p>예외 처리 블록은 각 이벤트의 처리를 래핑합니다.</p>
   </li>
  </ul>


  <p>배열 기반 접근 방식은 주로 함수 실행 오버헤드별로 수행되기 때문에 더 나은 성능을 제공합니다. 시스템은 함수를 호출할 때 여러 작업을 수행하며 이러한 작업은 이벤트당 한 번이 아닌 이벤트 배열에 대해 한 번만 수행됩니다. JavaScript 함수의 경우&rsquo; 일괄 처리를 사용하도록 설정하려면 function.json의 카디널리티 속성을 많은 것으로 명시적으로 설정해야 합니다. GitHub <a href="https://github.com/Azure/azure-webjobs-sdk-templates/blob/df94e19484fea88fc2c68d9f032c9d18d860d5b5/Functions.Templates/Templates/EventHubTrigger-JavaScript/function.json">일괄 처리를 사용하도록 설정하는 예제를</a> 찾을 수 있습니다.</p>


  <p>메시지를 손실하거나 건너뛰지 않도록&rsquo; 하려는 경우 예외 처리에 대한 이 접근 방식이 중요합니다. 일반적으로&rsquo; 나중에 처리 및 분석을 위해 실패한 이벤트를 저장하기 위해 예외 처리기를 작성합니다. Azure Functions에는 Event Hubs에 대한 배달 못한 편지가 기본 제공되어 있지 않기 때문에 이 작업이 중요합니다.</p>


  <h2>WebJobs 대시보드</h2>


  <p>위에서 설명한 것처럼 모니터링에 앱 Insights 사용했기 때문에 대시보드를 사용하지 않도록 설정했습니다. 이렇게 하려면 애플리케이션 설정으로 이동하여 AzureWebJobsDashboard 설정을 제거하면 됩니다.</p>


  <h2>파티션 구성</h2>


  <p>Azure Functions는 Event Hubs SDK에 제공된 EventProcessorHost를 사용하여 이벤트 허브 메시지를 처리합니다. 자세한 내용은 <a href="https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-programming-guide" target="_blank">Azure Event Hubs에 대한 프로그래밍 가이드</a> 설명 &quot; 서를 참조하세요.&quot; EventProcessorHost가 작동하는 방식은 앱을 실행하는 각 VM이 일부 파티션에 대한 임대를 획득하여 해당 파티션에서 메시지를 처리할 수 있도록 하는 것입니다. 즉, 이벤트 허브에 파티션이 두 개만 있는 경우 지정된 시간에 두 개의 VM만 메시지를 처리할 수 있습니다. 즉, 파티션 수가 함수의 확장성에 상한을 줍니다.</p>


  <p>Event Hubs의 기본 및 표준 계층에는 이벤트 허브당 32개의 파티션의 기본 제한이 있지만 <a href="https://portal.azure.com/" target="_blank">청구 지원에</a> 문의하면 이 제한을 늘릴 수 있습니다. 이벤트 허브를 100개의 파티션으로 설정하여 각 함수는 100개의 VM에서 동시에 실행할 수 있었습니다. 날씨 함수를 실행한 고유 VM의 수를 계산하여 원격 분석의 1분을 살펴보면 이를 확인할 수 있습니다.</p>


  <p style="text-align: center;"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/875b464a-0582-4168-920f-a8654c9275d7.png"></p>


  <p>다른 간단한 쿼리를 사용하여 이러한 94개 VM에 대해 작업이 얼마나 균등하게 분산되었는지 확인할 수 있습니다.</p>


  <p style="text-align: center;"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6be8d4fc-0265-467d-b5cc-52babc9d90b5.png"></p>


  <p style="text-align: center;"><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d50a9927-3e25-4ea5-ab33-85eaa0c03a5f.png"></p>


  <h2>파티션 키</h2>


  <p>Event Hubs 프로그래밍 가이드에는 파티션 키와 사용하려는 경우에 대한 <a href="https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-programming-guide" target="_blank">요약</a> 이 있습니다. 이 시나리오에는 정렬 또는 상태 저장 요구 사항이 없으므로 파티션 키 없이 이벤트가 생성되었습니다. 이렇게 하면 실행에 대한 전체 처리량 및 가용성이 증가했습니다.</p>


  <h2>프로토콜 버퍼</h2>


  <p>초당 100,000개 이상의 이벤트를 작성하고 읽는 경우&rsquo; 직렬화 단계를 수행하는 데 걸린 시간과 와이어의 크기 모두에서 해당 이벤트의 직렬화 및 역직렬화를 최대한 효율적으로 수행하려고 합니다. <a href="https://developers.google.com/protocol-buffers/" target="_blank">프로토콜 버퍼</a> 는 사용하기 쉬운 고성능 직렬화 형식입니다. 다음은&rsquo; 이벤트에서 날씨 판독값 일괄 처리를 역직렬화하고 처리하는 몇 가지 예제 코드입니다.</p>


  <pre>

  if (sensorType == SensorType.Weather)


  {

    var batch = WeatherReadingBatch.Parser.ParseFrom(sensorData.GetBytes());

    var messages = batch.SensorReadings

  .Select(reading =&gt; EnrichData(enqueuedTime, reading));

    await WriteOutput(messages, sensorData.PartitionKey, outputWeatherData);

  }</pre>


  <p>&rsquo;이 시나리오에 사용되는 .proto 파일을 보려면 <a href="https://gist.github.com/paulbatum/c918e19cadb43fdfcce978d58d97d235" target="_blank">GitHub 프로토콜 버퍼 예제를</a> 참조하세요.</p>


  <h2>Cost</h2>


  <p>함수 앱을 실행하는 데 드는 총 비용과 9일 실행의 종속성은 약 $1,200 USD였습니다. 각 서비스에 대한 시간당 비용은 다음과&rsquo; 같습니다.</p>


  <table border="1" cellpadding="0" cellspacing="0">
   <tbody>
    <tr>
     <td valign="top" width="443">
     <p><b>서비스</b></p>
     </td>
     <td valign="top" width="435">
     <p><b>시간당 비용(USD)</b></p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="443">
     <p>Functions</p>
     </td>
     <td valign="top" width="435">
     <p>$2.71</p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="443">
     <p>Storage</p>
     </td>
     <td valign="top" width="435">
     <p>$1.80</p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="443">
     <p>Application Insights</p>
     </td>
     <td valign="top" width="435">
     <p>$1.03</p>
     </td>
    </tr>
   </tbody>
  </table>


  <p>주의해야 할 몇 가지 중요한 사항은 다음과 같습니다.</p>


  <ul>
   <li>
   <p>이 데이터에는 부하 생성기 및 Event Hubs의 비용이 포함되지 않습니다. 이러한 데이터를 최적화하는 데 아무런 노력이 사용되지 않았기 때문이다.</p>
   </li>
   <li>
   <p>Azure Storage 비용은 시간당 약 5천만 개의 트랜잭션을 기반으로 합니다. 거의 모든 트랜잭션은 Event Hubs 검사점과 관련이 있습니다.</p>
   </li>
   <li>
   <p>애플리케이션 Insights 비용은 시간당 450mb의 데이터 수집을 기반으로 합니다.</p>
   </li>
  </ul>


  <p>Azure Monitor REST API를 통해 사용할 수 있는 실행 수 및 실행 단위 데이터를 사용하여 함수 앱 비용을 자세히 살펴볼 수 있습니다. 자세한 내용은<a href="https://stackoverflow.com/questions/41128329/how-can-i-programmatically-access-azure-functions-usage-metrics" target="_blank"> Stack Overflow 포럼</a>을 참조하세요. 1시간 동안 데이터를 쿼리하면 다음이 제공됩니다.</p>


  <ul>
   <li>
   <p>함수 실행 수: 6,500,012</p>
   </li>
   <li>
   <p>함수 실행 단위: 90,305,037,184</p>
   </li>
  </ul>


  <p>여기서 함수 실행 단위는 mb-밀리초 단위로 측정됩니다. 이를 gb-초로 변환하려면 1024000으로 나눕니다. 함수에 <a href="https://azure.microsoft.com/en-us/pricing/details/functions/" target="_blank">대한 가격 책정 세부 정보와</a> 지원하기 위해 작성한 <a href="https://gist.github.com/paulbatum/2b16c5f92351ed1c59e3a2b8a727ca97" target="_blank">간단한 프로그램을 </a>찾을 수 있습니다.</p>


  <p>시간당 비용 = (6,500,012 실행 * ( $ 0.20 / 1,000,000)) + ((90,305,037,184 단위 / (1024 * 1000)) * $ 0.0000016) = $ 2.71 USD</p>


  <p>요약</p>


  <p>Azure Functions에 대한 사용 계획은 수백 개의 VM에서 실행되도록 앱을 확장할 수 있으므로 엄청난 양의 컴퓨팅 용량을 미리 예약하고 비용을 지불하지 않고도 고성능 시나리오를 사용할 수 있습니다. Azure Functions 및 서버리스 기술에서 클라우드 애플리케이션 빌드에 대한 자세한 내용은<a href="https://azure.microsoft.com/en-us/services/functions/" target="_blank"> Functions 제품 페이지에서 시작합니다</a>.</p>
