### YamlMime:Yaml
ms.openlocfilehash: 89cd20751c05ebf2b1bbab81064eb62b6a06a1b1
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139898998"
Slug: enabling-resilient-devops-practices-with-code-to-cloud-automation
Title: 클라우드 자동화에 대한 코드를 사용하여 복원력 있는 DevOps 사례 사용
Summary: Microsoft Ignite에서는 Azure 및 GitHub 통합의 증가하는 카탈로그에 추가된 Azure용 새로운 GitHub Actions를 발표했으며, 곧 더 많은 작업이 출시될 예정입니다.
Content: >-
  <p><em>이 블로그 게시물은 우샤 나라야나바타 제품 관리자가 공동 저술한 GitHub.</em></p>


  <p>디지털 트랜스포메이션이 발전함에 따라 고객 기대치도 개선되었습니다. 기업은 사용자 기반에 거의 또는 전혀 방해가 되지 않는 빈번한 버그 방지 업데이트를 릴리스하여 지속적인 가치를 제공할 것으로 예상됩니다. 국가와 정부가 엄격한 새로운 데이터와 보안 조치를 시행함에 따라 이것은 작은 위업이 아닙니다.</p>


  <p>그렇다면 기업이 원격으로 작업해야 하는 전염병 속에서 거버넌스, 보안 및 규정 준수 표준을 유지하면서 더 빠르게 배송할 수 있는 방법은 무엇일까요?</p>


  <p><a href="https://aka.ms/devopsreport" target="_blank">2020-2021년 Enterprise DevOps</a> 보고서에 따르면, 조사 대상 기업의 80%가 왼쪽에서 이동하거나 거버넌스,&rdquo; 보안 및 규정 준수를 SDLC(소프트웨어 개발 수명 주기)의 초기 단계로 자동화하기 시작했다고 &ldquo;답했습니다. 이러한 기업은 빌드 및 릴리스 워크플로&rsquo;를 자동화할 뿐만 아니라 모든 것을 코드&rdquo;로 사용하는 &ldquo;사고방식을 채택하고 있습니다. 이러한 변화는 인프라 구성 및 릴리스 파이프라인뿐만 아니라 규정 준수 및 보안 정책도 코드&rdquo;로 작성&ldquo;되어 지속적인 개선을 가능하게 하면서 재사용, 복원력 향상 및 투명성 향상을 촉진한다는 것을 의미합니다.</p>


  <p>&rsquo;이 모든 것을 염두에 두고 GitHub Actions 포트폴리오를 계속 구체화, 업데이트 및 추가할 수 있습니다. <a href="https://aka.ms/MS-Ignite-Session-Resiliant-DevOps-Practices" target="_blank">Microsoft Ignite</a>에서는 Azure 및 GitHub 통합의 증가하는 카탈로그에 추가된 Azure용 새로운 GitHub Actions를 발표<a href="https://aka.ms/GitHubActionsforAzureDocs" target="_blank">했으며</a> 곧 추가될 예정입니다. Azure용 GitHub Actions를 사용하면 여러 Azure servicesfrom&mdash; 웹 애플리케이션을 Kubernetes에 서버리스 함수로 배포하고, Azure SQL 및 MySQL 데이터베이스&mdash;에 배포하여 기업이 복원력을 유지하는 동시에 SDLC를 관리하는 자동화된 워크플로를 유연하게 빌드할 수 있도록 지원합니다.</p>


  <h2>GitHub 코드로 Azure Policy 관리</h2>


  <p>클라우드 거버넌스 과정을 진행하면서 Azure Portal에서 각 정책을 수동으로 관리하는 것에서 엔터프라이즈 규모에서 보다 관리 가능하고 협업적이며 반복 가능한 것으로 전환해야 하는 필요성이 증가하고 있습니다. Azure Policy와 GitHub 통합하여 이 여정을 더욱 강력하게 지원한다고 발표했습니다. 이제 몇 번의 클릭만으로 Azure 정책을 GitHub 리포지토리로 쉽게 내보낼 수 있습니다. 내보낸 모든 정책은 GitHub 파일로 저장됩니다. 그런 다음, 버전 제어를 사용하여 변경 내용을 공동 작업하고 추적하고 Azure Policy 관리 작업을 사용하여 정책 파일 변경 내용을 <a href="https://github.com/marketplace/actions/manage-azure-policy" target="_blank">Azure Policy</a> 에 푸시할 수 있습니다. 자세한 내용은 <a href="https://aka.ms/AA9ojd6" target="_blank">GitHub 사용하여 Azure Policy를 Code로 관리하는</a> 방법을 참조하고 <a href="https://aka.ms/policyascode" target="_blank">Azure Policy</a>로 이동하여 기능에 액세스하세요.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/af5cb530-1ec0-4062-a9b3-facc3b10e553.png"><img alt="Export policy to GitHub." border="0" height="768" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/385a8bf1-35dd-494e-af1b-eea7092fb5fa.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="983"></a></p>


  <h2>ARM 인프라를 코드로 배포</h2>


  <p>클라우드로 전환하면서 많은 팀이 클라우드에 솔루션을 반복적으로 배포하고 인프라가 안정적인 상태인지 확인해야 합니다. 이러한 문제를 해결하기 위해 ARM(Azure Resource Management) 템플릿을 사용하여 코드로 배포해야 하는 인프라를 정의하여 배포를 자동화할 수 있습니다.</p>


  <p>이 문제를 해결하기 위해 <a href="https://github.com/marketplace/actions/deploy-azure-resource-manager-arm-template" target="_blank">Azure Resource Manager 템플릿 배포 작업을</a> 릴리스합니다. 이 작업을 사용하면 워크플로를 자동화하여 ARM 템플릿을 배포하고 Azure 리소스를 관리할 수 있습니다. 이 작업은 모든 <a href="https://docs.microsoft.com/Azure/azure-resource-manager/resource-group-template-deploy-rest#deployment-scope" target="_blank">배포 범위</a>에서 ARM 템플릿을 배포하는 데 사용할 수 있습니다. 리소스 그룹, 구독 또는 관리 그룹 범위 이 ARM 배포 작업의 출력은 추가 처리를 위해 워크플로 내의 후속 작업에서도 사용할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0b4886af-e4e9-42bc-8ec5-c459a18b7152.png"><img alt="Deploy ARM templates." border="0" height="2072" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0a3f839a-a590-4508-b258-9f0c7f315abc.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="ARM 템플릿을 배포합니다." width="3584"></a></p>


  <h2>변경할 수 없는 인프라를 위한 Azure Virtual Machine 이미지 빌드</h2>


  <p>새로 출시된 <a href="https://aka.ms/build-vm-image-action" target="_blank">Azure Virtual Machine 이미지 빌드</a> 작업을 사용하면 VM(가상 머신) 이미지를 사용자 지정, 생성 및 배포하는 작업이 더 쉬워졌습니다. 이제 이 작업을 사용하여 지속적인 업데이트 워크플로에서 생성된 아티팩트가 포함된 사용자 지정 VM 이미지를 만들고, <a href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/shared-images-portal" target="_blank">공유 이미지 갤러리</a> 버전 또는 관리형 이미지 또는 VHD(가상 하드 디스크)로 배포하고<a href="https://aka.ms/AA9ny4b" target="_blank">, GitHub Azure Portal</a> 간에 완전한 추적 가능성을 얻을 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b1c30090-54a0-49f1-8957-46fb5735f8a4.png"><img alt="Virtual machine image gallery." border="0" height="604" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a7344646-06db-40b1-8efa-b01a3d938dad.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="1178"></a></p>


  <h2>Azure Portal에서 GitHub 커밋으로 Kubernetes 변경 내용 추적</h2>


  <p><a href="https://github.com/Azure/k8s-deploy" target="_blank">Kubernetes 클러스터에 배포 작업은</a> 이제 Azure Portal에서 변경 로그 보기가 변경 내용을 배포하는 데 사용된 특정 GitHub 워크플로에 배포된 정확한 GitHub 커밋 및 문제에서 AKS(Azure Kubernetes Service) 클러스터에서 수행된 모든 배포를 추적할 수 있도록 향상되었습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/816dc15d-d2b3-4a7a-a80d-cf5780b3eff3.png"><img alt="A changelog view in the Azure portal." border="0" height="522" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6cbda55e-2faa-4948-8d03-89a0da20abce.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="Azure Portal의 변경 로그 보기입니다." width="1709"></a></p>


  <h2>끌어오기 요청 워크플로의 일부로 컨테이너 이미지 검사</h2>


  <p>이제 <a href="https://github.com/Azure/container-scan" target="_blank">컨테이너 검사 작업을</a> 워크플로에 추가하고 추가 검사를 추가하여 CI(연속 통합) 또는 PR(끌어오기 요청) 워크플로의 일부로 만든 Docker 이미지를 보호할 수 있습니다. 이를 통해 개발자는 Docker 이미지의 일반적인 취약성을 검색하고 컨테이너 레지스트리로 푸시하거나 컨테이너화된 웹앱 또는 Kubernetes 클러스터에 배포하기 전에 자신감을 얻을 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b84e1a53-02ab-4a5f-8400-e4f9f3df7672.png"><img alt="Container scanning action results." border="0" height="960" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/86405469-d1ec-4dfa-aaca-b983e57cf4c2.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="컨테이너 검사 작업 결과입니다." width="1911"></a></p>


  <p>&nbsp;</p>


  <h2>시작</h2>


  <p>시작하려면 GitHub, <a href="https://github.com/Azure/build-vm-image" target="_blank">Azure Virtual Machine 배포</a>, <a href="https://github.com/Azure/arm-deploy" target="_blank">ARM 템플릿 배포 작업</a> 및 <a href="https://github.com/Azure/container-scan" target="_blank">컨테이너 검사 작업</a>과 Azure <a href="https://aka.ms/AA9ojd6" target="_blank">Policy 통합</a>에 대한 설명서를 확인하세요.</p>


  <p>또한 이제 GITHUB Actions를 CI/CD 공급자로 지원하는 향상된 DevOps <a href="https://aka.ms/devopsstarterforgithub" target="_blank">시작</a> 환경을 자유롭게 탐색할 수 있습니다. 이 새로운 향상된 기능을 통해 개발자는 간단한 4단계만으로 샘플 애플리케이션에 대한 엔드 투 엔드 GitHub 워크플로를 설정할 수 있습니다.</p>


  <p>이러한 기능에 대한 변경 내용&rsquo;이나 제안이 있는 경우, wed&rsquo;는 끌어오기 요청을 수행하는 <a href="https://github.com/azure/actions" target="_blank">GitHub Action 리포지</a>&mdash;토리에&rsquo; 대한 기여뿐만 아니라 피드백을 좋아합니다. 특정 작업에 문제가 발생하는 경우 작업 리포지토리에서 문제를 열 수도 있습니다.</p>


  <ul>
      <li><a href="https://aka.ms/GitHubandAzure" target="_blank">Azure와의 더 GitHub 통합을 확인하여 코드-클라우드 워크플로를 자동화합니다</a>.</li>
      <li><a href="https://github.com/Azure/actions" target="_blank">GitHub 작업의 포괄적인 목록을 확인합니다</a>.</li>
  </ul>
