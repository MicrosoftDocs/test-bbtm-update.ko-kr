### YamlMime:Yaml
ms.openlocfilehash: 5ef0c7a84add2fc6705956240bac848be7bf2bcf
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139912247"
Slug: why-the-windows-azure-platform-appliance-is-so-important-to-me
Title: Windows Azure 플랫폼 어플라이언스는 나에게 매우 중요한 이유
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] DBA로서 여기에서 발표된 Windows Azure 플랫폼 어플라이언스의 가장 중요한 점은 SQL 서버 기술의 번역입니다.'
Content: '<p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>여기서 발표된 <i>Windows Azure 플랫폼 어플라이언스의</i> 가장 중요한 점은 DBA로서 모든 배포 시나리오에서 설정된 SQL 서버 기술의 번역입니다. 데이터베이스 기술이 확장 가능하고 도구가 공유되기 때문에 지식은 이식 가능합니다. 기술 번역은 데이터베이스 이식성과 함께 제공됩니다.</p>  <p>SQL Express를 사용하여 데스크톱 애플리케이션에서 SQL Server 플랫폼 데이터베이스를 다음으로 이동할 수 있습니다.</p>  <ul>   <li>온-프레미스 SQL Server 설치 Enterprise </li>    <li>클라우드의 오프-프레미스 SQL Azure </li>    <li>Windows Azure 플랫폼 어플라이언스의 프라이빗 클라우드 배포. </li> </ul>  <p>이러한 광범위한 사용 시나리오 집합을 다루는 다른 단일 플랫폼은 없습니다. Microsoft SQL Server 플랫폼은 최대 4GB의 무료 SQL Server Express 데이터베이스에서 수천 테라바이트의 스토리지를 호스팅하는 온-프레미스 SQL Server 설치, 클라우드의 탄력적이고 신뢰할 수 있는 SQL Azure 데이터베이스에 이르는 시나리오를 다룹니다. 다양한 제품 집합을 통해 여러 시나리오에서 SQL Server 지식을 활용할 수 있습니다. </p>  <p>기술 번역이 중요한 이유 중 하나는 기술 세트를 가져와서 다양한 시나리오를 포괄하는 데 사용할 수 있기 때문입니다. 우리 대부분은 단일 프로젝트에서 일하거나 항상 같은 문제를 해결하지 않을 것입니다. 우리는 경력에서 다양한 데이터 시나리오를 사용하여 다양한 목표를 달성하고 모든 것을 성취 할 수있는 단일 정신 도구 세트를 갖는 것이 좋습니다. 다음은 SQL Server 및 SQL Azure 잘 처리하는 몇 가지 시나리오입니다(컨텍스트에 대한 링크 사용).</p>  <ul>   <li>웹 사이트의 가동 시간 99.9% 연결 전달 블로그 게시물을 참조하세요. </li>    <li>지리적 중복성, 1부 및 2부 </li>    <li>데이터베이스 웨어하우징, <a href="https://www.microsoft.com/sqlserver/2008/en/us/data-warehousing.aspx">Microsoft 개요</a>. </li>    <li>비즈니스 인텔리전스: Power Pivot 블로그 게시물, <a href="https://www.microsoft.com/sqlserver/2008/en/us/business-intelligence.aspx">Microsoft 개요</a>. </li> </ul>  <p>이식성과 데이터 전송성이 중요한 또 다른 이유는 데이터베이스 변경 요구 사항으로 회사에서 SQL Azure SQL Server 전환할 수 있기 때문입니다. 성장은 성숙 비즈니스의 한 가지 변동 구성 요소일 뿐이며, 다른 데이터베이스 기술을 배우지 않고 데이터베이스 솔루션 간에 이동할 수 있기를 원하거나 더 나쁜 경우 회사는 다른 사람을 고용해야 합니다. SQL Azure SQL Server 간의 유사성은 매우 가깝기 때문에 서로 쉽게 이동하고 데이터를 쉽게 전송할 수 있습니다.</p>  <p>DBA로서, 나는 거의 회사의 비즈니스 목표를 설정할 수있는 기회를 얻을 수 없습니다. 한 프로젝트에는 온-프레미스 SQL Server 설치가 필요할 수 있습니다. 하나는 SQL Azure 안정성이 필요할 수 있습니다. 두 프로젝트 간에 동기화 설정이 모두 필요할 수 있습니다. 일반적으로 나에게 달려 있지 않습니다. 어느 쪽이든 이식 가능한 기술을 사용하면 작업에 가장 적합한 데이터베이스 솔루션을 선택하여 작업을 완료할 수 있습니다. 이에 대해 생각하는 또 다른 방법은 데이터베이스 프로젝트가 솔루션으로 제한되지 않는다는 것입니다. 즉, 직원이 하나의 솔루션만 알고 있기 때문에 솔루션으로 제한되지 않습니다.</p>  <h2>추가 보너스: 데이터 전송</h2>  <p>이러한 다양한 배포 간에 지식이 전송되는 것처럼 데이터와 스키마를 쉽게 전송할 수 있습니다. SQL Server Management Studio, SSIS, bcp 유틸리티 및 기타 타사 도구와 같은 도구를 사용하면 더 큰 확장성, 안정성 및 성능이 필요하므로 솔루션 간에 이동할 수 있습니다. Microsoft는 배포 솔루션 간에 데이터 및 스키마를 이동하기 위한 도구를 지속적으로 개선할 것입니다.</p>  <h2>요약</h2>  <p>Microsoft 데이터 플랫폼 DBA 기술을 SQL Server 뿐만 아니라 SQL Azure 기술로 생각하기 시작합니다. SQL Azure 알아보는 데 시간이 걸리면 SQL Server 기술이 SQL Azure 밀접하게 반영되고 광범위한 배포 솔루션을 수행할 수 있습니다. 질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다. </p>'
