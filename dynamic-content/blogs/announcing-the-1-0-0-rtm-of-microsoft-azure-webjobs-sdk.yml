### YamlMime:Yaml
ms.openlocfilehash: ed75ebba06badc03eb0c9c70a0638a663129ec15
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899078"
Slug: announcing-the-1-0-0-rtm-of-microsoft-azure-webjobs-sdk
Title: Microsoft Azure WebJobs SDK의 1.0.0 RTM 발표
Summary: 이제 NuGet 갤러리에서 WebJobs SDK를 다운로드할 수 있으며 NuGet 패키지 관리자 콘솔을 사용하여 NuGet 갤러리에서 이러한 패키지를 설치할 수 있습니다.
Content: >-
  <h2>이 릴리스에서 다운로드</h2>

  SDK는 Visual Studio 2013 업데이트 4 RC와 함께 제공되는 Azure WebJob 프로젝트 템플릿에 미리 설치되어 있습니다.


  NuGet 갤러리에서 WebJobs SDK를 다운로드할 수 있으며 다음과 같이 NuGet 패키지 관리자 콘솔을 사용하여 NuGet 갤러리에서 이러한 패키지를 설치할 수 있습니다.

  <blockquote>Microsoft.Azure.WebJobs Install-Package</blockquote>

  Microsoft Azure Service Bus 트리거를 사용하려면 다음 패키지를 설치합니다.

  <blockquote>Microsoft.Azure.WebJobs.ServiceBus Install-Package</blockquote>

  <h2>WebJobs SDK란?</h2>

  Microsoft Azure 웹 사이트의 <a href="https://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs/">WebJobs</a> 기능을 사용하면 웹 사이트에서 서비스 또는 백그라운드 작업과 같은 프로그램을 쉽게 실행할 수 있습니다. 실행 파일(예: <i>.exe</i>, <i>.cmd</i> 또는 <i>.bat</i> 파일)을 업로드하고 실행하여 트리거되거나 연속적인 WebJobs로 실행할 수 있습니다. WebJobs SDK가 없으면 백그라운드 작업을 연결하고 실행하려면 복잡한 프로그래밍이 많이 필요합니다. SDK는 일반적인 작업을 완료하기 위해 최소한의 코드를 작성할 수 있는 프레임워크를 제공합니다.


  WebJobs SDK에는 Service Bus 뿐만 아니라 Microsoft Azure Storage Blob, 큐 및 테이블과 함께 작동하는 바인딩 및 트리거 시스템이 있습니다. 바인딩 시스템을 사용하면 Microsoft Azure Storage 개체를 읽거나 쓰는 코드를 쉽게 작성할 수 있습니다. 트리거 시스템은 큐 또는 Blob에서 새 데이터를 받을 때마다 코드에서 함수를 호출합니다.

  <h2>WebJobs SDK에 대한 시나리오</h2>

  다음은 Azure WebJobs SDK로 보다 쉽게 처리할 수 있는 일반적인 시나리오입니다.

  <ul>
   <li><b>이미지 처리</b> 또는 기타 CPU 집약적 작업.</li>
   <li>백그라운드 스레드에서 실행하려는 기타 <b>장기 실행 작업</b> (예: 전자 메일 보내기). 앱이 일정 시간 동안 유휴 상태인 경우 IIS에서 앱을 재활용하므로 지금까지는 ASP.NET 이 작업을 수행할 수 없었습니다. 이제 Azure 웹 사이트의 <a href="https://weblogs.asp.net/scottgu/archive/2014/01/16/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance.aspx">Always On</a> 을 사용하면 앱이 유휴 상태일 때 웹 사이트가 재활용되지 않도록 할 수 있습니다. <a href="https://weblogs.asp.net/scottgu/archive/2014/01/16/windows-azure-staging-publishing-support-for-web-sites-monitoring-improvements-hyper-v-recovery-manager-ga-and-pci-compliance.aspx">Always On</a> 은 사이트가 절전 모드로 이동하지 않도록 합니다. 즉, WebJobs 및 WebJobs SDK를 사용하여 장기 실행 작업 또는 서비스를 실행할 수 있습니다.</li>
   <li><b>큐 처리</b>. 웹 프런트 엔드가 백 엔드 서비스와 통신하는 일반적인 방법은 큐를 사용하는 것입니다. 이는 일반적인 생산자인 소비자 패턴입니다.</li>
   <li><b>RSS 집계</b>. RSS 피드 목록을 유지 관리하는 사이트가 있는 경우 백그라운드 프로세스에서 피드의 모든 문서를 풀할 수 있습니다.</li>
   <li><b>로그 파일</b> 집계 또는 정리와 같은 파일 유지 관리</li>
   <li>CSV 판독기와 같은 <b>수신</b>, 로그 구문 분석 및 테이블에 데이터 저장.</li>
  </ul>

  <h2>SDK의 목표</h2>

  <ul>
   <li>백그라운드 처리 작업을 수행할 때 Azure Storage 더 쉽게 사용할 수 있는 방법을 제공합니다.</li>
   <li>SDK를 사용하면 Azure Storage 더 쉽게 작업할 수 있습니다. 스토리지에서 읽거나 쓰는 코드 작성을 처리할 필요가 없습니다.</li>
   <li>진단 및 로깅 코드를 작성하지 않고도 풍부한 진단 및 모니터링 환경을 제공합니다.</li>
  </ul>

  <h2>SDK의 기능</h2>

  <h3>트리거</h3>

  큐 또는 Blob에서 새 입력이 검색되면 함수가 실행됩니다.

  <h3>바인딩</h3>

  SDK는 C# 기본 형식과 Blob, 테이블, 큐 및 Service Bus 같은 Azure Storage 간에 모델 바인딩을 제공하는 바인딩을 지원합니다. 이렇게 하면 개발자가 Blob, 테이블 및 큐에서 쉽게 읽고 쓸 수 있습니다. 이렇게 하면 다음과 같은 이점이 제공됩니다.

  <ul>
   <li><b>편의성</b>. 사용하는 데 가장 유용한 형식을 선택할 수 있으며 WebJobs SDK는 글루 코드를 처리합니다. Blob에서 문자열 작업을 수행하는 경우 TextWriter로 변환하는 방법을 걱정하지 않고 TextReader/TextWriter에 직접 바인딩할 수 있습니다.</li>
   <li><b>플러시 및 닫기</b>: WebJobs SDK는 미해결 출력을 자동으로 플러시하고 닫습니다.</li>
   <li><b>단위 테스트 용이성</b>. SDK를 사용하면 ICloudBlob이 아닌 TextWriter와 같은 기본 형식을 모의할 수 있으므로 코드를 단위 테스트할 수 있습니다.</li>
   <li><b>진단</b>.모델 바인딩은 대시보드와 함께 작동하여 매개 변수 사용에 대한 실시간 진단을 제공합니다.</li>
  </ul>

  현재 지원되는 바인딩은 <b>Stream, TextReader/Writer 및 String입니다. </b> Storage SDK에서 사용자 지정 형식 및 기타 형식에 바인딩에 대한 지원을 추가할 수도 있습니다.

  <h2>Azure 큐</h2>

  SDK를 사용하여 큐의 새 메시지에 대한 함수를 트리거할 수 있습니다. SDK를 사용하면 String, Poco(일반 이전 CLR 개체), 바이트[] 및 Azure Storage SDK 형식에 바인딩할 수 있으므로 메시지 내용에 쉽게 액세스할 수 있습니다. 큐에 사용할 수 있는 다른 주요 기능은 다음과 같습니다.


  자세한 내용은 이 공지 게시물 <a href="https://azure.microsoft.com/blog/2014/09/06/announcing-the-0-5-0-beta-preview-of-microsoft-azure-webjobs-sdk/">0.5.0-beta</a>, <a href="https://azure.microsoft.com/blog/2014/08/21/announcing-the-0-4-0-beta-preview-of-microsoft-azure-webjobs-sdk/">0.4.0-beta</a> 및 <a href="https://azure.microsoft.com/blog/2014/06/18/announcing-the-0-3-0-beta-preview-of-microsoft-azure-webjobs-sdk/">0.3.0-beta</a> 를 참조하세요.

  <ul>
   <li>함수를 트리거하고 메시지 내용을 String, Poco(일반 이전 CLR 개체), 바이트[] 및 CloudQueueMessage에 바인딩합니다.</li>
   <li>큐에 단일 또는 여러 메시지를 보냅니다.</li>
   <li>큐를 사용한 병렬 실행: SDK는 QueueTrigger 내에서 큐에 대한 메시지를 병렬로 가져옵니다. 즉, 아래와 같이 함수가 큐에서 수신 대기하는 경우 SDK는 이 큐에 대해 16개의(기본값) 큐 메시지를 병렬로 일괄 처리합니다. 함수도 병렬로 실행됩니다.</li>
   <li>Azure 큐에서 포이즌 메시지 처리</li>
   <li>큐의 DequeueCount 속성에 액세스</li>
   <li>Azure 큐에 대한 더 나은 폴링 논리: SDK는 임의 지수 백오프 알고리즘을 구현하여 스토리지 트랜잭션 비용에 유휴 큐 폴링의 영향을 줄입니다.</li>
   <li>빠른 경로 알림: SDK를 사용하여 여러 큐에 메시지를 보내는 경우 SDK는 메시지를 빠르게 추적합니다.</li>
   <li>큐 폴링에 대한 구성 옵션: SDK는 큐 폴링 동작을 구성할 수 있는 몇 가지 노브를 노출합니다.
  <ul>
   <li>큐가 비어 있는 경우, 메시지를 확인하기 전에 대기하는 가장 긴 기간에 사용되는 MaxPollingInterval입니다. 기본값은 1분입니다.</li>
   <li>큐 메시지가 포이즌 큐로 이동되는 경우에 사용되는 MaxDequeueCount입니다. 기본값은 5입니다.</li>
  </ul>

  </li>

  </ul>

  <h3>Azure Blobs</h3>

  새 Blob이 검색되거나 기존 Blob이 업데이트될 때 SDK를 사용하여 함수를 트리거할 수 있습니다. SDK를 사용하면 Stream, String, Poco(일반 이전 CLR 개체), 바이트[], TextReader, TextWriter 및 Azure Storage SDK 형식에 바인딩할 수 있으므로 Blob 콘텐츠에 액세스할 수 있습니다.


  자세한 내용은 이 공지 게시물 <a href="https://azure.microsoft.com/blog/2014/09/06/announcing-the-0-5-0-beta-preview-of-microsoft-azure-webjobs-sdk/">0.5.0-beta</a>, <a href="https://azure.microsoft.com/blog/2014/08/21/announcing-the-0-4-0-beta-preview-of-microsoft-azure-webjobs-sdk/">0.4.0-beta</a> 및 <a href="https://azure.microsoft.com/blog/2014/06/18/announcing-the-0-3-0-beta-preview-of-microsoft-azure-webjobs-sdk/">0.3.0-beta</a> 를 참조하세요.

  <ul>
   <li>BlobTrigger는 새 Blob이 검색되거나 기존 Blob이 업데이트될 때만 트리거됩니다.</li>
   <li>Blob에 대한 재시도 및 오류 처리: 이 릴리스의 SDK는 Blob을 처리하는 동안 오류가 발생한 경우 함수 재시도에 대한 지원을 추가합니다. BlobTrigger는 지정된 최대 재시도 횟수까지 처리됩니다(기본값은 5회). 임계값에 도달하고 함수가 5번 실행되면 SDK는 "webjobs-blobtrigger-poison"이라는 메시지를 큐에 넣습니다. 이 큐에서 QueueTrigger를 사용하여 함수를 트리거하고 메시지의 사용자 지정 오류 처리를 수행할 수 있습니다.</li>
  </ul>

  <h3>Azure Storage 테이블</h3>

  SDK를 사용하면 테이블에 바인딩하고 읽기, 쓰기, 업데이트 및 삭제 작업을 수행할 수 있습니다.


  자세한 내용은 0.6.0-beta,0.5.0-beta,0.4.0-beta 및 <a href="https://azure.microsoft.com/blog/2014/06/18/announcing-the-0-3-0-beta-preview-of-microsoft-azure-webjobs-sdk/">0.3.0-beta</a>에 대한 공지 게시물을 참조하세요.<a href="https://blogs.msdn.com/b/webdev/archive/2014/09/12/announcing-the-0-6-0-beta-preview-of-microsoft-azure-webjobs-sdk.aspx"></a>  <a href="https://azure.microsoft.com/blog/2014/09/06/announcing-the-0-5-0-beta-preview-of-microsoft-azure-webjobs-sdk/"></a>  <a href="https://azure.microsoft.com/blog/2014/08/21/announcing-the-0-4-0-beta-preview-of-microsoft-azure-webjobs-sdk/"></a>


  수신은 Blob에 저장된 파일을 구문 분석하고 CSV 판독기와 같은 테이블에 값을 저장하는 일반적인 시나리오입니다. 이러한 경우 수신 함수는 많은 행(<i>경우에 따라 백만</i> 개)을 작성할 수 있습니다.


  WebJobs SDK를 사용하면 이 기능을 쉽게 구현할 수 있으며 테이블에 기록된 행 수와 같은 실시간 모니터링 기능을 추가하여 수신 함수의 진행률을 모니터링할 수 있습니다.

  <h3>Azure Service Bus</h3>

  Azure 큐와 마찬가지로 SDK를 사용하면 새 메시지가 Service Bus 큐 또는 토픽으로 전송되는 경우 함수를 트리거할 수 있습니다. SDK를 사용하면 String, Poco(일반 이전 CLR 개체), 바이트[] 및 BrokeredMessage에 바인딩할 수 있으므로 메시지 내용에 쉽게 액세스할 수 있습니다.


  자세한 내용은 <a href="https://azure.microsoft.com/blog/2014/06/18/announcing-the-0-3-0-beta-preview-of-microsoft-azure-webjobs-sdk/">0.3.0 베타</a> 에 대한 이 공지 게시물을 참조하세요.

  <h3>일반</h3>

  다음은 SDK의 다른 기능 중 일부입니다.

  <ul>
   <li><b>비동기 지원: </b> SDK는 비동기 함수를 지원합니다.</li>
   <li><b>CancellationTokens: </b> 함수는 함수에서 CancellationToken 매개 변수를 사용할 수 있으며 함수는 호스트에서 취소 요청을 받을 수 있습니다.</li>
   <li><b>NameResolver: </b> SDK에는 큐 이름 또는 Blob 이름의 원본을 지정할 수 있는 확장성 계층이 있습니다. 예를 들어 이 기능을 사용하여 구성 파일에서 큐 이름을 선택할 수 있습니다. 이 <a href="https://github.com/Azure/azure-webjobs-sdk-samples/tree/master/BasicSamples/MiscOperations">샘플을</a> 살펴보십시오.</li>
   <li><b>WebJobs 종료 알림: </b> WebJob에는 WebJob이 중지되면 알림을 발생시키는 정상적인 종료 알림 기능이 있습니다. SDK는 WebJob이 종료되는 경우 알림으로써 WebJobs에서 이 정상적인 종료를 지원합니다. 이 정보는 CancellationToken을 사용하여 함수로 전달됩니다. 다음 함수는 WebJob이 중지될 때 취소 요청을 수신하는 CancellationToken을 사용합니다.</li>
  </ul>

  <h2>WebJobs 모니터링을 위한 대시보드</h2>

  WebJobs가 실행되면 실시간으로 모니터링할 수 있습니다. 해당 상태(실행 중, 중지됨, 성공적으로 완료됨), 마지막 실행 시간 및 특정 실행의 로그를 볼 수 있습니다. 다음 스크린샷은 웹 사이트에서 실행되는 모든 WebJobs의 보기를 보여 줌.


  SDK를 사용하여 WebJob을 작성하면 프로그램의 함수에 대한 진단 및 모니터링 환경이 제공됩니다. 예를 들어 다음 흐름이 있는 "ImageResizeAndWaterMark"라는 이미지 처리 WebJob이 있다고 가정해 보겠습니다.


  사용자가 "images-input"이라는 Blob 컨테이너에 이미지를 업로드하면 SDK는 Resize 함수를 트리거합니다. 크기 조정은 이미지를 처리하고 워터마크 함수를 트리거하는 "images2-output" 컨테이너에 씁니다. 워터마크 함수는 이미지의 크기를 조정하고 "images3-output" Blob 컨테이너에 씁니다. 다음 코드는 위에서 설명한 WebJob을 보여줍니다.

  <pre class="prettyprint">public class ImageProcessing
      {
          public static void Resize(
              [BlobTrigger(@"images-input/{name}")] WebImage input,
              [Blob(@"images2-output/{name}")] out WebImage output)
          {
              var width = 80;
              var height = 80;
              output = input.Resize(width, height);
          }

          public static void WaterMark(
              [BlobTrigger(@"images2-output/{name}")] WebImage input,
              [Blob(@"image3-output/{name}")] out WebImage output)
          {
              output = input.AddTextWatermark("WebJobs", fontSize: 6);
          }
      }

      public class WebImageBinder : ICloudBlobStreamBinder&lt;WebImage&gt;
      {
          public Task&lt;WebImage&gt; ReadFromStreamAsync(Stream input, System.Threading.CancellationToken cancellationToken)
          {
              return Task.FromResult&lt;WebImage&gt;(new WebImage(input));
          }

          public Task WriteToStreamAsync(WebImage value, Stream output, System.Threading.CancellationToken cancellationToken)
          {
              var bytes = value.GetBytes();
              return output.WriteAsync(bytes, 0, bytes.Length);
          }
      }</pre>
  Azure에서 WebJob을 실행하는 경우 Windows Azure Websites 포털의 WEBJOBS 탭에서 "ImageResizeAndWaterMark"의 로그 링크를 클릭하여 WebJobs 대시보드를 볼 수 있습니다.


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/10/23/portal.png"><img style="border-width: 0px;" title="portal" alt="portal" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/portal_thumb.png" width="637" height="130" border="0" /></a>


  대시보드는 SiteExtension이므로 URL  <a href="https://mysite.scm.azurewebsites.net/azurejobs">https://mysite로 이동하여 액세스할 수 있습니다.<b> scm.azurewebsites.net/</b> <b>azurejobs</b></a><a href="https://mysite.scm.azurewebsites.net/azurejobs">.</a>  SiteExtension에 액세스하려면 배포 자격 증명이 필요합니다. 사이트 확장에 액세스하는 방법에 대한 자세한 내용은 Kudu 프로젝트의 설명서를 참조하세요. <a href="https://github.com/projectkudu/kudu/wiki/Accessing-the-kudu-service">https://github.com/projectkudu/kudu/wiki/Accessing-the-kudu-service</a>

  <h3>함수 실행 세부 정보</h3>

  이 "ImageResizeAndWaterMark" WebJob의 특정 실행을 모니터링하는 경우 다음과 같이 프로그램의 함수에 대한 호출 세부 정보를 볼 수 있습니다.

  <ul>
   <li>이 함수의 매개 변수는 무엇인가요?</li>
   <li>함수를 실행하는 데 걸리는 시간입니다.</li>
   <li>Blob에서 읽는 데 걸리는 시간 및 읽거나 쓴 바이트 수입니다.</li>
  </ul>

  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/10/23/function_details.png"><img style="border-width: 0px;" title="function_details" alt="function_details" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/function_details_thumb.png" width="529" height="397" border="0" /></a>

  <h3>&amp; 재생 호출</h3>

  위의 예제에서 어떤 이유로 워터마크 함수가 실패하는 경우 실행 체인을 트리거하고 Resize 함수를 호출하는 새 이미지 및 Replay WaterMark 함수를 업로드할 수 있습니다. 함수를 연결하기 위한 복잡한 그래프가 있는 경우 문제를 진단하고 디버그하는 데 유용합니다. 대시보드에서 함수를 호출할 수도 있습니다.

  <h3>함수의 인과 관계</h3>

  위의 예제에서는 WaterMark 함수가 Blob에 쓸 때 Resize 함수를 트리거한다는 것을 알고 있습니다. 대시보드에는 함수 간의 인과 관계가 표시됩니다. 새 입력이 검색될 때 트리거되는 많은 함수를 연결한 경우 이 인과 관계 그래프를 보는 것이 유용할 수 있습니다.

  <h3>Blob 검색</h3>

  Blob 검색을 클릭하고 해당 Blob에 발생한 작업에 대한 정보를 가져올 수 있습니다. 예를 들어 ImageResizeAndWaterMark의 경우 WaterMark 함수가 실행되었기 때문에 Blob이 작성되었습니다. 검색 Blob에 대한 자세한 내용은 이 <a href="https://blogs.msdn.com/b/jmstall/archive/2014/02/19/who-wrote-that-blob.aspx">게시물을</a> 참조하세요.

  <h2>샘플</h2>

  WebJobs SDK에 대한 샘플은 다음에서 찾을 수 있습니다. <a href="https://github.com/Azure/azure-webjobs-sdk-samples">https://github.com/Azure/azure-webjobs-sdk-samples</a>

  <ul>
   <li>Blob, 테이블, 큐 및 Service Bus 대한 트리거 및 바인딩을 사용하는 방법에 대한 샘플을 찾을 수 있습니다.</li>
   <li>고객이 Blob Storage에서 해당 그림을 처리하는 함수를 트리거하는 그림을 업로드할 수 있는 이미지 처리 웹 사이트인 <b>PhluffyShuffy</b>입니다.</li>
   <li><b>PhluffyLogs</b> 는 WebJob이 앱에서 생성된 로그 파일을 구문 분석하고 로그 파일을 보관하는 예제입니다.</li>
  </ul>

  <h2>설명서</h2>

  <ul>
   <li><a href="https://channel9.msdn.com/Shows/Web+Camps+TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK">Windows Azure WebJobs SDK를 사용하여 작업을 더 쉽게 만드는 채널 9 비디오</a></li>
   <li><a href="https://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx">Scott Hanselman의 WebJobs 및 SDK 소개</a></li>
   <li>WebJobs를 사용하여 빌드되고 <a href="https://twitter.com/bradygaster">Brady Gaster</a>가 ASP.NET 웹 사이트 모니터</li>
   <li><a href="https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/azure-webjobs-recommended-resources">Azure WebJobs – 권장 리소스</a></li>
   <li><a href="https://channel9.msdn.com/Tags/azurefridaywebjobs">Azure Friday의 WebJobs 비디오 시리즈</a></li>
   <li>매그너스 모르텐슨의 비디오 시리즈</li>
   <li><a href="https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs">자습서: Microsoft Azure WebJobs SDK 시작</a></li>
  </ul>

  <h2>Azure Websites에 SDK를 사용하여 WebJobs 배포</h2>

  Azure SDK 2.4의 Visual Studio 2013 업데이트 3에는 WebJobs를 Azure Websites에 게시하는 Visual Studio 도구 지원이 추가되었습니다. 자세한 내용은 <a href="https://azure.microsoft.com/en-us/documentation/articles/websites-dotnet-deploy-webjobs/">Azure WebJobs를 Azure Websites에 배포하는 방법을</a> 참조 <a name="how-to-deploy-azure-webjobs-to-azure-web"></a> 하세요.

  <h2>피드백 제공 및 도움말 보기</h2>

  질문이 있는 경우 <a href="https://azure.microsoft.com/en-us/support/forums/">Azure 포럼</a>, <a href="https://forums.asp.net/1247.aspx">ASP.NET 포럼</a> 또는 <a href="https://stackoverflow.com/">StackOverflow.com</a> 질문할 수 있습니다. Twitter용 AzureWebJobs SDK 및 StackOverflow에 대한 태그 Azure-WebJobsSDK 사용합니다<a href="https://twitter.com/search?q=AzureWebJobs">#</a>.
