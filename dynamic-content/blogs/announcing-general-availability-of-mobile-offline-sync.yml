### YamlMime:Yaml
ms.openlocfilehash: ac8024ad9d8f1e37cecd590b6d0254d7349f3655
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139901847"
Slug: announcing-general-availability-of-mobile-offline-sync
Title: 모바일 오프라인 동기화 관리형 SDK의 일반 공급 발표
Summary: '최상의 모바일 앱은 네트워크 중단을 정상적으로 처리하므로 연결이 부족해도 사용자가 생산성을 높일 수 있습니다. Azure Mobile Services 오프라인 동기화 기능을 사용하여 네트워크가 작동하지 않는 경우에도 작동하는 반응형 앱을 만드는 방법을 알아봅니다. '
Content: >-
  최신 모바일 앱을 작성할 때 개발자는 최종 사용자에게 항상 네트워크 액세스 권한이 없는 현실을 고려해야 합니다. 일시적인 네트워크 문제로 인해 발생하거나 연결이 거의 없는 원격 영역에서 자주 사용되는 모바일 앱일 수 있습니다. 또한 모바일 데이터 요금제는 비용이 매우 많이 들 수 있으므로 사용자는 네트워크 호출을 제한하는 앱을 높이 평가합니다. 그러나 올바른 동기화 동작을 구현해야 하는 문제 때문에 많은 앱이 오프라인으로 작동하지 않습니다.


  다행히 Azure Mobile Services 통해 iOS, Android 및 Windows 앱에서 네이티브 동기화 환경을 쉽게 제공할 수 있습니다. 이 기능은 JavaScript 및 .NET 백 엔드 모두에서 사용할 수 있으며 <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-windows-store-dotnet-get-started-offline-data">Windows 유니버설</a>, <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-ios-get-started-offline-data/">iOS</a>, <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-xamarin-ios-get-started-offline-data">Xamarin iOS</a>, <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-xamarin-android-get-started-offline-data">Xamarin Android</a> 및 Android와 같은 여러 클라이언트를 지원<a href="https://azure.microsoft.com/blog/2014/08/07/offline-support-in-azure-mobile-services-android-sdk/">합니다</a>.


  Windows 및 Xamarin에서 지원되는 <a href="https://www.nuget.org/packages/WindowsAzure.MobileServices.SQLiteStore" target="_blank">오프라인 관리형 클라이언트 SDK</a>의 일반 공급에 대해 발표하게 되어 기쁘게 생각합니다. iOS 및 Android SDK용 GA는 곧 출시될 예정입니다.


  오프라인 동기화에는 많은 이점이 있습니다.

  <ul>
      <li>서버 데이터를 디바이스에 로컬로 캐시하여 앱 응답성 향상</li>
      <li>네트워크 문제가 있는 경우 유용한 강력한 앱 만들기</li>
      <li>최종 사용자가 네트워크에 액세스할 수 없는 경우에도 데이터를 만들고 수정할 수 있도록 허용하여 네트워크에 연결되지 않은 시나리오까지 지원</li>
      <li>여러 디바이스 간에 데이터를 동기화하고 동일한 레코드를 두 개의 디바이스에서 수정할 때 충돌 감지</li>
      <li>무제한 데이터 요금제가 없는 고객의 네트워크 사용 제한</li>
  </ul>

  앱이 오프라인 모드일 때 사용자가 여전히 데이터를 만들고 수정할 수 있으며 이는 로컬 저장소에 저장됩니다. 앱이 다시 온라인 상태가 되면 로컬 변경 내용을 Mobile Services 백 엔드와 동기화할 수 있습니다. 동일한 레코드가 클라이언트와 백 엔드 모두에서 변경될 때 기능은 충돌을 감지하는 지원을 포함합니다. 충돌을 서버 또는 클라이언트에서 처리할 수 있습니다.


  앱에 오프라인 지원을 더 쉽게 추가할 수 있도록 Azure Portal에서 빠른 시작을 업데이트했습니다. 이제 Xamarin.iOS 및 Xamarin.Android에 대한 빠른 시작이 오프라인으로 사용하도록 설정되었습니다. Windows <a href="https://www.sqlite.org/download.html" target="_blank">SQLite VSIX</a>를 설치해야 하므로 Windows 빠른 시작에는 모든 오프라인 코드가 있지만 주석 처리되었습니다.


  이미 Mobile Services 사용 중인 경우 앱을 오프라인으로 쉽게 설정할 수 있습니다. NuGet 패키지 <a href="https://www.nuget.org/packages/WindowsAzure.MobileServices.SQLiteStore" target="_blank">WindowsAzure.MobileServices.SQLiteStore</a><b></b>를 추가하기만 하면 됩니다. 다음으로, 모바일 서비스에 연결할 때 <b>GetTable</b> 대신 <b>GetSyncTable</b> 메서드를 사용합니다.

  <pre class="prettyprint">IMobileServiceSyncTable todoTable = App.MobileService.GetSyncTable(); // offline access</pre>

  이제 로컬 동기화 저장소를 설정합니다. 예를 들어 이 코드는 <strong>OnNavigatedTo</strong>의 이벤트 처리기에서 사용할 수 있습니다. 사용자 고유의 동기화 저장소를 정의하거나 제공된 SQLite 기반 구현을 사용할 수 있습니다.

  <pre class="prettyprint">if (!App.MobileService.SyncContext.IsInitialized)

  {
      var store = new MobileServiceSQLiteStore("localsync.db");
      store.DefineTable&lt;TodoItem&gt;();
      await App.MobileService.SyncContext.
      InitializeAsync(store, new MobileServiceSyncHandler());
  }</pre>

  이제 앱에서 CRUD 작업에 <b>IMobileServiceSyncTable</b> ( <b>IMobileServiceTable</b> 대신)을 사용해야 합니다. 이렇게 하면 로컬 데이터베이스에 대한 변경 내용이 저장되고 변경 내용 로그도 유지됩니다. 앱이 모바일 서비스와 변경 내용을 동기화할 준비가 되면 <b>PushAsync</b> 및 <b>PullAsync</b> 메서드를 사용합니다.

  <pre class="prettyprint">await App.MobileService.SyncContext.PushAsync();


  await todoTable.PullAsync("queryID", myQuery);</pre>

  <strong>PullAsync</strong> 메서드는 앱에서 쿼리를 고유하게 식별하는 문자열인 쿼리 ID를 첫 번째 매개 변수로 사용합니다. 쿼리 ID는 증분 동기화에 사용되며 마지막 끌어오기 작업의 결과에서 마지막으로 업데이트된 타임스탬프를 저장하는 데 사용됩니다.


  증분 동기화를 옵트아웃하려면 <b>null</b> 을 쿼리 ID로 전달합니다. 이 경우 모든 레코드는 <strong>PullAsync</strong>에 대한 모든 호출에서 검색되며 이는 비효율적일 수 있습니다.


  디바이스에 레코드의 하위 집합만 저장하도록 <strong>쿼리를 PullAsync</strong>에 전달할 수도 있습니다. 그러나 쿼리에 매개 변수가 있는 경우 동일한 매개 변수 값이 쿼리 ID의 일부여야 합니다.


  자세한 내용은 <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-windows-store-dotnet-get-started-offline-data/">Windows</a> 및 <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-xamarin-ios-get-started-offline-data/">Xamarin</a> 오프라인 자습서를 참조하세요.


  위의 코드는 유니버설 앱을 다루었지만 <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-ios-get-started-offline-data/">iOS</a> 및 Android용 앱에 오프라인 동기화 지원을 쉽게 추가할 수 <a href="https://azure.microsoft.com/blog/2014/08/07/offline-support-in-azure-mobile-services-android-sdk/">있습니다</a>.


  이 기능에 대해 자세히 알아보려면 다음 리소스를 확인하세요.

  <ul>
      <li>자습서: <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-windows-store-dotnet-get-started-offline-data/">Windows</a>, <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-xamarin-ios-get-started-offline-data/">Xamarin iOS</a>, <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-xamarin-android-get-started-offline-data">Xamarin Android</a>, <a href="https://azure.microsoft.com/en-us/documentation/articles/mobile-services-ios-get-started-offline-data/">iOS</a> 및 <a href="https://azure.microsoft.com/blog/2014/08/07/offline-support-in-azure-mobile-services-android-sdk/">Android</a>.</li>
      <li>비디오: <a href="https://azure.microsoft.com/en-us/documentation/videos/azure-mobile-services-offline-enabled-apps-with-donna-malayeri/" target="_blank">오프라인 동기화의 Azure Friday 비디오</a>, <a href="https://channel9.msdn.com/Shows/Cloud+Cover/Episode-155-Offline-Storage-with-Donna-Malayeri" target="_blank">오프라인 동기화의 클라우드 커버 에피소드</a></li>
      <li>Xamarin 샘플: <a href="https://github.com/lindydonna/mobile-demos/tree/master/XamarinOffline.iOS">iOS</a>, <a href="https://github.com/lindydonna/mobile-demos/tree/master/XamarinOffline.Android">Android</a>, <a href="https://github.com/lindydonna/mobile-demos/tree/master/XamarinFormsOffline">Xamarin Forms</a></li>
      <li>솔루션 가속기 – <a href="https://code.msdn.microsoft.com/windowsazure/Field-Engineer-501df99d">현장 엔지니어</a> (Windows Store)</li>
  </ul>
