### YamlMime:Yaml
ms.openlocfilehash: f839f36f312c946ff268b74ea3416b9780ef6cdf
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905815"
Slug: new-documentdb-sql-keywords-operators-and-functions
Title: 새 DocumentDB SQL 키워드, 연산자 및 함수
Summary: '새 키워드, 연산자 및 함수를 포함하여 DocumentDB SQL 문법에 대한 몇 가지 향상된 기능을 발표하게 되어 기쁩니다. '
Content: >-
  <p>새&rsquo; 키워드, 연산자 및 함수를 포함하여 DocumentDB SQL 문법에 대한 몇 가지 향상된 기능을 발표하게 되어 기쁩니다. 최신 서비스 업데이트에는 IN 및 BETWEEN 키워드, 3차원(?), 병합(??), 비트 시프트 연산자 및 여러 기본 제공 함수에 대한 지원이 포함됩니다.</p>


  <h2>새로 추가된 키워드 및 연산자:</h2>


  <table>
      <tbody>
          <tr>
              <td>새 키워드</td>
              <td><sub>IN 및 BETWEEN</sub></td>
          </tr>
          <tr>
              <td>새 연산자</td>
              <td><sub>Ternary(?), Coalesce(??), 비트 시프트 연산자(&lt;&lt;, &gt;&gt;, &gt;&gt;&gt;)</sub></td>
          </tr>
      </tbody>
  </table>


  <p>BETWEEN 및 IN은 ANSI-SQL 같이 작동합니다. BETWEEN은 범위 쿼리의 약식으로 사용할 수 있으며 IN을 사용하여 쿼리의 WHERE 절에 있는 식과 일치시킬 최대 100개의 값(기본적으로)을 지정할 수 있습니다. 병합, 3차 및 비트 연산자는 C# 및 JavaScript와 같은 상위 수준의 프로그래밍 언어에서처럼 작동하며 즉석에서 JSON 결과 집합을 구성하는 데 유용합니다&nbsp;. 자세한 내용은 SQL 쿼리 자습서에서 이 <a href="https://azure.microsoft.com/documentation/articles/documentdb-sql-query/#where-clause">섹션</a>을 참조하세요.</p>


  <h2>새로 추가된 기본 제공 함수:</h2>


  <table>
      <tbody>
          <tr>
              <td>수학 함수</td>
              <td><sub>ABS, CEILING, EXP, FLOOR, LOG, LOG10, POWER, ROUND, SIGN, SQRT, SQUARE, TRUNC, ACOS, ASIN, ATAN, ATN2, COS, COT, DEGREES, PI, RADIANS, SIN 및 TAN</sub></td>
          </tr>
          <tr>
              <td>형식 검사 함수</td>
              <td><sub>IS_ARRAY, IS_BOOL, IS_NULL, IS_NUMBER, IS_OBJECT, IS_STRING, IS_DEFINED 및 IS_PRIMITIVE</sub></td>
          </tr>
          <tr>
              <td>문자열 함수</td>
              <td><sub>CONCAT, CONTAINS, ENDSWITH, INDEX_OF, LEFT, LENGTH, LOWER, LTRIM, REPLACE, REPLICATE, REVERSE, RIGHT, RTRIM, STARTSWITH, SUBSTRING 및 UPPER</sub></td>
          </tr>
          <tr>
              <td>배열 함수</td>
              <td><sub>ARRAY_CONCAT, ARRAY_CONTAINS, ARRAY_LENGTH 및 ARRAY_SLICE</sub></td>
          </tr>
      </tbody>
  </table>


  <p>DocumentDB 기본 제공 함수를 사용하면 클라이언트 쪽을 처리하거나 사용자 지정 UDF를 작성하는 대신 쿼리 내에서 STARTSWITH 또는 ROUND와 같은 일반적인 라이브러리 루틴을 호출할 수&#39;있습니다. 또한 이러한 변경으로 다른 SQL 및 NoSQL 플랫폼에서 작성된 애플리케이션을 유사한 기능으로 쉽게 이식할 수 있습니다. ABS 및 CEILING와 같은 이러한 함수 중 일부는 T-SQL 해당 함수와 유사하지만, ARRAY_CONTAINS 및 IS_DEFINED 같은 함수는 유연한 스키마를 사용하여 JSON 데이터를 사용하도록 설계되었습니다. 기본 제공 함수에 대한 자세한 내용은 SQL 쿼리 자습서 문서의 이 <a href="https://azure.microsoft.com/en-us/documentation/articles/documentdb-sql-query/#built-in-functions">섹션</a>을 참조하세요. <a href="https://www.documentdb.com/sql/demo">DocumentDB 쿼리 플레이그라운드에서</a> 또는 <a href="https://portal.azure.com/#gallery/Microsoft.DocumentDB">DocumentDB 계정을</a> 만들어 이러한 새로운 기능을 사용해 보세요. 질문이 있는 경우 <a href="https://stackoverflow.com/questions/tagged/azure-documentdb">스택 오버플로</a>에 대한&nbsp; MSDNor &nbsp;&nbsp; 개발자 <a href="https://social.msdn.microsoft.com/forums/azure/en-US/home?forum=AzureDocumentDB">포럼의Azure DocumentDB 개발자 포럼에</a> 문의하세요. <a href="https://feedback.azure.com/forums/263030-documentdb">Azure 피드백</a> 포럼을 통해 추가 함수 또는 키워드를 지원하려는 경우 알려주세요.</p>
