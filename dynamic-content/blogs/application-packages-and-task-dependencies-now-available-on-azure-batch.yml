### YamlMime:Yaml
ms.openlocfilehash: 0eeaae618ec9bba216e80bdc11b1fab59879a630
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900041"
Slug: application-packages-and-task-dependencies-now-available-on-azure-batch
Title: 이제 Azure Batch에서 사용할 수 있는 애플리케이션 패키지 및 작업 종속성
Summary: '약속대로 미리 보기 기능을 일반적으로 사용 가능한 프로덕션 지원 Batch 서비스로 포팅하는 작업이 열심히 진행되었습니다. 가장 인기 있는 두 가지 기능인 애플리케이션 패키지 및 작업 종속성을 이제 사용할 수 있음을 알려드립니다. '
Content: >-
  <p>작년에 <a href="https://azure.microsoft.com/en-us/services/batch/">Azure Batch</a>라는 클라우드 기반 작업 예약 서비스를 출시했습니다. 확장성이 뛰어난 이 서비스와 함께 몇 가지 상위 수준 기능이 포함된 Batch Apps도 미리 볼 수 있습니다. 약속된 대로 이러한&rsquo; 미리 보기 기능을 일반적으로 사용 가능한 프로덕션 지원 Batch 서비스로 포팅하는 작업이 열심히 진행되었습니다. &rsquo;현재 가장 인기 있는 두 가지 기능인 <i>애플리케이션 패키지</i> 및 <i>작업 종속성을 발표합니다</i>.</p>


  <h2>애플리케이션 패키지</h2>


  <p>각 워크로드에는 실행 파일, 라이브러리 및 추가 메타데이터와 같은 일반적인 파일 집합이 필요합니다. 이 파일 집합은 워크로드별일 수 있으며 작업 또는 작업을 실행하기 전에 VM에 다운로드해야 합니다. 애플리케이션 패키지 기능은 풀의 컴퓨팅 노드에 이러한 파일 패키지를 쉽게 관리하고 배포할 수 있도록 합니다. 여러 버전을 업로드하고 관리할 수 있으므로 애플리케이션&rsquo;을 구성하는 모든 다양한 파일을 관리하는 복잡성을 크게 줄이고 풀의 노드에 이러한 애플리케이션 패키지 중 하나 이상을 자동으로 배포할 수 있습니다. &rsquo;또한 이러한 패키지를 안전하게 저장하고 배포하기 위해 스토리지 계정으로 작업하여 백그라운드에서 모든 세부 정보를 처리하므로 이러한 파일을 이동하기 위해 Azure Storage 관리할 필요가 없습니다.</p>


  <p>애플리케이션 패키지는 단순히 ZIP 파일이며 컴퓨팅 노드에 필요한 파일 수를 포함할 수 있습니다. &rsquo;스토리지 계정 연결, 여러 버전 업로드, 기존 애플리케이션 삭제 및 각 애플리케이션에 대한 기본 버전 구성을 포함하여 이러한 애플리케이션을 관리할 수 있습니다. 이러한 작업은 Batch 계정으로 이동하여 <a href="https://portal.azure.com">Azure Portal</a> 을 통해 쉽게 수행할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/31752532-5f92-48f0-9b78-44db9a89bd25.png"><img alt="clip_image002" border="0" height="173" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f1fa73d9-9b48-41d1-9d70-2c5984024b9f.png" style="border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" title="clip_image002" width="360"></a></p>


  <p>Weve&rsquo;는 풀에 대해 하나 이상의 애플리케이션 패키지 참조를 지정하여 수행되는 컴퓨팅 노드에 애플리케이션 패키지를 매우 간단하게 설치할 수 있도록 했습니다. 풀을 만들 때 이 작업을 수행할 수 있습니다.</p>


  <pre class="prettyprint">

  // Create the unbound CloudPool

  CloudPool myCloudPool =
      batchClient.PoolOperations.CreatePool(poolId: &quot;myPool&quot;,
                                            osFamily: &quot;4&quot;,
                                            virtualMachineSize: &quot;small&quot;,
                                            targetDedicated: &quot;1&quot;);

  // Specify the application and version to install on the compute nodes

  myCloudPool.ApplicationPackageReferences = new List&lt;ApplicationPackageReference&gt;

  {
      new ApplicationPackageReference {
          ApplicationId = &quot;litware&quot;,
          Version = &quot;1.1001.2b&quot; }
  };


  // Commit the pool so that it&#39;s created in the Batch service. As the nodes join

  // the pool, the specified application package will be installed on each.

  await myCloudPool.CommitAsync();</pre>


  <p>애플리케이션 패키지가 풀&rsquo;의 컴퓨팅 노드에 설치되면 작업 명령줄을 대신하여 만든 환경 변수를 사용하여 패키지 내에서 파일을 실행할 수 있습니다. 이 변수는 appid가 애플리케이션 이름을 참조하고 버전이 실행하려는 버전을 참조하는 명명 체계 <code>AZ_BATCH_APP_PACKAGE_appid#version</code> 를 따릅니다. Azure Portal에서 기본 버전을 선택한 경우&rsquo; appid만 참조할 수도 있습니다. <code>AZ_BATCH_APP_PACKAGE_appid.</code></p>


  <h2>작업 종속성</h2>


  <p>많은 작업과 워크로드에는 태스크 간의 종속성이 필요하며, Batch Apps는 스테이지를 통해 이를 지원했습니다. Weve&rsquo;는 이제 Batch 앱 스타일 단계를 복제하는 데 사용되는 Batch에 작업 종속성 기능을 추가했습니다. 또는 더 일반적으로 작업 간의 종속성 관계를 나타냅니다. 이 기능은 작업 또는 작업을 수행해야 하는 순서를 결정하는 작업 간의 관계를 구축하는 데 도움이 됩니다. 태스크에는 여러 개의 이전 작업과 여러 개의 성공 작업이 있을 수 있습니다.</p>


  <p>이 기능을 활용하려면 지점 클라우드를 생성하는 사전 처리 또는 렌더링 작업, 미리 렌더링된 작업에 의존하는 프레임 작업, 최종 출력을 위해 개별 프레임 또는 태스크가 병합 작업으로 결합된 경우에도 사용할 수 있습니다. 사전 처리 작업의 ID를 사용하여 종속성을 호출할 수 있습니다.</p>


  <pre class="prettyprint">

  frameTask.DependsOn = TaskDependencies.OnId(&quot;prerender&quot;); </pre>


  <p>또한 다양한 작업에 따라 달라지는 작업을 가질 수도 있습니다. 먼저 완료하는 다른 모든 작업에 따라 달라지는 병합 작업이 있을 수 있습니다. 다른 도우미 메서드 &ldquo;인 OnIdRange&rdquo;를 호출하면 이 작업을 수행할 수 있습니다.</p>


  <pre class="prettyprint">

  makeMovieTask.DependsOn = TaskDependencies.OnIdRange(startFrame, endFrame); </pre>


  <p>이러한 기능은 Batch 서비스에 큰 도움이 되며, 상용구 코드를 그대로 두고 배관하여 개발자가 더 빠르게 시장에 출시하고 오버헤드를 줄이는 데 도움이 됩니다. 이러한 기능은 이제 Azure Portal에서 사용할 수 있는 새 Azure.Batch 3.1 NuGet 패키지 및 해당 기능에서 사용할 수 있습니다. 또한 여기에서 샘플 코드를 다운로드할 수 <a href="https://github.com/Azure/azure-batch-samples/tree/master/CSharp/ArticleProjects/TaskDependencies">있습니다</a>.</p>


  <p>애플리케이션 패키지와 작업 종속성을 모두 사용해 보고 공식 <a href="https://social.msdn.microsoft.com/forums/azure/en-US/home?forum=azurebatch">포럼</a>에서 <a href="mailto:wabatch@microsoft.com">wabatch@microsoft.com</a> 직접 또는 게시하여 피드백을 제공하는 것이 좋습니다.</p>


  <p>감사합니다!</p>


  <p>Azure Batch 팀</p>
