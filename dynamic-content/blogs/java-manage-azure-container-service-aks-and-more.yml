### YamlMime:Yaml
ms.openlocfilehash: 3d21bab894930086784774c6c802c679c842b4a7
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899738"
Slug: java-manage-azure-container-service-aks-and-more
Title: 'Java: AKS(Azure Container Service) 관리 등'
Summary: 'Java용 Azure 관리 라이브러리 1.4를 릴리스했습니다. 이 릴리스는 AKS(Azure Container Service) 등에 대한 지원을 추가합니다. '
Content: >-
  <p>Java용 Azure 관리 라이브러리 1.4를 릴리스했습니다. 이 릴리스는 <a href="https://docs.microsoft.com/en-us/azure/aks/">AKS(Azure Container Service)</a> 등에 대한 지원을 추가합니다.</p>


  <h3><a href="https://github.com/azure/azure-libraries-for-java" title="https://github.com/azure/azure-libraries-for-java">https://github.com/azure/azure-libraries-for-java</a></h3>


  <h2>시작</h2>


  <p>Maven POM 파일에 다음 종속성 조각을 추가하여 1.4 버전의 라이브러리를 사용합니다.</p>


  <pre class="prettyprint">

  &lt;dependency&gt;
      &lt;groupId&gt;com.microsoft.azure&lt;/groupId&gt;
      &lt;artifactId&gt;azure&lt;/artifactId&gt;
      &lt;version&gt;1.4.0&lt;/version&gt;
  &lt;/dependency&gt;

  </pre>


  <h2>AKS(Azure Container Service)에서 Kubernetes 클러스터 만들기</h2>


  <p><em>define() create() &hellip;</em> 메서드 체인을 사용하여 Kubernetes 클러스터를 만들 수 있습니다.</p>


  <pre class="prettyprint">

  KubernetesCluster kubernetesCluster = azure.kubernetesClusters().define(aksName)
      .withRegion(region)
      .withNewResourceGroup(rgName)
      .withLatestVersion()
      .withRootUsername(rootUserName)
      .withSshKey(sshKeys.getSshPublicKey())
      .withServicePrincipalClientId(servicePrincipalClientId)
      .withServicePrincipalSecret(servicePrincipalSecret)
      .defineAgentPool(&quot;agentpool&quot;)
          .withVirtualMachineCount(1)
          .withVirtualMachineSize(ContainerServiceVMSizeTypes.STANDARD_D1_V2)
          .attach()
      .withDnsPrefix(&quot;dns-&quot; + aksName)
      .create();
  </pre>


  <p>커뮤니티에서 개발한 <a href="https://github.com/fabric8io/kubernetes-client">Kubernetes 클라이언트 라이브러리를 사용하여 Kubernetes 클라이언트를</a> 인스턴스화할 수 있습니다.</p>


  <pre class="prettyprint">

  ernetesClient kubernetesClient = new DefaultKubernetesClient(config);</pre>


  <h2>Container Registry에서 Kubernetes 클러스터로 배포</h2>


  <p>동일한 커뮤니티 개발 <a href="https://github.com/fabric8io/kubernetes-client">Kubernetes 클라이언트 라이브러리</a> 및 Container Registry와 연결된 이미지 끌어오기 비밀을 사용하여 Azure Container Registry에서 Kubernetes 클러스터로 이미지를 배포할 수 있습니다.</p>


  <pre class="prettyprint">

  ReplicationController rc = new ReplicationControllerBuilder()
      .withNewMetadata()
          .withName(&quot;acrsample-rc&quot;)
          .withNamespace(aksNamespace)
          .addToLabels(&quot;acrsample-nginx&quot;, &quot;nginx&quot;)
          .endMetadata()
      .withNewSpec()
          .withReplicas(2)
          .withNewTemplate()
               .withNewMetadata()
                    .addToLabels(&quot;acrsample-nginx&quot;, &quot;nginx&quot;)
                     .endMetadata()
               .withNewSpec()
                    .addNewImagePullSecret(aksSecretName)
                    .addNewContainer()
                          .withName(&quot;acrsample-pod-nginx&quot;)
                        .withImage(&quot;acrdemo.azurecr.io/samples/acrsample-nginx&quot;)
                        .addNewPort()
                            .withContainerPort(80)
                            .endPort()
                        .endContainer()
                    .endSpec()
               .endTemplate()
           .endSpec()
      .build();
  </pre>


  <pre class="prettyprint">

  kubernetesClient.replicationControllers().inNamespace(aksNamespace).create(rc);</pre>


  <p>AKS(Azure Container Service)의 Kubernetes 클러스터에 컨테이너 레지스트리의 이미지를 배포하는 <a href="https://github.com/Azure-Samples/acs-java-deploy-image-from-acr-to-kubernetes">전체 샘플 코드를</a> 찾을 수 있습니다.</p>


  <h2>Virtual Machine에 잠금 적용</h2>


  <p><em>define() create() &hellip;</em> 메서드 체인을 사용하여 가상 머신에 잠금을 만들고 적용할 수 있습니다.</p>


  <pre class="prettyprint">

  lockVirtualMachineRO = azure.managementLocks().define(&quot;virtualMachineLockRO&quot;)
      .withLockedResource(vm)
      .withLevel(LockLevel.READ_ONLY)
      .create();
  </pre>


  <p>리소스 잠금을 관리하는 <a href="https://github.com/Azure-Samples/locks-java-manage-locks">전체 샘플 코드를</a> 찾을 수 있습니다.</p>


  <h2>Express Route 회로 피어링 만들기</h2>


  <p><em>define() create() &hellip;</em> 메서드 체인을 사용하여 Express Route 회로를 만들 수 있습니다.</p>


  <pre class="prettyprint">

  ExpressRouteCircuit erc = azure.expressRouteCircuits().define(ercName)
      .withRegion(Region.US_NORTH_CENTRAL)
      .withNewResourceGroup(rgName)
      .withServiceProvider(&quot;Equinix&quot;)
      .withPeeringLocation(&quot;Silicon Valley&quot;)
      .withBandwidthInMbps(50)
      .withSku(ExpressRouteCircuitSkuType.PREMIUM_METEREDDATA)
      .create();
  </pre>


  <p>그런 다음 다른 <em>define() create() &hellip; </em>메서드 체인을 사용하여 Express Route 회로 피어링을 만들 수 있습니다.</p>


  <pre class="prettyprint">

  erc.peerings().defineAzurePrivatePeering()
      .withPrimaryPeerAddressPrefix(&quot;123.0.0.0/30&quot;)
      .withSecondaryPeerAddressPrefix(&quot;123.0.0.4/30&quot;)
      .withVlanId(200)
      .withPeerAsn(100)
      .create();
  </pre>


  <p>Express Route 회로를 만들고 구성하는 <a href="https://github.com/Azure-Samples/network-java-manage-express-route">전체 샘플 코드를</a> 찾을 수 있습니다.</p>


  <h2>시도</h2>


  <p><a href="https://github.com/azure/azure-libraries-for-java">GitHub 리포지토리</a>에서 더 많은 샘플을 얻을 수 있습니다. 시도해 보시고 의견을 보내주세요(아래 <a href="mailto:java@microsoft.com">전자 메일</a> 또는 댓글을 통해).<br>

  &nbsp;<br>

  Azure의 Java에 대한 자세한 내용은 다음에서 <a href="https://docs.microsoft.com/en-us/java/azure/">https://docs.microsoft.com/en-us/java/azure/</a>확인할 수 있습니다.</p>
