### YamlMime:Yaml
ms.openlocfilehash: c973a0fcc787a892a3f86fdd6b4cfb09607f7285
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139912741"
Slug: new-azure-cosmosdb-javascript-sdk-2-0-now-in-public-preview
Title: '이제 새 Azure #CosmosDB JavaScript SDK 2.0이 공개 미리 보기로 제공됩니다.'
Summary: Azure Cosmos DB 팀은 현재 공개 미리 보기로 SQL API용 JavaScript SDK 버전 2.0 RC를 발표하게 되어 기쁩니다.
Content: >-
  <p>Azure Cosmos DB 팀은 현재 공개 미리 보기로 SQL API용 JavaScript SDK <a href="https://github.com/Azure/azure-cosmos-js" target="_blank">버전 2.0 RC</a>를 발표하게 되어 기쁩니다.</p>


  <p>일반 공급 전에 이 RC를 통해 피드백을 받을 수 있게 되어 기쁘게 생각합니다. 이 RC를 사용해 보고 의견을 보내주세요. 다음을 사용하여 npm을 통해 <a href="https://www.npmjs.com/package/@azure/cosmos" target="_blank">최신 버전을</a> 가져올 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/15e81c88-3e05-4139-bc50-6d3d21a89d03.png"><img alt="npm install azure cosmos" border="0" height="60" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/daf4316b-cf96-4e00-a82f-845f2af02211.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="npm install azure cosmos" width="240"></a></p>


  <h2>Azure Cosmos DB란?</h2>


  <p><a href="https://azure.microsoft.com/services/cosmos-db/" target="_blank">Azure Cosmos DB</a>는 전 세계에 배포된 다중 모델 데이터베이스 서비스입니다. 턴키 전역 배포를 제공하고, 99번째 백분위수에서 한 자리 밀리초의 대기 시간을 보장하며, 처리량 및 스토리지의 탄력적 크기 조정을 보장합니다.</p>


  <p><a href="https://docs.microsoft.com/en-us/azure/cosmos-db/sql-api-introduction" target="_blank">SQL API</a>의 경우 JavaScript 및 Node.js 프로젝트에서 Azure Cosmos DB에 대한 개발을 사용하도록 설정하는 JavaScript <a href="https://github.com/Azure/azure-cosmos-js" target="_blank">SDK</a>를 지원합니다. SDK 버전 2.0은 TypeScript로 완전히 작성되었으며 개체 모델을 다시 디자인하고&rsquo; 약속에 대한 지원을 추가했습니다. &rsquo;이러한 업데이트를 자세히 살펴보겠습니다.</p>


  <h2>새 개체 모델</h2>


  <p>사용자 피드백&rsquo;에 따라 개체 모델을 다시 디자인하여 Cosmos DB에 대해 보다 쉽게 상호 작용하고 작업을 수행할 수 있도록 했습니다.&nbsp;</p>


  <p>이전 버전의 JavaScript SDK&rsquo;에 익숙한 경우&rsquo; 전체 API 표면이 DocumentDBClient에서 중단되는 것을 확인할 수 있습니다. 이전 디자인에서는 메서드의 진입점을 쉽게 찾을 수 있지만, 아래와 같이 어수선한 IntelliSense 환경의 비용도 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b07ae447-49d9-4c67-8bbf-e831e6475816.png"><img alt="DocumentDBClient" border="0" height="256" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/356512b2-7250-4609-b80e-35c3fd8c1abe.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="DocumentDBClient" width="455"></a></p>


  <p>또한 각 메서드가 해당 리소스의 URL을 참조해야 하므로 데이터베이스, 컬렉션 또는 문서에서 작업을 수행하는 것이 어렵다는 피드백을 받았습니다.&nbsp;</p>


  <p>이 문제를 해결하기 위해 Weve&rsquo;는 <strong>DocumentDBClient</strong>를 대체하는 새로운 최상위 <strong>CosmosClient</strong> 클래스를 만들고 해당 메서드를 모듈식 데이터베이스, 컨테이너 및 항목 클래스로 분할했습니다.</p>


  <p>예를 들어 새 SDK에서 새 데이터베이스, 컨테이너를 만들고 10줄의 코드로 항목을 추가할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/69bbffb2-fe9a-40d4-a40d-c3d993bdb55f.png"><img alt="Create a new database" border="0" height="335" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/63965962-1475-4fa5-8109-f73b51f4c620.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="새 데이터베이스 만들기" width="1364"></a></p>


  <p>이를 작성기&rdquo; 패턴이라고 &ldquo;하며, Cosmos DB의 리소스 계층 구조를 기반으로 리소스를 참조할 수 있습니다. 이는 뇌가 Cosmos DB에 대해 생각하는 방식과 유사합니다. 예를 들어 항목을 만들려면 먼저 해당 데이터베이스 및 컨테이너를 참조하고 items.create()를 호출합니다.</p>


  <h2>컨테이너 및 항목</h2>


  <p>또한 Cosmos DB는 여러 API 모델을&rsquo; 지원하므로 이전 컬렉션 및 문서 개념을 대체하는 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/faq#what-is-a-container" target="_blank">컨테이너 및 항목</a>의 개념을 SDK에 도입했습니다. 즉, 이전에 컬렉션&rdquo;이라고 &ldquo;하던 것을 이제 컨테이너라고 &ldquo;합니다.&rdquo;</p>


  <p>계정에 하나 이상의 데이터베이스가 있을 수 있으며 데이터베이스는 하나 이상의 컨테이너로 구성됩니다. API에 따라 컨테이너는 컬렉션(SQL 또는 Azure Cosmos DB for MongoDB API), 그래프(Gremlin API) 또는 테이블(테이블 API)로 프로젝션됩니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f859dbe3-3e38-4381-a5ae-48aaa77157b1.png"><img alt="Container and Items" border="0" height="357" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4e25d7ac-2d6a-44f5-b190-866804a90a67.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="컨테이너 및 항목" width="652"></a></p>


  <h2>약속에 대한 지원</h2>


  <p>마지막으로,&rsquo; Weve는 더 이상 SDK를 직접 래핑하는 사용자 지정 코드를 작성하지 않도록 약속에 대한 전폭적인 지원을 추가했습니다. 이제 SDK에 대해 직접 비동기/await를 사용할 수 있습니다.</p>


  <p>차이점을 확인하려면 새 데이터베이스, 컬렉션을 만들고 이전 SDK에서 문서를 추가하려면 다음과 같은 작업을 수행해야 합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/61c90bb0-49ba-492b-a962-3362084df754.png"><img alt="SDK" border="0" height="1566" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d96e45ef-6de6-45f8-afcf-d87a8d499a05.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="SDK" width="1364"></a></p>


  <p>새 SDK에서는 아래와 같이 비동기 함수 내에서 직접 DB를 Cosmos 호출을 기다릴 수 있습니다.</p>


  <p>또한 Weve&rsquo;는 데이터베이스 및 컨테이너에 대한 편리한 메서드 <u>createIfNotExists()</u> 를 추가했습니다. 이 메서드는 데이터베이스를 읽고, 상태 코드를 확인하고, 존재하지 않는&rsquo; 경우 만드는 논리를 래핑합니다.</p>


  <p>새 SDK를 사용하는 동일한 기능은 다음과&rsquo; 같습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/94088a0c-76fe-4353-a488-bc466e927143.png"><img alt="promisesNewImageUseThisOne" border="0" height="1614" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b83418d3-0079-4349-9fa5-ac34ccb5f745.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="promiseNewImageUseThisOne" width="2672"></a></p>


  <h2>오픈 소스 모델</h2>


  <p>Azure Cosmos DB JavaScript SDK는 오픈 소스이며, 우리 팀은 모든 개발을 오픈 소스로 수행할 계획입니다. 이를 위해 문제를 로깅하고, 피드백을 추적하고, GitHub PR&rsquo;을 수락합니다.</p>


  <h2>시작</h2>


  <p>이 새로운 SDK가 더 나은 개발자 환경을 만들기를 바랍니다. 시작하려면 <a href="https://docs.microsoft.com/azure/cosmos-db/create-sql-api-nodejs" target="_blank">빠른 시작 가이드</a>를 확인하세요. Wed&rsquo; love to hear your feedback! <a href="https://github.com/Azure/azure-cosmos-js/issues" target="_blank">GitHub 리포지토리</a>의 전자 메일 <a target="_blank">cosmosdbsdkfeedback@microsoft.com</a> 또는 로그 문제</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/36d54aaf-fc07-485d-a036-803e75b568e2.png"><img alt="npm install azure cosmos" border="0" height="60" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2521a944-f599-4fb1-a8e1-c37b8b24465a.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="npm install azure cosmos" width="240"></a></p>


  <p>Twitter<a href="https://twitter.com/azurecosmosdb" target="_blank">@AzureCosmosDB</a>에서 팔로우하여 최신 Azure <a href="https://twitter.com/search?q=%23cosmosdb" target="_blank">#CosmosDB</a> 뉴스 및 기능을 최신 상태로 유지하세요. Azure Cosmos DB를 사용하여 빌드할 항목을 확인하게 되어 정말 기쁩니다!</p>
