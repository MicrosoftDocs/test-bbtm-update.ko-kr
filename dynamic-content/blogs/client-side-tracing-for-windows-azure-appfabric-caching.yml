### YamlMime:Yaml
ms.openlocfilehash: 4beb6397711e27a4a53f723e66f7e8c1eb886893
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139901334"
Slug: client-side-tracing-for-windows-azure-appfabric-caching
Title: Windows Azure AppFabric 캐싱에 대한 클라이언트 쪽 추적
Summary: 이 게시물에서는 AppFabric Caching Service에 대해 클라이언트 쪽 추적을 사용하도록 설정하는 방법을 설명합니다. 나는 또한 당신이 같은 것을 시도하는 동안 직면 할 수있는 몇 가지 기본적인 문제를 만질 것입니다.  구성하려면...
Content: '<p>이 게시물에서는 AppFabric Caching Service에 대해 클라이언트 쪽 추적을 사용하도록 설정하는 방법을 설명합니다. 나는 또한 당신이 같은 것을 시도하는 동안 직면 할 수있는 몇 가지 기본적인 문제를 만질 것입니다.</p>  <p>AppFabric 캐시와 관련된 System.Diagnostic.Traces를 생성하도록 캐시 클라이언트를 구성하려면 다음 단계를 수행하세요.</p>  <h4>구성 파일 옵션</h4>  <p>app.config/web.config 아래 사례에 따라 추적 sinkType="DiagnosticSink" traceLevel="Verbose" /&gt;를 적절한 위치에 추가&lt;해야 합니다.</p>  <h4>a.&nbsp;&nbsp;&nbsp;&nbsp; DataCacheClients 섹션</h4>  <p>구성&gt; 섹션의 &lsquo;app.config/web.config 파일에 &lt;dataCacheClients&rsquo; 섹션이 있는 경우 아래와 같이 추적 섹션을 추가합니다.</p>  <p>&lt;구성&gt;</p>  <p>&nbsp; &lt;configSections&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&lt;section name="dataCacheClients" type="Microsoft.ApplicationServer.Caching.DataCacheClientsSection, Microsoft.ApplicationServer.Caching.Core" allowLocation="true" allowDefinition="Everywhere" /&gt;</p>  <p>&nbsp;&lt;/configSections&gt;</p>  <p>&nbsp; &lt;dataCacheClients&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&lt;!--traceLevel에는 자세한 정보, 정보, 경고, 오류 또는 끄기 값이 있을 수 있습니다.&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&lt;tracing sinkType="DiagnosticSink" traceLevel="Verbose" /&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&lt;dataCacheClient name="default"&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;호스트&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;host name="[YOUR CACHE ENDPOINT]" cachePort="22233" /&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/hosts&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;securityProperties mode="Message"&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;messageSecurity authorizationInfo="[YOUR TOKEN]"&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/messageSecurity&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/securityProperties&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&lt;/dataCacheClient&gt;</p>  <p>&nbsp;&lt;/dataCacheClients&gt;</p>  <p>&nbsp; ...</p>  <p>&lt;/configuration&gt;</p>  <p><span style="text-decoration: underline;">참고</span>: 추적 섹션은 dataCacheClients 섹션의 &lt;직접 자식이어야 하며 dataCacheClients&gt; 섹션이 있는 경우 &lt;dataCacheClient&gt;&gt; 섹션 아래에 &lt;추가하면 안 됩니다.</p>  <h4>B.&nbsp;&nbsp;&nbsp;&nbsp; DataCacheClient 섹션</h4>  <p>dataCacheClients 섹션이 &lt;없으며 app.config/web.config dataCacheClient&gt; 섹션만 &lt;있는 경우 아래와 같이 추적 섹션을 추가&gt;합니다.</p>  <p>&lt;구성&gt;</p>  <p>&nbsp; &lt;configSections&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&lt;section name="dataCacheClient" type="Microsoft.ApplicationServer.Caching.DataCacheClientSection, Microsoft.ApplicationServer.Caching.Core" allowLocation="true" allowDefinition="Everywhere" /&gt;</p>  <p>&nbsp;&lt;/configSections&gt;</p>  <p>&nbsp; &lt;dataCacheClient&gt;</p>  <p>&lt;!--traceLevel에는 자세한 정보, 정보, 경고, 오류 또는 해제 값이 있을 수 있습니다.&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tracing sinkType="DiagnosticSink" traceLevel="Verbose" /&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>  <p>&lt;호스트&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;host name="[YOUR CACHE ENDPOINT]" cachePort="22233" /&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/hosts&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;securityProperties mode="Message"&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;messageSecurity authorizationInfo="[YOUR TOKEN]"&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/messageSecurity&gt;</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/securityProperties&gt;</p>  <p>&nbsp;&lt;/dataCacheClient&gt;</p>  <p>&nbsp;&nbsp;&nbsp; ...</p>  <p>&lt;/configuration&gt;</p>  <h4>프로그래밍 방식 옵션</h4>  <p>또한 언제든지 아래 메서드를 호출하여 프로그래밍 방식으로 캐시 클라이언트에 대한 System.Diagnostic.Trace를 설정하도록 선택할 수 있습니다.</p>  <p>인수 1은 System.Diagnostic.Trace가 사용되도록 지정하고</p>  <p>인수 2는 추적 수준 필터를 지정합니다.</p>  <p>DataCacheClientLogManager.SetSink(DataCacheTraceSink.DiagnosticSink, System.Diagnostics.TraceLevel.Verbose);</p>  <p><br> 또한 모든 단계에서 아래 메서드를 호출하여 프로그래밍 방식으로 추적 로그가 필터링되는 수준을 변경할 수 있습니다(예: 서비스가 시작되고 안정화된 후 5분 후에 자세한 정보 대신 경고로 캐시 클라이언트 추적 수준을 설정할 수 있음).</p>  <p>DataCacheClientLogManager.ChangeLogLevel(System.Diagnostics.TraceLevel.Warning);</p>  <h4>문제 해결</h4>  <p>Azure SDK 1.3 이상을 사용하고 DevelopmentFabric 환경에서 위의 메커니즘을 사용하여 웹 역할 내에서 캐시 클라이언트 쪽 추적을 가져오는 경우 개발 패브릭 Emulator(또는 DevFabric UI)에서 캐시 클라이언트 추적을 볼 수 없습니다.</p>  <p><strong>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 지정된 동작에 대한 추론/설명</strong></p>  <p>SDK 1.3을 사용하면 IIS(역할 런타임)가 웹 역할(ASP.Net 세션 상태 공급자 시나리오의 경우)과 비교하여 별도의 프로세스에서 실행되며, 웹 역할과 관련된 모든 로그는 DevFabric UI에서 볼 수 있지만 캐시 클라이언트 쪽 추적은 IIS의 일부(예: 역할 런타임)로 이동합니다. DevFabric Emulator 기본적으로 자체 수신기 &ldquo;DevelopmentFabricTraceListener&rdquo;를 연결하고 해당 UI는 이 수신기에서만 들린 로그를 내보낸다. IIS가 다른 프로세스에 있으므로 이 수신기는 존재하지 않으며 DevFabric UI에서 로그를 볼 수 없습니다.</p>  <p><strong>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 해상도</strong></p>  <p><span style="text-decoration: underline;">참고</span>: 아래 해결 방법은 DevFabric 시나리오에 대한 로그만 보는 것입니다. 그렇지 않으면 로그가 완벽하게 적절한 방식으로 xStore(Azure Storage 계정)로 이동합니다. 프로젝트의 경우 system.diagnosticslt;tracelt&gt;\&;listeners&gt; 섹션 아래&lt;의 web.config 아래를 추가합니다.&gt;\&</p>  <p>&lt;add type="Microsoft.ServiceHosting.Tools.DevelopmentFabric.Runtime.DevelopmentFabricTraceListener, Microsoft.ServiceHosting.Tools.DevelopmentFabric.Runtime, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="DevFabricListener"&gt;<br> &nbsp;&nbsp;&lt;filter type="" /&gt;<br> &lt;/add&gt;</p>  <p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 실제로 Azure 환경에 배포할 때 Web.Release.config 파일을 사용할 때 이 섹션이 추가되지 않도록 Web.Debug.config 대해서만 추가할 수 있습니다.</p>  <p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;또한 DLL &ldquo;Microsoft.ServiceHosting.Tools.DevelopmentFabric.Runtime.dll&rdquo; 참조를 추가할 필요가 *없습니다*. 개발 패브릭에 배포하는 머신에 GAC에 이 DLL이 있어야 하므로(%windir%\assembly에서 이 DLL 검색).</p>  <p>-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DevFabric에 샘플을 배포하면 이제 Development Fabric UI에서 캐시 추적을 볼 수 있습니다.</p>  <p>캐싱 서비스에 대한 질문이나 피드백은 <a target="_blank" href="https://social.msdn.microsoft.com/Forums/en-US/windowsazuredata/threads">Windows Azure Storage, CDN 및 캐싱 포럼을</a> 방문하세요.</p>  <p>샤라드 아그라왈 - AppFabric 팀을 대신하여</p>  <p><iframe src="https://www.facebook.com/plugins/like.php?href= https://blogs.msdn.com/b/windowsazure/archive/2011/06/29/client-side-tracing-for-windows-azure-appfabric-caching.aspx;layout=box_count&amp;show_faces=false&amp;width=300&amp;action=like&amp;font=segoe+ui&amp;colorscheme=light&amp;height=50" style="overflow: hidden; width: 300px; height: 50px;" frameborder="0" scrolling="no"></iframe><br>트윗  <script type="text/javascript"></script>  </p>'
