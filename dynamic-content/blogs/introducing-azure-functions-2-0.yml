### YamlMime:Yaml
ms.openlocfilehash: c1d4dc5eec4f58d84a9adbb79dbd285a29709553
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139910982"
Slug: introducing-azure-functions-2-0
Title: Azure Functions 2.0 소개
Summary: 오늘 Azure Functions 2.0의 일반 공급에 대해 발표하게 되어 매우 기쁩니다! 이는 확장성이 뛰어난 서버리스 애플리케이션을 빌드하는 데 그 어느 때보다 쉽게 사용할 수 있도록 하는 데 중점을 두는 여러 기능으로 가득 찬 거대한 이정표입니다.
Content: >-
  <p>오늘 Azure&rsquo; Functions 2.0의 일반 공급에 대해 발표하게 되어 매우 기쁩니다! 이는 확장성이 뛰어난 서버리스 애플리케이션을 빌드하는 데 그 어느 때보다 쉽게 사용할 수 있도록 하는 데 중점을 두는 여러 기능으로 가득 찬 거대한 이정표입니다.</p>


  <p>Azure Functions 2.0은 <a href="https://azure.microsoft.com/support/legal/sla/functions" target="_blank">99.95%의 SLA</a>를 통해 가장 까다로운 워크로드를 처리할 수 있는 프로덕션 준비가 되어 있습니다. 2.0에서 새로운 개발을 시작하고 고객이 기존 1.0 앱을 2.0 버전으로 업그레이드하여 이 새 릴리스의 모든 이점을 경험하는 것이 좋습니다. 특정 지침은 <a href="https://docs.microsoft.com/azure/azure-functions/functions-versions#migrating-from-1x-to-2x" target="_blank">2.0으로 업그레이드하는 지침을</a> 참조하세요.</p>


  <h2>이 릴리스의 내용&rsquo;</h2>


  <p>Functions 2.0은 사용자 환경, 개발자 기능 및 플랫폼 견고성 측면에서 제품을 개선합니다. 가장 중요한 변경 사항은 이제 이식 가능하고 플랫폼 간이며 더 효율적인 호스트 런타임입니다. 이렇게 하면 앱을 빌드하고 실행하는 방법에 대한 다양한 옵션을 사용할 수 있습니다.</p>


  <h3>더 많은 플랫폼, 더 많은 옵션</h3>


  <p>이제 Azure Functions는 Mac 또는 Linux 머신에서 로컬로 포함하여 더 많은 환경에서 실행할 수 있습니다. 이를 <a href="https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-vs-code" target="_blank">VS Code 환상적인 통합과</a> 결합하면 모든 플랫폼에서 동급 최고의 서버리스 개발 환경을 갖습니다. 또한 런타임은 Azure Functions 서비스 외부에서 호스트되는 뛰어난 기능을 제공하며 어디서나 실행할 수 있습니다. <a href="https://github.com/Azure/azure-functions-core-tools#getting-started-on-kubernetes" target="_blank">Kubernetes의 Azure Functions</a> 및 <a href="https://docs.microsoft.com/azure/iot-edge/tutorial-deploy-function" target="_blank">IoT Edge의 Azure Functions에 대한</a> 지원을 확인하세요. 가는 길에 더 많은 호스팅 옵션이 있습니다. 자세한 내용을 보려면 아래의 &ldquo;다음&rsquo; 항목을 확인하세요!&rdquo;</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fa6b2f9c-8f84-4699-80d9-f1c79c4cd126.png"><img alt="HTTP Trigger" border="0" height="892" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0f07109e-f5ec-462e-96c7-ab1f47d5afea.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="HTTP 트리거" width="1430"></a></p>


  <h3>코드에 최적화</h3>


  <p>Functions 2.0은 일반적인 호스트 개선, 최신 언어 런타임 지원 및 <a href="https://docs.microsoft.com/azure/azure-functions/run-functions-from-deployment-package" target="_blank">패키지 파일에서 코드를 실행하는 기능</a> 덕분에 그 어느 때보다 성능이 향상되었습니다.</p>


  <p>.NET 개발자는 이제 .NET Core 2.1을 사용하여 함수를 작성할 수 있습니다. 이렇게 하면 성능이 크게 향상될 뿐만 아니라 더 많은 위치에서 .NET 함수를 개발하고 실행할 수 있습니다. 또한 Weve&rsquo;는 어셈블리 확인의 작동 방식을 크게 변경하여 함수에 자체 부하 컨텍스트를 제공합니다. 즉, 많은 충돌이 발생하면 안&rsquo; 되지만, 그렇게 하면&rsquo; 그 어느 때보다 쉽게 완화할 수 있습니다.</p>


  <p>Non-.NET 언어는 이제 언어 작업자 모델에서 작동하며, 이점을 얻을 수 있는 첫 번째 스택은 JavaScript입니다. Functions 2.0은 이제 노드 8과 노드 10을 모두 지원하며 사용자는 일반적으로 향상된 성능을 예상해야 합니다. 작업자 접근 방식을 사용하면 더 나은 버전 지원 및 반복이 가능하며&rsquo; 앞으로 새 언어를 사용하도록 설정하는 방법을&rsquo; 설명합니다(다음 줄에 대한 자세한 내용은 이 게시물의 &ldquo;Whats&rsquo; Next 섹션&rdquo;을 놓치지 마세요&rsquo;).</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/90708997-835c-46d2-bfda-2856c90c0c8b.png"><img alt="v1vsv2" border="0" height="302" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a87fd748-9ff4-4bc1-a3b1-9df31961bee6.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="v1vsv2" width="846"></a></p>


  <h3>강력한 프로그래밍 모델</h3>


  <p>1.0 런타임에서 이동하는 경우 가장 큰 변경 사항&rsquo; 중 하나는 바인딩 및 통합의 작동 방식을 변경했다는&rsquo; 것입니다. 이제 핵심 HTTP 및 타이머 지원을 제외하고 모든 바인딩이 확장으로 제공됩니다. 이러한 패키지는 <a href="https://docs.microsoft.com/azure/azure-functions/functions-triggers-bindings#register-binding-extensions" target="_blank">Functions 도구를 사용하여 설치</a>할 수 있는 간단한 패키지일 뿐이며, 기존에 사용하던 것과 동일한 훌륭한 프로그래밍 모델을&rsquo; 제공합니다. 분리된 확장 패키지를 변경하면 바인딩(및 해당 종속성)이 핵심 런타임과 독립적으로 버전 관리될 수 있습니다. 즉, 특히 앱이 의존하는 서비스가 계속 발전함에 따라 애플리케이션 및 실행 방법을 더 많이 제어할 수 있습니다.</p>


  <p>Azure는 지속적으로 새 서비스를 추가하고 있으며, 패키지 모델을 통해 더 신속하게 서비스를 통합할 수 있습니다. 최근에 추가된 서비스 중 하나는 SignalR 서버 설정, 호스팅, 크기 조정 또는 부하 분산에 대한 걱정 없이 실시간 웹 환경을 빌드하는 데 집중할 수 있는 완전 관리형 서비스인 <a href="https://azure.microsoft.com/services/signalr-service/" target="_blank">Azure SignalR Service</a>입니다. 이제 Azure Functions에는 이 서비스에 대한 확장, <a href="https://github.com/Azure/azure-functions-signalrservice-extension" target="_blank">이 GitHub 리포지토리의 Microsoft Azure</a> 호스팅하는 오픈 소스 바인딩이 있으며, 설명서에서 <a href="https://docs.microsoft.com/azure/azure-functions/functions-bindings-signalr-service" target="_blank">SignalR Service 바인딩 참조</a>를 확인하여 현재 실시간 서버리스 애플리케이션 빌드를 시작할 수 있습니다.</p>


  <h3>개발 용이성</h3>


  <p>Azure Functions에는 <a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-your-first-function-visual-studio" target="_blank">Visual Studio, VS Code</a>, <a href="https://docs.microsoft.com/en-us/visualstudio/mac/azure-functions" target="_blank">Mac용 VS</a> 및 모든 코드 <a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-first-function-vs-code" target="_blank"></a>편집 환경과 함께 실행할 수 있는 <a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-first-azure-function-azure-cli" target="_blank">CLI</a> 내에 강력한 네이티브 도구가 있습니다. 이전에 이러한 옵션을 살펴보지 않은&rsquo; 경우 생산성에 즉각적인 영향을 미칠 수 있으므로 이러한 옵션을 살펴보는 것이 좋습니다.</p>


  <p>서버리스 애플리케이션에는 여러 가지 구성 요소가 포함될 수 있으며 신속하게 관찰하고 모니터링하기가 어려워집니다. Functions 2.0에서는 Azure Application Insights 통합을 확장하여 분산 추적에 대한 가시성을 높입니다. 종속성은 자동으로 추적되며, 리소스 간 연결은 다양한 서비스에서 자동으로 상호 연결되며 곧 추가될 예정입니다. 이러한 모든 항목은 <a href="https://docs.microsoft.com/azure/application-insights/app-insights-app-map" target="_blank">애플리케이션 맵</a>에서 시각화되므로 구성 요소가 상호 작용하고 개별 실행을 드릴다운하여 문제를 진단하는 방법을 이해할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5a168e9f-ad21-4301-a07a-47cb93dc0dd6.gif"><img alt="FunctionsAppMap" height="1096" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1359c6d9-d49c-43cb-89b4-1f1c2bc63a6a.gif" style="margin-right: auto; margin-left: auto; float: none; display: block;" title="FunctionsAppMap" width="1845"></a></p>


  <p>Azure Functions 2.0을 통해 DevOps 환경을 구체화하는 데도 투자하고 있습니다. 새 배포 센터는 통합 환경에서 빌드 및 배포 옵션을 집계하는 이 방향의 한 단계입니다. 함수 앱의 플랫폼 기능&rdquo; 아래에 &ldquo;있는 배포 센터에 액세스하고 원하는 소스를 쉽게 설정하여 코드를 Functions에 즉시 배포할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2c993c56-7e81-484f-b721-71e6ba280aee.png"><img alt="Deployment center" border="0" height="694" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0acb2544-708a-4548-88ec-a7535eacc0f8.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="배포 센터" width="1310"></a></p>


  <p>이렇게 하면 DevOps 환경에 대한 포커스가 첫 번째 함수 생성부터 시작됩니다. Azure Portal의 시작 환경은 이제 개발 및 배포 옵션을 강조 표시하고 모든 것을 구성하는 데 도움이 됩니다. 포털&rsquo;에서 새 함수 앱을 만들면 처음 2.0 함수를 배포하는 데 필요한 모든 단계를 안내합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8dfcd5b6-1a3c-4935-b744-3ae0a9c52374.png"><img alt="Azure Functions" border="0" height="1258" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/84d95604-74f2-4d5a-af84-038303b633ec.png" style="margin: 0px auto; border: 0px currentcolor; border-image: none; float: none; display: block; background-image: none;" title="Azure Functions" width="2560"></a></p>


  <h2>다음 단계는 무엇입니까&rsquo;?</h2>


  <p>Were&rsquo;는 또한 단기 로드맵에 대한 가시성을 제공하게 되어 기쁩니다. Azure Functions 2.0은 몇 가지 중요한 혁신을 위한 토대를 마련하고 있으며, 다음은 호스팅 옵션 및 언어 지원을 위해 곧 출시될 내용을 간략하게 살펴봅니다.</p>


  <h3>서버리스 Linux</h3>


  <p>Azure Functions에 대한 개발 스택 및 호스팅 옵션을 확장하기 위한 노력의 일환으로 Linux OS를 기반으로 빌드된 Functions에 대한 소비 계획의 미리 보기부터 서버리스 Linux 호스팅(<a href="https://docs.microsoft.com/en-us/azure/service-fabric-mesh/service-fabric-mesh-overview" target="_blank">Service Fabric Mesh</a>에서 제공)에 투자하고 있습니다. 이를 통해 Linux &ndash; 및 Mac &ndash; 에 초점을 맞춘 개발자는 서버리스 혜택을 최대한 활용하면서 개발 스택에 대한 선호도가 가장 높은 플랫폼에서 호스팅할 수 있는 원활하고 자연스러운 경로를 제공합니다. 초기 비트에 액세스하고 피드백을 공유하려면 Linux 미리 보기에 <a href="https://aka.ms/functions-consumptionlinux-preview" target="_blank">등록</a> 합니다.</p>


  <h3>Python 지원</h3>


  <p>&rsquo;Functions 2.0 런타임, 새 언어 작업자 모델 및 Linux 호스팅 플랫폼을 기반으로 Python 3.6에 대한 지원을 적극적으로 빌드합니다. Python 함수는 데이터 조작, 기계 학습, 자동화 및 스크립팅 시나리오에 자연스럽게 적합합니다. 이러한 시나리오를 서버리스로 구축하면 기본 인프라를 관리하는 부담을 덜 수 있으므로 더 빠르게 이동하고 비즈니스 문제 해결에 집중할 수 있습니다. 현재 이 기능은 프라이빗 미리 보기로 제공됩니다. <a href="https://aka.ms/functions-python-preview" target="_blank">우리는 그것을 시도하고</a> 우리와 함께 피드백을 공유하도록 초대합니다.</p>


  <h2>계속 연락해 주세요!</h2>


  <p>지금 출시되고 곧 출시될 예정인 Wed&rsquo;는 여러분의 의견을 진심으로 좋아합니다. <a href="https://twitter.com/AzureFunctions" target="_blank">Twitter</a> 및 <a href="https://github.com/Azure/Azure-Functions" target="_blank">GitHub</a> 팀에 연결할 수 있으며 <a href="https://stackoverflow.com/questions/tagged/azure-functions" target="_blank">StackOverflow</a> 및 <a href="https://feedback.azure.com/forums/355860-azure-functions" target="_blank">UserVoice</a>도 적극적으로 모니터링합니다. 함수 2.0에서 자주 사용하는 기능을 알려 주시면 이번 주에 <a href="https://www.microsoft.com/en-us/ignite" target="_blank">Microsoft Ignite</a>에 참석하시면&rsquo; 부스에서 직접 인사해 주세요!</p>
