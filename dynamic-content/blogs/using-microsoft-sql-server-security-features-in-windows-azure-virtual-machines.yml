### YamlMime:Yaml
ms.openlocfilehash: 7de073b1cffb3b3f445df0adbc3c78bc11946412
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905261"
Slug: using-microsoft-sql-server-security-features-in-windows-azure-virtual-machines
Title: Windows Azure Virtual Machines에서 Microsoft SQL Server 보안 기능 사용
Summary: 편집자 주:&nbsp;이 게시물은 SQL Server 팀의 선임 프로그램 관리자인 성호(Sung Hsueh)로부터 제공됩니다.&nbsp;  SQL Server 사용하는 최신 방법 중 하나는 Microsofts&rsquo; Windows Azure를 활용하는 것입니다.
Content: '<p><strong>편집기 참고 사항:&nbsp;</strong> <span>이 게시물은 SQL Server 팀의 선임 프로그램 매니저 인 성 Hsueh에서 제공됩니다.&nbsp;</span></p>  <p>SQL Server 사용하는 최신 방법 중 하나는 Microsofts&rsquo; Windows Azure Infrastructure Services를 활용하고 SQL Server 호스트할 Windows Azure Virtual Machines를 만드는 것입니다.&nbsp; 규정 준수 요구 사항이 있는 애플리케이션에서도 이 환경을 활용할 수 있는 가능성에 대한 Il-Sungs&rsquo; 이전 블로그 게시물(<a href="" target="_blank"></a>)을 이미 확인했을 수 있습니다.&nbsp; Windows Azure Virtual Machines에서 SQL Server 2008 R2 Enterprise Edition 및 SQL Server 2012 Enterprise Edition을 사용할 수 있으므로 이제 SQL Server 감사 및 투명한 데이터 암호화 같은 Enterprise 수준 기능을 활용할 수 있습니다.  미리 구성된 즉시 배포할 수 있는 분당 청구 Windows Azure Virtual Machines!&nbsp; 물론 라이선스 모바일(<a href="https://www.microsoft.com/licensing/software-assurance/license-mobility.aspx" target="_blank">https://www.microsoft.com/licensing/software-assurance/license-mobility.aspx</a>)을 사용하여 기존 Software Assurance 또는 기업계약 라이선스를 이전하고 분당 청구를 선호하는 경우에도 이러한 기능을 활용할 수 있습니다.</p>  <h4><strong>Windows Azure Virtual Machines에서 SQL Server TDE 사용</strong></h4>  <p>투명한 데이터 암호화(<a href="https://msdn.microsoft.com/en-us/library/bb934049.aspx" target="_blank">https://msdn.microsoft.com/en-us/library/bb934049.aspx</a>)의 빠른 연습을 수행하여 이 모든 것이 어떻게 작동하는지 살펴보겠습니다&rsquo;.&nbsp; 아직 설치하지 않은&rsquo; 경우 Windows Azure 관리 포털을 통해 SQL Server 이미 설치된 Windows Azure Virtual Machine을 만듭니다.</p>  <p><img src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5001.teched1.png" alt="" border="0"></p>  <p>그리고 일부 데이터베이스를 만들기 시작!</p>  <p>암호화를 추가하려는 데이터베이스가 있으면 다음 몇 단계는 로컬에서 SQL Server 실행하는 경우와 동일합니다.</p>  <ol>  <li>Master에서 개체를 만들 수 있는 사용자의 자격 증명을 사용하여 컴퓨터에 로그인합니다.</li>  <li>마스터에서 다음 DDL을 실행합니다(&ldquo;USE MASTER&rdquo;).<br>  <p>CREATE MASTER KEY ENCRYPTION BY PASSWORD = &lsquo;&lt;your password here&gt;&rsquo;;</p>  <p>Go</p>  <p>CREATE CERTIFICATE TDEServerCert WITH SUBJECT = &lsquo;My TDE 인증서&rsquo;;</p>  <p>Go</p>  </li>  <li>  <p>인증서 백업(암호화된 데이터베이스에 대해 만든 백업/스냅샷/등을 포함하여 데이터베이스에 액세스하는 데 필요하므로 이를 안전하게 유지해야 합니다.) 이렇게 하면 인증서&rsquo; 공개 키가 포함된 파일 1개와 프라이빗 키가 있는 두 개의 파일이 생성됩니다. 둘 다 필요합니다.&nbsp; 인증서 백업에 대한 자세한 내용은 <a href="https://technet.microsoft.com/en-us/library/ms178578.aspx" target="_blank">여기</a>를 참조하세요.</p>  <p>BACKUP CERTIFICATE TDEServerCert TO FILE = &lsquo;&lt;공개 키에 대한 백업 파일 경로&gt;&rsquo;</p>  <p>&nbsp;&nbsp; &nbsp; &nbsp; WITH PRIVATE KEY(</p>  <p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FILE = &lsquo;&lt; 프라이빗 키&gt;&rsquo;에 대한 백업 파일 경로</p>  <p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;암호로 암호화 = &lsquo;&lt; 프라이빗 키 파일을 암호화하기 위한 새 암호&gt;&rsquo;</p>  <p>&nbsp; &nbsp; &nbsp; &nbsp; );</p>  </li>  <li>암호화하려는 데이터베이스로 전환</li>  <li>다음 DDL을 실행합니다.</li>  </ol>  <p style="padding-left: 30px;">CREATE DATABASE ENCRYPTION KEY WITH ALGORITHM = AES_256 ENCRYPTION BY SERVER CERTIFICATE TDEServerCert;</p>  <p style="padding-left: 30px;">Go</p>  <p style="padding-left: 30px;">ALTER DATABASE [your_database_name] SET ENCRYPTION ON;</p>  <p style="padding-left: 30px;">Go</p>  <p>그리고 그것을&rsquo;!&nbsp; 암호화는 백그라운드에서 실행됩니다(sys.dm_database_encryption_keys 쿼리하여 확인할 수 있음). 온-프레미스 SQL Server 인스턴스와 정확히 동일한 차이점이 없습니다.&nbsp; 마찬가지로 SQL Server 감사()를<a href="https://msdn.microsoft.com/en-us/library/cc280386.aspx" target="_blank">https://msdn.microsoft.com/en-us/library/cc280386.aspx</a> 온-프레미스에서 이미 사용 중인 방법과 똑같이 사용할 수도 있습니다.</p>  <h4>추가 보안 고려 사항</h4>  <p>유의해야 할 몇 가지 추가 사항은 보안 모범 사례(<a href="https://msdn.microsoft.com/library/windowsazure/dn133147.aspx" target="_blank">https://msdn.microsoft.com/library/windowsazure/dn133147.aspx</a>)를 따라야 합니다. 고려해야 할 몇 가지 항목은 다음과 같습니다.</p>  <ul>  <li>불필요한 서비스를 사용하지 않도록 설정하여 노출 영역 줄이기</li>  <li>정책 기반 관리를 활용하여 약한 알고리즘 사용과 같은 보안 조건 감지</li>  <li>가능한 경우 최소한의 사용 권한을 사용하고, 가능한 경우 sa 또는 sysadmin과 같은 기본 제공 계정 또는 그룹을 사용하지 마세요. 관리 작업을 추적하기 위해 SQL Server 감사 사용 고려</li>  <li>암호화 기능을 사용하려는 경우 서비스 마스터 키로 시작하는 키 에이징/회전 정책을 만드는 것이 좋습니다.</li>  <li>특히 Windows Azure의 퍼블릭 엔드포인트를 통해 SQL Server 연결하는 경우 SSL 암호화를 사용하는 것이 좋습니다.</li>  <li>특히 Windows Azure의 퍼블릭 엔드포인트를 통해 SQL Server 연결하는 경우 기본 인스턴스에 대해 SQL Server 사용하는 포트를 1433에서 다른 것으로 변경하는 것이 좋습니다(이상적으로는 공용 인터넷에서 SQL Server 인스턴스에 대한 외부 연결 방지).&nbsp;</li>  </ul>  <h4><strong><em>맺음말&hellip;</em></strong></h4>  <p>Windows Azure Virtual Machines에서 SQL Server Enterprise Edition을 실행하면 기존 애플리케이션에서 보안 모범 사례 및 전문 지식을 수행하고 Microsofts&rsquo; Windows Azure를 활용하여 클라우드에서 애플리케이션을 실행하고 분당 청구 옵션을 통해 사용하는 항목(Enterprise!포함)에 대해서만 비용을 지불할 수 있습니다.&nbsp;  사용해 보시고 여러분의 경험을 알려주세요!</p>'
