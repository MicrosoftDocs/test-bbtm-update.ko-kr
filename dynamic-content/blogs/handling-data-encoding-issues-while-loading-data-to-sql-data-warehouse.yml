### YamlMime:Yaml
ms.openlocfilehash: cf8f1a1794c6dd53917c3569e563180edfbc3ba2
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139911037"
Slug: handling-data-encoding-issues-while-loading-data-to-sql-data-warehouse
Title: 데이터 웨어하우스에 데이터를 로드하는 동안 데이터 인코딩 문제 처리 SQL
Summary: 이 블로그는 Polybase를 사용하여 데이터 웨어하우스를 SQL 데이터를 로드하는 동안 발생할 수 있는 일부 데이터 인코딩 문제에 대한 인사이트를 제공하기 위한 것입니다.
Content: >-
  <p>이 블로그는 Polybase를 사용하여 데이터 웨어하우스를 SQL 데이터를 로드하는 동안 발생할 수 있는 데이터 인코딩 문제 중 일부에 대한 인사이트를 제공하기 위한 것입니다. 또한 이 문서에서는 이러한 문제를 극복하고 데이터를 성공적으로 로드하는 데 사용할 수 있는 몇 가지 옵션을 제공합니다.</p>


  <h2>문제</h2>


  <p>대부분의 경우 외부 시스템에서 데이터 웨어하우스를 SQL 데이터를 마이그레이션하거나 플랫 파일 형식으로 내보낸 데이터로 작업합니다. 데이터가 UTF-8 또는 UTF-16 인코딩 표준을 사용하여 형식이 지정된 경우 Polybase를 사용하여 데이터를 로드할 수 있습니다. 그러나 데이터 형식은 원본 시스템에서 지원하는 인코딩 옵션에 따라 달라집니다. 일부 시스템은 UTF-8 또는 UTF-16 인코딩을 지원하지 않습니다. 작업 중인 데이터가 ISO-8859-1과 같은 대체 형식으로 서식이 지정된 경우 데이터를 UTF-8/UTF-16 형식으로 변환하면 귀중한 시간과 노력을 절약할 수 있습니다.</p>


  <p>원본 시스템에서 Azure Blob Storage Azure SQL DW(Data Warehouse)로의 데이터 흐름은 다음 그래픽에 나와 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9a823073-e14e-4f80-ad99-0d274ea9d41c.png"><img alt="Azure Blog Storage" border="0" height="110" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/963a1ce4-977f-4ec7-84fd-04496cd8bc0e.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" title="Azure Blog Storage" width="438"></a></p>


  <p>Azure Blob Storage SQL DW와 같은 Azure 서비스에서 사용할 데이터를 저장하는 편리한 장소입니다. PolyBase를 사용하면 T-SQL 사용하여 데이터에 쉽게 액세스할 수 있습니다. 예를 들어 Azure Blob Storage 데이터에 대한 외부 테이블을 만들고 간단한 SELECT 쿼리를 사용하여 데이터를 SQL Data Warehouse의 내부 테이블에 로드합니다.</p>


  <p>로드되는 데이터의 볼륨이 작으면 이번에는 UTF-8/UTF-16 인코딩을 사용하여 원본 시스템에서 데이터를 다시 내보내는 것이 더 쉬울 수 있습니다. 그러나 대량의 데이터의 경우 Azure Blob Storage 다시 내보내기, 데이터 압축 및 데이터 로드에는 몇 주가 걸릴 수 있습니다. 이 지연을 방지하려면 원본 시스템에 다시 액세스하지 않고 Azure 환경 내의 데이터 파일에 대한 인코딩을 변환할 수 있어야 합니다.</p>


  <h2>솔루션</h2>


  <p>아래 섹션에서는 원본 파일 인코딩을 UTF-8/UTF-16으로 변환하는 데 사용할 수 있는 옵션에 대해 자세히 설명합니다.</p>


  <p><b>중요:</b> PolyBase는 UTF16-LE를 지원합니다. &rsquo;Windows 에코시스템의 고객에게는 중요하지 않지만 고객은 UTF16-BE를 지정하고 부하가 실패할 수 있습니다.</p>


  <h3>옵션 1: 메모장++</h3>


  <p>메모장++ 도구를 사용하여 로컬 컴퓨터에서 파일 인코딩을 변경할 수 있습니다. 데이터 파일을 로컬 컴퓨터에 다운로드하고 메모장++로 파일을 연 다음, 파일 인코딩을 UTF-8/UTF-16으로 변환하기만 하면됩니다.</p>


  <p>1.<b>원본 파일의 인코딩을 보려면</b> 다음 그래픽과 같이 <b>인코딩</b> 메뉴를 클릭합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/de0bd3ca-391f-40d7-a56c-f0fef657bf6b.png"><img alt="Encode 1" border="0" height="175" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7af74fd8-2347-45ee-bfac-2a885ae4bd05.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="인코딩 1" width="404"></a></p>


  <p>위 예제의 원본 파일은 ANSI로 인코딩됩니다.</p>


  <p>2.<b> 파일 인코딩을 UTF-8로 변환</b>하려면 <b>인코딩</b> 메뉴에서 <b>UTF-8로 변환을</b> 선택합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b7ad8b02-7cfb-4577-96e2-dd7f87cc88c5.jpg"><img alt="Encode 2 " border="0" height="175" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a9eb1ddb-130b-4665-bc9b-6ad47c6f2fb6.jpg" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="인코딩 2 " width="407"></a></p>


  <p>3. 파일을 저장 <b>하고, 인코딩</b> 메뉴를 사용하여 인코딩을 보고, 이제 UTF-8을 사용하여 파일이 인코딩되어 있는지 확인합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/30d99a39-56f3-474c-8a9f-8a724c31e5c8.png"><img alt="Encode 3" border="0" height="177" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/35f83cbe-6d12-4370-ab2e-a5ede733d20e.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="인코딩 3" width="412"></a></p>


  <p>파일이 UTF-8 인코딩에 저장되면 Polybase를 사용하여 Azure Blob Storage 업로드하고 SQL Data Warehouse에 로드할 수 있습니다.</p>


  <p>이는 실행 가능한 방법이지만 아래에 나열된 몇 가지 단점이 있습니다.</p>


  <ul>
   <li>다운로드 시간</li>
   <li>로컬 시스템에서 사용 가능한 공간</li>
   <li>업로드 시간</li>
   <li>메모리 및 공간 제약 조건으로 인해 작은 파일에서만 작동</li>
  </ul>


  <h3>옵션 2: Azure VM</h3>


  <p>메모장++를 사용하는 것과 관련된 몇 가지 단점을 극복하기 위해 Azure VM을 사용하여 데이터 파일 인코딩을 변환할 수 있습니다. 이 방법을 사용하면 전체 프로세스가 Azure 환경 내에서 발생하므로 Azure와 로컬 시스템 간에 데이터 전송과 관련된 지연이 제거됩니다. 이 프로세스는 다음 그래픽에 표시됩니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/301f4ae1-05cc-4663-8635-fd62f73ab530.png"><img alt="Azure VM" border="0" height="279" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2f34251c-63e1-4b88-8dc4-abb74b59d24d.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="Azure VM" width="148"></a></p>


  <p>이 방법에는 다음과 같은 개략적인 단계가 있습니다.</p>


  <ol>
   <li>Azure VM 설정(Windows 또는 Linux)</li>
   <li>Azure Blob Storage Azure VM의 로컬 스토리지로 데이터 파일 다운로드</li>
   <li>데이터 파일 추출(해당하는 경우)</li>
   <li>유틸리티를 사용하여 데이터 파일 인코딩 변환(사용자 지정/기본 제공)</li>
   <li>변환된 데이터 파일을 Azure VM의 로컬 스토리지에서 Azure Blob Storage 업로드</li>
  </ol>


  <p>이 방법은 다음과 같은 고유한 단점이 있습니다.</p>


  <ul>
   <li>다운로드 시간</li>
   <li>로컬 시스템에서 사용 가능한 공간</li>
   <li>업로드 시간</li>
  </ul>


  <h3>옵션 3: Azure 파일 Storage</h3>


  <p>Azure VM을 사용할 때 다운로드 및 업로드 시간과 관련된 제한을 극복하기 위해 비용이 많이 드는 재작성 없이 파일 공유를 사용하는 레거시 애플리케이션을 Azure로 신속하게 마이그레이션하는 데 사용할 수 있는 클라우드 기반 SMB 파일 공유를 제공하는 Azure File Storage 사용할 수 있습니다. Azure File Storage 사용하면 데스크톱 애플리케이션이 일반적인 SMB 공유를 탑재하는 것처럼 Azure 가상 머신 또는 클라우드 서비스에서 실행되는 애플리케이션이 클라우드에 파일 공유를 탑재할 수 있습니다. 그런 다음, 다음 그래픽과 같이 많은 수의 애플리케이션 구성 요소가 파일 Storage 공유를 동시에 탑재하고 액세스할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8701bbe6-f695-4beb-b2db-ddcd6c7232e6.png"><img alt="Azure Storage Concepts " border="0" height="205" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/410f33c3-4423-497c-8bac-93a9edf1a50c.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="Azure Storage 개념" width="349"></a></p>


  <p><strong>참고: </strong> <a href="https://docs.microsoft.com/en-us/azure/storage/storage-introduction">Azure Storage</a> 대해 자세히 알아보세요.</p>


  <p>Azure File Storage 사용하는 경우 다음 표에서 식별되는 용량 제한에 유의하세요.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/88a9838e-4d6e-4159-a5d2-7937cdf22010.png"><img alt="Resource-Limit" border="0" height="84" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e55e5b18-172e-47d9-80b2-18171a9806fe.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="리소스 제한" width="347"></a></p>


  <p><strong>참고:</strong> <a href="https://docs.microsoft.com/en-us/azure/storage/storage-scalability-targets">이제 Azure Storage 확장성 및 성능 목표</a>의 전체 목록을 사용할 수 있습니다.</p>


  <p>이 방법을 사용하면 Azure File Storage 모든 데이터 파일을 가질 수 있으며 Azure File Storage 탑재할 수 있는 Azure VM을 가질 수 있습니다. 탑재가 완료되면 Azure VM은 Azure VM의 로컬 스토리지에 다운로드하거나 업로드하지 않고도 Azure 파일 Storage 파일을 직접 읽고 쓸 수 있습니다.</p>


  <p>이 방법은 다음과 같은 개략적인 단계를 포함합니다.</p>


  <ol>
   <li>Azure VM 설정(Windows 또는 Linux)</li>
   <li>Azure VM에 Azure 파일 Storage 탑재(아래 절차 참조)</li>
   <li>데이터 파일 추출(해당하는 경우)</li>
   <li>유틸리티를 사용하여 데이터 파일 인코딩 변환(사용자 지정/기본 제공)</li>
  </ol>


  <p>아래 다이어그램은 PolyBase를 통해 SQL DW로 데이터 압축, 전송, 추출, 변환 및 로드의 전체 흐름을 보여줍니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6e1f9570-3bdc-454d-8e15-06904d184880.png"><img alt="image" border="0" height="329" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/abcc89a0-d77b-4166-9217-934172516e6a.png" style="background-image: none; display: inline; border-image: none" title="이미지" width="552"></a></p>


  <h3>VM에 Azure 파일 Storage 탑재</h3>


  <p>이 경우 Azure File Storage VM인 Ubuntu Linux VM에 탑재하는 프로세스에는 다음 세 가지 높은 수준의 단계가 포함됩니다.</p>


  <ol>
   <li>필요한 라이브러리/패키지 설치
   <ul>
    <li>sudo apt-get install <b>cifs-utils</b></li>
   </ul>
   </li>
   <li>Azure 파일 Storage 매핑될 Azure VM에 탑재 지점 위치를 만듭니다.
   <ul>
    <li>sudo mkdir /mnt/mountpoint</li>
   </ul>
   </li>
   <li>Azure 파일 Storage 위치를 Azure VM 탑재 지점에 탑재합니다.
   <ul>
    <li>sudo mount -t cifs <b>//myaccountname.file.core.windows.net/mysharename</b> <b>/mnt/mountpoint</b> -o <b>vers=3.0,user</b>=myaccountname,password=StorageAccountKeyEndingIn==,dir_mode=0777,file_mode=0777,serverino</li>
   </ul>
   </li>
  </ol>


  <p><b>참고</b>: <a href="https://docs.microsoft.com/en-us/azure/storage/storage-how-to-use-files-linux">Linux VM에서 Azure File Storage 탑재에</a> 대한 전체 세부 정보를 가져옵니다.</p>


  <h3>데이터 인코딩 변환 자동화</h3>


  <p>이 섹션에서는 이 방법을 활용하여 데이터 파일의 인코딩을 변환하는 프로젝트에 대한 몇 가지 세부 정보를 제공합니다.</p>


  <ul>
   <li>Netezza 시스템에서 내보낸 131개 테이블 데이터</li>
   <li>원본 테이블을 나타내는 폴더 이름 아래에 구성된 원본 테이블당 4개 데이터 파일</li>
   <li>ANSI 형식으로 인코딩된 모든 데이터 파일(ISO-8859-1)</li>
   <li>GZ 압축을 사용하여 압축된 모든 데이터 파일</li>
   <li>압축된 총 데이터 파일 크기는 <b>750GB</b>입니다.</li>
   <li>압축되지 않은 변환된 총 데이터 파일 크기는 <b>7.6TB였습니다.</b></li>
  </ul>


  <p>데이터 파일은 다음 구조의 Azure 파일 Storage 구성되었습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0e3165a6-45d1-4d37-b2a3-0727621f2379.png"><img alt="ConvertedData" border="0" height="191" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/53c86540-0f4a-471f-886b-fae16a51eb98.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="ConvertedData" width="294"></a></p>


  <p>데이터 파일의 인코딩을 자동으로 변환하는 데 사용된 Ubuntu VM의 bash 스크립트 스냅샷은 다음 그래픽에 표시됩니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e0a3620b-c0e8-4183-a435-50376ca1bec0.png"><img alt="3d8849cb-bc90-4558-88a0-212b2d2f7be4" border="0" height="261" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/88b80df0-6220-4b11-96ac-52cd1421e5bf.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="3d8849cb-bc90-4558-88a0-212b2d2f7be4" width="803"></a></p>


  <p>이 스크립트는 다음을 수행했습니다.</p>


  <ol>
   <li>테이블 이름을 인수로 수락했습니다.</li>
   <li>지정된 테이블에 대한 4개의 데이터 파일 각각을 반복합니다.</li>
   <li>각 데이터 파일의 경우 <ul>
    <li><b>gunzip</b> 명령을 사용하여 압축된 GZ 파일 추출</li>
    <li>원본 파일 인코딩이 ISO-8859-1로 지정되고 대상 파일 인코딩이 UTF-8로 지정된 <b>iconv</b> 명령을 사용하여 각 파일의 인코딩을 변환했습니다.</li>
    <li>변환된 파일을 <b>ConvertedData</b> 아래에 테이블 이름이 있는 폴더에 작성했습니다.</li>
   </ul>
   </li>
  </ol>


  <p>테이블 이름을 인수로 수락하는 대신 테이블 이름 목록을 반복하고 위의 프로세스를 반복하도록 스크립트가 더욱 향상되었습니다.</p>


  <h4>인코딩에서 다른 인코딩으로 변환</h4>


  <p>스크립트에서 하드 코딩하는 대신 <b>from</b> 및 to encoding을 인수로 수락 <b>하도록</b> 스크립트를 수정할 수 있습니다. iconv 명령에서 지원하는 인코딩의 전체 목록은 데이터 인코딩을 변환하는 데 사용할 컴퓨터에서 <b><i>iconv -l</i></b> 명령을 실행하여 검색할 수 있습니다. 명령을 실행하기 전에 지정된 인코딩 형식의 오타를 확인해야 합니다. 제네릭 스크립트의 스냅샷 및 호출 방법에 대한 예제는 다음 그래픽에 나와 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5700594c-f1e7-43fb-938b-f6282287e062.jpg"><img alt="afa49072-d4d6-4918-8b99-e46740002686" border="0" height="297" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/71ed8152-a4d5-41d5-bd81-b242cc95e415.jpg" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="afa49072-d4d6-4918-8b99-e46740002686" width="800"></a></p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c858255f-a674-4d38-9f57-5c4016498bd8.jpg"><img alt="a33935b2-bb3a-4185-ac81-af6f975cc934" border="0" height="18" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/37613f81-1dfe-471e-8954-481dd706b1fd.jpg" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" title="a33935b2-bb3a-4185-ac81-af6f975cc934" width="301"></a></p>


  <p>위의 명령은 데이터 파일을 UTF-8 인코딩에서 ISO_8859-1 인코딩 형식으로 변환합니다.</p>


  <h2>인식</h2>


  <p>데이터 마이그레이션 팀은 이 블로그 게시물을 준비하기 위한 노력에 대해 Rakesh Davanum, Andy Isley, Joe Yong, Casey Karst 및 Mukesh Kumar의 주요 기여자에게 감사드립니다. 제공된 세부 정보는 CSE DM Jumpstart 프로그램이 후원하는 고객 참여의 일부로 수집되었습니다.</p>
