### YamlMime:Yaml
ms.openlocfilehash: c428ee12773bdf024cd9f70041d3cbfba89aef44
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139907766"
Slug: how-to-resolve-setconfigurationsettingpublisher-needs-to-be-called-before-fromconfigurationsetting-can-be-used-after-moving-to-windows-azure-sdk-1-3
Title: Windows Azure SDK 1.3으로 이동한 후 "FromConfigurationSetting을 사용하려면 SetConfigurationSettingPublisher를 호출해야 합니다." 해결 방법
Summary: '[이 블로그 게시물 원래 스티브 마르크스&rsquo; 블로그에 등장'
Content: '<p><em>[이 블로그 게시물 원본은 스티브 마르크스&rsquo; 블로그 </em><a href=""><em></em></a> 에 등장<em>하고 가시성을 위해 여기에 교차 게시되고있다.]</em></p>  <p>웹 역할을 Windows Azure SDK 1.2에서 SDK 1.3으로 마이그레이션한 후 이 예외를 수신하는 경우&rsquo; SDK 1.3에 도입된 새로운 전체 IIS 모델과 관련된 변경 내용과 관련이 있을 수 있습니다. 이 게시물은 전체 IIS 모델에서 메서드를 올바르게 사용하는 <code>FromConfigurationSetting</code> 방법과 변경 내용을 이해하는 데 도움이 됩니다. 이전 SDK 릴리스에서와 같이 호스트된 웹 코어 모델을 사용하기만 하면 됩니다.</p>  <h2>전체 IIS 모델</h2>  <p>Windows Azure의 전체 IIS에는 단일 웹 역할 및 <a href="https://msdn.microsoft.com/en-us/library/gg433059.aspx">고급 IIS 구성</a> 내에서 여러 웹 사이트를 호스팅하는 것과 같은 새로운 기능이 도입되었습니다. Windows Azure SDK 1.3의 새로운 전체 IIS 호스팅 모델과 이전에 사용된 호스트된 Web Core 모델과 어떻게 다른지에 대한 자세한 내용은 새 전체 IIS 기능: Windows Azure 블로그의 Hosted Web Core&rdquo;의 차이점을 참조&ldquo;하세요.</p>  <p>해당 게시물의 다음 다이어그램은 사용 방법에 <code>FromConfigurationSetting</code> 영향을 주는 한 가지 차이점을 보여 줍니다.</p>  <p><img height="272" width="550" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2703.full-iis-app-domain-model_5F00_3.png" alt="full iis app domain model" border="0" title="전체 iis 앱 도메인 모델" style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px"></p>  <p>Hosted Web Core 모델을 <code><a href="https://msdn.microsoft.com/en-us/library/microsoft.windowsazure.serviceruntime.roleentrypoint.aspx">RoleEntryPoint</a></code> 사용하면 동일한 앱 도메인에서 코드(예: <code>WebRole.cs</code>ASP.NET) 및 웹 애플리케이션 코드 <code>Default.aspx.cs</code> 가 실행되었습니다. 전체 IIS에서 두 개의 고유한 앱 도메인이 있습니다. 즉, 정적 개체는 애플리케이션의 이러한 두 부분 간에 더 이상 공유되지 않으며&rsquo; 새 전체 IIS 호스팅 모델에서 사용하는 <code>FromConfigurationSetting</code> 방법을 이해하는 열쇠입니다.</p>  <h2>이전: Hosted Web Core를 사용하여 FromConfigurationSetting</h2>  <p>모든 항목이 동일한 앱 도메인에서 실행되는 Hosted Web Core 모델은 개체를 초기화하는 <code>CloudStorageAccount</code> 일반적인 패턴으로 이어져 있습니다. SDK 1.2 코드는 다음과 같이 일반적으로 작성되었습니다.</p>  <p>의 메서드<code>WebRole.cs</code>에서<code>OnStart</code>:</p>  <blockquote>  <pre class="code"><span style="color: #2b91af">CloudStorageAccount</span>.SetConfigurationSettingPublisher(<br>    (configName, configSettingPublisher) =&gt;      {          <span style="color: blue">var </span>connectionString = <br>            <span style="color: #2b91af">RoleEnvironment</span>.GetConfigurationSettingValue(configName);          configSettingPublisher(connectionString);      }  );</pre>  </blockquote>  <p>(함수는 이보다 더 복잡해 보일 수 있지만 이 게시물의 정보는 여전히 적용됩니다.) 그런 다음, <code>Default.aspx.cs</code> (또는 ASP.NET MVC 컨트롤러에서):</p>  <blockquote>  <pre class="code"><span style="color: blue">var </span>account =<br>    <span style="color: #2b91af">CloudStorageAccount</span>.FromConfigurationSetting(<span style="color: #a31515">"MyConnectionString"</span>);</pre>  </blockquote>  <p>호출이 호출과 동일한 앱 도메인에서 수행되었기 때문에 <code>SetConfigurationSettingPublisher</code> 이 코드가 작동했습니다 <code>FromConfigurationSetting</code>. 그러나 전체 IIS 호스팅 모델에서는 두 가지 앱 도메인이 있습니다.</p>  <h2>이후: 전체 IIS를 사용하여 FromConfigurationSetting</h2>  <p>호출 <code>SetConfigurationSettingPublisher</code> 을 배치하는 편리한 위치는 <code>Application_Start</code> 모든 웹 애플리케이션 코드가 실행되는 앱 도메인의 일부로 실행되는 메서드에 있습니다. 이 메서드는 .에 있습니다 <code>Global.asax.cs</code>. (아직 없는&rsquo; 경우 웹 애플리케이션 프로젝트를 마우스 오른쪽 단추로 <code>Global.asax.cs</code> 클릭하고 추가&rdquo;&ldquo;, 새 항목&rdquo; 및 &ldquo;전역 애플리케이션 클래스를 &ldquo;선택하여 추가할 수 있습니다.&rdquo;)</p>  <blockquote>  <pre class="code"><span style="color: blue">void </span>Application_Start(<span style="color: blue">object </span>sender, <span style="color: #2b91af">EventArgs </span>e)  {      <span style="color: #2b91af">CloudStorageAccount</span>.SetConfigurationSettingPublisher(<br>        (configName, configSettingPublisher) =&gt;          {              <span style="color: blue">var </span>connectionString =<br>                <span style="color: #2b91af">RoleEnvironment</span>.GetConfigurationSettingValue(configName);              configSettingPublisher(connectionString);          }      );  }</pre>  </blockquote>  <p>이 코드는 웹 애플리케이션&rsquo; 앱 도메인의 일부인 위치&rsquo;로 이동했을 때<code>WebRole.cs</code>와 정확히 동일한 코드입니다.</p>  <h2>대안</h2>  <p>구성 설정의 <code>SetConfigurationSettingPublisher</code> 위치를 조합하고 <code>FromConfigurationSetting</code> 추상화합니다. 일부 사용자는 이 코드를 사용하여 Windows Azure 내부 및 외부에서 작동하는 코드를 작성하고, 사용 가능한 경우 Windows Azure에서 구성 설정을 읽고, 사용 가능한 경우 또는 다른 위치로 <code>web.config</code> 대체합니다.</p>  <p>이 추상화 계층이 필요하지 않은&rsquo; 경우 구성 설정에서 개체를 초기화하는 <code>CloudStorageAccount</code> 다른 방법을 사용할 수 있습니다.</p>  <blockquote>  <pre class="code"><span style="color: blue">var </span>account = <span style="color: #2b91af">CloudStorageAccount</span>.Parse(<br>    <span style="color: #2b91af">RoleEnvironment</span>.GetConfigurationSettingValue(<span style="color: #a31515">"MyConnectionString"</span>));</pre>  </blockquote>  <p><iframe scrolling="no" frameborder="0" src="https://www.facebook.com/plugins/like.php?href=;layout=box_count&amp;show_faces=false&amp;width=300&amp;action=like&amp;font=segoe+ui&amp;colorscheme=light&amp;height=50" style="width: 300px; height: 50px; overflow: hidden;"></iframe><br><a data-url="" data-count="horizontal" data-via="Windowsazure" href="https://twitter.com/share" class="twitter-share-button">짹짹</a>  <script src="https://platform.twitter.com/widgets.js" type="text/javascript"></script>  </p>'
