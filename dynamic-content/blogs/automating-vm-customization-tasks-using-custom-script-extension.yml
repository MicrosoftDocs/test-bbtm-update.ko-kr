### YamlMime:Yaml
ms.openlocfilehash: d56deaac90c2107761ea77c9cf68aabf62b2c40b
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902773"
Slug: automating-vm-customization-tasks-using-custom-script-extension
Title: 사용자 지정 스크립트 확장을 사용하여 VM 사용자 지정 작업 자동화
Summary: >-
  2015년 2월 27일 업데이트: 코드 샘플 및 최신 설명서는 여기에서 확인하세요.


  &nbsp;


  /build 회의 중에 시작된 VM 확장 중 하나는 '사용자 지정 스크립트...'라는 확장입니다.
Content: "2015년 2월 27일 업데이트: 코드 샘플 및 최신 설명서는 여기에서\" href=\"https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-extensions-customscript/\"></a> 확인<a title=\"하세요.\n\n&nbsp;\n\n/build 회의 중에 시작된 VM 확장 중 하나는 PowerShell 지원으로 릴리스된 '사용자 지정 스크립트 확장'이라는 확장입니다. 이 블로그를 처음 방문하는 경우 여기와 여기의 이전 블로그를 확인하여 VM 에이전트 및 확장에 대한 개요를 확인할 수 있습니다.\n\n그렇다면 이 확장은 무엇을 하고 원격 PowerShell 또는 다른 기존 원격 실행 도구와 어떻게 다른가요? 간단히 말해서 사용자 지정 스크립트 확장은 Azure Storage 스크립트와 파일을 자동으로 다운로드하고 VM에서 PowerShell 스크립트를 시작하여 추가 소프트웨어 구성 요소를 설치할 수 있습니다. 다른 VM 확장과 마찬가지로 VM을 만드는 동안 또는 VM이 실행된 후에 추가할 수 있습니다. 간단한 소리, 아직 매우 유용!\n\n이 확장을 사용하여 PowerShell 스크립트를 실행하기 위한 필수 구성 요소:\n<ul>\n <li>Azure PowerShell Cmdlet V0.8.0 이상을 설치 <a href=\"https://azure.microsoft.com/en-us/downloads/\">합니다</a>.</li>\n <li>스크립트가 기존 VM에서 실행되는 경우 VM 에이전트를 설치하려면 이 블로그 게시물을 따르지 않는 경우 VM에서 VM 에이전트를 사용하도록 설정해야 합니다.</li>\n <li>VM에서 실행할 스크립트를 Azure Storage에 업로드합니다. 단일 스토리지 컨테이너 또는 여러 스토리지 컨테이너의 스크립트를 업로드할 수 있습니다.</li>\n <li>확장을 통해 시작되는 엔트리 스크립트가 다른 스크립트를 시작하는 방식으로 스크립트를 작성해야 합니다.</li>\n</ul>\n이제 필요한 필수 구성 요소가 있으므로 이러한 cmdlet을 사용하는 방법을 보여 주는 몇 가지 사용 사례를 살펴보겠습니다. 이 확장의 현재 버전은 PowerShell cmdlet만 대상으로 하지만 나중에 다른 스크립트로 확장할 수 있습니다.\n<h4><strong>사용 사례 1: 기본 계정의 컨테이너에 파일 업로드</strong></h4>\n구독의 기본 계정의 스토리지 컨테이너에 스크립트가 있는 경우 아래 cmdlet 코드 조각은 VM에서 스크립트를 실행하는 방법을 보여 줍니다. 아래 샘플의 ContainerName은 스크립트를 업로드하는 위치입니다. 'Get-AzureSubscription –Default' cmdlet을 사용하여 기본 스토리지 계정을 확인할 수 있습니다.\n\n참고: 이 사용 사례는 새 VM을 만들지만 기존 VM에서도 동일한 작업을 수행할 수 있습니다.\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1788/8203.Kundana-1.png\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1788/8203.Kundana-1.png\" alt=\"\" border=\"0\"></a>\n<h4><strong>사용 사례 2: 기본이 아닌 스토리지 계정 사용</strong></h4>\n이 사용 사례는 스크립트/파일을 업로드하기 위해 동일한 구독 내 또는 다른 구독에서 기본이 아닌 스토리지를 사용하는 방법을 보여 줍니다. 여기서는 기존 VM을 사용하지만 새 VM을 만들 때도 같은 작업을 수행할 수 있습니다.\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1788/1157.kundana-2.png\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1788/1157.kundana-2.png\" alt=\"\" border=\"0\"></a>\n<h4><strong>사용 사례 3: 여러 스토리지 계정에서 여러 컨테이너에 스크립트 업로드</strong></h4>\n스크립트 파일이 여러 컨테이너에 저장된 경우 현재 이러한 스크립트를 실행하려면 이러한 파일의 전체 SAS URL을 제공해야 합니다. 생성된 SAS URL <a href=\"https://azurestorageexplorer.codeplex.com/\">은 Azure Storage Explorer 같은</a> 도구를 사용하여 생성할 수 있습니다.\n\n<a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1788/8863.kundana-3.png\"><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1788/8863.kundana-3.png\" alt=\"\" border=\"0\"></a>\n\n이러한 cmdlet이 일부 VM 사용자 지정 작업을 자동화하는 데 도움이 되기를 바랍니다. 향후 릴리스에서 이 확장에서 보고 싶은 다른 기능에 대해 여러분의 의견을 기다리고 싶습니다. 의견/질문을  <a href=\"https://social.msdn.microsoft.com/Forums/windowsazure/en-US/e3d5b6ea-a010-4a4b-969b-208affce3d89/vm-agent-and-vm-extensions-feedback-issues-questions?forum=WAVirtualMachinesforWindows\">게시</a>하세요.\n\n업데이트: 스크립트가 업로드되면 다음 cmdlet을 사용하여 스크립트 실행 상태를 볼 수 있습니다.\n<blockquote><span style=\"color: #339966\">// VM 상태 가져오기</span>\n\n<span style=\"color: #0000ff\">$x = get-azurevm -ServiceName $svcName -Name $name</span>\n\n<span style=\"color: #339966\">//Parse 출력을 검색하여 확장 상태를 검색합니다. 아래 예제에서 CustomScript 확장은 추가된 확장 목록에서 2<sup>번째</sup>입니다.</span> \n\n<span style=\"color: #0000ff\">$x.ResourceExtensionStatusList[1]. ExtensionSettingStatus.SubStatusList</span></blockquote>\n&nbsp;\n\n&nbsp;"
