### YamlMime:Yaml
ms.openlocfilehash: 1329395878f2a4bf13bed2bf0a81676ac8b94639
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908662"
Slug: azure-app-service-now-supports-java-se-on-linux
Title: 이제 Azure App Service는 Linux에서 Java SE 지원합니다.
Summary: 최근에는 Java와 활기찬 커뮤니티에 많은 변화가 있었습니다. 이제 Java용 Oracle SE와 Jakarta EE Eclipse Foundation(이전의 Java EE) 간에 공유된 Java는 계속...
Content: "<p>최근에는 Java와 활기찬 커뮤니티에 많은 변화가 있었습니다. Java용 Oracle SE와 Jakarta EE Eclipse Foundation(이전의 Java EE) 간에 공유된 Java는 개발자와 기업에서 선도적인 프로그래밍 언어로 계속 노력하고 있습니다. 사실, 전 세계적으로 1,200만 명이 넘는 Java 개발자가 최신 애플리케이션 개발의 추세와 많은 IT 조직에서 가장 중요한 디지털 트랜스포메이션을 고려하면 클라우드에서 번창할 수 있는 좋은 위치에 있습니다.</p>\n\n<p>Java 앱의 대량이 존재하고 곧 개발될 예정이면 Java 개발자는 시간과 비용을 절약하면서 빠르고 안전한 애플리케이션 개발을 가능하게 하는 클라우드 서비스의 이점을 크게 누릴 수 있습니다. 이를 방대한 지리적 지역 범위와 결합하면 모든 개발자가 경험해야 하는 클라우드 솔루션입니다.</p>\n\n<p>현재 Microsoft는 Azure App Service가 현재 공개 미리 보기로 제공되는 Linux에서 Java SE 8 기반 애플리케이션을 지원한다고 발표하게 되어 기쁘게 생각합니다. 이 시간 및 이후 릴리스 버전은 향후 LTS 버전뿐만 아니라 장시간 지원됩니다. 이제 Microsoft에서 버그 수정 및 보안 업데이트를 유지 관리하는 확장성이 뛰어난 자체 패치 웹 호스팅 서비스에 Java 웹앱을 빌드하고 배포할 수 있습니다. 추가 성능 기능에는 동적 크기 조정 지능형 구성에서 여러 인스턴스, 애플리케이션 및 지역을 사용하는 수백만 명의 사용자를 지원하기 위한 크기 조정이 포함됩니다.</p>\n\n<h2>Java Web Apps 혜택</h2>\n\n<p>개발자가 생산성에 집중할 수 있도록 Azure App Service가 일반적으로 엔터프라이즈급 인프라와 관련된 모든 작업을 수행하도록 합니다. 글로벌 보안 규정 준수에서 DevOps&rsquo; 기능에 이르기까지 Microsoft Azure 테스트된 인프라 플랫폼을 활용합니다. 개발자 생산성 혜택은 거기서 멈추지 않습니다. Java 웹앱은 다음과 같은 이점을 제공합니다.</p>\n\n<ul>\n <li><strong>완전 관리형 엔터프라이즈 플랫폼 &ndash;</strong> 로그 집계, 이메일 알림 및 Azure Portal 경고. 버전 업데이트에는 곧 자동 패치가 포함됩니다.</li>\n <li><strong>성능 모니터링 &ndash;</strong> 애플리케이션을 모니터링하고 관리하기 위해 선택한 APM(애플리케이션 성능 관리) 제품과 통합합니다.</li>\n <li><strong>고가용성을 &ndash;갖춘 글로벌 규모</strong> 대기 시간이 짧거나, 자동 크기 조정 또는 수동 크기 조정(업 또는 아웃)이 있는 99.95%의 가동 시간(Microsofts&rsquo; 글로벌 데이터 센터).</li>\n <li><strong>보안 및 규정 준수 &ndash;</strong> App Service는 ISO, SOC, PCI 및 GDPR 규격입니다.</li>\n <li><strong>인증 및 권한 부여</strong> <strong>&ndash;</strong> AZURE ACTIVE DIRECTORY 기본 제공 인증, IP 주소 제한을 관리하는 Roll-Based RBAC(Access Control)를 사용한 거버넌스.</li>\n <li><strong>자동화 및 CI/CD 지원 &ndash;빌드</strong> Maven, Jenkins 및 Visual Studio Team Services 지원은 일반 공급 릴리스에서 사용할 수 있습니다.</li>\n</ul>\n\n<p>Azure에 Java Web Apps를 배포하는 방법에는 세 가지가 있습니다. Azure Portal에서 만들거나, 템플릿을 사용하거나, Maven에서 만들고 배포할 수 있습니다. 이 게시물에서는 Maven을 사용하여 Spring Boot 앱을 배포하는 방법을 설명합니다.</p>\n\n<h2>Maven 및 Spring 시작</h2>\n\n<p>시작하려면 즐겨 찾는 Java 웹앱을 복제하거나 다음 샘플을 사용합니다.</p>\n\n<pre>\n$ git clone <a href=\"https://github.com/spring-projects/spring-petclinic.git\">https://github.com/spring-projects/spring-petclinic.git</a></pre>\n\n<p>Azure Web Apps용 Maven 플러그 인을 앱 프로젝트 POM 파일에 추가하고 서버 포트를 80으로 설정합니다.</p>\n\n<pre>\n&lt;build&gt;\n   &lt;plugins&gt;\n      &lt;plugin&gt;\n         &lt;groupId&gt;com.microsoft.azure&lt;/groupId&gt;\n         &lt;artifactId&gt;azure-webapp-maven-plugin&lt;/artifactId&gt;\n         &lt;version&gt;1.2.0&lt;/version&gt;\n         &lt;configuration&gt;\n \n            &lt;!-- Web App information --&gt;\n            &lt;resourceGroup&gt;${RESOURCE_GROUP}&lt;/resourceGroup&gt;\n            &lt;appName&gt;${WEBAPP_NAME}&lt;/appName&gt;\n            &lt;region&gt;${REGION}&lt;/region&gt;\n            &lt;pricingTier&gt;S1&lt;/pricingTier&gt;\n \n            &lt;!-- Java Runtime Stack for Web App on Linux --&gt;\n            &lt;linuxRuntime&gt;jre8&lt;/linuxRuntime&gt;\n \n            &lt;deploymentType&gt;ftp&lt;/deploymentType&gt;\n            &lt;!-- Resources to be deployed to your Web App --&gt;\n            &lt;resources&gt;\n               &lt;resource&gt;\n                  &lt;directory&gt;${project.basedir}/target&lt;/directory&gt;\n                  &lt;targetPath&gt;/&lt;/targetPath&gt;\n                  &lt;includes&gt;\n                     &lt;include&gt;app.jar&lt;/include&gt;\n                  &lt;/includes&gt;\n               &lt;/resource&gt;\n            &lt;/resources&gt;\n            &lt;appSettings&gt;\n               &lt;property&gt;\n                  &lt;name&gt;JAVA_OPTS&lt;/name&gt;\n                  &lt;value&gt;-Djava.security.egd=file:/dev/./urandom&lt;/value&gt;\n               &lt;/property&gt;\n            &lt;/appSettings&gt;\n         &lt;/configuration&gt;\n     &lt;/plugin&gt;\n   &lt;/plugins&gt;\n   &lt;finalName&gt;app&lt;/finalName&gt; \n&lt;/build&gt; </pre>\n\n<p>평소처럼 Maven &ndash; 을 사용하여 빌드, 패키지 및 배포합니다.</p>\n\n<pre>\nbash-3.2$ mvn package azure-webapp:deploy\n[INFO] Scanning for projects...\n[INFO] \n[INFO] ----------------------------------------------------------------------\n[INFO] Building petclinic 2.0.0\n[INFO] ----------------------------------------------------------------------\n[INFO] \n...\n...\n[INFO] --- azure-webapp-maven-plugin:1.2.0:deploy (default-cli) @ spring-petclinic ---\n[INFO] Start deploying to Web App myjavase-07262018aa...\n[INFO] Authenticate with Azure CLI 2.0\n[INFO] Target Web App doesn&#39;t exist. Creating a new one...\n[INFO] Creating App Service Plan &#39;ServicePlan1af9c8f0-3f71-43a8&#39;...\n[INFO] Successfully created App Service Plan.\n[INFO] Successfully created Web App.\n...\n...\n \n[INFO] Finished uploading directory: /Users/selvasingh/GitHub/selvasingh/spring-petclinic/target/azure-webapps/myjavase-07262018aa --&gt; /site/wwwroot\n[INFO] Successfully uploaded files to FTP server: waws-prod-bay-081.ftp.azurewebsites.windows.net\n[INFO] Starting Web App after deploying artifacts...\n[INFO] Successfully started Web App.\n[INFO] Successfully deployed Web App at https://myjavase-07262018aa.azurewebsites.net\n[INFO] ----------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ----------------------------------------------------------------------\n[INFO] Total time: 03:06 min\n[INFO] Finished at: 2018-07-13T18:03:22-07:00\n[INFO] Final Memory: 139M/987M\n[INFO] ----------------------------------------------------------------------</pre>\n\n<p>즐겨찾는 브라우저에서 사이트를 엽니다.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/02114ac8-a05d-4359-b63d-d3b70c6d4932.jpg\"><img alt=\"Spring\" border=\"0\" height=\"365\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b65cbc9c-b1d5-4d67-b27f-f1eae559066e.jpg\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"봄\" width=\"923\"></a></p>\n\n<p>Azure App Service의 첫 번째 Java 웹앱이 여기에 있습니다. 잘하셨습니다!</p>\n\n<h2>가는 길에 더 친숙한 Java 도구</h2>\n\n<p>개발 도구가 한 가지 크기에 모두 적합한 것은 아니라는 것을 이해합니다. 우리는 생산성과 효율성을 향상시키는 도구를 사용하여 도구 모음을 지속적으로 보강하고 있습니다. 한편, 다음에는 Gradle과 Jenkins에 대한 지원이 제공되기를 기대합니다.</p>\n\n<h2>다음 단계</h2>\n\n<p>클라우드에서 Java Web Apps를 실행하는 것은 더 쉽고 빠를 수 없습니다. 사용해 보세요. Azure Service에서 첫 번째 Java 웹앱을 만듭니다. 다음은 시작하는 데 도움이 되는 몇 가지 리소스입니다.</p>\n\n<ul>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/app-service/containers/quickstart-java\" target=\"_blank\">빠른 시작: Linux의 App Service에서 Java 웹앱 만들기</a>&nbsp;</li>\n <li><a href=\"https://github.com/Microsoft/azure-maven-plugins/tree/develop/azure-webapp-maven-plugin\" target=\"_blank\">Azure App Service용 Maven 플러그 인(GitHub)</a>&nbsp;</li>\n <li><a href=\"https://docs.microsoft.com/en-us/azure/app-service/containers/quickstart-java\" target=\"_blank\">Azure Services Web Apps 및 Functions &ndash; 용 Maven 플러그 인</a></li>\n <li><a href=\"https://docs.microsoft.com/en-us/java/azure/?view=azure-java-stable\" target=\"_blank\">Java 개발자용 Azure</a>&nbsp;</li>\n</ul>\n\n<p>Azure 구독이 없는&rsquo; 경우 지금 <a href=\"https://azure.microsoft.com/free/?ref=microsoft.com&amp;utm_source=microsoft.com&amp;utm_medium=docs&amp;utm_campaign=visualstudio\" target=\"_blank\">무료 계정을 만듭니</a> 다.</p>"
