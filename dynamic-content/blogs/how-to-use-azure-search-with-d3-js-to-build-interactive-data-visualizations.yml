### YamlMime:Yaml
ms.openlocfilehash: de469da32c9299b9c0d23e603538191382dd80b8
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139897653"
Slug: how-to-use-azure-search-with-d3-js-to-build-interactive-data-visualizations
Title: D3.js에서 Azure Search를 사용하여 대화형 데이터 시각화를 구축하는 방법
Summary: 이 게시물에서는 사용자가 Azure Search를 쿼리한 다음 검색 쿼리 결과를 시각적으로 탐색할 수 있도록 D3와 함께 Azure Search를 활용하는 방법을 보여 드리고 싶습니다.
Content: >-
  사용자가 데이터를 시각화하도록 지원하면 웹 또는 모바일 애플리케이션의 전반적인 사용자 환경을 개선하는 데 큰 영향을 미칠 수 있습니다. <a title="Azure SearchAzure" href="https://azure.microsoft.com/en-us/services/search/" target="_blank"> Search</a>의 주요 목표는 개발자가 놀라운 검색 환경을 빌드하도록 돕는 것이지만 사용자가 반환된 결과를 시각화할 수 없는 경우 이 환경의 상당 부분을 손실할 수 있습니다. 오늘 저는 제가 가장 좋아하는 시각화 도구 중 하나인 <a href="https://d3js.org/">D3.js</a>대해 이야기하고 싶습니다. 데이터에 인상적인 뷰를 쉽게 적용할 수 있는 오픈 소스 JavaScript 라이브러리입니다.시각화는 가로 막대형 차트 집합처럼 간단할 수 있으며, 오른쪽 이미지<span style="text-decoration: underline;">에 표시된</span> <a href="https://mbostock.github.io/d3/talk/20111116/airports.html">Mike Bostock</a>이 만든 미국 공항의 지도와 같은 복잡한 대화형 다이어그램을 매핑할 수 있습니다. 다음은 이 라이브러리의 광범위한 기능을 실제로 보여 주는 과거에 사용한 몇 가지 <a href="https://github.com/mbostock/d3/wiki/Gallery">예</a> 입니다.


  <div id="attachment_316481" align="alignright" width="407"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/13/d3_azure_search_interactive_visualization.png"><img class=" wp-image-316481" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d3_azure_search_interactive_visualization-516x369.png" alt="D3 Azure Search Interactive Visualization Map" width="407" height="291" /></a> D3 Azure Search 대화형 시각화 맵</div>


  이 게시물에서는 사용자가 Azure Search를 쿼리한 다음 검색 쿼리 결과를 시각적으로 탐색할 수 있도록 D3와 함께 Azure Search를 활용하는 방법을 보여 드리고 싶습니다. 목표는 1880-2013년 사이에 1.8M의 남성 및 여성 아기 이름 수로 구성된 <a href="https://catalog.data.gov/dataset/baby-names-from-social-security-card-applications-national-level-data">data.gov 제공된 데이터를</a> 기반으로 <a href="https://msdn.microsoft.com/en-us/library/azure/dn798941.aspx">Azure Search 인덱</a>스 검색을 통해 검색하는 JavaScript 웹 페이지를 빌드하는 것입니다. 여기에서 이름을 검색하고 연도별로 필터링한 다음, 더 큰 글꼴이 더 큰 인기도를 나타내는 해당 기간의 가장 인기 있는 이름을 기반으로 <a href="https://www.jasondavies.com/wordcloud/#%2F%2Fwww.jasondavies.com%2Fwordcloud%2Fabout%2F">D3.js Word Cloud</a> 내에서 해당 이름의 버전을 볼 수 있습니다(아래 참조). 여기서 이 <a href="https://htmlpreview.github.com/?https://raw.githubusercontent.com/liamca/AzureSearchDemos/master/BabyNamesJS/index.html">페이지의</a> 라이브 버전을 볼 수 있는데, 여기서 "Liam"이 2013년 가장 인기 있는 이름 중 하나라는 것을 기쁘게 생각합니다. :-)


  <div id="attachment_316451" align="alignleft" width="507"><a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/13/d3_azure_search_word_cloud.png"><img class="size-medium wp-image-316451" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d3_azure_search_word_cloud-507x369.png" alt="Azure Search D3.js Word Cloud" width="507" height="369" /></a> Azure Search D3.js Word Cloud</div>

  <h2></h2>

  <h2>노트 시작</h2>

  시작하기 전에 몇 가지 사항을 지적하고 싶습니다.

  <ol>
   <li>이 샘플의 소스 코드는 <a href="https://github.com/liamca/AzureSearchDemos/blob/master/BabyNamesJS/index.html">github에서</a> 찾을 수 있으며 샘플의 온라인 실행 버전은 <a href="https://htmlpreview.github.com/?https://raw.githubusercontent.com/liamca/AzureSearchDemos/master/BabyNamesJS/index.html">여기에서 찾을 수 있습니다</a>. 샘플의 작동 방식에 대한 아이디어를 얻으려면 이러한 각 항목을 살펴보세요.</li>
   <li>JavaScript 애플리케이션이 Azure Search를 직접 호출할 수 있도록 하려면 도메인 간 호출을 허용하는 데 사용하는 인덱스에 대해 CORS를 사용하도록 설정해야 합니다. 이에 대한 자세한 내용은 <a href="https://msdn.microsoft.com/en-us/library/azure/dn798941.aspx">여기에서 확인할</a> 수 있습니다.</li>
  </ol>

  <h2>Azure Search를 사용하여 JavaScript D3.JS 애플리케이션 빌드</h2>

  다음으로 <a href="https://github.com/liamca/AzureSearchDemos/blob/master/BabyNamesJS/index.html">코드를</a> 살펴보겠습니다.

  <h3>JavaScript 라이브러리</h3>

  JQuery 및 BootStrap 라이브러리에 대한 참조 외에도 다음 두 파일을 강조 표시합니다.

  <ul>
   <li><strong>d3.min.js</strong>: 모든 D3 시각화에 사용되는 핵심 라이브러리입니다.</li>
   <li><strong>d3.layout.cloud.js</strong>: d3.min.js 라이브러리를 활용하여 클라우드라는 단어를 만드는 <a href="https://github.com/jasondavies/d3-cloud/">Jason Davies</a> 가 만든 라이브러리입니다.</li>
  </ul>

  <h3>JavaScript 코드</h3>

  JavaScript 코드에서 다음 사항을 확인합니다.

  <ul>
   <li><strong>var</strong><strong> apiKey</strong>: 이 변수는 Azure Search에 대한 쿼리를 인증하는 데 사용할 키를 정의합니다. 순수하게 클라이언트 쪽을 실행하고 ASP.NET MVC 또는 PHP와 같이 서버 쪽 구성 요소가 없는 JavaScript 기반 애플리케이션이므로 이 키를 이 파일에 저장해야 합니다. 관리자 <a href="https://msdn.microsoft.com/en-us/library/azure/dn832690.aspx">키 대신 쿼리 키를</a> 사용하여 사용자의 권한을 제한하는 것이 좋습니다. 쿼리 키를 사용하더라도 서비스 거부 공격이 발생할 가능성이 있으므로 신뢰할 수 있는 사용자에게만 앱을 전달해야 합니다.</li>
   <li><strong>function</strong> <strong>Search</strong><strong>()</strong>: 사용자가 지정한 "text" 및 "year" 매개 변수를 사용하여 Ajax 도메인 간 호출을 통해 Azure Search를 호출하는 함수입니다. 생성된 URL은 다음을 비롯한 여러 매개 변수를 사용합니다.
  <ul>
   <li><strong>$orderby=count+desc</strong>: 가장 인기 있는 이름으로 정렬된 Azure Search의 결과를 최소로 반환합니다.</li>
   <li><strong>$top=100</strong>: 검색 결과를 최대 100개의 아기 이름으로 제한합니다.</li>
   <li><strong>$select=firstName,count</strong>: n 결과는 firstName 및 개수 필드만 포함하도록 제한합니다.</li>
   <li><strong>&amp;search=...*</strong>: 사용자가 검색의 일부로 입력하는 전체 텍스트 문자열을 전달하고 접두사 스타일 검색을 수행하도록 *를 추가합니다. 예를 들어 사용자가 John을 검색하는 경우 결과도 Johnny를 반환할 수 있습니다.</li>
   <li><strong>$filter=year+eq...</strong>: 사용자가 지정한 연도를 사용하고 연도 필드가 이 값(eq)인 결과만 확인합니다.</li>
  </ul>

  </li>
   <li><strong>.done(</strong><strong>함수</strong><strong> (</strong><strong>응답</strong><strong>)</strong>: Azure Search에 대한 Ajax 호출이 완료되면 JSON 결과 집합이 반환됩니다. 아쉽게도 이 JSON 문서는 D3에 필요한 정확한 형식이 아니므로 결과를 반복하고 "text" 및 "size" 변수 배열이 필요한 d3JSON이라는 새 JSON 변수로 데이터를 푸시해야 합니다. 크기는 단어 클라우드에 표시되는 글꼴 크기에 대한 값을 마련하기 위해 최대 및 최소 이름 수를 비교하여 계산됩니다.</li>
   <li><strong>d3.layout.cloud().size([600, 600])</strong>: 마지막으로 이 새 d3JSON 변수를 만든 후에는 클라우드라는 단어가 생성되는 d3에 전달됩니다.</li>
  </ul>

  Azure Search에서 결과를 가져와서 D3 차트에 표시하는 방법의 한 가지 예만 보여 줍니다. 그러나 이 기술은 만들려는 차트에 관계없이 거의 동일합니다.


  원하는 D3 시각화를 만들고 공유에 열려 있는 경우 다른 사람들이 보고 활용할 수 있도록 이러한 갤러리를 만들고 싶으므로 알려주세요(Twitter: @liamca).


  이 샘플의 소스 코드는 <a href="https://github.com/liamca/AzureSearchDemos/blob/master/BabyNamesJS/index.html">github에서</a> 찾을 수 있으며 샘플의 온라인 실행 버전은 <a href="https://htmlpreview.github.com/?https://raw.githubusercontent.com/liamca/AzureSearchDemos/master/BabyNamesJS/index.html">여기에서 찾을 수 있습니다</a>.


  Liam
