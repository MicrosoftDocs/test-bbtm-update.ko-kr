### YamlMime:Yaml
ms.openlocfilehash: 7bd93533e6b936774c1b4119251b06a861e0bcb5
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139905855"
Slug: kafka-1-0-on-hdinsight-lights-up-real-time-analytics-scenarios
Title: HDInsight의 Kafka 1.0은 실시간 분석 시나리오를 표시합니다.
Summary: HDInsight에서 Apache Kafka 1.0이 릴리스되면서 고객은 이제 가장 까다로운 시나리오를 쉽게 구현할 수 있는 주요 기능을 얻게 되었습니다. 다음은 빠른 소개입니다.
Content: >-
  <p>데이터 엔지니어는 HDInsight의 Kafka를 실시간 데이터 파이프라인에서 처리량이 높고 대기 시간이 짧은 수집 플랫폼으로 좋아합니다. 이미 <a href="https://cwiki.apache.org/confluence/display/KAFKA/Compression">메시지 압축</a>, <a href="https://kafka.apache.org/documentation/#brokerconfigs">구성 가능한 보존 정책</a> 및 <a href="https://kafka.apache.org/documentation/#compaction">로그 압축</a>과 같은 Kafka 기능을 활용합니다. HDInsight에서 Apache Kafka 1.0이 릴리스되면서 고객은 이제 가장 까다로운 시나리오를 쉽게 구현할 수 있는 주요 기능을 얻게 되었습니다. 다음은 빠른 소개입니다.</p>


  <h2>중복 제거하지 않아도&rsquo; 되도록 Idempotent 생산자</h2>


  <p>생산자가 사용자가 사용하는 데이터의 양을 데이터 소비 이벤트라는 Kafka 토픽에 쓰는 셀룰러 청구 시스템을 고려합니다. broker 또는 연결이 실패하면 생산자는 메시지 쓰기에 대한 승인을 받지 못하고 해당 메시지를 다시 시도합니다. 이로 인해 시스템에 대한 쓰기가 중복되어 사용자가 과도하게 청구됩니다.</p>


  <p>위와 같은 중요한 시나리오에서 데이터 엔지니어는 해시 및 메시지 ID 저장과 같은 사용자 지정 중복 제거 논리를 작성하고 유지 관리해야 했습니다. 그러나 <a href="https://cwiki.apache.org/confluence/display/KAFKA/KIP-98+-+Exactly+Once+Delivery+and+Transactional+Messaging">Idempotent</a> 생산자가 켜져 있으면 Kafka는 해당 논리를 처리합니다. 레코드에는 고유한 생산자 ID와 메시지의 시퀀스 번호가 포함됩니다. Kafka broker는 시퀀스 번호가 해당 생산자의 커밋된 시퀀스 번호보다 정확히 하나 이상인 경우에만 생산자의 메시지를 수락합니다. 생산자 재시도는 중복되지 않습니다. 이렇게 하면 단일 생산자 세션 내에서 멱등성이 보장됩니다.</p>


  <h2>정확도를 보장하기 위한 트랜잭션</h2>


  <p><a href="https://cwiki.apache.org/confluence/display/KAFKA/KIP-98+-+Exactly+Once+Delivery+and+Transactional+Messaging#KIP-98-ExactlyOnceDeliveryandTransactionalMessaging-TransactionalGuarantees">원자성</a>이라고도 하는 이 Kafka 기능을 사용하면 다중 토픽 및 다중 파티션 원자성 쓰기를 사용할 수 있습니다. 생산자는 소비자가 일괄 처리의 모든 메시지를 사용하거나 아무 것도 사용할 수 없도록 일괄 처리로 메시지를 보낼 수 있습니다. 또한 Kafka는 소비자 오프셋을 기록하므로 프로덕션 및 소비를 한 단위로 일괄 처리할 수 있습니다.</p>


  <p>&rsquo;위의 셀룰러 청구 시스템을 기반으로 합니다. 데이터 소비-이벤트 토픽의 개별 이벤트를 사용하고, 월별 누적을 계산하고, 매월 데이터 사용이라는 Kafka 토픽에 쓰는 애플리케이션을 고려합니다. 데이터 사용량을 보여 주는 고객 포털은 월별 데이터 사용 항목의 최신 항목을 기반으로 합니다. Kafka 트랜잭션 기능 이전에는 이벤트 사용과 누적 합계 작성 사이에 오류가 발생한 경우 합계가 정확하지 않습니다. 커밋된 소비 이벤트 중 일부는 합계에서 제외되기 때문입니다. 트랜잭션을 사용하도록 설정하면 이벤트 사용 및 합계 작성을 단일 단위로 일괄 처리할 수 있습니다. 이제 월별 데이터 사용량에 쓰기 전에 오류가 발생하면 소비자 오프셋이 커밋되지 않습니다. 애플리케이션은 누락된 이벤트를 사용하여 정확한 합계를 보장합니다.</p>


  <h2>정확히 한 번 처리</h2>


  <p>지금까지 HDInsight에서 Kafka를 사용하여 한 번 이상 또는 한 번 이상 의미 체계를 얻을 수 있습니다. idempotent 생산자를 트랜잭션 및 소비자 오프셋과 결합하면 Kafka에서 <a href="https://cwiki.apache.org/confluence/display/KAFKA/KIP-129%3A+Streams+Exactly-Once+Semantics">정확히 한 번 의미 체계를</a> 달성할 수 있습니다. 즉, 입력 메시지가 중복되거나 손실되지 않을 때 애플리케이션이 올바른 결과를 계산합니다.</p>


  <p>간단한 셀룰러 청구 예제를 계속하면 정확히 한 번 의미 체계는 고객의 모든 데이터 소비 이벤트가 정확히 한 번 합계에 반영됨을 의미합니다. 고객은 포털에서 정확한 사용량을 확인할 수 있습니다.</p>


  <p>여러 처리 단계 및 중간 결과를 사용하여 프로덕션 환경의 다양한 다른 시나리오로 확장할 수 있습니다. 모든 단계에서 데이터가 손실되거나 중복되면 데이터 파이프라인 전체에 파급 효과가 발생할 수 있습니다. HDInsight의 Kafka를 사용하면 손실되거나 중복된 메시지 없이 정확한 결과를 보장할 수 있습니다.</p>


  <h2>레코드 헤더</h2>


  <p>대부분의 메시징 시스템은 메시지 헤더를 지원합니다. 헤더는 암호화 또는 압축될 수 있는 메시지 페이로드와는 별개입니다. 셀룰러 청구 시나리오에서 헤더는 셀 타워 ID 또는 네트워크 공급자 ID와 같은 정보를 포함할 수 있으므로 자동화된 라우팅, 메시지 흐름 모니터링 및 메타데이터 감사와 같은 시나리오를 사용할 수 있습니다.</p>


  <p>이전에는 데이터 파이프라인에 다른 시스템의 메시지 헤더가 포함된 경우 헤더를 삭제하거나 페이로드 형식으로 변환하여 페이로드 자체에 포함해야 했습니다. 데이터 엔지니어는 사용자 지정 래핑 및 래핑 해제 코드를 만들고 관리해야 했습니다. HDInsight의 Kafka에서 <a href="https://cwiki.apache.org/confluence/display/KAFKA/KIP-82+-+Add+Record+Headers">레코드 헤더</a> 를 지원하여 모든 라우팅 및 필터링 시나리오를 기본적으로 달성할 수 있습니다. 이렇게 하면 훨씬 더 낮은 엔드-엔드 대기 시간이 가능하며 이는 실시간 시스템에 매우 중요합니다.</p>


  <p>위의 주요 기능 외에도 이 버전에는 다양한 성능 향상 및 버그 수정이 있습니다. 전체 비교를 위해 Apache Kafka <a href="https://www.apache.org/dist/kafka/1.0.0/RELEASE_NOTES.html">1.0 및 0.11</a>의 릴리스 정보를 확인하세요<a href="https://archive.apache.org/dist/kafka/0.11.0.0/RELEASE_NOTES.html"></a>. HDInsight의 Kafka 이전 버전은 <a href="https://archive.apache.org/dist/kafka/0.10.0.1/RELEASE_NOTES.html">0.10</a>이었습니다.</p>


  <p>Azure HDInsight에서 Kafka<a href="https://docs.microsoft.com/en-us/azure/hdinsight/kafka/apache-kafka-get-started">를 시작</a>합니다. 최신 업데이트에 대한 <a href="https://twitter.com/azurehdinsight?lang=en">@AzureHDInsight</a> <a href="https://azure.microsoft.com/en-us/blog/tag/hdinsight/">MICROSOFT 또는 HDInsight 블로그</a> 를 팔로우하세요. 질문 및 피드백은 다음으로 문의하세요 <a href="mailto:AskHDInsight@Microsoft.com">AskHDInsight@Microsoft.com</a>.</p>
