### YamlMime:Yaml
ms.openlocfilehash: 99e6580de287e223505df4e4e4981fa64b661cb2
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139897635"
Slug: introducing-the-azure-cosmosdb-change-feed-processor-library
Title: '#Azure #CosmosDB 변경 피드 프로세서 라이브러리 소개'
Summary: Cosmos DB를 기반으로 강력한 애플리케이션을 빌드하는 데 도움이 되도록 컬렉션 내의 정렬된 문서 목록을 수정된 순서대로 제공하는 변경 피드 지원을 빌드했습니다. 이제 사용 편의성을 유지하면서 확장성을 해결하기 위해 Cosmos DB 변경 피드 프로세서 라이브러리를 소개합니다. 이 블로그에서는 변경 피드 프로세서 라이브러리를 사용해야 하는 시기와 방법을 살펴보겠습니다.
Content: >-
  <p>Azure Cosmos DB는 읽기 및 쓰기에 대한 예측 가능한 밀리초 대기 시간으로 대용량 트랜잭션 및 운영 데이터를 저장하는 데 사용되는 빠르고 유연한 전역 복제 데이터베이스 서비스입니다. <a href="https://azure.microsoft.com/services/cosmos-db/" target="_blank">Cosmos DB</a>를 기반으로 강력한 애플리케이션을 빌드하는 데 도움이 되도록 컬렉션 내의 정렬된 문서 목록을 수정된 순서대로 제공하는 변경 피드 지원을 빌드했습니다. 이제 사용 편의성을 유지하면서 확장성을 해결하기 위해 Cosmos DB 변경 피드 프로세서 라이브러리를 소개합니다. 이 블로그에서는 변경 피드 프로세서 라이브러리를 사용해야 하는 시기와 방법을 살펴보겠습니다.</p>


  <h2>변경 피드: Cosmos DB를 사용하여 이벤트 소싱</h2>


  <p>데이터를 저장하는 것은 모험의 시작에 불과합니다. 변경 피드 지원을 사용하면 변경 내용이 표시되면 수행해야 하는 사항에 따라 다양한 서비스와 통합할 수 있습니다.</p>


  <p><strong>예제 #1:</strong> 온라인 쇼핑 웹 사이트를 빌드하고 있으며 고객이 구매를 완료하면 이메일 알림을 트리거해야 합니다. Azure Functions, Azure Notification Hub, Azure App Services 또는 사용자 지정 빌드 마이크로 서비스를 사용하든 관계없이 변경 피드는 변경 내용이 발생하는 순서대로 표시하여 원활한 통합을 허용합니다.</p>


  <p><strong>예제 #2:</strong> 자율 주행 차량의 데이터를 저장하고 있으며 들어오는 센서 데이터의 이상을 감지해야 합니다. 새 항목이 Cosmos DB에 저장되면 변경 피드에 표시되는 이러한 변경 내용을 Azure HDInsight, Apache Spark 또는 Apache Storm에서 직접 처리할 수 있습니다. 변경 피드 지원을 사용하면 데이터가 Cosmos DB에 저장되는 동안 실시간으로 지능형 처리를 적용할 수 있습니다.</p>


  <p><strong>예제 #3:</strong> 아키텍처 변경으로 인해 Cosmos DB 컬렉션의 파티션 키를 변경해야 합니다. 변경 피드를 사용하면 들어오는 변경 내용을 처리하는 동안 데이터를 새 컬렉션으로 이동할 수 있습니다. 데이터를 어디서나 Cosmos DB로 이동하는 동안 결과는 가동 중지 시간이 0입니다.<br>

  &nbsp;</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8e9fa96a-27ce-42cd-b2ad-19c0efcbc568.png"><img alt="changefeedoverview_white" border="0" height="1335" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/199f0195-e9a9-4f70-9121-14ac183a8012.png" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" title="changefeedoverview_white" width="2334"></a></p>


  <h2>여러 파티션을 사용하여 더 큰 데이터 스토리지로 작업하는 것은 어떨까요?</h2>


  <p>데이터 스토리지 요구 사항이 증가함에 따라&rsquo; 여러 파티션을 사용하여 데이터를 저장할 가능성이 높습니다. &rsquo;각 파티션에서 변경 내용을 수동으로 읽을 수 있지만 변경 피드 프로세서를 사용하면 변경 피드 API를 추상화하여 더 쉽게 읽을 수 있습니다. 이 함수는 파티션에서 읽기를 용이하게 하고 변경 피드 이벤트 처리를 여러 소비자에 분산합니다. 이 라이브러리는 변경 피드 작업을 위한 검사점 및 파티션 임대 관리를 통해 스레드로부터 안전한 다중 프로세스의 안전한 런타임 환경을 제공합니다. 변경 피드 프로세서 라이브러리는 .NET 개발을 위한 NuGet 패키지로 사용할 수 있습니다.</p>


  <p><strong>변경 피드 프로세서 라이브러리를 사용하는 경우:</strong></p>


  <ul>
   <li>데이터가 여러 파티션에 저장될 때 변경 피드에서 업데이트 끌어 오기</li>
   <li>컬렉션 간, 데이터 이동 또는 복제</li>
   <li>데이터 업데이트 및 변경 피드에 의해 트리거되는 작업의 병렬 실행</li>
  </ul>


  <p>변경 피드 프로세서 라이브러리를 시작하는 것은 간단하고 간단합니다. 다음 예제에서는 여러 도시와 연결된 뉴스 이벤트를 포함하는 문서 모음이 있습니다. City&rdquo;를 파티션 키로 사용합니다&ldquo;. 단 몇 단계만 수행하면 모든 파티션에서 문서에 대한 모든 변경 내용을 인쇄할 수 있습니다.</p>


  <p>이를 설정하려면 <a href="https://www.nuget.org/packages/Microsoft.Azure.DocumentDB.ChangeFeedProcessor/" target="_blank">변경 피드 프로세서 라이브러리 Nuget 패키지를</a> 설치하고 임대 컬렉션을 만듭니다. 임대 컬렉션은 쓰기 지역에 가까운 계정을 통해 만들어야 합니다. 이 컬렉션은 파티션 및 호스트 정보당 변경 피드 읽기 진행률을 추적합니다.<br>

  &nbsp;</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6f7fff59-bc54-4ce3-a800-8655c2efab2b.png"><img alt="azure-cosmos-db-2" border="0" height="539" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d9c03c3b-a82f-479b-9c77-9d3e5ec4e178.png" style="background-image: none; display: inline; border-image: none" title="azure-cosmos-db-2" width="1024"></a></p>


  <p>새 변경 내용이 표시될 때 수행되는 논리를 정의하려면 <strong>ProcessChangesAsync 함수를 편집합니다 </strong>. 여기서는 새 문서 또는 업데이트된 문서의 문서 ID만 인쇄합니다. 이 함수를 수정하여 다른 작업을 수행할 수도 있습니다.</p>


  <p>&nbsp;</p>


  <pre class="prettyprint">

  public Task ProcessChangesAsync(ChangeFeedObserverContext context, IReadOnlyList&lt;Document&gt; docs)
          {
              Console.WriteLine(&quot;Change feed: total {0} doc(s)&quot;, Interlocked.Add(ref totalDocs, docs.Count));
              foreach (Document doc in docs)
              {
                  Console.WriteLine(doc.Id.ToString());
              }

              return Task.CompletedTask;
          }

  </pre>


  <p>&nbsp;</p>


  <p>다음으로 변경 피드 프로세서를 시작하려면 <strong>ChangeFeedProcessorHost</strong>를 인스턴스화하여 Azure Cosmos DB 컬렉션에 적절한 매개 변수를 제공합니다. 그런 다음 <strong>RegisterObserverAsync</strong> 를 호출하여 런타임에 <strong>IChangeFeedObserver</strong> (이 예제의 <strong>DocumentFeedObserver</strong> ) 구현을 등록합니다. 이 시점에서 호스트는 greedy 알고리즘을 사용하여 Azure Cosmos DB 컬렉션의 모든 파티션 키 범위에서 임대를 &quot;획득하려고 시도합니다&quot;. 이러한 임대는 지정된 시간 프레임 동안 지속되며 갱신되어야 합니다. 새 노드가 온라인 상태가 되면 이 경우 작업자 인스턴스는 임대 예약을 수행합니다. 시간이 지남에 따라 각 호스트가 더 많은 임대를 획득하려고 할 때 부하가 노드 간에 이동합니다.</p>


  <p>&nbsp;</p>


  <pre class="prettyprint">

  DocumentFeedObserver docObserver = new DocumentFeedObserver();


  ChangeFeedEventHost host = new ChangeFeedEventHost(hostName, documentCollectionLocation, leaseCollectionLocation, feedOptions, feedHostOptions);


  await host.RegisterObserverAsync(docObserverFactory);


  </pre>


  <p>&nbsp;</p>


  <h2>다음 단계</h2>


  <ul>
   <li>설명서를 검토합니다. <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/change-feed#change-feed-processor" target="_blank">Azure CosmosDB에서 변경 피드 지원 작업</a></li>
   <li>샘플 코드 사용해 보기: <a href="https://github.com/Azure/azure-documentdb-dotnet/tree/master/samples/ChangeFeedMigrationTool" target="_blank">변경 내용을 읽고 새 컬렉션에 복사하는 예제</a>입니다.</li>
   <li><a href="https://www.nuget.org/packages/Microsoft.Azure.DocumentDB.ChangeFeedProcessor/" target="_blank">NuGet 패키지를 다운로드</a>하여 시작합니다.</li>
  </ul>


  <p><br>

  Twitter <a href="https://twitter.com/AzureCosmosDB" target="_blank">@AzureCosmosDB</a> 및 CosmosDB에서 최신 Azure Cosmos DB 뉴스 및 <a href="https://twitter.com/search?q=%23cosmosdb&amp;lang=en" target="_blank">#</a>기능을 최신 상태로 유지하고 <a href="https://stackoverflow.com/questions/tagged/azure-cosmosdb" target="_blank">Stack Overflow</a>의 개발자 포럼에 문의하세요.</p>
