### YamlMime:Yaml
ms.openlocfilehash: de9bca56975c2a6e05cd96f14ed2a74a297f0bde
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139906837"
Slug: deploy-to-azure-container-instances-with-docker-desktop
Title: Docker Desktop을 사용하여 Azure Container Instances에 배포
Summary: 오늘 우리는 Microsoft Azure 새로운 Docker Desktop 통합의 첫 번째 릴리스에 대해 기쁘게 생각합니다.
Content: >-
  <p><em>이 블로그는 Azure Container Instances의 프로그램 관리자인 MacKenzie Olson이 공동 저술했습니다.&nbsp;</em></p>


  <p>&rsquo;오늘 Microsoft Azure 새로운 Docker Desktop 통합의 첫 번째 릴리스에 대해 기쁘게 생각합니다. 지난 달 Microsoft와 Docker는 이 공동 작업을 발표했으며, 오늘 직접 경험할 수 있습니다.</p>


  <p>Docker Desktop의 새 <a href="https://aka.ms/dockerdesktopedge" target="_blank">에지 릴리스</a>는 Azure <a href="https://azure.microsoft.com/en-us/services/container-instances/" target="_blank">Container Instances</a>를 사용하여 애플리케이션을 서버리스 컨테이너로 실행하는 데 네이티브 Docker 명령을 사용할 수 있는 Docker와 Microsoft Azure 간의 통합을 제공합니다.</p>


  <p>Docker CLI를 사용하여 빠르고 쉽게 Azure에 로그인하고, Azure 구독 및 리소스 그룹을 사용하여 Container Instances 컨텍스트를 만든 다음, Container Instances에서 단일 컨테이너 애플리케이션을 실행할 <code>docker run</code>수 있습니다. 를 사용하여 <code>docker compose up</code>Docker Compose 파일에 정의된 컨테이너 인스턴스에 다중 컨테이너 애플리케이션을 배포할 수도 있습니다.</p>


  <h2>서버리스 컨테이너를 사용하는 코드-클라우드</h2>


  <p>Azure Container Instances는 단일 Docker 컨테이너 또는 Docker Compose 파일로 정의된 여러 컨테이너로 구성된 애플리케이션을 실행하기 위한 훌륭한 솔루션입니다. Container Instances를 사용하면 인프라를 설정하지 않고도 클라우드에서 컨테이너를 실행하고 Azure Storage 탑재 및 볼륨으로 GitHub 리포지토리와 같은 기능을 활용할 수 있습니다. 인프라 또는 플랫폼 관리 오버헤드가 없으므로 Container Instances는 클라우드에서 컨테이너를 신속하게 실행해야 하는 사용자에게 적합합니다.</p>


  <p>또한 Container Instances는 프로덕션 환경에서 동일한 워크로드를 실행하는 것이 좋습니다. 프로덕션의 경우 자동화된 CI/CD 흐름 내에서 Docker 명령을 활용하는 것이 좋습니다. 이렇게 하면 GitHub Actions와 같은 도구를 사용하여 동일한 Dockerfile 및 Docker Compose 파일을 프로덕션에 배포할 수 있으므로 구성 파일을 다시 작성해야 하는 시간이 절약됩니다. 컨테이너 인스턴스에는 종량제 <a href="https://azure.microsoft.com/en-us/pricing/details/container-instances/" target="_blank">가격 책정 모델</a>도 있습니다. 즉, 컨테이너가 실행 중인 경우에만 CPU 및 메모리 사용량에 대해서만 요금이 청구됩니다.</p>


  <p>&rsquo;예를 사용하여 새 Docker Azure 통합을 살펴보겠습니다. 큐에서 주문을 지속적으로 끌어오고 필요한 주문 처리를 수행하는 작업자 컨테이너가 있습니다. 네이티브 Docker 명령을 사용하여 Container Instances에서 이 작업을 실행하는 단계는 다음과 같습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1a541148-82e7-41fe-9230-70ce91990b65.gif"><img alt="Create and run a container in Azure Container Instances using the Docker CLI" border="0" height="545" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/306896b5-2082-43ae-bab7-2c01fb38638d.gif" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="1024"></a></p>


  <h2>단일 컨테이너 실행</h2>


  <p>위의 애니메이션에서 볼 수 있듯이 Azure와 새로운 Docker CLI 통합을 통해 Azure Container Instances에서 실행 중인 컨테이너를 쉽게 가져올 수 있습니다. Docker CLI만 사용하여 다단계 인증을 사용하여 Azure에 로그인하고 Container Instances를 백 엔드로 사용하여 Docker 컨텍스트를 만들 수 있습니다. Container Instances 컨텍스트에 대한 자세한 내용은 <a href="https://aka.ms/docs-docker-aci" target="_blank">설명서에서</a> 찾을 수 있습니다.</p>


  <p>새 Container Instances 컨텍스트가 만들어지면 이미 사용 중인 많은 표준 Docker 명령을 사용하여 Container Instances를 대상으로 지정할 수 있습니다. docker run, docker ps 및 docker rm과 같습니다. 간단한 <code>docker run &lt;image&gt;</code> 명령을 실행하면 Docker Hub 또는 Azure Container Registry와 같은 레지스트리에 저장된 이미지를 사용하여 Container Instances에서 컨테이너를 시작합니다. 다른 일반적인 Docker 명령을 실행하여 실행 중인 컨테이너에서 로그를 검사, 연결 및 볼 수 있습니다.</p>


  <h2>Docker Compose를 사용하여 다중 컨테이너 앱 배포</h2>


  <p>몇 가지 관련 컨테이너로 구성된 많은 컨테이너화된 애플리케이션이 표시됩니다. 사이드카 컨테이너는 주 컨테이너에 대한 로깅 또는 서명 서비스를 수행하는 경우가 많습니다. 새 Docker Azure 통합을 사용하면 Docker Compose를 사용하여 이러한 다중 컨테이너 애플리케이션을 설명할 수 있습니다.</p>


  <p>컨테이너 인스턴스 컨텍스트 및 Docker Compose 파일을 편집-빌드-디버그 내부 루프의 일부로 사용할 수 있으며 CI/CD 흐름도 사용할 수 있습니다. 이를 통해 docker compose up 및 down 명령을 사용하여 Container Instances에서 여러 컨테이너를 한 번에 스핀업하거나 종료할 수 있습니다.</p>


  <h2>더 나은 환경을 위한 Visual Studio Code</h2>


  <p><a href="https://aka.ms/VSCodeDocker" target="_blank">Visual Studio Code Docker 확장</a>은 컨테이너, 이미지, 컨텍스트 등을 시작, 중지 및 관리하는 통합 환경을 제공합니다. 확장을 사용하여 모든 언어에 대한 Dockerfiles 및 Docker Compose 파일을 스캐폴드합니다. Node.js, Python 및 .NET의 경우 컨테이너 내에서 앱의 통합된 원클릭 디버깅을 얻을 수 있습니다. 그리고 물론 <strong>탐색기가</strong> 있습니다.<strong>&nbsp;</strong> 이 탐색기에는 Visual Studio Code 내에서 바로 Docker 개체를 쉽게 관리할 수 있는 여러 패널이 있습니다.</p>


  <p>컨테이너 패널 <strong>을 </strong>사용하여 로그 나열, 시작, 중지, 검사, 로그 보기 등을 할 수 있습니다.</p>


  <p>&nbsp;<a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8ae976c7-5e21-4cfc-9636-27c4b8c2397c.png"><img alt="o  Containers panel in the Docker Explorer displays all containers and allows you to manage them" border="0" height="430" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5f4eab45-ac48-4834-b798-af8a007675da.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="732"></a></p>


  <p><strong>이미지 </strong>패널에서 이미지를 나열, 끌어오기, 태그 지정 및 푸시할 수 있습니다.</p>


  <p>&nbsp;<a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/88fb873e-1306-4b2a-bd39-719a2956d0f6.png"><img alt="o  Images panel in the Docker Explorer displays all images and allows you to manage them" border="0" height="520" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e3453bc8-f379-4c5b-8892-77940f339769.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="543"></a><br>

  레지스트리 <strong>패널에서</strong> Azure Container Registry 및 Docker Hub로 커넥트 클라우드에서 이미지를 보고 관리합니다. Azure에 바로 배포할 수도 있습니다.</p>


  <p>&nbsp;<a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/206b344e-0ae4-40d1-9ac6-5be23c6583f4.png"><img alt="o  Registries panel in the Docker Explorer displays registries you have connect to allow pushing and pulling of images" border="0" height="566" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a9d8cd03-50b5-49f6-9dd8-f1e5fc33a88a.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="819"></a></p>


  <p><strong>컨텍스트 패널을 </strong>사용하면 모든 컨텍스트를 나열하고 컨텍스트 간을 빠르게 전환할 수 있습니다. 컨텍스트를 전환하면 다른 패널이 새로 고쳐서 선택한 컨텍스트의 Docker 개체를 표시합니다. 컨테이너 인스턴스 컨텍스트는 Docker 확장의 다음 릴리스에서 완전히 지원됩니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1e5d5582-2aad-42b6-b8d1-3c2a72a9d486.png"><img alt="o    Contexts panel in the Docker Explorer displays all contexts and allows you to switch between them" border="0" height="284" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/51251a38-e4a6-41ae-9546-449d431898b8.png" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" title="" width="824"></a></p>


  <h2>사용해 보기</h2>


  <p>Docker Azure 통합 사용을 시작하려면 <a href="https://aka.ms/dockerdesktopedge" target="_blank">Docker Desktop 에지 릴리스</a>를 설치합니다. 현재 <a href="https://aka.ms/VSCodeDocker" target="_blank">Visual Studio Code Docker 확장을</a> 활용할 수 있습니다. 컨테이너 인스턴스 컨텍스트 지원이 곧 추가될 예정입니다.</p>


  <p>Docker Desktop 릴리스에 대해 자세히 알아보려면 <a href="https://aka.ms/dockerblogpostjune2020" target="_blank">Docker에서 이 블로그 게시물을</a> 읽어보세요. Docker Container Instances 컨텍스트 사용에 대한 <a href="https://aka.ms/docs-docker-aci" target="_blank">자세한 내용은 설명서에서</a> 찾을 수 있습니다.</p>
