### YamlMime:Yaml
ms.openlocfilehash: 07f65fd402e615e3a4a897dc58704ad9ba313011
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899739"
Slug: java-manage-availability-zones-and-more
Title: 'Java: 가용성 영역 관리 등'
Summary: 'Java용 Azure 관리 라이브러리 1.3을 릴리스했습니다. 이 릴리스는 가용성 영역(미리 보기)에 대한 지원을 추가합니다. '
Content: "<p>Java용 Azure 관리 라이브러리 1.3을 릴리스했습니다. 이 릴리스는 가용성 영역(미리 보기)에 대한 지원을 추가합니다.</p>\n\n<h4><a href=\"https://github.com/Azure/azure-sdk-for-java\" title=\"https://github.com/Azure/azure-sdk-for-java\">https://github.com/Azure/azure-sdk-for-java</a></h4>\n\n<h2>시작</h2>\n\n<p>Maven POM 파일에 다음 종속성 조각을 추가하여 1.3 버전의 라이브러리를 사용합니다.</p>\n\n<pre class=\"prettyprint\">\n&lt;dependency&gt;\n    &lt;groupId&gt;com.microsoft.azure&lt;/groupId&gt;\n    &lt;artifactId&gt;azure&lt;/artifactId&gt;\n    &lt;version&gt;1.3.0&lt;/version&gt;\n&lt;/dependency&gt;\n</pre>\n\n<h2>가용성 영역에서 가상 머신 만들기</h2>\n\n<p><em>define() create() &hellip;</em> 메서드 체인<a href=\"https://github.com/azure-samples/compute-dotnet-manage-vms-in-availability-zones\">을 사용하여 가용성 영역에서 가상 머신 인스턴스를 만들</a> 수 있습니다.</p>\n\n<pre class=\"prettyprint\">\nVirtualMachine = azure.virtualMachines()\n    .define(&quot;Linux-VM-in-Availability-Zone&quot;)\n    .withRegion(Region.US_EAST2)\n    .withNewResourceGroup(rgName)\n    .withNewPrimaryNetwork(&quot;10.0.0.0/28&quot;)\n    .withPrimaryPrivateIPAddressDynamic()\n    .withNewPrimaryPublicIPAddress(&quot;linux-vm-with-high-availability&quot;)\n    .withPopularLinuxImage(KnownLinuxVirtualMachineImage.UBUNTU_SERVER_16_04_LTS)\n    .withRootUsername(&quot;tirekicker&quot;)\n    .withSsh(sshKey)\n    // Optional\n    .withAvailabilityZone(AvailabilityZoneId.ZONE_1)\n    .withSize(VirtualMachineSizeTypes.STANDARD_D3_V2)\n    // Create VM\n    .create();\n</pre>\n\n<h2>가용성 영역에서 가상 머신 확장 집합 만들기</h2>\n\n<p>다른 <em>define() create() &hellip;</em> 메서드 체인을 사용하여 <a href=\"https://github.com/azure-samples/compute-java-manage-vmss-in-availability-zones\">여러 가용성 영역에서 가상 머신 확장 집합 인스턴스를 만들</a> 수 있습니다.</p>\n\n<pre class=\"prettyprint\">\nVirtualMachineScaleSet virtualMachineScaleSet1 = azure.virtualMachineScaleSets()\n    .define(&quot;VM-Scale-Set-in-Availability-Zone&quot;)\n    .withRegion(Region.US_EAST2)\n    .withExistingResourceGroup(rgName)\n    .withSku(VirtualMachineScaleSetSkuTypes.STANDARD_D3_V2)\n    .withExistingPrimaryNetworkSubnet(network, &quot;front-end&quot;)\n    .withExistingPrimaryInternetFacingLoadBalancer(loadBalancer)\n    .withPrimaryInternetFacingLoadBalancerBackends(backends.get(0))\n    .withPrimaryInternetFacingLoadBalancerInboundNatPools(natpools.get(0))\n    .withoutPrimaryInternalLoadBalancer()\n    .withPopularLinuxImage(KnownLinuxVirtualMachineImage.UBUNTU_SERVER_16_04_LTS)\n    .withRootUsername(&quot;tirekicker&quot;)\n    .withSsh(sshKey)\n    // Optional \n    .withAvailabilityZone(AvailabilityZoneId.ZONE_1)\n    // Create VM\n        .create();\n</pre>\n\n<h2>더 많은 Azure 서비스에 대한 지원</h2>\n\n<p>1.3은 네트워크 피어링, Virtual Network 게이트웨이 및 Azure Container Instances에 대한 지원도 추가합니다.</p>\n\n<h3>2개 가상 네트워크 피어링</h3>\n\n<p>다른 <em>define() create() &hellip;</em> 메서드 체인을 사용하여 <a href=\"https://github.com/azure-samples/network-java-manage-network-peering\">두 가상 네트워크를 피어</a>할 수 있습니다.</p>\n\n<pre class=\"prettyprint\">\nNetworkPeering peeringAB = networkA.peerings()\n   .define(peeringABName)\n   .withRemoteNetwork(networkB)\n   .create();\n</pre>\n\n<p><a href=\"https://github.com/azure-samples/network-java-use-network-watcher-to-check-connectivity\">네트워크 감시자를 사용하여 피어된 가상 네트워크의 가상 머신 간의 연결을 확인할</a> 수 있습니다.</p>\n\n<h3>사이트간 연결을 사용하여 VPN(가상 사설망) 만들기</h3>\n\n<p>다른 <em>define() create() &hellip;</em> 메서드 체인을 사용하여 <a href=\"https://github.com/azure-samples/network-java-manage-virtual-network-with-site-to-site-vpn-connection\">가상 사설망 사이트 간 연결을 만들</a> 수 있습니다.</p>\n\n<pre class=\"prettyprint\">\nvirtualNetworkGateway.connections()\n    .define(&quot;My-Connection&quot;)\n    .withSiteToSite()\n    .withLocalNetworkGateway(localNetworkGateway)\n    .withSharedKey(&quot;MySecretKey&quot;)\n    .create();\n</pre>\n\n<p><a href=\"https://github.com/azure-samples/network-java-manage-virtual-network-to-virtual-network-vpn-connection\">가상 네트워크 VPN 연결에 대한 가상 네트워크를 만들</a> 수 있습니다.</p>\n\n<h3>Azure Container Instances에서 컨테이너 그룹 만들기</h3>\n\n<p>다른 <em>define() create() &hellip;</em> 메서드 체인<a href=\"https://github.com/azure-samples/aci-java-create-container-groups\">을 사용하여 여러 컨테이너 인스턴스가 있는 컨테이너 그룹을 만들</a> 수 있습니다.</p>\n\n<pre class=\"prettyprint\">\nContainerGroup containerGroup = azure.containerGroups().define(&quot;azureContainerInstance&quot;)\n    .withRegion(Region.US_WEST)\n    .withNewResourceGroup(rgName)\n    .withLinux()\n    .withPublicImageRegistryOnly()\n    .withoutVolume()\n    .defineContainerInstance(aciName + &quot;-1&quot;)\n        .withImage(containerImageName1)\n        .withExternalTcpPort(80)\n        .withCpuCoreCount(.5)\n        .withMemorySizeInGB(.75)\n        .attach()\n    .defineContainerInstance(aciName + &quot;-2&quot;)\n        .withImage(containerImageName2)\n        .withoutPorts()\n        .withCpuCoreCount(.5)\n        .withMemorySizeInGB(.75)\n        .attach()\n    .create();\n</pre>\n\n<p>마찬가지로 다음을 수행할 수 있습니다.</p>\n\n<ul>\n <li><a href=\"https://github.com/azure-samples/aci-java-manage-container-instances-1\">새 Azure 파일 공유를 사용하여 컨테이너 그룹 만들기</a></li>\n <li><a href=\"https://github.com/azure-samples/aci-java-manage-container-instances-2\">기존 Azure 파일 공유를 사용하여 컨테이너 그룹 만들기</a></li>\n <li>Azure Container Service에서 Kubernetes를 사용하여 컨테이너 그룹 만들기 및 컨테이너 확장</li>\n</ul>\n\n<h2>시도</h2>\n\n<p><a href=\"https://github.com/azure/azure-sdk-for-java#sample-code\">GitHub 리포지토리</a>에서 더 많은 샘플을 얻을 수 있습니다. 시도해 보시고 의견을 보내주세요(아래 <a href=\"mailto:mailto:java@microsoft.com\">전자 메일</a> 또는 의견을 통해).<br>\n&nbsp;<br>\nAzure의 Java에 대한 자세한 내용은 다음에서 <a href=\"https://azure.com/java\">https://azure.com/java</a>확인할 수 있습니다.</p>"
