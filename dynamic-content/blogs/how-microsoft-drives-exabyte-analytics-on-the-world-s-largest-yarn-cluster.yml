### YamlMime:Yaml
ms.openlocfilehash: 053e3b31ebbe672b26f11b179cf5da3fed9053e0
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139907773"
Slug: how-microsoft-drives-exabyte-analytics-on-the-world-s-largest-yarn-cluster
Title: Microsoft가 세계 최대 YARN 클러스터에서 엑사바이트 분석을 구동하는 방법
Summary: Microsoft에서는 경쟁 우위를 위해 데이터를 사용하는 많은 회사와 마찬가지로 인사이트에 대한 기회가 풍부하고 분석 요구 사항이 빠르게 확장되어 거의 통제불능이었습니다. 우리는 또 다른 에 투자 ...
Content: >-
  <p><em>Microsoft에서 경쟁 우위를 위해 데이터를 사용하는 많은 회사와 마찬가지로, 인사이트에 대한 기회가 풍부하고 분석 요구 사항이 거의 통제 불능으로 빠르게 &ndash; 확장되었습니다. 우리는 엑사바이트 규모의 분석 플랫폼의 요구를 충족하기 위해 YARN(Yet Another Resource Manager)에 투자하여 세계&rsquo; 최대의 YARN 클러스터를 만들었습니다.</em></p>


  <h2>빅 데이터에서 <em>얼마나</em> <em>큰가요?</em></h2>


  <p>Yarn은 수천 개의 노드로 스케일링하는 것으로 알려져 있지만 <em>, 수만</em> 개의 노드가 필요할 때 어떻게 되나요? Microsoft의 클라우드 &amp; 정보 서비스는 데이터 처리 및 분산 시스템에 초점을 맞춘 응용 연구 및 과학 이니셔티브를 연구하는 고도로 전문화된 전문가 팀입니다. 이 블로그에서는 CISL과 Microsoft 빅 데이터 팀이 복잡한 규모 및 리소스 관리 &ndash; 의 과제를 충족하고 세계&#39;최대 YARN 클러스터를 구현하여 엑사바이트 크기의 분석을 구동하는 방법을 설명합니다.</p>


  <h2>Exabyte 크기 분석</h2>


  <p>10년 이상 Microsoft는 자체 초대형 분석을 위해 공개적으로 사용 가능한 Azure Data Lake의 내부 버전에 의존해 왔다. 데이터의 양과 계산의 복잡성으로 인해 여러 개의 더 큰 클러스터로 확장되었습니다. Microsoft는 현재 단일 클러스터의 50,000개 이상의 노드에서 세계에서 가장 큰 Yarn 클러스터를 실행하고 있습니다. 엑사바이트의 데이터는 Bing, AdCenter, MSN 및 라이브 Windows 같은 사업부에서 매일 처리됩니다. 15,000명 이상의 개발자가 회사 전체에서 이를 사용합니다.</p>


  <p>Microsofts&rsquo;의 여정은 2007년에 관리되는 적은 수의 컴퓨터로 시작되었습니다. 오늘날, 2018년에 이 시스템은 수십만 대의 컴퓨터에서 작동합니다. 최대 50,000개의 노드로 구성된 개별 클러스터를 자랑하며, 15,000명 이상의 개발자가 엑사바이트로 &ndash; 계산되고 증가하는 데이터를 혁신합니다.</p>


  <h2>규모의 과제</h2>


  <h3>사용자가 많을수록 동일한 클러스터에 여러 프레임워크가 있습니다.</h3>


  <p>빅 데이터 사용자 기반이 완성됨에 따라 사용자는 공유 데이터 및 컴퓨팅 인프라에서 점점 더 다양한 애플리케이션을 실행하려고 합니다. 사일로를 빌드하는 경우 사용률을 삭제합니다. 이 해결을 위해 Apache Hadoop 커뮤니티에서 YARN에 MSFT 베팅을 수행합니다. YARN은 임의 애플리케이션이 동일한 컴퓨팅 리소스를 공유하여 분산 파일 시스템의 공통 데이터 풀에 액세스할 수 있도록 하는 리소스 관리 프레임워크입니다. YARN에 베팅한 이후 Microsoft는 소매를 롤업하고 오픈 소스 Apache Hadoop 커뮤니티에 혁신을 기여했으며, 이로 인해 여러 Microsoft 직원이 프로젝트의 커밋자 및 PMC 멤버가 되었습니다.</p>


  <h3>크기 조정 문제는 &ndash; 더 큰 클러스터를 사용하여 조각화를 방지합니다.</h3>


  <p>데이터 및 애플리케이션 볼륨이 증가함에 따라 크기 조정이 문제가 됩니다. 수요를 충족하기 위한 경험이 부족한 솔루션은 더 작은 클러스터를 구축하는 것입니다. 다른 애플리케이션에 대한 사일로의 아이디어와 마찬가지로 리소스가 조각화되고 사용률이 손상되며 데이터가 클러스터 간에 지속적으로 복사되어야 하기 때문에 비정상, 느리고 오류가 발생하기 쉽습니다. 작업을 적은 수의 대규모 클러스터로 통합하는 것이 가장 좋습니다. 이것이 바로 Microsoft가 YARN을 수용하고 데이터 센터 크기의 클러스터(수만 개의 노드)에 대한 확장성을 지원하도록 확장하도록 동기를 부여한 것입니다.</p>


  <p>Microsoft는 YARN 페더레이션&quot;[1-3]이라는 &quot;기능을 YARN에 제공했는데, 이를 통해 여러 개의 작은 클러스터(각각 2~5,000개 노드)를 작동하고 사용자에게 투명한 방식으로 연결하고 정책을 통해 정교한 부하 분산을 가능하게 합니다.</p>


  <h3>남은 코어가 없는 전력 &ndash; 의 마지막 온스 압착</h3>


  <p>표준 클러스터에서 중앙 리소스 관리자는 리소스를 할당합니다. 중앙 집중식 리소스 협상 프로세스는 하트비트 기반 통신으로 인해 내재된 비효율성을 가지고 있습니다. 심장 박동은 명령을 실행할 수 있는 변수가 아닌 리듬입니다. 이렇게 하면 대규모 실행 조정이 가능하지만 리소스의 최대 사용률도 제한됩니다. 경험이 부족한 솔루션은 원하는 성능을 얻기 위해 클러스터에 더 많은 노드를 throw하는 것입니다. 이렇게 하면 허용할 수 없는 오버헤드가 발생할 수 있습니다. 리소스가 하트비트 사이에 유휴 상태가 될 수 있으므로 Microsoft는 YARN에서 내부 인프라에서 상속된 <em>기회 컨테이너</em> 라는 개념을 도입했습니다. 이러한 컨테이너는 노드에서 로컬로 큐에 대기하고, 즉 하트비트 간에 사용할 수 있는 리소스와 같은 청소된 용량 &ndash; 에서만 실행됩니다. 기회 컨테이너는 리소스 초과 예약을 사용하도록 설정합니다. 항공사가 항공편을 초과 예약하여 완전한 기회 컨테이너가 동일한 작업을 수행하고 유휴 리소스가 완전히 활용되도록 하는 것과 같습니다. 그들은 청소기이기 때문에 그들은 쉽게 높은 우선 순위 컨테이너에 의해 선점 될 수 있습니다, 다시 큐 &ndash; 또는 높은 우선 순위로 승격. Microsoft에서 기회 컨테이너를 사용하는 이점은 15~30%의 순서로 추정되며, 이는 연간 100억 달러의 절감액으로 이어집니다. Microsoft는 이 기능을 YARN [4]에 기여했습니다. 자세한 기술 토론은 [5-6]을 참조하세요.</p>


  <h3>다음 단계로 &ndash; 진행하려면 예약을 사용하여 사용 중인 클러스터의 SLO를 충족합니다.</h3>


  <p>고객 기반이 성숙해짐에 따라 사람들은 업무상 중요한 업무에 대한 시스템에 의존합니다. 이는 명시적인 최종 기한이 있는 더 많은 되풀이 작업을 의미합니다. 기존 기술은 이 사용 사례를 지원하지 않습니다&rsquo;. 이러한&rsquo; 이유로 YARN Microsoft는 시간 기반 SLO를 지원하기 위한 예약을 도입했습니다.</p>


  <p>예약은 필요한 리소스를 필요한 정확한 시간에 사용할 수 있도록 보장합니다. 이전에는 사용자에게 끔찍하고 고통스러웠습니다. 그들은 작업을 가장 적시에 실행하기 위해 줄을 서서 큐 크기 및 애플리케이션 우선 순위를 신중하게 조정해야 했습니다. 이 경우에도 항상 해제되는 리소스의 적용을 받으므로 기다릴 수 있습니다. 시스템은 본질적으로 신뢰할 수 없었다. 오늘, 새로운 &ldquo;최종 기한 예약&rdquo; 기능으로, 사용자는 필요한 시간에 정확하게 등록 한 리소스를 얻을 수 있습니다.</p>


  <p>이 새로운 기능을 사용하면 모든 예약 요청에 약간의 유연성(시간 또는 모양)이 제공됩니다. 고객은 더 많은 유연성을 노출하여 입학 가능성을 높일 수 있는 인센티브를 제공합니다. 해안 휴가를 위해 호텔 객실을 예약하는 맥락에서 이것에 대해 생각해 보십시오. 일정 기간 동안 객실을 이용할 수 있어야 하며(휴가를&hellip; 받을 수 있는 경우) 객실 크기와 객실 편의 시설(킹, 퀸, &hellip;)에 대한 선호도가 있습니다. 객실 또는 기간의 특성에 대한 유연성을 표시하여 호텔 객실을 찾을 가능성을 높입니다.</p>


  <p>YARN의 경우 예약 시스템은 필요할 때 요구 사항을 충족하는 가장 최적화된 리소스를 제공하기 위해 사용자가 나타내는 유연성을 고려합니다. 이러한 유연성을 활용하여 클러스터 어젠다를 조밀하게 압축하여 전체 시스템의 가능한 가장 높은 사용률을 달성할 수 있습니다. 이는 운영 비용이 낮아지고 사용자에게 더 나은 가격으로 변환됩니다. 또한 이 기능은 Microsoft에서 Apache Hadoop[7-8]에 오픈 소스로 제공됩니다.</p>


  <h2>여기에서 당신의 여행은 성장할 것입니다</h2>


  <p>빅 데이터 분석 여정의 어느 곳에서나 확장할 것으로 기대합니다. 매일 &ndash; 더 많은 데이터 원본이 제공되고 있으며 비즈니스 분석가와 데이터 과학자는 해당 데이터를 사용하는 더 많은 방법을 찾고 있습니다. 빅 데이터 인프라를 효율적으로 운영하는 것은 어렵지만 &ndash; 더 쉽게 작업할 수 있습니다.</p>


  <p>Microsoft는 시스템을 효율적으로 만드는 데 지속적으로 투자하고 있습니다. 이러한 노력은 다음 세 가지 방법으로 더 큰 커뮤니티에 대한 혜택으로 변환됩니다.</p>


  <ul>
      <li>이 대규모 분석 시스템은 Microsoft 제품 및 서비스를 개선하는 데 매일 사용됩니다.</li>
      <li>여기에 노출되는 기술은 Azure 서비스를 사용하여 자신의 비즈니스에 중요한 인사이트를 제공하는 개발자와 분석가에게 도움이 됩니다.</li>
      <li>마지막으로, YARN을 사용하는 모든 사용자가 Microsoft가 오픈 소스 커뮤니티에 기여한 향상된 기능의 이점을 누릴 수 있습니다.</li>
  </ul>


  <h3>편집기&rsquo; 참고:</h3>


  <p>위에서 참조한 모든 기여는 Apache Hadoop 2.9 이후 모든 릴리스에서 대중에게 제공됩니다.</p>


  <p>[1] <a href="https://issues.apache.org/jira/browse/YARN-2915" target="_blank">초기 YARN 페더레이션 작업은 JIRA에서 추적됩니다</a>.<br>

  [2] <a href="https://issues.apache.org/jira/browse/YARN-7402" target="_blank">페더레이션에 대한 지속적인 확장은 JIRA에서 추적됩니다</a>.<br>

  [3] &quot;Hydra: NSDI 2019에 표시할 데이터 센터 규모 분석을&quot; 위한 페더레이션된 리소스 관리자<br>

  [4] JIRA에서 기회 토큰 확장이 추적됩니다. YARN <a href="https://issues.apache.org/jira/browse/YARN-5220" target="_blank">RM을 통해 OPPORTUNISTIC 컨테이너의</a> <a href="https://issues.apache.org/jira/browse/YARN-2877" target="_blank">분산 일정 및</a>&nbsp; 예약을 &nbsp; 지원하도록 YARN 확장&nbsp;&nbsp;<br>

  [5] <a href="https://www.microsoft.com/en-us/research/publication/efficient-queue-management-for-cluster-scheduling-2/" target="_blank">클러스터 일정 제프 래슬리, 콘스탄티노스 카라나소스, 스리칸스 칸둘라, 로드리고 폰세카, 스리람 라오, 밀라노 Vojnovic 유럽 컨퍼런스 온 컴퓨터 시스템 (EuroSys)에 대한 효율적인 큐 관리</a><br>

  [6] <a href="https://www.microsoft.com/en-us/research/publication/mercury-hybrid-centralized-and-distributed-scheduling-in-large-shared-clusters/" target="_blank">수은: 대규모 공유 클러스터 Konstantinos Karanasos의 하이브리드 중앙 집중식 및 분산 일정 Sriram Rao, Carlo Curino, Chris Douglas, Kishore Chaliparambil, Giovanni Matteo Fumarola, Solom Heddaya, Raghu Ramakrishnan, Sarvesh Sakalanaga USENIX Annual Technical Conference (USENIX ATC&#39;2015) USENIX &ndash; Advanced Computing Systems Association 7월 1, 2015</a><br>

  [7] <a href="https://issues.apache.org/jira/browse/YARN-1051" target="_blank">YARN 허용 제어/플래너: 시간이 지남에 따라 리소스 할당 모델 향상</a><br>

  [8] <a href="https://www.microsoft.com/en-us/research/publication/reservation-based-scheduling-if-youre-late-dont-blame-us/" target="_blank">&quot;예약 기반 일정: 늦은 경우 우리를 비난하지&#39;!&quot;,</a> SoCC 2014</p>
