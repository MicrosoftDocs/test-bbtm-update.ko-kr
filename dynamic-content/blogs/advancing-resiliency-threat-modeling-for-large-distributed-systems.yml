### YamlMime:Yaml
ms.openlocfilehash: 107c394429698cc5782e7b7151c4d9e2f313c2ca
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902800"
Slug: advancing-resiliency-threat-modeling-for-large-distributed-systems
Title: 대규모 분산 시스템에 대한 복원력 위협 모델링 발전
Summary: Azure의 모든 서비스 엔지니어링 팀은 무엇이 잘못되었는지, 어떻게 잘못되었는지, 관련 중단이 고객에게 미치는 영향을 더 잘 이해하기 위한 도구로서 사후 시스템을 이미 잘 알고 있습니다. 고급 안정성 블로그 시리즈의 오늘 게시물에서는 사후 관리 및 복원력 위협 모델링 프로세스를 발전시키기 위해 노력하면서 여정에 대한 인사이트를 공유합니다.
Content: >-
  <p>&ldquo;<em>Azure의 모든 서비스 엔지니어링 팀은 무엇이 잘못되었는지, 어떻게 잘못되었는지, 관련 중단이 고객에게 미치는 영향을 더 잘 이해하기 위한 도구로서 사후 시스템을 이미 잘 알고 있습니다. 사후 처리 프로세스의 중요한 부분은 모든 관련 팀이 동일한 유형의 중단이 다시&nbsp; 발생하지 않도록 하기 위한 수리 항목을 만드는 것이지만 사후 접근 방식은 결과를 얻을 수 있지만 이를 왼쪽으로&mdash; 이동하고자 했습니다. 우리는 위험이 고객에게 영향을 미치지 않기 전에 위험을 더 잘 파악하고 싶었습니다. <a href="https://www.aka.ms/AdvancingReliability" target="_blank">진보하는 안정성 블로그 시리즈의</a> 오늘&rsquo; 게시물에서 Ive&rsquo;는 Azure 문제 관리 팀의 수석 프로그램 관리자인 <strong>Richie Costleigh</strong>에게 사후 관리 및 복원력&nbsp; 모델링 프로세스를 발전시키기 위해 노력하면서 여정에 대한 통찰력을 공유해 달라고 요청했습니다.</em>&rdquo;&mdash; Mark Russinovich, CTO, Azure</p>


  <hr>

  <p>&nbsp;</p>


  <p>높은 수준에서, 우리의 목표는 자해 및 / 또는 피할 수있는 중단을 피하는 것입니다,&nbsp;하지만 더 즉시, 우리의 목표는 가능한 한 고객에게 미치는 영향의 가능성을 줄일 수 있도록하는 것입니다. 이 컨텍스트에서 중단은 서비스가 내부 및 외부 모두에서 고객의 워크로드에 대한 기대치를 충족하지 못하거나 부정적인 영향을 미치지 않는 인시던트입니다. 이를 방지하기 위해 <a href="https://azure.microsoft.com/en-us/" target="_blank">Azure</a>의 고객 워크로드에 영향을 주기 전에 위험을 파악하는 방법을 개선해야 했습니다. 그러나 Azure 자체는 조직에서 수백 &ldquo;개의 서비스&rdquo;로 구성된 수천 개의 솔루션을 제공하고, 각각 5&nbsp;~50명의 엔지니어로 구성된 팀이 조직의 여러 부분에 분산되어 있고, 각각 고유한 프로세스, 도구, 우선 순위 및 목표를 가진 수천 개의 솔루션을 제공하는 경우 복원력&nbsp; 테스트 모델링에 접근해야 하는 크고 복잡한 분산 시스템&mdash; 쇼입니다. 복원력 위협 모델링 프로세스를 어떻게 확장하고 이러한 모든 개별 위험 평가에서 이유를 파악할 수 있을까요? 이러한 문제를 해결하기 위해 보다 적극적인 접근 방식과 반응형 접근 방식을 결합하기 위해 몇 가지 주요 변경 사항이 적용되었습니다.</p>


  <h2>여정 시작</h2>


  <p>우리는 premortem 파일럿 프로그램으로 왼쪽으로 교대를 시작했습니다. 우리는 과거의 중단을 되돌아보고 토론을 시작할뿐만 아니라 그들에게 구조를 제공하는 데 도움이되는 설문지를 개발했습니다. 다음으로, 우리는 팀과 함께 앉아 다양한 목적과 architectureeach&mdash; 시간의 여러 서비스를 선택, 우리는 새로운 무언가를 배웠습니다, 위험을 식별에 더 나은 더 나은 있어, 프로세스에 팀의 피드백을 통합, 다음 팀과 다시 시도. 결국, 우리는 이 프로세스를 생산적이고 영향력 있게 만드는 데 필요한 다른 요소뿐만 아니라 질문할 올바른 질문을 식별하기 시작했습니다. 이러한 요소 중 일부는 이미 존재했고, 다른 요소는 복원력&nbsp; 모델링에 대한 중앙 집중식 접근 방식을 지원하기 위해 만들어야 했습니다.&nbsp; 기존에 있는 많은 경우 목표를 충족하는 전체 솔루션에 대한 변경 또는 통합이 필요했습니다. 다음은 접근 방식에 대한 개략적인 개요이며, 공간을 계속 개선하기 위해 발견한 요소가 필요했습니다.</p>


  <h2>우리는 지속적이고 두려움없는 위험 설명서의 문화를 만들었습니다.</h2>


  <p>우리는 우리의 위험이 어디에 있는지 알아내기 위해 대규모 선행 투자가 필요하다는 것을 깨달았습니다. 철저한 전처리에는 시간이&mdash; 걸리며 &quot;수요가&quot;&nbsp; 많은 시간에 &quot;고객 가치를 제공하기 위해 꽉 찬 타임라인 내에서 작업하고 있으며 이&nbsp;&quot;&nbsp;&nbsp; 작업을 중지할 수 없습니다.&rsquo; 때로는 서비스가 2년 동안 단 한 번의 중단이 있었음에도 불구하고 지난 2년 동안 단 하나의 가동 중단이 있었던 솔루션의 종속성 체인에 수십 개의 다른 서비스가 있다는 것을 이해하도록 도와야 했습니다. 요점은 고객의&rsquo; 관점에서 볼 때 두 개 이상의 &ldquo;&rdquo; 중단을 목격했다는 것입니다.</p>


  <p>우리는 낮은 위험이 우리가 안전하게 무시할 수있는 무언가라는 것에 회의적이어야합니다. 우리는 중단에 대한&nbsp; 위험의 온강, 두려움 검색 인벤토리에 착수해야합니다. 우리는 느린 문제에 대한 자세한 논의와 보복에 대한 두려움 없이 위험 평가를 지원할 뿐만 아니라 수백 또는 수천 개의 서비스로 구성된 대규모 조직의 여러 서비스에서 광범위하게 활용할 수 있는 일반적인 솔루션 및 완화에 대한 투자를 알리는 프로세스가 필요했습니다.</p>


  <p>우리의 목표는 위험에 대한 지속적인 검색이며, X 개월마다 업데이트되는 정적 모델 대신 살아있는 위험&quot;&nbsp; 스크리트 모델을 갖는 &quot;것입니다. 초기 위험 집합을 찾기 위한 초기 투자가 완료되면 잘 정의된 프로세스로 최신 상태로 유지하려고 했습니다. 처음에 핵심은 우리와 우리의 목표 사이에 초기 투자 &quot;해자가&quot;&nbsp; 얼마나 큰지에 의해 억제되지 않는 것이었습니다. 우리가 지금 보는 진짜 이점은 위험 수집이 우리의 문화에 내장되어 있다는 것입니다. 이렇게 하면 다양한 원본에서 위험을 수집하고 조직 프로세스에 기본 제공될 수 있습니다.</p>


  <p>그렇다면 위험을 식별하는 프로세스를 시작하는 가장 좋은 방법은 무엇일까요?</p>


  <h2>우리는 위험을 밝히기 위해 사후 및 사전 예방적 접근 방식을 모두 사용했습니다.</h2>


  <h3>사후 분석 프로그램을 활용했습니다.</h3>


  <p>위험을 찾는 동안, 과거에 무슨 일이 있었는지보고 미래에 다시 일어날 수있는 단서를 검색&nbsp;하는 것이 합리적이다. 이와 관련하여 견고한 사후 분석 프로그램이 핵심이었습니다. 우리는 이미 사후 분석을 하고, 일반적인 테마를 찾고, 심층 분석을 위해 표시하고, 투자를 알리는 팀이 있었습니다. 그들의 분석은 위험을 해결하는 데 도움이 될 수있는 양질의 프로그램이나 이니셔티브로 팀을 라우팅 할뿐만 아니라 위험이 얼마나 널리 퍼져 있는지 볼 때까지 우리가 필요로하지 않았던 다른 투자의 필요성을 강조했습니다. 사후 분석에서 식별한 위험 범주의 유형은 아직 발생하지 않은 위험을 찾을 때 포커스 영역의 일부가 되었습니다. 사후 분석이 사후 분석 자체만큼이나 좋다는 점은 주목할 가치가 있습니다.</p>


  <h3>사후 관리 품질 검토 프로그램을 활용했습니다.</h3>


  <p>사후 평가의 품질은 그 유용성을 결정하므로 사후 평가 품질 검토 프로그램에 투자했습니다. 지침이 게시되고, 교육이 제공되었으며, 대규모 검토자 풀이 작성된&nbsp; 후 각 &quot;높은 영향&quot;&nbsp; 요소 사후 평가 등급이 낮거나 명확성이 필요한 사후 평가는 저자에게 다시 전송되었습니다. 높은 영향 사후 평가는 다른 팀의 엔지니어와 선임 리더가 포함된 회의에서 매주 검토되며, 둘 다 질문을 하고 올바른 행동 계획에 대한 피드백을 제공합니다. 이 프로그램을 사용하면 사후 데이터에서 배우고 작업할 수 있는 능력이 크게 향상되었습니다.</p>


  <p>그러나 우리는 과거에 대한 위험 검색을 제한할 수 없다는 것을 알았습니다.</p>


  <h3>우리는 더 사전 대응하기 위해 premortems에 더 나은 있어</h3>


  <p>일부는 FMA(실패 모드 분석)와 유사한 프로세스인 조건 &ldquo;전&rdquo; 처리를 들었을 수 있습니다.</p>


  <p>TheHarvard&nbsp; Business Review (<a href="https://hbr.org/2007/09/performing-a-project-premortem" target="_blank">2007년 9월, 문제 1</a>)&nbsp;&ldquo;에 따르면, 전분은 사후 평가의 가상의 반대입니다. 의료 환경에서 사후 관리를 통해 건강 전문가와 가족은 환자의&rsquo; 사망 원인을 알 수 있습니다. 물론 환자를 제외한 모든 사람이 혜택을 누릴 수 있습니다. 비즈니스 설정의 전세는 프로젝트가 부검보다는 개선될 수 있도록 끝이 아닌 프로젝트의 시작 부분에 있습니다. 프로젝트 팀 구성원에게 무엇이 잘못될지 묻는 일반적인 기준 세션과 달리, 전처리는 환자가&rdquo; 사망했다는 가정하에 &ldquo;작동하므로 무엇이 잘못되었는지 묻습니다. 팀 구성원&rsquo; 작업은 프로젝트&rsquo; 실패에 대한 그럴듯한 이유를 생성하는 것입니다.&rdquo;</p>


  <p>Azure의 컨텍스트에서 전처리의 목표는 무엇이 잘못될 수 있는지 예측하고, 잠재적 위험을 식별하고, 트리거 이벤트가 중단되기 전에 완화하거나 제거하는 것입니다. <a href="https://www.bing.com/search?q=How+to+Catch+a+Black+Swan%3A+Measuring+the+Benefits+of+the+Premortem+Technique+for+Risk+Identification&amp;cvid=f50e92c95f1a41128032072c88eede4d&amp;aqs=edge..69i57.631j0j1&amp;pglt=2083&amp;FORM=ANNAB1&amp;PC=NMTS" target="_blank">블랙 스완을 잡는 방법에 따르면: 위험 식별을 위한 전처리 기법의 이점을 측정</a>하면 전처리 기술은 더 많은 품질 위험을 식별하고 더 많은 품질 변화를 제안할 수 있습니다. 그것은 다른 사람에 비해 더 효과적인 위험 관리 기술이다.</p>


  <p>전세를 수행하는 것은 매우 어려운 일이 아니지만, 당신은 당신이 사람들의 올바른 세트를 포함해야합니다. 특정 고객 솔루션의 경우 해당 솔루션에 대해 가장 잘 알고 있는 엔지니어를 수집하고 더 나은 기술로 새 엔지니어를 가져와 학습할 수 있도록 했습니다. 다음으로, 고객이 완화해야 하는 중단이 발생하는 오전 4시에&nbsp; 깨어날 수 있는 가능한 한 많은 이유를 브레인스토밍했습니다. 우리는 가상의 질문으로 시작하는 것을 좋아합니다, &ldquo;Imagine 당신은 2 주 동안 휴가에 떨어져 있었고 서비스가 중단되었다는 것을 듣고 돌아왔습니다. 중단에 대한 기여 요인이 무엇인지 알아내기 전에 가능한 한 많은 것을 나열하려고 시도하십시오.&rdquo; 중단을 일으키는 트리거,&nbsp; 고객에게 미치는 영향 및 발생할 가능성을 문서화하는 것을 포함하여 각 트리거가 위험으로 캡처되었습니다.</p>


  <p>위험을 식별한&nbsp; 후에는 위험을 해결하기 위한 작업 계획이 있어야 했습니다.</p>


  <h3>위험 위협 모델을 만들었습니다 &ldquo;.&rdquo;</h3>


  <p>전처리가 위험의 검색 및 두려움 인벤토리인 경우 위험 위협 모델은 이를 작업 계획과 결합합니다. 팀에서 오류 모드 분석 또는 정기적인 위험 검토를&nbsp; 수행하는 경우 이러한 노력은 간단해야 합니다. 위험 위협 모델은 위험 목록을 가져와서 고객의 고통을 줄이기 위해 수행할 작업을 기반으로 합니다.</p>


  <p>위험을 식별한&nbsp; 후에는 비슷한 위험이 있는 모든 곳에서 해당 패턴을 사용할 수 있도록 올바른 수정 사항을 공통적으로 이해해야 했습니다. 이러한 수정 사항이 장기적인 경우 고객에게&rdquo; 미치는 영향을 줄이기 위해 그 동안 무엇을 할 수 있는지 자문&ldquo;해 봤습니다.&nbsp; 다음은 몇 가지 질문입니다.</p>


  <ul>
      <li>트리거될 때 위험을 인식하기 위해 존재하는 원격 분석은 무엇인가요?&nbsp;</li>
      <li>내일 이런 일이 발생하면 어떻게 될까요? 최종 수정이 완료될 때까지 어떤 가드레일 또는 프로세스가 마련되어 있나요?</li>
      <li>이 중간 완화를 수행하는 데 얼마나 걸리며 자동화되나요? 자동화할 수 있나요? 이유는 무엇입니까?</li>
      <li>완화를 테스트했나요?&nbsp; 마지막으로 테스트한 때는 언제인가요?</li>
      <li>중요한 종속성에 중단이 있는 경우와 같이 가능한 가장 복원력을 추가하기 위해 무엇을 했나요? 해당 종속성을 사용하여 지침을 따르고 최신 라이브러리를 사용하고 있는지 확인했나요?</li>
      <li>COGS의 증가가 더 탄력적이 되도록 요청할 수 있는 장소가 있나요?</li>
      <li>비용 또는 복잡성 또는 리소스가 없기 때문에 어떤 완화를 수행하지 않나요?</li>
  </ul>


  <p>위험 완화 계획을 문서화하고, 일반적인 솔루션에 맞게 조정하고, 추적했습니다.&nbsp; 완화를 위해 필요한 완화를 구현하기 위해 더 많은 개발자 또는 돈이 필요하다고 지적한 모든 팀은 복원력과 품질의 맥락에서 이를 요청할 수 있는 포럼을 제공했습니다.&nbsp; 작업 항목은 서비스를 가능한 한 복원력 있게 만드는 데 필요한 모든 작업에 대해 만들어졌으며 완료에 대한 후속 조치를 수행할 수 있도록 문서화한 위험에 연결되었습니다.</p>


  <p>그러나 위험을 올바르게 배제하고 있다는 것을 어떻게 알 수 있을까요? Rightmitigation&quot;&nbsp; 전략이 무엇인지 &quot;어떻게 알 수 있나요? 어떻게 하면 소요된 작업량을 줄이고 모든 사람이 사용자 지정 방식으로 동일한 문제를 해결하는 것을 방지할 수 있을까요?</p>


  <h2>모든 서비스에서 모든 위험에 대한 중앙 집중식 리포지토리를 만들었습니다.</h2>


  <h3>위험 위협 모델은 중앙에서 캡처 및 분석할 때 더 효과적입니다.</h3>


  <p>모든 팀이 가동 중단을 분석하고, 사후 분석을 수행하고, 위험 위협 모델을 만든 다음, 모든 것을 별도로 문서화하면 중단 횟수를 줄일 수 있을 것입니다. 그러나 팀이 찾은 내용을 다른 사람과 공유할 수 있는 방법이 없으므로 위험 데이터의 광범위한 패턴을 이해할 기회를 놓쳤을 것입니다. 한 서비스의 위험은 종종 다른 서비스에서도 위험했지만, 한 가지 이유 또는 다른 이유로 인해 위험에 처한 모든 서비스의 위험 위협 모델로 전환되지는 않았습니다. 또한 한 서비스의 미완성 수리 또는 위험이 다른 서비스에 대한 위험이라는 것을 알아차리지 못했을 것입니다. 새 서비스가 실행될 때 이 위험이 다른 곳에 나타나지 않도록 하는 패턴을 문서화할 기회를 놓쳤을 것입니다. 우리는 전율의 범위가 개별 서비스 경계로 제한되어서는 안된다는 것을 깨닫지 못했을 것이고, 오히려 특정 고객 시나리오에 대해 함께 작동하는 모든 서비스에서 수행되어야 한다는 것을 깨달았을 것입니다. 우리는 일반적인 완화 전략을 제안하고 동일한 완화 계획을 사용하여 대규모 완화를 해결하기 위한 광범위한 노력에 투자할 기회를 놓쳤을 것입니다. 요컨대, 우리는 서비스 경계를 넘어 수많은 투자를 알릴 수있는 많은 기회를 놓쳤을 것입니다.</p>


  <h3>위험을 분류하는 일반적인 방법을 구현했습니다.</h3>


  <p>어떤 경우에는 어떤 &quot;유형의&quot;&nbsp; 위험을 발견했는지 이해해야 한다는 것을 알았습니다.&nbsp; 단일 실패 지점인가요? 제한 구성이 부족합니까? 이를 위해 집중하려는 문제의 범주를 설명하는 데 사용되는 약식 &ldquo;태그&rdquo; 의 계층적 시스템을 만들었습니다. 이러한 태그는 사후 분석을 통해 일반적인 패턴을 식별하고 개별 위험을 표시하여 올바른 작업 계획을 식별하기 위해 동일한 범주의 위험을 보다 잘 살펴볼 수 있도록 하는 데 사용되었습니다.</p>


  <h3>위험 위협 모델에 대한 정기적인 검토가 있었습니다.</h3>


  <p>완성된 위험 위협 모델을 통해 고위 경영진, 설계자, 전담 Azure 품질 팀 구성원 등 앞에서 검토를 예약할 수 있습니다. 이러한 회의는 단순히 검토 이상의 것이었으며,&nbsp; 다양한 팀으로 모여 일반적인 솔루션, 완화 및 후속 조치가 필요한 영역을 식별할 수 있는 기회를 제공했습니다. 작업 항목이 수집되고, 소유자가 할당되고, 위험이 작업 계획과 연결되어 팀이 어떻게 진행되었는지 확인할 수 있습니다.</p>


  <h2>그것은 모두 함께 왔다, 다음 단계로 걸릴 하 고 서비스의 수백에 대 한이 작업을 수행 하는 시간!</h2>


  <p>요약하자면, 위험을 식별하고 문서화하기 위해 프로그램을 회전하는 것 이상이 걸렸습니다. 우리는 영감을 주어야 했지만, 그 노력을 최대한 활용하기 위한 올바른 프로세스를 마련해야 했습니다. 그것은 많은 프로그램에 걸쳐 조정과 많은 다른 사람의 생성을했다. 서비스 간 의사 소통과 헌신이 많이 걸렸습니다.</p>


  <p>복원력 위협 모델링 프로그램을 가속화하는 것은 이미 중요한 Azure 서비스에 많은 이점을 가져다 주었기 때문에 Azure의 모든 서비스를 포괄하도록 이 프로세스를 확장할 것입니다. 이를 위해 프로세스, 설명서 및 지침을 지속적으로 구체화하고 과거 위험 토론을 활용하여 새로운 위험을 해결하고 있습니다.&nbsp; 예, 이것은 많은 작업이며, 실버 글머리 기호가 없으며, 우리는 여전히이 노력에 점점 더 많은 자원을 가져오고 있지만 안정성에 관해서는, 우리는 큰&rdquo; 갈 믿습니다&ldquo;!&nbsp;</p>
