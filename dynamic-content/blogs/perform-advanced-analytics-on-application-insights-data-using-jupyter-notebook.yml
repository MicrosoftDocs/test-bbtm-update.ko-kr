### YamlMime:Yaml
ms.openlocfilehash: 230f507223c81c881c5632c5b8d71ee7b354c7d4
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899615"
Slug: perform-advanced-analytics-on-application-insights-data-using-jupyter-notebook
Title: Jupyter Notebook을 사용하여 애플리케이션 Insights 데이터에 대한 고급 분석 수행
Summary: 원격 분석 데이터를 활용하고 Azure 애플리케이션의 동작을 더 잘 모니터링할 수 있도록 Application Insights 기능을 확장하는 Jupyter Notebook 템플릿을 제공하게 되어 기쁩니다....
Content: >-
  <p>원격 분석 데이터를 활용하고 Azure 애플리케이션의 동작을 더 잘 모니터링할 수 있도록 Application Insights 기능을 확장하는 <a href="https://notebooks.azure.com/ai-advancedanalytics/libraries/advancedanalytics/html/template.ipynb" target="_blank">Jupyter Notebook 템플릿</a>을 제공하게 되어 기쁩니다. 문제가 발생할 때 애플리케이션 Insights 포털에서 임시 쿼리를 만드는 대신 원격 분석 데이터를 정기적으로 쿼리하고, 고급 분석을 수행하고, 파생 데이터를 애플리케이션 Insights 다시 보내 모니터링 및 경고를 수행하는 Jupyter Notebook을 작성할 수 있습니다. 일정에 따라 또는 웹후크를 통해 Azure WebJob을 사용하여 Jupyter Notebook을 실행할 수 있습니다.</p>


  <p>이 방법을 통해 쿼리 언어 또는 제한의 제약 조건을 초과하여 원격 분석 데이터를 조작하고 분석할 수 있습니다. 기존 경고 시스템을 활용하여 원시 계측 데이터가 아닌 새로 파생된 데이터를 모니터링할 수 있습니다. 파생된 데이터는 기계 학습 모델을 학습시키는 데 사용되는 근본 원인 분석을 위한 다른 메트릭과 상호 연결될 수도 있습니다. 이 블로그 게시물에서는 원격 분석 데이터에 대한 고급 분석과 예제 구현을 수행하기 위해 이 템플릿을 운영하기 위한 단계별 가이드를 찾을 수 있습니다.</p>


  <h2>Jupyter Notebook 만들기</h2>


  <p><a href="https://notebooks.azure.com/">새 Notebook을 만들</a> 거나 <a href="https://notebooks.azure.com/ai-advancedanalytics/libraries/advancedanalytics/html/template.ipynb">템플릿을 복제합니다</a>. Jupyter는 다양한 프로그래밍 언어를 지원하지만 이 블로그 게시물은 Python 2.7에서 고급 분석을 수행하는 데 중점을 둡니다.</p>


  <h2>Application Insights 원격 분석 데이터 쿼리</h2>


  <p>애플리케이션 Insights 리소스에서 원격 분석 데이터를 쿼리하려면 애플리케이션 ID 및 API 키가 필요합니다. 둘 다 애플리케이션 Insights 포털, <em>API 액세스</em> 블레이드 및 구성에서 찾을 수 <em>있습니다</em>.</p>


  <pre class="prettyprint">

  !pip install --upgrade applicationinsights-jupyter


  from applicationinsights_jupyter import Jupyter


  API_URL = &quot;https://api.aimon.applicationinsights.io/&quot;

  APP_ID = &quot;REDACTED&quot;

  API_KEY = &quot;REDACTED&quot;

  QUERY_STRING = &quot;customEvents\
        | where timestamp &gt;= ago(10m) and timestamp &lt; ago(5m)\
        | where name == &#39;NodeProcessStarted&#39;\
        | summarize pids=makeset(tostring(customDimensions.PID)) by cloud_RoleName, cloud_RoleInstance, bin(timestamp, 1m)&quot;

  jupyterObj = Jupyter(APP_ID, API_KEY, API_URL)

  jupyterObjData = jupyterObj.getAIData(QUERY_STRING)

  </pre>


  <p><a href="https://github.com/jacobmsft/ApplicationInsights_Jupyter">API</a>에 액세스하여 자세한 정보를 가져옵니다.</p>


  <h2>파생 데이터를 애플리케이션 Insights 다시 보내기</h2>


  <p>애플리케이션 Insights 리소스에 데이터를 보내려면 계측 키가 필요합니다. 애플리케이션 Insights 포털의 <em>개요</em> 블레이드에서 찾을 수 있습니다.</p>


  <pre class="prettyprint">

  !pip install applicationinsights


  from applicationinsights import TelemetryClient


  IKEY = &quot;REDACTED&quot;

  tc = TelemetryClient(IKEY)


  tc.track_metric(&quot;crashCount&quot;, 1)

  tc.flush()

  </pre>


  <p><a href="https://github.com/Microsoft/ApplicationInsights-Python">API</a>에 액세스하여 자세한 정보를 가져옵니다.</p>


  <h2>Azure WebJob을 사용하여 Notebook 실행</h2>


  <p><a href="https://docs.microsoft.com/en-us/azure/app-service-web/websites-webjobs-resources">Azure WebJob</a>, Notebook, 해당 종속성 및 Jupyter 서버를 사용하여 Notebook을 실행하려면 <a href="https://azure.microsoft.com/en-us/services/app-service/">Azure App Service</a> 컨테이너에 업로드해야 합니다.</p>


  <h3>필요한 리소스 준비</h3>


  <ol>
      <li>컴퓨터에 Notebook을 다운로드합니다.</li>
      <li>Anaconda를 사용하여 Jupyter 서버를 <a href="https://www.continuum.io/downloads">설치</a>합니다.</li>
      <li>App Service 컨테이너는 모듈이 자동으로 설치되는 디렉터리를 변경할 수 없으므로 컴퓨터에서 Notebook을 <a href="https://nbconvert.readthedocs.io/en/latest/execute_api.html">실행</a>하여 모든 종속성을 설치합니다.</li>
      <li>App Service 컨테이너&rsquo; 디렉터리를 반영하도록 종속성의 경로를 업데이트합니다. Anaconda2/Scripts/jupyter-nbconvert-script.py 첫 번째 스크립트를<br>
      #! D:/home/site/wwwroot/App_Data/resources/Anaconda2\python.exe</li>
      <li>pip 명령을 제외한 Notebook의 로컬 복사본을 업데이트합니다.</li>
      <li>다음 스크립트를 포함하는 run.cmd 파일 만들기<br>
  D:\home\site\wwwroot\App_Data\resources\Anaconda2\Scripts\jupyter nbconvert --execute &lt;Your Notebook Name.ipynb&gt;</li>

  </ol>


  <h3>FTP 리소스</h3>


  <ol>
      <li>배포 자격 증명 및 FTP 연결 정보를 <a href="https://docs.microsoft.com/en-us/azure/app-service-web/app-service-deploy-ftp">가져옵니다</a>.</li>
      <li>App Service 컨테이너의 새 디렉터리에 Anaconda2 폴더 FTP<br>
  D:\home\site\wwwroot\App_Data\resources</li>

  </ol>


  <h3>Notebook 운영화</h3>


  <ol>
      <li>새 Azure WebJob을 <a href="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-create-web-jobs">만들고</a> Notebook 및 run.cmd 파일을 업로드합니다.</li>
  </ol>


  <h2>구현 예제</h2>


  <p>이 템플릿을 운영했으며 자체 서비스 중 하나의 원격 분석 데이터에 대한 고급 분석을 수행해 왔습니다.</p>


  <p>이 서비스는 각 클라우드 인스턴스에서 4개의 Node.js 프로세스를 실행합니다. 근본 원인 분석에서 Node.js 충돌 사례를 발견했습니다. 그러나 SDK의 제한으로 인해 충돌이 발생할 때 기록할 수 없습니다. 따라서 기존 원격 분석 데이터를 분석하여 Node.js 충돌을 감지하는 Jupyter Notebook을 만들었습니다.</p>


  <p>클라우드 인스턴스에서 새 Node.js 프로세스가 시작될 때 사용자 지정 이벤트 <em>NodeProcessStarted</em> 가 기록됩니다. 일반적으로 4개의 프로세스는 모두 8-11시간마다 재활용될 때 거의 동시에 시작됩니다. 따라서 4개 미만의 <em>NodeProcessStarted</em> 이벤트가 다른 빈도로 발생하는 것을 볼 때 새 프로세스가 최근에 충돌한 프로세스(es)를 대체하기 시작했음을 유추할 수 있습니다.</p>


  <p>이 <a href="https://notebooks.azure.com/ai-advancedanalytics/libraries/advancedanalytics/html/nodecrashdetection.ipynb">구현된 템플릿</a>에서는 원격 분석 데이터를 쿼리하고, 데이터를 분석하고, 더 많은 원격 분석 데이터를 쿼리하여 분석을 보강한 다음, 파생 데이터를 Application Insights 다시 보내는 방법을 확인할 수 있습니다.</p>


  <p>&nbsp;</p>


  <p>이 템플릿을 통해 원격 분석 데이터에서 실행 가능한 인사이트를 도출하고 Azure 애플리케이션을 더 잘 관리할 수 있기를 바랍니다.</p>
