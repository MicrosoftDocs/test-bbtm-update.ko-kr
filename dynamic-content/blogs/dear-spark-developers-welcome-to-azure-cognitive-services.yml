### YamlMime:Yaml
ms.openlocfilehash: 608f46ee208f243f5000595fdd09fe4960107ef6
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908442"
Slug: dear-spark-developers-welcome-to-azure-cognitive-services
Title: '친애하는 Spark 개발자: Azure Cognitive Services 시작'
Summary: 오늘 Spark AI Summit 2019에서는 테라바이트 규모로 Azure Cognitive Services를 쉽게 활용할 수 있도록 SparkML 에코시스템에 새로운 모델 세트를 도입하게 되어 기쁩니다.
Content: >-
  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a55d1819-a3ff-4229-8aad-723064dba27b.png"><img alt="Azure Cognitive Services on Spark" border="0" height="156" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/dd10b978-1bcc-4d0a-84ee-b1d2223cfa85.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Spark의 Azure Cognitive Services" width="451"></a></p>


  <p><i>이 게시물은 마크 해밀턴, 수다르산 라구나단, 크리스 호더, MMLSpark 기여자가 공동 저술했습니다.</i></p>


  <h2><a href="https://databricks.com/spark/about">Apache Spark&trade;</a>의 빅 데이터 워크플로에 Azure Cognitive Services의 기능 통합</h2>


  <p>오늘 Spark + AI Summit 2019에서는 테라바이트 규모로 Azure Cognitive Services를 쉽게 활용할 수 있도록 SparkML 에코시스템에 새로운 모델 세트를 도입하게 되어 기쁘게&#39;. 몇 줄의 코드만으로 개발자는 Spark ML 기존 분산 기계 학습 파이프라인 내에 인식 서비스를 포함할 수 있습니다. 또한 이러한 기여를 통해 Spark 사용자는 심층 네트워크, 그라데이션 강화 트리 및 SparkML 모델과 함께 서비스를 연결하거나 <i>파이프라인</i> 할 수 있으며 이러한 하이브리드 모델을 탄력적 및 서버리스 분산 시스템에 적용할 수 있습니다.</p>


  <p>이미지 인식에서 음성 인식, 번역 및 텍스트 음성 변환을 사용하는 개체 감지에 이르기까지 Azure Cognitive Services를 사용하면 개발자가 모든 시나리오에서 애플리케이션에 지능형 기능을 쉽게 추가할 수 있습니다. 지금까지 백만 명 이상의 개발자가 이미 Cognitive Services를 발견하고 시도하여 애플리케이션에서 획기적인 환경을 가속화했습니다.</p>


  <h2>Apache Spark의 Azure Cognitive Services&trade;</h2>


  <p>Spark의 Cognitive Services를 사용하면 Apache Spark<b>&trade;</b> 분산 컴퓨팅 에코시스템을 사용하여 대규모로 Azures&rsquo; Intelligent Services로 작업할 수 있습니다. Spark의 Cognitive Services는 <a href="https://azure.microsoft.com/en-us/services/databricks/"><b>Azure Databricks, Azure</b></a> <a href="https://github.com/Azure/aztk">Batch의 AZTK(</a><a href="https://github.com/Azure/aztk">Azure Distributed Data Engineering Toolkit), SQL Server</a>&nbsp; <a href="https://cloudblogs.microsoft.com/sqlserver/2018/09/24/sql-server-2019-preview-combines-sql-server-and-apache-spark-to-create-a-unified-data-platform/">Spark</a> 및 <a href="https://azure.microsoft.com/en-us/services/kubernetes-service/">Azure Kubernetes Service</a>의 Spark 클러스터와 같은 모든 Spark <b>2.4 </b> 클러스터와 호환됩니다. 또한 PySpark, Scala, Java 및 R(베타)에서 idiomatic 바인딩을 제공합니다.</p>


  <p>Spark의 Cognitive Services를 사용하면 사용자가 범용을 포함하고 Apache Spark&trade; 및 SQL 계산에 지능형 모델을 지속적으로 개선할 수 있습니다. 이 기여는 개발자가 지능형 분산 애플리케이션을 만드는 데 집중할 수 있도록 낮은 수준의 네트워킹 세부 정보로부터 개발자를 해방하는 것을 목표로 합니다. 각 Cognitive Service는 SparkML 변환기이므로 사용자는 기존 SparkML 파이프라인에 서비스를 추가할 수 있습니다. 또한 사용자가 단일 스칼라 또는 분산 Spark DataFrame의 열로 모델을 매개 변수화할 수 있도록 하는 새로운 유형의 API를 SparkML 프레임워크에 도입했습니다. 이 API는 간결하면서도 강력한 흐름 쿼리 언어를 생성하며, 이 언어는 복잡하지 않고 전체 분산 매개 변수화를 제공합니다. 자세한 내용은 <a href="https://databricks.com/sparkaisummit/north-america/sessions-single-2019?id=124" style="font-size: 13px;">세션을 확인하세요</a>.</p>


  <h3>다음 세 가지 간단한 단계에서 Spark에서 Azure Cognitive Services를 사용합니다.</h3>


  <ol>
   <li><a href="https://docs.microsoft.com/en-us/azure/cognitive-services/cognitive-services-apis-create-account">Azure Cognitive Services 계정 만들기</a></li>
   <li><a href="https://mmlspark.blob.core.windows.net/website/index.html#install">Spark 클러스터에 MMLSpark 설치</a></li>
   <li><a href="https://github.com/Azure/mmlspark/blob/master/notebooks/samples/AzureSearchIndex%20-%20Met%20Artworks.ipynb">예제 Notebook 사용해 보기</a></li>
  </ol>


  <h2>Cognitive Service 컨테이너를 사용하는 낮은 대기 시간, 높은 처리량 워크로드</h2>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/46767e28-8944-4504-afd8-23384065aa5a.jpg"><img align="right" alt="Cognitive Services in Containers" border="0" height="281" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ed28fc76-d6ed-4f3d-9d5d-01b44376446c.jpg" style="border: 0px currentcolor; border-image: none; float: right; display: inline; background-image: none;" title="컨테이너의 Cognitive Services" width="171"></a></p>


  <p>Spark의 Cognitive Services는 전 세계 모든 지역의 서비스와 호환되지만 많은 시나리오에서는 연결이 낮거나 연결되지 않고 대기 시간이 매우 짧습니다. Spark의 Cognitive Services를 사용하여 이러한 문제를 해결하기 위해 최근에 <a href="https://docs.microsoft.com/en-us/azure/cognitive-services/cognitive-services-container-support">여러 Cognitive Services를 Docker 컨테이너로 출시했습니다</a>. 이러한 컨테이너를 사용하면 대기 시간이 매우 짧은 워크로드를 위해 클러스터의 작업자 노드에서 로컬 또는 직접 Cognitive Services를 실행할 수 있습니다. 포함된 인식 서비스를 사용하여 Spark 클러스터를 쉽게 만들 수 있도록 인기 있는 컨테이너 오케스트레이션 플랫폼 Kubernetes에 Spark 클러스터를 배포하기 위한 <a href="https://github.com/helm/charts/pull/11285">Helm 차트를 만들었습니다</a> . 컨테이너&rsquo; URL에서 Spark의 Cognitive Services를 가리키면 로컬로 이동합니다.</p>


  <h2>Spark<em>에서</em> HTTP를 사용하여 Apache Spark&trade;에 <i><em>any</em></i> 웹 서비스 추가</h2>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c85cdd9d-4c79-4ae8-a0a2-9a88fb26f05c.jpg"><img alt="Http on Spark." border="0" height="268" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/20304e6d-12ea-40fe-b5fd-cb4bab7b28a0.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="" width="459"></a></p>


  <p>Cognitive Services는 네트워킹을 사용하여 에코시스템 간에 소프트웨어를 공유하는 한 가지 예일 뿐입니다. 웹에는 유용한 도구를 제공하고 코드를 모든 언어로 액세스할 수 있도록 하는 표준 패턴 중 하나로 작동하는 HTTP(S) 웹 서비스가 가득합니다. 우리의 목표는 Spark 개발자가 기존 Spark 파이프라인 내에서 이러한 풍부한 기능을 활용할 수 있도록 하는 것입니다.</p>


  <p>이를 위해 전체 HTTP 통신 프로토콜과 Spark SQL 간의 통합인 Spark에 HTTP를 제공합니다. Spark의 HTTP를 사용하면 Spark 사용자가 클러스터의 병렬 네트워킹 기능을 활용하여 로컬, docker 또는 웹 서비스를 통합할 수 있습니다. 높은 수준에서 SPARK의 HTTP는 모든 프레임워크를 Spark 에코시스템에 통합하는 간단하고 원칙적인 방법을 제공합니다.</p>


  <p>Spark의 HTTP를 사용하면 사용자는 Spark 에코시스템의 SQL 작업, 맵, 감소, 필터 및 도구를 사용하여 요청 및 응답을 만들고 조작할 수 있습니다. SparkML과 결합하면 사용자는 서비스를 함께 연결하고 Spark를 분산 마이크로 서비스 오케스트레이터로 사용할 수 있습니다. Spark의 HTTP는 실패한 요청에 대한 비동기 병렬 처리, 일괄 처리, 제한 및 지수 백오프를 제공하므로 핵심 애플리케이션 논리에 집중할 수 있습니다.</p>


  <h2>실제 예제</h2>


  <h3>메트로폴리탄 미술관</h3>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/165a8356-ee66-4a73-ae4c-48826c3e6e21.jpg"><img alt="Azure Search on Spark for The MET" border="0" height="190" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1aa534dd-136b-45e8-a85c-bda74364178d.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Azure Search on Spark for The MET" width="418"></a></p>


  <p>Microsoft에서는 Spark의 HTTP를 사용하여 다양한 프로젝트와 고객에게 전력을 공급합니다. <a href="https://www.ailab.microsoft.com/experiments/gen-studio">최신 프로젝트는</a> Spark의 Computer Vision API와 Spark의 Azure Search를 사용하여 메트로폴리탄 미술관(MET)에 대한 검색 가능한 아트 데이터베이스를 만듭니다. 더 구체적으로 말하자면, 이미지의 <a href="https://www.metmuseum.org/about-the-met/policies-and-documents/open-access">METs&rsquo; Open Access 카탈로그</a> 를 로드하고 Computer Vision API를 사용하여 검색 가능한 설명과 함께 이러한 이미지에 병렬로 주석을 추가합니다. 또한 Spark에서 CNTK 사용하고 <a href="https://spark.apache.org/docs/2.1.0/ml-features.html#locality-sensitive-hashing">SparkMLs&rsquo; 지역성 중요 해시</a> 구현을 사용하여 이러한 이미지를 미래화하고 사용자 지정 역방향 이미지 검색 엔진을 만들었습니다. 이 작업에 대한 자세한 내용은 <a href="https://www.aka.ms/aiart">AI Lab</a> 또는 <a href="https://github.com/Microsoft/GenStudio">Github</a>를 확인하세요.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c4071316-ec42-4215-890f-8c54d9e37e8e.jpg"><img alt="Architecture of Azure Search on Spark" border="0" height="156" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f8fdc817-eb91-4865-a01d-06318c8e8a19.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Spark의 Azure Search 아키텍처" width="467"></a></p>


  <h3>스노우 레오파드 트러스트</h3>


  <p>우리는 Spark의 Cognitive Services를 사용하여 멸종 위기에 처한 스노우 레오파드 인구를 추적하고 이해하는 데 도움을 주기 위해 <a href="https://www.snowleopard.org/">Snow Leopard Trust</a> 와 협력했습니다. Spark의 Bing 눈 표범 이미지를 끌어와 표범 분류를 위한 완전히 레이블이 지정된 학습 데이터 세트를 만드는 것으로 시작했습니다. 그런 다음 Spark에서 CNTK 및 Tensorflow를 사용하여 심층 분류 시스템을 학습했습니다. 마지막으로, <a href="https://aka.ms/spark">Spark의 LIME</a> 를 사용하여 하나의 경계 상자를 손으로 그리지 않고 레오파드 분류자를 표범 탐지기로 구체화하는 모델을 해석했습니다! 자세한 내용은 <a href="https://blogs.technet.microsoft.com/machinelearning/2018/10/03/deep-learning-without-labels/">블로그 게시물을</a> 확인하세요.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/96feb495-1dd3-45c9-b5b2-17ed39844a2d.jpg"><img alt="Architecture of Snow Leopard classification" border="0" height="363" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/976fb667-4e3e-42be-abe8-ec84a2425f4c.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Snow Leopard 분류 아키텍처" width="415"></a></p>


  <h2>결론</h2>


  <p>몇 줄의 코드만 사용하여 Azure Cognitive Services의 기능을 Apache Spark<b>&trade;</b>의 빅 데이터 워크플로에 통합할 수 있습니다. Spark 바인딩은 높은 처리량을 제공하며 Spark를 실행하는 모든 위치에서 실행됩니다. Spark의 Cognitive Services는 고성능, 온-프레미스 또는 낮은 연결 시나리오를 위해 컨테이너와 완전히 통합됩니다. 마지막으로 Spark에서 모든 웹 서비스를 사용하기 위한 일반적인 프레임워크를 제공했습니다. <a href="https://aka.ms/spark">Azure Databricks의 오픈 소스 이니셔티브 MMLSpark</a>를 사용하여 프로젝트에 대한 Cognitive Services 활용을 시작할 수 있습니다.</p>


  <h3>자세한 정보</h3>


  <p><a href="https://aka.ms/spark">Web</a></p>


  <p><a href="https://aka.ms/mmlspark">Github</a></p>


  <p><a>메일 주소: </a>mmlspark-support@microsoft.com</p>
