### YamlMime:Yaml
ms.openlocfilehash: ea7144aa99821a9d39cd1422f062b34bb0be9b63
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139898603"
Slug: how-to-build-globally-distributed-applications-with-azure-cosmos-db-and-pulumi
Title: Azure Cosmos DB 및 Pulumi를 사용하여 전역적으로 분산된 애플리케이션을 빌드하는 방법
Summary: 우리는 서로 다른 대륙의 사람들과 기업이 빛의 속도로 상호 작용할 수 있는 놀라운 시대에 살고 있습니다. 전자 상거래 웹 사이트, 멀티 플레이어 온라인 게임, 연결된 IoT 디바이스, 공동 작업 및 레저 환경 등 전 세계의 사용자를 대상으로 하는 수많은 산업 및 애플리케이션.
Content: >-
  <p><em>이 게시물은 미하일 실코프, 소프트웨어 엔지니어, 풀루미에 의해 공동 저술되었다.</em></p>


  <p>Pulumi는 고급 프로그래밍 모델 및 개발자 도구와 심층 시스템 및 인프라 혁신을 결합한 고유한 플랫폼으로 사람들이 최신 클라우드 애플리케이션을 빌드하는 방법을 재창조하고 있습니다.</p>


  <p>우리는 서로 다른 대륙의 사람들과 기업이 빛의 속도로 상호 작용할 수 있는 놀라운 시대에 살고 있습니다. 전자 상거래 웹 사이트, 멀티 플레이어 온라인 게임, 연결된 IoT 디바이스, 공동 작업 및 레저 환경 등 전 세계의 사용자를 대상으로 하는 수많은 산업 및 애플리케이션. 이러한 모든 애플리케이션은 대기 시간을 최소화하고 사용자 환경을 매력적으로 유지하기 위해 최종 고객과 근접한 컴퓨팅 및 데이터 인프라를 요구합니다. 최신 클라우드를 사용하면 이러한 시나리오를 가능하게 할 수 있습니다.&nbsp;</p>


  <h2>Azure 인프라</h2>


  <p>Azure Cosmos DB는 모든 지역에 턴키 데이터 배포를 제공합니다. 즉, 프로덕션 워크로드를 실행하는 동안 위치를 추가하거나 제거할 수 있습니다. Azure는 10밀리초 미만의 대기 시간으로 읽기 및 쓰기 작업을 위한 API를 제공하면서 데이터 복제, 복원력 및 효율성을 처리합니다.</p>


  <p>반면, 컴퓨팅 servicesvirtual&mdash; 머신, 컨테이너 인스턴스, Azure App Services, Azure Functions 및 관리되는 Azure Kubernetes Serviceare&mdash;는 단일 Azure 지역에 있습니다. 데이터베이스의 지리적 중복성을 잘 활용하려면 사용자는 각 대상 지역에 애플리케이션을 배포해야 합니다.</p>


  <p>&nbsp;</p>


  <p style="text-align: center;"><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b9c35f90-7af6-4e66-927b-c49d8616de80.png"><img alt="An image showing globally distributed applications." src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ac144afc-8e7c-4732-bd76-856c04ec5f07.png" title="전역적으로 분산된 애플리케이션을 보여 주는 이미지입니다."></a></p>


  <p style="text-align: center;"><em>전역적으로 분산된 애플리케이션</em></p>


  <p align="left">애플리케이션 지역은 대기 시간이 짧은 이점을 누리려면 Azure Cosmos DB 지역과 동기화 상태를 유지해야 합니다. 운영 팀은 자동 크기 조정 구성, 효율적인 네트워킹, 보안 및 유지 관리 외에도 올바른 지역성을 제공하기 위해 애플리케이션 및 서비스 풀을 관리해야 합니다.</p>


  <p>복잡성을 관리하기 위해 <strong>코드로서의 인프라</strong> 접근 방식이 해결됩니다.</p>


  <h2>코드로서의 인프라</h2>


  <p>Azure Portal은 모든 Azure 서비스에 적합한 창이지만 프로덕션 애플리케이션을 프로비전하는 데 직접 사용하면 안&rsquo; 됩니다.&nbsp; 대신 필요한 모든 클라우드 리소스를 만들기 위해 실행할 수 있는 프로그램의 측면에서 인프라를 설명하기 위해 노력해야 합니다.</p>


  <p>일반적으로 자동화 스크립트(예: PowerShell Cmdlet 또는 Azure CLI를 호출하는 bash 스크립트)를 사용하여 이 작업을 수행할 수 있습니다. 그러나 이 방법은 힘들고 오류가 발생하기 쉽습니다. 환경을 현재 상태에서 원하는 상태로 가져오는 것은 종종 사소한 일입니다. 스크립트 중간에 오류가 발생하는 경우 환경을 복구하기 위해 수동 개입이 필요한 경우가 많으므로 가동 중지 시간이 발생합니다.</p>


  <p><strong>원하는 상태 구성</strong> 은 인프라 정의의 또 다른 스타일입니다. 사용자는 선언적 방식으로 인프라의 원하는 최종 상태를 설명하고 도구는 환경을 현재 상태에서 원하는 상태의 패리티로 가져오는 작업을 처리합니다. 이러한 프로그램은 변화를 발전시키고 추적하는 것이 더 자연스럽습니다.</p>


  <p><strong>Azure Resource Manager 템플릿은 Azure</strong> 의 세계에서 맞춤형 desired-state-configuration 도구입니다. 상태는 모든 리소스 및 속성을 나열하는 JSON 템플릿으로 설명됩니다. 그러나 대규모 JSON 템플릿은 수동으로 작성하기가 매우 어려울 수 있습니다. 학습 곡선이 높고 빠르게 크고 복잡하며 자세한 정보 표시가 반복됩니다. 개발자는 반복 또는 사용자 지정 함수와 같은 간단한 프로그래밍 언어 가능성을 놓치고 있습니다.</p>


  <p><strong><a href="https://www.pulumi.com" target="_blank">Pulumi</a></strong>는 범용 프로그래밍 언어를 사용하여 클라우드 인프라의 원하는 상태를 설명하여 이 문제를 해결합니다. JavaScript, TypeScript 또는 Python을 사용하면 함수 및 구성 요소와 같은 구문을 DevOps 도구 상자에 가져오면서 코드 양이 다단계로 줄어듭니다.</p>


  <h2>Pulumi를 사용하는 글로벌 애플리케이션</h2>


  <p>이 점을 설명하기 위해 Azure에서 분산 애플리케이션을 프로비전하는 TypeScript 프로그램을 개발했습니다.</p>


  <p>대상 시나리오에는 다음을 포함하여 여러 Azure 지역에 애플리케이션을 배포하는 데 상당한 리소스가 필요합니다.</p>


  <ul>
      <li>여러 지역에서 Azure Cosmos DB 계정 프로비전</li>
      <li>각 지역에 애플리케이션 계층의 복사본 배포</li>
      <li>Azure Cosmos DB 로컬 복제본에 각 애플리케이션 커넥트</li>
      <li>사용자 요청을 가장 가까운 애플리케이션 엔드포인트로 라우팅하는 Traffic Manager 추가</li>
  </ul>


  <p style="text-align: center;"><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/61097250-5398-468e-88c1-61f1971540c8.png"><img alt="A diagram showing the flow of global application with Azure and Pulumi." src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9c5d8a83-2540-41cd-8b1a-cbaf83e82b1f.png" title="Azure 및 Pulumi를 사용하는 글로벌 애플리케이션의 흐름을 보여 주는 다이어그램입니다."></a> <em> </em></p>


  <p style="text-align: center;"><em>Azure 및 Pulumi를 사용하여 글로벌 애플리케이션</em></p>


  <p align="left">&nbsp;</p>


  <p>그러나 수동으로 코딩하는 대신 <a href="https://www.pulumi.com/blog/how-to-build-globally-distributed-applications-with-azure-cosmos-db-and-pulumi/" target="_blank">Azure Cosmos DB 및 Pulumi를 사용하여 전역 분산 애플리케이션을 빌드하는 방법에 설명된 대로 Pulumi&#39;CosmosApp</a> 구성 요소를 사용할 수 있습니다. 구성 요소는 플러그형 컴퓨팅 계층 구현을 허용하면서 분산 Azure Cosmos DB 리소스와 프런트 엔드 라우팅 구성 요소를 만듭니다.</p>


  <p><a href="https://github.com/pulumi/examples/tree/master/azure-ts-cosmosapp-component" target="_blank">Azure Cosmos DB를 사용하여 전역적으로 분산된 애플리케이션을 만드는 재사용 가능한 구성 요소</a>의 샘플 코드를 찾을 수 있습니다.</p>


  <p>Pulumi CLI는 코드를 실행하고, 만들 리소스 트리로 변환하고, 모든 코드를 Azure에 배포합니다.</p>


  <p style="text-align: center;"><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b08daa9b-6e3d-49fd-b7ea-719e7ce6ac1e.png"><img alt="A screenshot showing Pulumi's CLI executing the code. " src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/31026554-3e30-4602-88db-5adec33e5233.png" title="코드를 실행하는 Pulumi의 CLI를 보여 주는 스크린샷. "></a></p>


  <p>명령이 성공하면 애플리케이션이 선택한 세 지역에서 실행되고 있습니다.</p>


  <h2>다음 단계</h2>


  <p>코드로서의 인프라는 글로벌 및 확장 가능한 클라우드 애플리케이션에서 최신 DevOps 사례를 가능하게 하는 데 중요한 역할을 합니다.</p>


  <p>Pulumi를 사용하면 범용 프로그래밍 언어를 사용하여 인프라를 정의할 수 있습니다. 소프트웨어 개발 환경에서 인프라 관리 도메인에 대한 최상의 도구와 사례를 제공합니다.</p>


  <p>서버리스 함수, 컨테이너 또는 가상 머신&nbsp;을 사용하여 CosmosApp(GitHub&mdash; <a href="https://github.com/pulumi/examples/tree/master/azure-ts-cosmosapp-component" target="_blank">TypeScript</a>, <a href="https://github.com/pulumi/examples/tree/master/azure-cs-cosmosapp-component" target="_blank">C#</a>에서 사용 가능)&nbsp;을 <a href="https://www.pulumi.com/docs/get-started/azure/" target="_blank">사용해</a>&nbsp; 보세요.</p>
