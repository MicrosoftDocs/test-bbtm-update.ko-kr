### YamlMime:Yaml
ms.openlocfilehash: ffea051ec2635a8010aa065a2d82460623b11c1b
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900582"
Slug: soap-to-rest
Title: SOAP를 REST로
Summary: '몇 달 전에 Azure API Management에 SOAP 통과 지원을 추가했습니다. 이 기능을 사용하고 피드백을 제공해 주신 모든 분들께 감사드립니다. 가장 큰 요청 중 하나는 "SOAP 백 엔드를 RESTful HTTP 프런트 엔드로 변환하려면 어떻게 해야 하나요?" 였습니다. '
Content: >-
  <p>몇 달 전에 Azure API Management에 SOAP 통과 지원을 추가했습니다. 이 기능을 사용하고 피드백을 제공해 주신 모든 분들께 감사드립니다. 가장 큰 요청 중 하나는 SOAP 백 엔드를 &quot;RESTful HTTP 프런트 엔드로 변환하려면 어떻게 해야 하나요?&quot; 이 블로그 게시물에서는 이 새로운 기능을 사용하는 방법을 안내합니다.</p>


  <p>&#39;시작해 보세요! 가져올 WSDL 파일이 필요합니다. SOAP에서 REST로의 변환은 정책을 사용하여 수동으로 수행할 수 있지만 가장 쉬운 방법은 WSDL 가져오기 기능을 사용한 다음 필요에 따라 사용자 지정하는 것입니다. 사용하려는 SOAP 서비스의 WSDL URL을 검색하거나 예제 <a href="https://fazioapisoap.azurewebsites.net/FazioService.svc?singleWsdl">Orders SOAP 서비스를</a> 사용합니다. WSDL을 지원하는 방법에 대해 알려야 할 몇 가지 사항은 다음과 같습니다.</p>


  <ul>
   <li>WS-I 기본 프로필 1.1, SOAP 1.1, WSDL1.1 및 SOAP 1.2를 사용하여 정의된 SOAP 서비스를 지원합니다.</li>
   <li>현재 wsdl:import 요소 또는 여러 부분이 있는 메시지를 포함하는 WSDL은 지원되지 않습니다.</li>
  </ul>


  <p>게시자 포털에서 API 메뉴로 이동하고 API&quot; 가져오기를 선택합니다&quot;. 표시되는 화면에서 이제 WADL, Swagger 또는 WSDL 중에서 가져오기 형식으로 선택할 수 있습니다.</p>


  <p>WSDL을 선택한 다음 링크를 붙여넣거나 WSDL 파일로 이동합니다. 그런 다음, 어떤 유형의 WSDL 가져오기를 수행 중인지 선택해야 합니다. SOAP에서 REST로 선택 &quot;- API에 URL 접미사(예: &quot;주문&quot;)를 제공하고 원하는 경우 제품에 추가해야 합니다(개발자 포털에서 테스트할 수 있도록 제품에 예제를 추가할 예정입니다&quot;). &#39;저장&#39; 선택합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e9268fc3-4dad-45d9-a911-b2c4255777cc.png"><img alt="clip_image002" border="0" height="379" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b230c1f4-f9a5-469a-9ff6-a223db2c3cc5.png" style="display: inline; background-image: none;" title="clip_image002" width="1251"></a></p>


  <p>데모에 표시되고 여기에 표시되는 다음 화면은 WSDL 파일에 여러 서비스 엔드포인트(&quot;포트 형식&quot; 또는 &quot;인터페이스&quot;)가 정의되어 있을 때 발생하는 화면입니다. SOAP API를 다른 API와 비슷한 방식으로 처리하려면 해당 API 내에 정의된 인터페이스 중 하나만 가져와야 합니다(다른 인터페이스는 별도의 API로 가져올 수 있습니다). 계속하려면 FazioService::basic을 선택합니다.</p>


  <p>이제 API Management에서 SOAP to REST API를 만듭니다. 여기서 SOAP 통과 API와의 차이가 발생합니다. API 메뉴를 찾아보고 작업의 정의를 살펴보면 일반적인 REST 정의가 표시되지만, URL 템플릿 다시 쓰기 필드가 백 엔드 SOAP 서비스를 가리킨다는 점은 다릅니다.</p>


  <p>그래서 우리는 이것을 달성하기 위해 무엇을하고 있습니까? 가져오기 프로세스의 일부로 Azure API Management는 인바운드에서 JSON에서 SOAP 봉투로 변환하는 특수 정책을 생성하며, 그 반대의 경우도 아웃바운드 흐름에서 생성됩니다. Liquid 템플릿을 사용할 수 있는 집합 본문 정책의 업데이트된 버전을 사용하고 있습니다. &#39;자세히 살펴보겠습니다.</p>


  <h2>템플릿</h2>


  <p>이제 설정 본문 정책에서 <a href="https://shopify.github.io/liquid/basics/introduction/">Liquid 템플릿</a> 을 사용할 수 있습니다. 이 템플릿을 사용하여 요청 또는 응답 본문을 어떤 방식으로든 변환할 수 있습니다. 여기서는 SAOP에서 REST로 특별히 사용하고 있지만 정책은 이에 국한되지 않습니다. Liquid에 대한 자세한 내용은 <a href="https://shopify.github.io/liquid/basics/introduction/">Liquid 소개</a>를 참조하세요. GetOrders의 정책은 Liquid 템플릿의 작동 방식에 대한 간단한 예제를 보여 줍니다({{body.getOrder.orderId}}를 사용하여 JSON 본문의 값을 템플릿에 삽입합니다.).</p>


  <pre>

  &lt;set-body template=&quot;liquid&quot;&gt;


  &lt;soap:Envelope xmlns:soap=&quot;https://schemas.xmlsoap.org/soap/envelope/&quot; xmlns=&quot;https://tempuri.org/&quot;&gt;


  &lt;soap:Body&gt;


  &lt;GetOrder&gt;


  &lt;orderId&gt;{{body.getOrder.orderId}}&lt;/orderId&gt;


  &lt;/GetOrder&gt;


  &lt;/soap:Body&gt;


  &lt;/soap:Envelope&gt;


  &lt;/set-body&gt;</pre>


  <p>생성된 정책을 살펴보면 생성된 아웃바운드 정책이 인바운드와 매우 다르다는 것을 알 수 있습니다. SOAP를 JSON으로 다시 변환하기 때문입니다. 또한 SOAP API에서 반환되는 응답을 확인하고 있습니다. 400보다 큰 HTTP 상태 코드를 받으면 SOAP 오류를 살펴보고 오류 메시지를 전달합니다.</p>


  <p>SOAP to REST용 템플릿을 사용하는 가장 좋은 점은 초기 가져오기 및 설정을 완료한 후에는 자유롭게 변경 내용을 수정하고 필요에 맞게 조정할 수 있다는 것입니다.</p>


  <p>개발자 포털에서 Orders API를 클릭하면 생성된 작업 및 설명서를 볼 수 있습니다. 개발자 콘솔을 사용하여 SOAP API에서 돌아오는 RESTful 페이로드를 확인합니다. &quot;GetOpenOrders&quot;를 클릭하고 사용해 보기&quot; 단추를 누르면 &quot;예제 요청이 표시됩니다. GetOpenOrders의 경우 고객 번호( &quot;커스트&quot; 값) &quot;를 1001&quot; 로 변경하여 예제 응답을 검색합니다. 관리자 권한으로 로그온한 경우 추적&quot; 탭을 살펴보세요&quot;. 템플릿 실행이 얼마나 빨리 발생했는지 확인할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ed8511a4-c355-403a-8f0f-ef0023933db7.png"><img alt="clip_image004" border="0" height="292" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/01a60292-a78f-4d33-9d5e-326424db298d.png" style="display: inline; background-image: none;" title="clip_image004" width="1251"></a></p>


  <h2>API</h2>


  <p>원하는 경우 자체 관리 API를 사용하여 SOAP to REST 가져오기를 수행할 수도 있습니다.</p>


  <p>https://.management.current.azure-api.net/apis/soapapi?import=true&amp;p ath=soapapiapiType&amp;=Httpapi-version&amp;=2014-02-14-preview</p>


  <p>apiType은 SOAP to REST의 &quot;경우 Http&quot; , &quot;SOAP 통과의 경우 Soap&quot; 로 설정해야 합니다.</p>
