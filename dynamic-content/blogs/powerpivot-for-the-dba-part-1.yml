### YamlMime:Yaml
ms.openlocfilehash: cf833fe65e242d6798a061e04ee9a7841288e17b
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908766"
Slug: powerpivot-for-the-dba-part-1
Title: 'DBA에 대한 PowerPivot: 1부'
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] 이 문서에서는 비즈니스 인텔리전스 및 PowerPivot Transact-SQL 간단한 용어와 방법론을 연결합니다.'
Content: '<p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>이 문서에서는 비즈니스 인텔리전스의 몇 가지 간단한 용어와 방법론을 연결하고 Transact-SQL PowerPivot DBA를 위해 지구로 끌어올릴 것입니다. PowerPivot 사용하여 멋진 보고서를 작성하기 위해 Transact-SQL 알 필요는 없습니다. 그러나 이미 이러한 문서를 수행하면 학습 격차를 해소하려고 시도합니다.</p>  <h2>기록</h2>  <p>저는 기업에서 비즈니스 인텔리전스(BI)라는 용어를 한동안 듣고 있는데, 대부분 회사가 비즈니스 인텔리전스를 "수행"하기를 원하는 임원들로부터 였습니다. 나는 또한 복잡한 수학과 용어의 완전히 새로운 세트를 포함 가정 비즈니스 인텔리전스에 대한 학습을 피하고있다 - 내가 더 많은 시간을 가질 때까지 큰 학습 곡선으로 보였다 무엇을 연기. 이미 알고 있는 것을 토대로 새로운 기술을 배우는 것을 선호합니다. 저는 Transact-SQL 포함하여 비즈니스 인텔리전스를 다른 SQL Server 기술과 연결하고 싶었습니다. 마침내 비즈니스 인텔리전스의 기본 사항을 배우는 데 시간을 할애했고 Transact-SQL 기술과 긴밀한 관계를 맺고 있다는 것을 깨달았습니다.</p>  <h2>PowerPivot</h2>  <p>PowerPivot Excel 2010 확장은 비즈니스 인텔리전스를 시작하는 좋은 방법입니다. 관계를 실험하고 빌드를 보고할 수 있습니다. 이를 통해 ERD 또는 서버 설정 등을 커밋하기 전에 보고서를 빠르고 쉽게 프로토타입화하고 데이터 문제를 조사할 수 있습니다.</p>  <p>SQL Azure 및 Adventure Works 데이터베이스에 대한 간단한 예제를 살펴보겠습니다. 그런 다음, 다음 테이블을 가져옵니다.</p>  <ul>   <li>Sales.SalesOrderHeader </li>    <li>Sales.SalesOrderDetail </li>    <li>Production.Product </li>    <li>Production.ProductSubcategory </li>    <li>Production.ProductCategory </li> </ul>  <p>이 블로그 게시물에서 PowerPivot 사용하여 SQL Azure 연결하고 테이블을 가져오는 방법을 설명했습니다. 다음 단계는 피벗 테이블을 만드는 것입니다. 이렇게 하려면 Excel PowerPivot 리본 표시줄로 이동하여 피벗 테이블을 선택합니다.</p>  <p><a href=""><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="이미지" border="0" alt="image" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1234.image_5F00_thumb_5F00_68E7E90E.png" width="642" height="294"></a> </p>  <p>피벗 테이블이 나타나고 도킹된 <b>PowerPivot 필드 목록</b> 창이 필드 목록의 값 섹션에 있는 <b>SalesOrderDetail</b> 테이블의 <b>LineTotal</b> 열을 추가하면 아래와 같은 관심이 없는 피벗 테이블을 제공합니다.</p>  <p><a href=""><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="이미지" border="0" alt="image" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5875.image_5F00_thumb_5F00_70CF65A3.png" width="565" height="710"></a> </p>  <p>Transact-SQL 이 SELECT 문을 실행하는 것과 같습니다.</p>  <pre class="csharpcode"><span class="kwrd">SELECT</span>    <span class="kwrd">SUM</span>(LineTotal)  <span class="kwrd">FROM</span>    Sales.SalesOrderDetail</pre>      <p>    <p>이제 "Hello World" 예제를 사용했으므로 PowerPivot 행 레이블에 <b>ProductCategory.Name</b> 열을 추가하는 것은 GROUP BY 절을 사용하여 Transact-SQL SELECT 문을 만드는 것과 같습니다.</p>    <p><a href=""><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="이미지" border="0" alt="image" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3771.image_5F00_thumb_5F00_54424DF6.png" width="645" height="710"></a> </p>    <p>이 문 Transact-SQL 문을 실행하여 위의 PowerPivot 샘플에서 동일한 출력(총합계 제외)을 얻게 됩니다.</p>    <pre class="csharpcode"><span class="kwrd">SELECT</span>    ProductCategory.Name, <span class="kwrd">SUM</span>(LineTotal)  <span class="kwrd">FROM</span>    Sales.SalesOrderDetail      <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Production.Product <span class="kwrd">ON</span>           Product.ProductID = SalesOrderDetail.ProductID      <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Production.ProductSubcategory <span class="kwrd">ON</span>           Product.ProductSubcategoryID =     ProductSubcategory.ProductSubcategoryID      <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Production.ProductCategory <span class="kwrd">ON</span>           ProductSubcategory.ProductCategoryID =     ProductCategory.ProductCategoryID  <span class="kwrd">GROUP</span> <span class="kwrd">BY</span> ProductCategory.Name</pre>      <p>Adventure works 데이터베이스를 계속 사용하고 <b>ProductCategory.Name</b> 열을 열 레이블로 이동하고 <b>Sales.SalesOrderHeader.OrderDate</b>를 행 레이블 PowerPivot 추가하는 경우 다음과 같습니다.</p>    <p><a href=""><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="이미지" border="0" alt="image" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7418.image_5F00_thumb_5F00_4F1FC4AD.png" width="776" height="577"></a> </p>    <p><b>OrderDate</b><b></b>와 ProductCategory.Name 모두 포함된 GROUP BY 문이 포함된 이 Transact-SQL 문과 동일한 데이터입니다.<b></b></p>    <pre class="csharpcode"><span class="kwrd">SELECT</span>    ProductCategory.Name, SalesOrderHeader.OrderDate,    <span class="kwrd">SUM</span>(LineTotal)  <span class="kwrd">FROM</span>    Sales.SalesOrderHeader      <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Sales.SalesOrderDetail <span class="kwrd">ON</span>           SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID      <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Production.Product <span class="kwrd">ON</span>           Product.ProductID = SalesOrderDetail.ProductID      <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Production.ProductSubcategory <span class="kwrd">ON</span>           Product.ProductSubcategoryID =     ProductSubcategory.ProductSubcategoryID      <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Production.ProductCategory <span class="kwrd">ON</span>           ProductSubcategory.ProductCategoryID =     ProductCategory.ProductCategoryID  <span class="kwrd">GROUP</span> <span class="kwrd">BY</span> ProductCategory.Name, SalesOrderHeader.OrderDate  <span class="kwrd">ORDER</span> <span class="kwrd">BY</span> SalesOrderHeader.OrderDate</pre>      <p>그러나 여기에서는 행 레이블과 열 레이블을 모두 사용하여 PowerPivot 빛을 발하기 시작하고, 범주 이름을 열로 피벗하고, 날짜별로 자동으로 정렬하고, 행과 열에 대한 총합계를 제공하는 PowerPivot 있습니다. Transact-SQL 사용하는 DBA는 SQL Server 2008의 PIVOT 명령을 사용하여 테이블을 피벗할 수 있습니다. 여기서 Transact-SQL 위의 샘플에 대해 다음과 같이 표시됩니다.</p>    <pre class="csharpcode"><span class="kwrd">SELECT</span> OrderDate, [1] <span class="kwrd">AS</span> Bikes, [2] <span class="kwrd">AS</span> Components, [3] <span class="kwrd">AS</span> Clothing,   [4] <span class="kwrd">AS</span> Accessories  <span class="kwrd">FROM</span>   (<span class="kwrd">SELECT</span>    Sales.SalesOrderDetail.LineTotal,    ProductCategory.ProductCategoryID,    SalesOrderHeader.OrderDate      <span class="kwrd">FROM</span>    Sales.SalesOrderHeader          <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Sales.SalesOrderDetail <span class="kwrd">ON</span>               SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID          <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Production.Product <span class="kwrd">ON</span>               Product.ProductID = SalesOrderDetail.ProductID          <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Production.ProductSubcategory <span class="kwrd">ON</span>               Product.ProductSubcategoryID =     ProductSubcategory.ProductSubcategoryID          <span class="kwrd">INNER</span> <span class="kwrd">JOIN</span> Production.ProductCategory <span class="kwrd">ON</span>               ProductSubcategory.ProductCategoryID =     ProductCategory.ProductCategoryID  ) p  PIVOT  (      <span class="kwrd">SUM</span>(LineTotal)      <span class="kwrd">FOR</span> ProductCategoryID <span class="kwrd">IN</span> ( [1], [2], [3], [4] )  ) <span class="kwrd">AS</span> pvt  <span class="kwrd">ORDER</span> <span class="kwrd">BY</span> pvt.OrderDate;</pre>      <h2>요약</h2>    <p>이 블로그 게시물을 읽은 후 비즈니스 인텔리전스를 Mangers에 대한 GROUP BY로 요약하려고 할 수 있습니다. 범퍼 스티커에 대한 좋은 슬로건이 될 것입니다.</p>    <p><a href=""><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="이미지" border="0" alt="image" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8883.image_5F00_thumb_5F00_7571822B.png" width="460" height="109"></a> </p>    <p>그러나,이 게시물은 표면을 긁는, 내 다음 블로그 게시물에서 나는 측정이 비즈니스 인텔리전스에 무엇인지 논의하고 일치하는 Transact-SQL 작성을 계속합니다. 질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>'
