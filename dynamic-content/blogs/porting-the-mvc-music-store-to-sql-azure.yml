### YamlMime:Yaml
ms.openlocfilehash: c5ae387e459a70b6c59941f1db0cf25678d5f495
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139911623"
Slug: porting-the-mvc-music-store-to-sql-azure
Title: MVC 음악 스토어를 SQL Azure 포팅
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] MVC 음악 스토어는 ASP.NET MVC 2를 기반으로 하는 뛰어난 자습서 애플리케이션입니다. 온라인으로 앨범을 판매하는 간단한 샘플 스토어입니다,...'
Content: '<p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>MVC 음악 스토어는 ASP.NET MVC 2를 기반으로 하는 뛰어난 자습서 애플리케이션입니다. 온라인으로 앨범을 판매하는 간단한 샘플 저장소로, Entity Framework 4를 통해 MVC 2의 생산성 기능과 데이터 액세스를 ASP.NET 보여 줍니다. <a href="https://mvcmusicstore.codeplex.com/">CodePlex</a>에서 찾을 수 있습니다. 연습으로 SQL Server SQL Azure 포팅하여 기존 애플리케이션을 SQL Azure 및 Windows Azure에서 실행하는 것이 얼마나 쉬운지 보여 드립니다.</p>  <p>데이터베이스를 이동하는 프로세스는 매우 간단합니다. 데이터베이스, 스키마 및 데이터를 만든 다음 SQL Azure 가리키도록 연결 문자열을 수정해야 합니다. 애플리케이션을 Windows Azure로 이동하려면 Windows Azure Cloud 프로젝트를 만들고 MVC 음악 Store 프로젝트를 연결해야 합니다. MVC 음악 스토어 프로젝트에 대한 몇 가지 조정이 실행되고 있습니다.</p>  <h2>SQL Azure 스키마 및 데이터 가져오기</h2>  <p>CodePlex에서 다운로드할 수 있는 MVC 음악 스토어는 SQL Server 실행되며, 다운로드에는 SQL Server .mdf 및 .ldf 파일이 포함되어 온-프레미스 SQL Server 데이터베이스에 연결하여 음악 Store 데이터베이스를 빠르게 만듭니다. 그러나 CodePlex 프로젝트에는 데이터베이스 스키마 및 데이터를 만들기 위한 <a href="https://mvcmusicstore.codeplex.com/SourceControl/changeset/changes/9299484ae233">Transact-SQL 만들기 스크립트</a>가 포함되어 있으며, 하나는 SQL Azure, 다른 하나는 SQL Server. SQL Azure 데이터베이스, 스키마 및 데이터를 만드는 단계는 다음과 같습니다.</p>  <ol>   <li>여기에서 연결된 .zip 파일을 사용하여 CodePlex에서 MVC 음악 Store를 다운로드<a href="https://mvcmusicstore.codeplex.com/">합니다</a>. Transact-SQL 파일은 <a href="https://download.codeplex.com/Project/Download/FileDownload.aspx?ProjectName=mvcmusicstore&amp;DownloadId=155653">여기에서</a> 찾아 다운로드하여 하드 드라이브에 복사할 수 있습니다. </li>    <li>SQL Azure Portal에 로그인합니다. </li>    <li>SQL Azure 프로젝트를 만들거나 기존 프로젝트를 사용하여 MvcMusicStore라는 데이터베이스를 만듭니다. </li>    <li>SQL Server Management Studio 사용하여 SQLAzure-MvcMusicStore-Create.sql을 열고 연결 정보에 대해 새로 만든 데이터베이스를 선택합니다. 이전에 이 작업을 수행한 적이 없다면 이 작업을 수행하는 방법에 대한 블로그 게시물이 있습니다. SQL Azure SQL Server Management Studio. 서버 이름 및 관리 로그인 및 암호는 SQL Azure 포털에서 찾을 수 있습니다. </li>    <li>SQL Azure 새 데이터베이스에 대해 SQL Server Management Studio 내에서 스크립트를 실행합니다. 그러면 스키마와 필요한 모든 데이터가 생성됩니다. </li> </ol>  <h2>클라우드 Project 만들기</h2>  <p>다음 단계는 인터넷 정보 서버에서 로컬로 실행되고 Windows Azure에 사용하도록 설계된 MVC 음악 Store 프로젝트를 수행하는 것입니다. 여기서는 일반 프로젝트를 사용하여 이 작업을 수행하는 방법에 대한 자세한 설명이 <a href="https://blogs.msdn.com/b/jnak/archive/2010/02/08/migrating-an-existing-asp-net-app-to-run-on-windows-azure.aspx">있습니다</a>. 그러나 MVC 음악 Store에 대한 단계를 살펴보겠습니다.</p>  <ol>   <li>가장 먼저 수행하려는 작업은 Visual Studio 2010을 사용하여 Windows Azure Cloud Server 프로젝트를 만드는 것입니다. 기존 MVC 프로젝트를 클라우드 프로젝트에 추가한 다음 MVC 프로젝트에 클라우드 측면을 추가하는 것이 훨씬 쉽습니다.      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image002" border="0" alt="clip_image002" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2210.clip_5F00_image002_5F00_thumb.jpg" width="628" height="355"></a></p>      <p>클라우드 서비스 <b>MVCMusicStoreCloudService</b>의 이름을 지정합니다.</p>   </li>    <li>다음 단계에서는 클라우드 서비스에 역할을 추가하지 않습니다. 나중에 MVC 음악 스토어를 웹 역할로 추가할 예정입니다.      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image003" border="0" alt="clip_image003" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8463.clip_5F00_image003_5F00_thumb.png" width="643" height="404"></a></p>   </li>    <li>마법사를 완료했으므로 솔루션 탐색기는 다음과 같습니다.      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image004" border="0" alt="clip_image004" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7802.clip_5F00_image004_5F00_thumb.png" width="278" height="211"></a> </p>   </li>    <li>일찍 다운로드한 .zip 파일로 돌아가서 MvcMusicStore 프로젝트를 다음과 같이 MVCMusicStoreCloudServer의 형제로 방금 만든 디렉터리 구조로 복사합니다.      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image006" border="0" alt="clip_image006" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5342.clip_5F00_image006_5F00_thumb.jpg" width="867" height="290"></a></p>   </li>    <li>Visual Studio 2010으로 돌아가서 솔루션 탐색기에서 솔루션을 마우스 오른쪽 단추로 클릭하고 MvcMusicStore 프로젝트를 솔루션에 추가합니다. </li>    <li>MvcMusicStore 프로젝트를 웹 역할로 추가하려면 MVCMusicStoreCloudService 프로젝트의 역할을 마우스 오른쪽 단추로 클릭하고 <b>솔루션에서 웹 역할 Project</b> <b>추가</b>를 선택합니다.       <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image007" border="0" alt="clip_image007" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3771.clip_5F00_image007_5F00_thumb.png" width="465" height="166"></a></p>   </li>    <li>MvcMusicStore를 선택하고 추가 키를 누르면 솔루션 탐색기가 다음과 같이 표시됩니다.      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image008" border="0" alt="clip_image008" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/5430.clip_5F00_image008_5F00_thumb.png" width="280" height="414"></a></p>   </li>    <li>이제 MvcMusicStore가 프로젝트로 추가되었으므로 마우스 오른쪽 단추로 클릭하고 <b>Project 언로드</b>를 선택해야 합니다. 이렇게 하면 .csproj 파일을 수정할 수 있습니다. </li>    <li>언로드된 MvcMusicStore를 마우스 오른쪽 단추로 클릭하고 MvcMusicStore.csproj 편집을 선택합니다.      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image009" border="0" alt="clip_image009" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8562.clip_5F00_image009_5F00_thumb.png" width="402" height="238"></a></p>   </li>    <li>.csproj 파일을 수정하여 웹 역할 형식을 추가합니다.      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image010" border="0" alt="clip_image010" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6825.clip_5F00_image010_5F00_thumb.png" width="812" height="291"></a></p>   </li>    <li><b>MvcMusicStore.csproj</b>를 저장하고 프로젝트 파일을 솔루션에 다시 로드합니다. </li>    <li>다음으로 MvcMusicStore 프로젝트의 System.Web.Mvc 어셈블리를 로컬 복사본 true로 표시합니다. 어셈블리를 마우스 오른쪽 단추로 클릭하고 속성을 선택하고 로컬 복사 설정을 변경하여 이 작업을 수행할 수 있습니다.      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image011" border="0" alt="clip_image011" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4762.clip_5F00_image011_5F00_thumb.png" width="309" height="170"></a></p>   </li>    <li>마지막으로 MVCMusicStore 프로젝트에서 Microsoft.WindowAzure.ServiceRuntime 어셈블리에 대한 참조를 추가해야 합니다.      <p><a href=""><img style="background-image: none; border-right-width: 0px; margin: ; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image012" border="0" alt="clip_image012" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4452.clip_5F00_image012_5F00_thumb.png" width="486" height="412"></a></p>   </li> </ol>  <h2>연결 문자열 변경</h2>  <p>SQL Azure 액세스하려면 MvcMusicStore 프로젝트의 web.config 연결 문자열을 변경해야 합니다. 다운로드되는 web.config App_Data 로컬 데이터베이스를 가리킵니다. 연결 문자열을 변경하는 가장 쉬운 방법은 SQL Azure Portal로 돌아가서 포털에서 연결 문자열을 복사하는 것입니다. </p>  <p>내 모습은 다음과 같습니다.</p>  <p><i>Server=tcp:XXXXXXXX.database.windows.net;Database=MvcMusicStore; 사용자 ID=XXXXXX@XXXXXX; Password=myPassword; Trusted_Connection=False; Encrypt=True;</i></p>  <p>다운로드한 연결 문자열은 다음과 같이 표시됩니다.</p>  <p><i>metadata=res://*/Models.StoreDB.csdl|res://*/Models.StoreDB.ssdl|res://*/Models.StoreDB.msl;provider=System.Data.SqlClient;provider connection string=&amp;quot;Data Source=.\SQLEXPRESS; AttachDbFilename=| DataDirectory|\MvcMusicStore.mdf;Integrated Security=True; User Instance=True; MultipleActiveResultSets=Truequot&amp;;</i></p>  <p>Express가 아닌 SQL Azure 가리키도록 연결 문자열을 변경해야 SQL. 텍스트를 굵게 표시합니다.</p>  <p><i>metadata=res://*/Models.StoreDB.csdl|res://*/Models.StoreDB.ssdl|res://*/Models.StoreDB.msl;provider=System.Data.SqlClient;provider connection string=&amp;quot;<b> Server=tcp:XXXXXXXX.database.windows.net;Database=MvcMusicStore; 사용자 ID=XXXXXX@XXXXXX; Password=myPassword; Trusted_Connection=False; Encrypt=True;</b>&amp; 따옴표;</i></p>  <p>저장하면 SQL Azure 연결하는 데 필요한 모든 변경 내용이 완료됩니다. 이제 완료되었으므로 삭제하여 App_Data 디렉터리에서 MvcMusicStore.mdf를 제거할 수 있습니다. 이렇게 하면 패키지가 패키지되고 Windows Azure에 배포되지 않습니다. 파일이 적을수록 Azure를 Windows 업로드 시간이 빨라집니다.</p>  <h2>몇 가지 추가 조정</h2>  <p>MVC 음악 Store에서 사용되는 기본 멤버 자격 및 역할 공급자는 Windows Azure Platform에서 완전히 사용할 수 없습니다. 블로그 게시물을 간단히 하기 위해 MVC 음악 스토어에서 이 기능을 제거하겠습니다. 그러나 유지하려는 경우 Cloud Storage.&#160; 사용하는 SDK 샘플에 포함된 구현을 사용할 수 있습니다. 설정 방법에 대한 자세한 내용은 <a href="https://blogs.msdn.com/jnak/archive/2008/11/10/asp-net-mvc-on-windows-azure-with-providers.aspx"><b>이 게시물을</b></a> 참조하세요.</p>  <p>제거하려면 web.config 다음 줄을 제거합니다.</p>  <pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">name</span><span class="kwrd">=&quot;ApplicationServices&quot;</span> <span class="attr">connectionString</span><span class="kwrd">=&quot;data source=.\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|aspnetdb.mdf;User Instance=true&quot;</span> <span class="attr">providerName</span><span class="kwrd">=&quot;System.Data.SqlClient&quot;</span> <span class="kwrd">/&gt;</span></pre>      <p>그리고 다음 줄은 다음과 같습니다.</p>    <pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">authentication</span> <span class="attr">mode</span><span class="kwrd">=&quot;Forms&quot;</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;</span><span class="html">forms</span> <span class="attr">loginUrl</span><span class="kwrd">=&quot;~/Account/LogOn&quot;</span> <span class="attr">timeout</span><span class="kwrd">=&quot;2880&quot;</span> <span class="kwrd">/&gt;</span>  <span class="kwrd">&lt;/</span><span class="html">authentication</span><span class="kwrd">&gt;</span>  <span class="kwrd">&lt;</span><span class="html">membership</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;</span><span class="html">providers</span><span class="kwrd">&gt;</span>      <span class="kwrd">&lt;</span><span class="html">clear</span> <span class="kwrd">/&gt;</span>      <span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">name</span><span class="kwrd">=&quot;AspNetSqlMembershipProvider&quot;</span> <span class="attr">type</span><span class="kwrd">=&quot;System.Web.Security.SqlMembershipProvider&quot;</span> <span class="attr">connectionStringName</span><span class="kwrd">=&quot;ApplicationServices&quot;</span> <span class="attr">enablePasswordRetrieval</span><span class="kwrd">=&quot;false&quot;</span> <span class="attr">enablePasswordReset</span><span class="kwrd">=&quot;true&quot;</span> <span class="attr">requiresQuestionAndAnswer</span><span class="kwrd">=&quot;false&quot;</span> <span class="attr">requiresUniqueEmail</span><span class="kwrd">=&quot;false&quot;</span> <span class="attr">maxInvalidPasswordAttempts</span><span class="kwrd">=&quot;5&quot;</span> <span class="attr">minRequiredPasswordLength</span><span class="kwrd">=&quot;6&quot;</span> <span class="attr">minRequiredNonalphanumericCharacters</span><span class="kwrd">=&quot;0&quot;</span> <span class="attr">passwordAttemptWindow</span><span class="kwrd">=&quot;10&quot;</span> <span class="attr">applicationName</span><span class="kwrd">=&quot;/&quot;</span> <span class="kwrd">/&gt;</span>    <span class="kwrd">&lt;/</span><span class="html">providers</span><span class="kwrd">&gt;</span>  <span class="kwrd">&lt;/</span><span class="html">membership</span><span class="kwrd">&gt;</span>  <span class="kwrd">&lt;</span><span class="html">profile</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;</span><span class="html">providers</span><span class="kwrd">&gt;</span>      <span class="kwrd">&lt;</span><span class="html">clear</span> <span class="kwrd">/&gt;</span>      <span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">name</span><span class="kwrd">=&quot;AspNetSqlProfileProvider&quot;</span> <span class="attr">type</span><span class="kwrd">=&quot;System.Web.Profile.SqlProfileProvider&quot;</span> <span class="attr">connectionStringName</span><span class="kwrd">=&quot;ApplicationServices&quot;</span> <span class="attr">applicationName</span><span class="kwrd">=&quot;/&quot;</span> <span class="kwrd">/&gt;</span>    <span class="kwrd">&lt;/</span><span class="html">providers</span><span class="kwrd">&gt;</span>  <span class="kwrd">&lt;/</span><span class="html">profile</span><span class="kwrd">&gt;</span>  <span class="kwrd">&lt;</span><span class="html">roleManager</span> <span class="attr">enabled</span><span class="kwrd">=&quot;true&quot;</span><span class="kwrd">&gt;</span>    <span class="kwrd">&lt;</span><span class="html">providers</span><span class="kwrd">&gt;</span>      <span class="kwrd">&lt;</span><span class="html">clear</span> <span class="kwrd">/&gt;</span>      <span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">connectionStringName</span><span class="kwrd">=&quot;ApplicationServices&quot;</span> <span class="attr">applicationName</span><span class="kwrd">=&quot;/&quot;</span>        <span class="attr">name</span><span class="kwrd">=&quot;AspNetSqlRoleProvider&quot;</span> <span class="attr">type</span><span class="kwrd">=&quot;System.Web.Security.SqlRoleProvider&quot;</span> <span class="kwrd">/&gt;</span>      <span class="kwrd">&lt;</span><span class="html">add</span> <span class="attr">applicationName</span><span class="kwrd">=&quot;/&quot;</span> <span class="attr">name</span><span class="kwrd">=&quot;AspNetWindowsTokenRoleProvider&quot;</span>        <span class="attr">type</span><span class="kwrd">=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;</span> <span class="kwrd">/&gt;</span>    <span class="kwrd">&lt;/</span><span class="html">providers</span><span class="kwrd">&gt;</span>  <span class="kwrd">&lt;/</span><span class="html">roleManager</span><span class="kwrd">&gt;</span></pre>      <p>멤버 자격 및 역할을 구현하지 않으므로 프로젝트 파일에서 AccountController 및 계정 뷰도 제거해야 합니다. 마지막으로 Site.Master의 관리자 링크를 제거해야 합니다. 다음과 같습니다.</p>    <pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">li</span><span class="kwrd">&gt;&lt;</span><span class="html">a</span> <span class="attr">href</span><span class="kwrd">=&quot;/StoreManager/&quot;</span><span class="kwrd">&gt;</span>Admin<span class="kwrd">&lt;/</span><span class="html">a</span><span class="kwrd">&gt;&lt;/</span><span class="html">li</span><span class="kwrd">&gt;</span></pre>      <p>ASPNETDB를 제거할 수도 있습니다. MDF 데이터베이스를 삭제하고 프로젝트 파일을 다시 축소하여 App_Data.</p>    <h2>배포 준비 완료</h2>    <p>이는 MVC 음악 Store를 배포하여 Azure 및 SQL Azure Windows 모든 변경 내용입니다. Windows Azure DevFabric에서 테스트한 다음 Windows Azure에 배포합니다.</p>    <h2>요약</h2>    <p>질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>'
