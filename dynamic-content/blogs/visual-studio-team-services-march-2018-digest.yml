### YamlMime:Yaml
ms.openlocfilehash: 62f82b62c8e82d99a81c98aad1d39cc79efedac9
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908701"
Slug: visual-studio-team-services-march-2018-digest
Title: 'Visual Studio Team Services 양조하는 내용: 2018년 3월 다이제스트'
Summary: >
  이 게시물 시리즈는 Visual Studio Team Services 대한 최신 업데이트 및 뉴스를 제공하며 Azure 사용자가 3주마다 릴리스되는 새로운 기능을 최신 상태로 유지하는 좋은 방법입니다. Visual Studio Team Services 효율적인 연속 통합을 만들고 Azure에 파이프라인을 릴리스하는 최상의 DevOps 도구를 제공합니다.
Content: >-
  <p>이 게시물 시리즈는 <a href="https://visualstudio.com/team-services/?utm_source=AzureCOM&amp;utm_medium=Blog&amp;utm_campaign=Oct2016Digest">Visual Studio Team Services</a> 대한 최신 업데이트 및 뉴스를 제공하며 Azure 사용자가 3주마다 릴리스되는 새로운 기능을 최신 상태로 유지하는 좋은 방법입니다. Visual Studio Team Services 효율적인 연속 통합을 만들고 Azure에 파이프라인을 릴리스하는 최상의 DevOps 도구를 제공합니다. Team Services의 기능 목록이 빠르게 확장되면 팀은 Azure 워크플로의 모든 영역, 모든 언어로 작성되고 모든 OS에 배포된 앱에 보다 효율적으로 활용할 수 있습니다.</p>


  <h2>Azure Red Shirt 개발자 투어: VSTS 계정</h2>


  <p>Scott Guthrie는 <a href="https://azure.microsoft.com/en-us/community/events/azure-red-shirt/">Azure 레드 셔츠 개발자 투어</a>라는 투어를&rsquo; 통해 전 세계를 여행하고 있습니다. 그 일환으로, 그는 우리 팀이 VSTS를 빌드하는 데 사용하는 계정을 보여줍니다. 바로&rsquo; VSTS를 &ndash; 사용하여 VSTS를 계획, 빌드, 테스트 및 릴리스합니다. 계정(mseng.visualstudio.com) &ndash; 을 사용하여 <a href="https://youtu.be/ZnOS8nII1Gc?t=1h2m59s">VSTS 데모의 Scotts&rsquo; 데모에서 VSTS</a>가 뉴욕시 정류장에서 무대에서 진행 &ndash; 중인 작업을 보여주는 VSTS가 어떤 모습인지 확인합니다. 팀의 작동 방식을 자세히 알아보려면 <a href="https://www.visualstudio.com/learn/devops-at-microsoft/">Microsoft에서 DevOps</a> 확인하세요.</p>


  <p><a href="https://youtu.be/ZnOS8nII1Gc?t=1h2m59s"><img alt="VSTS account demo" border="0" height="483" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6cf12d3b-d8f1-4f6a-af56-d9701d7089b8.png" style="border: 0px currentColor; border-image: none; display: inline; background-image: none;" title="Azure Red Shirt 개발자 투어 비디오" width="855"></a></p>


  <h2>로드맵 업데이트</h2>


  <p>VSTS에 대해 계획한 새로운 기능의 <a href="https://docs.microsoft.com/en-us/vsts/release-notes/">로드맵</a> 을 주기적으로 업데이트합니다. 방금 최신 <a href="https://docs.microsoft.com/en-us/vsts/release-notes/">업데이트를</a> 게시했으며&rsquo;, 가장 큰 업데이트입니다.</p>


  <h2>기존 빌드 정의에서 YAML 템플릿 생성</h2>


  <p>작년에는 그래픽 빌드 정의 편집기가 아닌 코드로 체크 인된 <a href="https://docs.microsoft.com/en-us/vsts/build-release/actions/build-yaml-get-started">YAML</a> 파일로 빌드 프로세스를 구성할 수 있는 YAML 빌드의 <a href="https://blogs.msdn.microsoft.com/devops/2017/11/15/pipeline-as-code-yaml-preview/">공개 미리 보기를 발표</a>했습니다. 이제 웹&rsquo; UI의 빌드 정의를 YAML 파일로 변환하는 것이 더 간단해졌습니다. 빌드에 대한 빌드 정의 편집기에서 왼쪽의 <strong>프로세스</strong> 탭을 선택한 다음 오른쪽 창에서 <strong>YAML 보기</strong> 링크를 클릭할 수 있습니다. 텍스트를 클립보드에 복사하고 콘텐츠가 있는 파일을 리포지토리에 체크 인합니다. 그런 다음 체크 인된 파일을 참조하는 새 빌드 YAML 기반 빌드 정의를 구성합니다.</p>


  <p>YAML을 빠르게 학습하는 좋은 방법으로도 사용할 수 있습니다. 앱에 적합한 템플릿을 사용하여 새 빌드 정의를 만들고 YAML을 검사하여 사용한 항목과 새 YAML 구문 간의 매핑을 이해할 수&rsquo; 있습니다. YAML 빌드를 시작하기 위한 몇 가지 추가 리소스가 있습니다(올해 말에는 Release Management YAML도 사용할 예정입니다).</p>


  <ul>
   <li><a href="https://docs.microsoft.com/en-us/vsts/build-release/actions/build-yaml-get-started">YAML을 사용하여 코드에서 CI 빌드 구성 시작</a></li>
   <li><a href="https://docs.microsoft.com/en-us/vsts/build-release/actions/build-yaml">YAML 빌드를 사용하는 방법</a></li>
  </ul>


  <h2>향상된 다단계 빌드 기능</h2>


  <p><em><strong>참고: 이 기능을 사용하려면 계정에서 여러 큐 </strong></em><a href="https://docs.microsoft.com/en-us/vsts/collaborate/preview-features"><em><strong>미리 보기 기능을</strong></em></a><em><strong> 사용하도록 설정된</strong></em> 빌드가 있어야 합니다.</p>


  <p>최근에 정의를 빌드하는 단계를 추가했습니다. &rsquo;단계를 사용하여 빌드 단계를 구성하고 각 단계에 대해 서로 다른 요구를 사용하여 다른 에이전트를 대상으로 지정할 수 있었습니다. &rsquo;이제 다음을 수행할 수 있도록 단계를 빌드하는 몇 가지 기능을 추가했습니다.</p>


  <ul>
   <li>
   <p>각 단계마다 다른 에이전트 큐를 지정합니다. 즉, 다음과 같이 수행할 수 있습니다.</p>

   <ul>
    <li>macOS 에이전트에서 빌드의 한 단계를 실행하고, Windows 에이전트에서 다른 단계를 실행합니다. 이 방법이 얼마나 유용한지를 보여주는 멋진 예제를 보려면 다음 연결(); 2017 비디오를 참조하세요. <a href="https://channel9.msdn.com/events/Connect/2017/B102">모바일 앱 및 서비스용 CI/CD DevOps 파이프라인</a>.</li>
    <li>빌드 에이전트 풀에서 빌드 단계를 실행하고, 테스트 에이전트 풀에서 단계를 테스트합니다.</li>
   </ul>
   </li>
   <li>
   <p>테스트를 병렬로 실행하여 더 빠르게 실행합니다. 병렬 처리가 다중 에이전트&rdquo;로 &ldquo;구성되고 VSTest&rdquo; 태스크가 포함된 &ldquo;모든 단계는 이제 구성된 에이전트 수에서 테스트 실행을 자동으로 병렬화합니다.</p>
   </li>
   <li>
   <p>각 단계에서 OAuth 토큰에 액세스할 수 있도록 스크립트를 허용하거나 거부합니다. 예를 들어 REST API를 통해 VSTS와 통신하도록 빌드 단계에서 실행되는 스크립트를 허용할 수 있으며, 동일한 빌드 정의에서 테스트 단계에서 실행되는 스크립트를 차단할 수 있습니다.</p>
   </li>
   <li>
   <p>특정 조건에서만 단계를 실행합니다. 예를 들어 이전 단계가 성공했을 때만 또는 마스터 분기에서 코드를 빌드할 때만 실행되도록 단계를 구성할 수 있습니다.</p>
   </li>
  </ul>


  <p>자세한 내용은 <a href="https://docs.microsoft.com/en-us/vsts/build-release/concepts/process/phases">빌드 및 릴리스 관리 단계</a>를 참조하세요.</p>


  <h2>호스트된 VS2017 에이전트에서 UI 테스트 실행 및 소프트웨어 설치</h2>


  <p>Weve&rsquo;는 빌드에 필요한 것이 있지만 이미지에서 사용할 수 없기&rsquo; 때문에&rsquo; 많은 고객이 호스트된 빌드 에이전트에 소프트웨어를 설치할 수 있는 기능을 요청했습니다. 이제 그렇게 할 수 있습니다. <strong>호스트된 VS2017</strong> 큐를 사용하는 경우&rsquo; 이제 빌드 및 릴리스 작업이 대화형 모드에서 관리자 권한으로 실행됩니다. 즉, 이제 이 호스트된 풀을 사용하여 UI 테스트를 실행하고 필요한 소프트웨어를 설치할 수 있습니다. 빌드할 때마다 빌드 에이전트를 다시 이미지화하기 때문에 각 빌드는 깨끗한 환경으로 시작됩니다.</p>


  <h2>향상된 릴리스 트리거 분기</h2>


  <p>이제 빌드 정의에 지정된 기본 분기를 기반으로 릴리스 트리거 필터를 구성할 수 있습니다. 이는 기본 빌드 분기에서 모든 스프린트를 변경하고 릴리스 트리거 필터를 모든 릴리스 정의에서 업데이트해야 하는 경우에 특히 유용합니다. 이제 빌드 정의에서 기본 분기를 변경하기만 하면 모든 릴리스 정의에서 이 분기가 자동으로 사용됩니다. 예를 들어 팀이 각 스프린트 릴리스 페이로드에 대한 릴리스 분기를 만드는 경우 새 스프린트 릴리스 분기를 가리키도록 빌드 정의에서 업데이트하고 릴리스에서 자동으로 이를 선택합니다.</p>


  <p><img alt="Release triggers" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/127_12.png" style="border: 0px currentColor; border-image: none; background-image: none;" title="릴리스 트리거"></p>


  <h2>잘 끊어지는 테스트 식별</h2>


  <p>DevOps 핵심 원칙 중 하나는 안정적이고 빠른 자동화된 테스트를 갖는 것입니다. 때로는 테스트가 한 번의 실행에서 실패하고 변경하지 않고 다른 실행에 전달하는 경우 벗겨집니다(물론, 제품 코드일 수 있고 벗겨지는 테스트가 아닐 수 있음). 벗겨진 테스트는 실망스럽고 테스트에 대한 팀의&rsquo; 신뢰를 떨어뜨뜨리고 있습니다. 선택하지 않은 상태로 두면 팀은 이상한 테스트를 노이즈로 무시하여 버그가 프로덕션으로 넘어가게 됩니다. Weve&rsquo;는 이제 벗겨진 테스트 문제를 해결하는 데 도움이 되는 솔루션의 첫 번째 부분을 배포했습니다. 이제 실패한 테스트를 다시 실행하도록 <strong>Visual Studio 테스트</strong> 작업을 구성할 수 있습니다. 그런 다음, 테스트 결과에서는 처음에는 테스트가 실패했으며 다시 실행에서 통과되었음을 나타냅니다. 이는&rsquo; 조사 및 수정해야 하는 벗겨진 테스트를 식별하는 핵심 단계입니다. 순서가 지정된 데이터 기반 테스트에 대한 다시 실행 지원은 나중에 제공될 예정입니다.</p>


  <p><strong>Visual Studio 테스트</strong> 작업은 실패한 테스트를 다시 실행하는 최대 시도 횟수 및 광범위하게 분산된 오류가 발생하는 경우 테스트를 다시 실행하지 않도록 하는 실패에 대한 임계값 비율(예: 모든 테스트의 20% 미만이 실패한 경우에만 테스트 다시 실행)을 제어하도록 구성할 수 있습니다.</p>


  <p><img alt="Re-run failed test section" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/127_08.png" style="border: 0px currentColor; border-image: none; background-image: none;" title="실패한 테스트 다시 실행 섹션"></p>


  <p><strong>빌드 및 릴리스</strong>의 <strong>테스트</strong> 탭에서 다시 실행&rdquo; 시 통과된 결과를 &ldquo;사용하여 테스트 결과를 필터링하여 실행 중에 잘못된 테스트를 식별할 수 있습니다. 현재는 다시 실행에서 통과된 각 테스트의 마지막 시도가 표시됩니다. 요약 보기는 전체 테스트에서 재실행 시 통과됨(n/m)&rdquo;을 보여 &ldquo;줍니다. 여기서 n은 다시 실행 시 통과된 테스트의 수이고 m은 총 통과된 테스트입니다. 모든 시도에 대한 계층적 보기는 다음 몇 가지 스프린트에 제공됩니다.</p>


  <p><img alt="Re-run failed test results" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/127_09.png" style="border: 0px currentColor; border-image: none; background-image: none;" title="실패한 테스트 다시 실행 결과"></p>


  <h2>기본적으로 적절한 에이전트를 사용하여 빌드</h2>


  <p>템플릿 중 하나를 사용하여 새 빌드 정의를 만드는 경우 이제 기본적으로 호스트된 에이전트 큐를 선택합니다. 예를 들어 Ant 및 Maven 템플릿은 기본적으로 <strong>Hosted Linux</strong> 큐로 설정됩니다. Xcode 및 Xamarin.iOS 템플릿은 기본적으로 <a href="https://blogs.msdn.microsoft.com/devops/2017/11/16/cloud-hosted-mac-agents-for-ci-cd-pipelines/">호스트된 macOS 미리 보기</a>로 설정됩니다. ASP.NET Core 템플릿은 기본적으로 <strong>Hosted VS2017</strong>로 설정됩니다. 물론 큐를 기본 설정으로 변경할 수 있지만, 이 기본값은 새 빌드 프로세스를 정의할 때 약간의 시간을 절약하고 그렇지 않으면 적절한 에이전트 큐를 다시 설정할 필요가 없습니다.</p>


  <p><img alt="Default hosted agent option in Build" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/129_10.png" style="border: 0px currentColor; border-image: none; background-image: none;" title="빌드의 기본 호스팅 에이전트 옵션"></p>


  <h2>VSTS를 기호 서버로 사용</h2>


  <p>VSTS는 조직과 기호를 호스트하고 공유할 수 있는 기호 서버입니다. 이제 기호 서버 기능이 일반 공급됩니다. 기호는 실행 파일을 쉽게 디버그할 수 있는 추가 정보를 제공합니다. 자세한 내용은 <a href="https://docs.microsoft.com/en-us/vsts/build-release/symbols/">디버깅에 대한 게시 기호를</a> 참조하세요.</p>


  <p>이 기능은 주요 제안에 따라 우선 순위가 지정되었습니다.</p>


  <h2>이제는 기록되는 원인</h2>


  <p><strong>원인</strong> 보기는 코드 줄을 마지막으로 변경한 사용자를 식별하는 데 유용합니다. 그러나 코드 줄을 <em>이전</em>에 변경한 사용자를 알아야 하는 경우가 있습니다. 향상된 최신 기능인 <strong>이 커밋 전에 원인 보기</strong>가 도움이 될 수 있습니다. 이름에서 알 수 있듯이, 이 기능을 사용하면 특정 줄을 변경한 버전 이전의 파일 버전으로 다시 이동하여 해당 버전에 대한 원인 정보를 볼 수 있습니다. 선택한 코드 줄이 변경된 파일에 맞춰 각 버전을 살펴보면서 계속 드릴할 수 있습니다.</p>


  <p><img alt="Blame history" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/127_13.png" style="border: 0px currentColor; border-image: none; background-image: none;" title="원인 기록"></p>


  <h2>끌어오기 요청 병합 커밋 보기</h2>


  <p>끌어오기 요청 diff 보기는 소스 분기에 도입된 변경 내용을 강조 표시하는 데 유용합니다. 그러나 대상 분기를 변경하면 diff 보기가 예상한 것과 다르게 표시될 수 있습니다. 이제 새 명령을 사용하여 끌어오기 요청에 대한 미리 보기&rdquo; 병합 커밋의 &ldquo;차이(<strong>병합 커밋 보기</strong>)를 볼 수 있습니다. 이 병합 커밋은 병합 충돌을 확인하고 끌어오기 요청 빌드와 함께 사용하기 위해 만들어지며, 끌어오기 요청이 최종적으로 완료될 때 병합 커밋이 표시되는 모양을 반영합니다. diff에 반영되지 않은 변경 내용이 대상 분기에 있는 경우 병합 커밋 diff가 소스 분기와 대상 분기 모두에서 최근 변경 내용을 확인하는 데 유용할 수 있습니다.</p>


  <p><img alt="View pull request merge commit" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/129_17.png" style="border: 0px currentColor; border-image: none; background-image: none;" title="끌어오기 요청 병합 커밋 보기"></p>


  <p><strong>병합 커밋 보기</strong> 명령과 함께 유용한 또 다른 명령은&rsquo; <strong>병합 다시 시작</strong>(동일한 명령 메뉴에서 사용 가능)입니다. 끌어오기 요청이 처음 만들어진 후에 대상 분기가 변경된 경우 이 명령을 실행하면 병합 커밋 diff 보기를 업데이트하여 새 미리 보기 병합 커밋이 만들어집니다.</p>


  <h2>끌어오기 요청 상태 API 및 분기 정책을 사용하여 통합</h2>


  <p><a href="https://docs.microsoft.com/en-us/vsts/git/branch-policies">분기 정책을</a> 사용하면 팀이 고품질 분기를 유지하고 끌어오기 요청 워크플로 중에 모범 사례를 따를 수 있습니다. 이제 끌어오기 요청 상태 API 및 분기 정책을 사용하여 사용자 지정 도구를 끌어오기 요청 워크플로에 통합할 수 있습니다. &rsquo;타사 CI/CD 솔루션과 통합하든, 자체 내부 프로세스 요구 사항을 적용하든, 상태 API가 도움이 될 수 있습니다. &rsquo;각 끌어오기 요청을 완료하기 전에 코드를 빌드하고 테스트하기 위한 자체 PR 프로세스에서 이를 광범위하게 사용합니다. 자세한 내용은 <a href="https://go.microsoft.com/fwlink/?linkid=854108">코드</a>, <a href="https://go.microsoft.com/fwlink/?linkid=866529">샘플</a> 및 <a href="https://go.microsoft.com/fwlink/?linkid=866532">설명서를</a> 확인하세요.</p>


  <h2>분석 위젯을 이해 관계자로 보기</h2>


  <p><a href="https://marketplace.visualstudio.com/items?itemName=ms.vss-analytics">분석 확장을</a> 설치하면 위젯 카탈로그에 누적 Flow 다이어그램, 리드 타임, 주기 시간, 속도, 번다운 및 번업 등 6개의 강력한 위젯이 추가됩니다. 이제 무료 <a href="https://docs.microsoft.com/en-us/vsts/security/get-started-stakeholder#related-notes">이해 관계자 라이선스</a> 가 있는 사용자도 모든 분석 위젯을 볼 수 있습니다!</p>


  <p><a href="https://docs.microsoft.com/en-us/vsts/report/extend-analytics/index">Analytics OData 엔드포인트</a> 또는 <a href="https://docs.microsoft.com/en-us/vsts/report/powerbi/index">Power BI 사용하여 Analytics에 연결</a>하려면 <a href="https://www.visualstudio.com/team-services/compare-features/">여전히 기본 라이선스</a>가 필요합니다.</p>


  <h2>새 보기를 사용하여 VSTS Analytics와 Power BI 통합</h2>


  <p><strong>VSTS Power BI Desktop Connector</strong>의 기본 보기를 사용하면 VSTS 데이터 작업을 즉시 시작할 수 있습니다. Weve&rsquo;는 추세 및 버그 분석을 보다 쉽게 수행할 수 있도록 일반적인 기록 정의가 포함된 추가 보기를 추가했습니다. 자세한 내용은 <a href="https://docs.microsoft.com/en-us/vsts/report/powerbi/data-connector-connect">Power BI Data Connector를 사용하여 VSTS에 연결하는</a> 방법에 대한 지침을 참조하세요.</p>


  <p><img alt="PowerBI view" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/129_19.png" style="border: 0px currentColor; border-image: none; background-image: none;" title="PowerBI 보기"></p>


  <p><a href="https://powerbi.microsoft.com/desktop/"><strong>Power BI Desktop</strong></a> 2월 릴리스에서는 사용자 고유의 뷰를 만드는 기능을 도입하여 Power BI 필요한 특정 데이터를 더욱 쉽게 작업할 수 있도록 합니다.</p>


  <h2>VSTS 메시징 확장을 사용하여 Microsoft Teams 작업 항목 논의</h2>


  <p>Microsoft Teams 많은 엔지니어링 팀 내에서 팀워크의 허브가 되었습니다. 새로운 VSTS 메시징 확장과 Microsoft Teams 통합을 확장하여 다른 콘텐츠 및 도구와 함께 특정 작업 항목을 찾고 논의할 수 있도록 했습니다. 자세한 내용은 Marketplace의 <a href="https://marketplace.visualstudio.com/items?itemName=ms-vsts.vss-services-teams">Microsoft Teams 통합</a> 확장을 참조하세요.</p>


  <p><img alt="VSTS messaging extension in Microsoft Teams" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/130_01.png" style="border: 0px currentColor; border-image: none; background-image: none;" title="Microsoft Teams VSTS 메시징 확장"></p>


  <h2>제안된 영역 및 반복을 사용하여 작업 이동</h2>


  <p>작업 항목을 이동할 때 동일한 영역 또는 반복에서 작업하고 계층 구조를 반복적으로 탐색하는 것이 일반적일 수 있습니다. 영역 <strong>및</strong> <strong>반복</strong> 경로 컨트롤은 이제 최근에 사용한 값 목록을 <strong>제안</strong>으로 포함하므로 빠르게 설정하고 이동할 수 있습니다.</p>


  <p><img alt="Area drop down list" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/129_11.png" style="border: 0px currentColor; border-image: none; background-image: none;" title="영역 드롭다운 목록"></p>


  <p>또한 작업 항목을 배달해야 하는 시기를 신속하게 판단할 수 있도록 이름 오른쪽에 <strong>반복</strong> 날짜가 포함됩니다.</p>


  <p><img alt="Iteration drop down list" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/129_12.png" style="border: 0px currentColor; border-image: none; background-image: none;" title="반복 드롭다운 목록"></p>


  <h2>이제 Wiki 검색 일반 공급</h2>


  <p><a href="https://blogs.msdn.microsoft.com/devops/2017/12/01/announcing-public-preview-of-wiki-search/">12월에 Wiki 검색의 공개 미리 보기</a>가 완료되면 이제 일반 공급됩니다. 코드 및 작업 항목의 오른쪽에서 제목별 또는 내용별로 즐겨찾는 Wiki 페이지를 검색할 수 있습니다.</p>


  <h2>그룹을 사용하여 많은 수의 사용자에 대한 액세스 및 확장 관리</h2>


  <p>Weve&rsquo;를 사용하면 관리자가 액세스 수준 및 확장을 AAD 또는 VSTS 그룹에 할당할 수 있으므로 관리자가 대규모 사용자 그룹을 쉽게 관리할 수 있습니다. 적절한 규칙을 설정한 후 그룹에 사용자를 추가하면 VSTS 계정에 액세스할 때 올바른 액세스 수준 및 확장이 자동으로 부여됩니다. 따라서 액세스 수준 및 확장은 더 이상 개별적으로 관리할 필요가 없습니다.</p>


  <p><img alt="Group licensing" border="0" height="431" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/130_07.png" style="border: 0px currentColor; border-image: none; background-image: none;" title="그룹 라이선스" width="1024"></p>


  <p>자세한 내용은 작년의 Microsoft DevOps 블로그에 있는 <a href="https://blogs.msdn.microsoft.com/devops/2017/04/04/team-services-large-account-user-management-roadmap-april-2017/">대규모 계정 사용자 관리 로드맵 게시물을</a> 참조하세요.</p>


  <h2>이제 일반 공급 클라우드 솔루션 공급자 구매</h2>


  <p>CSP(클라우드 솔루션 공급자) 프로그램을 통한 Visual Studio Marketplace 구매는 현재 CSP가 지원되는 모든 제품/시장에서 사용할 수 있습니다. 해당 시장의 CSP 파트너는 이제 고객을 위해 Visual Studio Marketplace Visual Studio에서 Visual Studio 구독, Visual Studio Team Services 사용자, 자사 확장(예: 테스트 관리자, 호스트된 Pipelines, 패키지 관리)을 구매할 수 있습니다. 이제 Visual Studio Marketplace는 모든 자사 구매에 대해 Azure CSP 구독을 인식하고 수락합니다. 또한 CSP는 구독 관리 포털을 통해 고객을 위해 구매한 Visual Studio 구독을 관리하고, Azure Portal에서 VSTS 계정을 설정하며, 기존 VSTS 계정을 Azure CSP 구독에 연결하여 고객의 청구를 인수할 수도 있습니다.</p>


  <h2>월의 확장: 브라우저에서 끌어오기 요청 충돌 해결</h2>


  <p>작년에는 <a href="https://www.gvfs.io/">Git Virtual File System</a>이라는 항목을 사용하여 전체 Windows 코드 베이스를 단일 Git 리포지토리로 이동했습니다. 전체 Windows 팀이 Git을 사용한 후에는 워크플로 중 일부에 대한 충돌을 보다 편리하게 해결할 수 있는 방법이 필요했습니다. Windows 팀은 브라우저에서 직접 끌어오기 요청 충돌을 해결할 수 있는 VSTS에 대한 새로운 확장을 구축했으며, Im&rsquo;은 이제 <a href="https://marketplace.visualstudio.com/vsts">모든 사용자가 VSTS Marketplace</a>에서 <a href="https://marketplace.visualstudio.com/items?itemName=ms-devlabs.conflicts-tab">확장</a>으로 사용할 수 있게 되어 기쁘게&rsquo; 생각합니다.</p>


  <p>Git 끌어오기 요청을 완료하려면 먼저 대상 분기와의 충돌을 해결해야 합니다. 이 확장을 사용하면 병합을 수행하고 로컬 클론에서 충돌을 해결하는 대신 끌어오기 요청 병합의 일부로 웹에서 이러한 충돌을 해결할 수 있습니다.</p>


  <p>&rsquo;<a href="https://marketplace.visualstudio.com/items?itemName=ms-devlabs.conflicts-tab">확장을 설치</a>한 후&rsquo; 충돌이 발생할 때의 환경은 다음과 같습니다.</p>


  <p><img alt="Conflicts Tab" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ConflictsTab.PNG" style="border: 0px currentColor; border-image: none; background-image: none;" title="충돌 탭"></p>


  <p>나열된&rsquo; 파일을 클릭하면 유지할 콘텐츠를 선택할 수 있도록 이전 버전과 새 버전을 볼 수 있는 보기가 표시됩니다.</p>


  <p><img alt="Example resolution" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/MergeSummary.PNG" style="border: 0px currentColor; border-image: none; background-image: none;" title="예제 확인"></p>


  <p>또한 결합된 파일을 수동으로 편집하도록 선택합니다.</p>


  <p><img alt="Conflict markers" border="0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/Example3.PNG" style="border: 0px currentColor; border-image: none; background-image: none;" title="충돌 표식"></p>


  <h2>요약</h2>


  <p>언제나처럼 릴리스 정보에서 기능의 전체 목록을 찾을 수 있습니다. VSTS에 대한 최신 계획 및 개발을 따라가려면 <a href="https://blogs.msdn.microsoft.com/devops/">DevOps 블로그</a>를 구독해야 합니다.</p>


  <ul>
   <li><a href="https://docs.microsoft.com/en-us/vsts/release-notes/2017/nov-28-vsts">11월 28일</a></li>
   <li><a href="https://docs.microsoft.com/en-us/vsts/release-notes/2017/dec-11-vsts">12월 11일</a></li>
   <li><a href="https://docs.microsoft.com/en-us/vsts/release-notes/2018/jan-24-vsts">1월 24일</a></li>
   <li><a href="https://docs.microsoft.com/en-us/vsts/release-notes/2018/feb-14-vsts">2월 14일</a></li>
  </ul>


  <p>즐거운 코딩 작업이 되길 바랍니다!</p>


  <p><a href="https://twitter.com/tfsbuck">@tfsbuck</a></p>
