### YamlMime:Yaml
ms.openlocfilehash: 7def6c13fc4cced6c62b084dd03f65287475a946
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139902084"
Slug: modernize-your-java-spring-boot-application-with-azure-database-for-mysql
Title: Azure Database for MySQL을 사용하여 Java Spring Boot 애플리케이션 현대화
Summary: Spring은 최신 비즈니스 요구 사항을 해결하는 웹 및 엔터프라이즈 애플리케이션을 빌드하기 위한 잘 알려진 Java 기반 프레임워크입니다. Spring Boot 프레임워크를 사용할 때의 이점 중 하나는 관계형 및 NoSQL 데이터 저장소의 데이터 액세스를 간소화한다는 것입니다.
Content: >-
  <p><em>이 블로그 게시물은 Azure OSS 데이터베이스 서비스 수석 프로그램 관리자&nbsp;인 Parikshit Savjani가 공동 저술합니다.</em></p>


  <p>Spring은 최신 비즈니스 요구 사항을 해결하는 웹 및 엔터프라이즈 애플리케이션을 빌드하기 위한 잘 알려진 Java 기반 프레임워크입니다. Spring Boot 프레임워크를 사용할 때의 이점 중 하나는 관계형 및 NoSQL 데이터 저장소의 데이터 액세스를 간소화한다는 것입니다. MySQL 데이터베이스 백 엔드를 사용하는 Spring Boot 프레임워크는 비즈니스 애플리케이션의 온라인 트랜잭션 처리 요구 사항을 충족하기 위해 설정된 패턴 중 하나입니다. 최신 비즈니스 애플리케이션은 탄력적 규모 및 이식성 요구를 충족하기 위해 기존의 모놀리식 디자인에서 벗어나 AKS(Azure Kubernetes Service)와 같은 클라우드 네이티브 마이크로 서비스 플랫폼에 빌드되고 배포됩니다. 반면에 데이터베이스에는 원자성, 일관성, 내구성, 복원력 및 오류에 대한 데이터 손실이 없는 상태 저장 요구 사항이 더 많이 있습니다. 따라서 이러한 요구 사항을 충족하는 Azure Database for MySQL 서비스와 같은 관리되는 데이터베이스 서비스에서 Kubernetes 환경 외부에서 데이터베이스를 실행하는 것이 더 적합합니다.</p>


  <p>개발자와 고객은 Azure 플랫폼에서 Java Spring Boot 마이크로 서비스 애플리케이션을 쉽게 빌드하고 배포하여 개발자 생산성을 향상시키고 기업이 다음 솔루션을 통해 더 많은 성과를 거둘 수 있도록 할 수 있습니다.</p>


  <ul>
   <li><a href="https://azure.microsoft.com/en-us/blog/introducing-azure-devops/" target="_blank">Azure DevOps</a> 자동화되고 강력한 CI/CD 파이프라인을 빌드하는 개발자 플랫폼입니다.</li>
   <li><a href="https://docs.microsoft.com/en-us/azure/aks/intro-kubernetes" target="_blank">관리되는 Kubernetes</a> 플랫폼인 Azure Kubernetes Service.</li>
   <li><a href="https://azure.microsoft.com/en-us/blog/announcing-azure-container-instances/" target="_blank">Azure Container Instance는 Azure</a>에서 컨테이너화된 솔루션을 실행하기 위한 서버리스 컨테이너 플랫폼입니다.</li>
   <li>완전히 관리되는 엔터프라이즈 지원 커뮤니티 <a href="https://docs.microsoft.com/en-us/azure/mysql/" target="_blank">MySQL 데이터베이스인 Azure Database for</a> MySQL을 서비스로 사용합니다.</li>
  </ul>


  <p>다음은 Azure에서 po-service라는 Java Spring Boot 마이크로 서비스 애플리케이션의 기능 아키텍처 샘플입니다. 이 Spring Boot 애플리케이션은 AKS(Azure Kubernetes Service)에서 컨테이너화된 애플리케이션으로 구매 주문 마이크로 서비스를 빌드하고 배포하는 방법을 보여 줍니다. 배포된 마이크로 서비스는 구매 주문에 대한 모든 CRUD 작업을 지원합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b927e0b5-d520-4e78-a027-371bb893451b.jpg"><img alt="Functional architecture sample of a Java Spring Boot microservices application called po-service" border="0" height="521" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fd4b3ef0-a99f-4848-8e99-204cabae6a1a.jpg" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="po-service라는 Java Spring Boot 마이크로 서비스 애플리케이션의 기능 아키텍처 샘플" width="643"></a></p>


  <p>Azure Kubernetes 서비스에서 실행되는 마이크로 서비스 애플리케이션을 Azure Database for MySQL 서비스에서 실행되는 데이터베이스와 통합하기 위해 개발자는 <a href="https://github.com/kubernetes-incubator/service-catalog" target="_blank">Kubernetes Service Catalog</a>와 함께 <a href="https://docs.microsoft.com/en-us/azure/aks/integrate-azure" target="_blank">Azure용 Open Service Broker</a>를 활용하고 활용할 수 있습니다.</p>


  <p>위의 아키텍처를 빌드하고 GitHub <a href="https://github.com/ganrad/k8s-springboot-data-rest/tree/master/extensions/po-deploy-azuredb-mysql" target="_blank">리포지토리</a>에 배포하기 위한 자세한 단계별 지침을 게시했습니다. 이 단계별 가이드의 전반적인 목표는 다음과 같습니다.</p>


  <ul>
   <li><a href="https://docs.microsoft.com/en-us/azure/aks/integrate-azure"><strong>Azure용 Open Service Broker</strong></a>를 사용하여 DevOps 파이프라인을 사용하여 Azure Kubernetes Service에서 Azure Database for MySQL을 프로비전, 배포 및 통합하는 방법을 보여 줍니다.</li>
   <li>AKS(Kubernetes)에 컨테이너화된 애플리케이션을 배포하는 데 <strong>CLI(Helm</strong> )를 사용하는 방법을 보여 줍니다. Helm은 Kubernetes의 패키지 관리자이며 CNCF의 일부입니다. Helm은 차트라는 Kubernetes 패키지를 관리하는 데 사용됩니다.</li>
   <li>SSL/TLS(HTTPS 전송)를 사용하여 마이크로 서비스(REST API) 엔드포인트를 보호하고 AKS <strong>의 수신 컨트롤러</strong> 추가 기능을 통해 노출하는 방법을 보여 줍니다.</li>
   <li>ACI( <strong>Azure Container Instances</strong> )에 마이크로 서비스를 배포하여 서버리스 컨테이너 솔루션을 보여 줍니다.</li>
  </ul>


  <h2>다음 단계</h2>


  <p>현재 Azure에서 관리되는 데이터베이스 서비스를 사용하여 마이크로 서비스 애플리케이션을 빌드하고 배포하는 작업을 시작합니다. <a href="https://github.com/ganrad/k8s-springboot-data-rest/tree/master/extensions/po-deploy-azuredb-mysql" target="_blank">GitHub 리포지토리</a>의 지침을 활용하여 Azure Kubernetes 서비스 또는 ACI(Azure Container Instances)에서 마이크로 서비스 애플리케이션을 빌드하고 배포할 수 있습니다. 엔드 투 엔드 CI/CD 플랫폼이 Azure DevOps 실행되는 완전 관리형 Azure PaaS(데이터베이스 서비스)에서 실행되는 데이터베이스를 사용하여 이 작업을 수행할 수 있습니다. 개발자 커뮤니티는 이를 재사용하고 문제를 제기하거나 끌어오기 요청을 보내 다시 기여할 것을 권장합니다.</p>


  <p>다음에 보려는 <a href="https://feedback.azure.com/forums/597982-azure-database-for-mysql" target="_blank">기능과 기능에 대한 피드백을</a> 계속 제공하세요. 도움이 필요하거나 질문이 있는 경우 <a href="https://docs.microsoft.com/en-us/azure/mysql/" target="_blank">Azure Database for MySQL 설명서를</a> 확인하세요. 최신 뉴스 및 공지 사항에 대한 트위터에 <a href="https://twitter.com/AzureDBMySQL" target="_blank">@AzureDBMySQL</a> 우리를 따르십시오.</p>
