### YamlMime:Yaml
ms.openlocfilehash: 6b314ee1e35d9b958f794c3056041bf3f5db0dc5
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899085"
Slug: announcing-the-0-5-0-beta-preview-of-microsoft-azure-webjobs-sdk
Title: Microsoft Azure WebJobs SDK의 0.5.0 베타 미리 보기 발표
Summary: Scott Hanselman이 도입한 Microsoft Azure WebJobs SDK의 또 다른 미리 보기를 릴리스합니다. 이전 미리 보기에 대해 자세히 알아보려면 이 공지 게시물을 읽어보세요.
Content: "<a href=\"https://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx\">Scott Hanselman이 도입</a>한 Microsoft Azure WebJobs SDK의 또 다른 미리 보기를 릴리스합니다. 이전 미리 보기에 대해 자세히 알아보려면 이 <a href=\"https://azure.microsoft.com/blog/2014/08/21/announcing-the-0-4-0-beta-preview-of-microsoft-azure-webjobs-sdk/\">공지 게시물을</a> 읽어보세요.\n\n이 릴리스에는 0.4.0 베타와 동일한 일반 기능 집합과 몇 가지 새로운 흥미로운 기능이 있습니다.\n<h2><strong>이 릴리스 다운로드</strong></h2>\nNuGet 갤러리에서 WebJobs SDK를 다운로드할 수 있습니다. 다음과 같이 NuGet 패키지 관리자 콘솔을 사용하여 NuGet 갤러리에서 이러한 패키지를 설치하거나 업데이트할 수 있습니다.\n<pre>Install-Package Microsoft.Azure.WebJobs –Pre</pre>\nMicrosoft Azure Service Bus 트리거를 사용하려면 다음 패키지를 설치합니다.\n<pre>Install-Package Microsoft.Azure.WebJobs.ServiceBus -Pre</pre>\n<h4></h4>\n<h2><strong>WebJobs SDK란?</strong></h2>\nMicrosoft Azure 웹 사이트의 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs/\">WebJobs</a> 기능을 사용하면 웹 사이트에서 서비스 또는 백그라운드 작업과 같은 프로그램을 쉽게 실행할 수 있습니다. 실행 파일(예: <i>.exe</i>, <i>.cmd</i> 또는 <i>.bat</i> 파일)을 업로드하고 실행하여 트리거되거나 연속적인 WebJobs로 실행할 수 있습니다. WebJobs SDK가 없으면 백그라운드 작업을 연결하고 실행하려면 복잡한 프로그래밍이 많이 필요합니다. SDK는 일반적인 작업을 완료하기 위해 최소한의 코드를 작성할 수 있는 프레임워크를 제공합니다.\n\nWebJobs SDK에는 Service Bus 뿐만 아니라 Microsoft Azure Storage Blob, 큐 및 테이블과 함께 작동하는 바인딩 및 트리거 시스템이 있습니다. 바인딩 시스템을 사용하면 Microsoft Azure Storage 개체를 읽거나 쓰는 코드를 쉽게 작성할 수 있습니다. 트리거 시스템은 큐 또는 Blob에서 새 데이터를 받을 때마다 코드에서 함수를 호출합니다.\n<h2><strong>이 미리 보기의 업데이트</strong></h2>\n<h3><strong>공용 클래스에 정의된 공용 함수만 인덱싱됩니다.</strong></h3>\n이 릴리스부터 SDK는 공용 클래스에 정의된 공용 함수만 찾습니다. public이 아닌 함수가 있거나 공용이 아닌 클래스에 정의된 경우 함수는 인덱싱되지 않으며 SDK는 해당 함수를 호출할 수 없습니다.\n\n다음은 유효한 함수 정의입니다.\n<pre class=\"prettyprint\">public class Functions\n{\n    public static void ProcessQueue([QueueTrigger(\"input\")] string input)\n    {\n    }\n}</pre>\n포함하는 클래스가 공용이 아니므로 다음이 작동하지 않습니다.\n<pre class=\"prettyprint\">class Functions\n{\n    public static void ProcessQueue([QueueTrigger(\"input\")] string input)\n    {\n    }\n}</pre>\n<h3><strong>큐를 사용한 병렬 실행</strong></h3>\n비동기 함수에 대한 지원은 SDK의 0.4.0 베타 릴리스에 추가되었습니다. 이 릴리스의 일부로 SDK는 다른 큐에서 수신 대기하는 함수를 병렬로 트리거할 수 있는 병렬 처리를 추가했습니다.\n\n이 릴리스에서는 QueueTrigger 내에서 큐에 대한 메시지를 병렬로 가져오기 위한 지원을 추가했습니다. 즉, 함수가 아래와 같이 큐에서 수신 대기하는 경우 이 큐에 대해 16개의(기본값) 큐 메시지를 병렬로 일괄 처리합니다. 함수도 병렬로 실행됩니다.\n<pre class=\"prettyprint\">public class Program\n{\n    static void Main()\n    {        \n        JobHost host = new JobHost();\n        host.RunAndBlock();\n    }\n    public static void ProcessQueue([QueueTrigger(\"input\")] string input)\n    {\n    }\n}</pre>\n&nbsp;\n\n다음 코드는 0.4.0-beta에 있던 것과 동일한 기능을 추가합니다. 다음과 같이 JobHostConfiguration 클래스를 사용하여 일괄 처리 크기를 구성할 수 있습니다.\n\n&nbsp;\n<pre class=\"prettyprint\">public class Program\n{\n    static void Main()\n    {\n        JobHostConfiguration config = new JobHostConfiguration();\n        config.Queues.BatchSize= 1;\n        JobHost host = new JobHost(config);\n        host.RunAndBlock();\n    }\n}</pre>\n&nbsp;\n<h3><strong>BlobTrigger는 한 번만 처리됩니다.</strong></h3>\n이전 릴리스에서 BlobTrigger는 항상 최신 Blob 출력이 존재할 때까지 다시 처리되었습니다. 즉, 경우에 따라 Blob이 다시 처리됩니다.\n\n이 SDK 릴리스는 새 Blob이 검색되거나 기존 Blob이 업데이트될 때만 BlobTrigger가 처리되도록 합니다.\n\n다음 코드에서는 Blob을 만들거나 업데이트할 때 함수를 트리거하는 방법을 보여줍니다.\n<pre class=\"prettyprint\">public class Program\n{\n    static void Main()\n    {  \n        JobHost host = new JobHost();\n        host.RunAndBlock();\n    }\n\n    public static void ProcessBlob([BlobTrigger(\"test/{name}\")] string input)\n    {\n    }\n}</pre>\n또한 이러한 변경 내용을 통해 BlobTrigger가 처리될 때 Blob에서 큐 기반 워크플로로 시작할 수 있습니다. 다음 코드는 BlobTrigger가 처리될 때 큐 메시지를 작성하는 방법을 보여줍니다.\n<pre class=\"prettyprint\">public class Program\n{\n    static void Main()\n    {\n        JobHost host = new JobHost();\n        host.RunAndBlock();\n    }\n\n    public static void BlobToQueue(\n        [BlobTrigger(\"test/{name}\")] string input,string name,\n        [Queue(\"newblob\")] out string message)\n    {\n        message = name;\n    }\n}</pre>\nSDK는 SDK가 유지 관리하는 Azure Storage 계정( <em>AzureWebJobsStorage </em>에서 지정)에 \"azure-webjobs-hosts\"라는 컨테이너를 추가합니다.\n\n처리한 각 Blob에 대한 Blob 영수증이며 이 컨테이너를 사용하여 각 Blob의 처리 상태를 유지합니다.\n\nBlob 수신에는 처리된 특정 Blob에 대한 다음 정보가 있습니다.\n<ul>\n <li>이 Blob에 대해 트리거된 함수(FunctionId)</li>\n <li>컨테이너 이름</li>\n <li>Blob 형식</li>\n <li>Blob 이름</li>\n <li>ETag – Blob 버전입니다.</li>\n</ul>\nBlob을 강제로 다시 처리하려면 \"azure-webjobs-hosts\" 컨테이너에서 특정 Blob에 대한 Blob 영수증을 삭제하면 됩니다.\n\n다음 이미지는 처리된 Blob에 대한 Blob 영수증을 보여주는 \"azure-webjobs-hosts\" 컨테이너를 보여 줍니다.\n\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2014/09/blobreceipt.png\"><img style=\"border-width: 0px;\" title=\"blobreceipt\" alt=\"blobreceipt\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/blobreceipt_thumb.png\" width=\"1020\" height=\"304\" border=\"0\" /></a>\n\n&nbsp;\n<h4><strong>Blob에 대한 재시도 및 오류 처리</strong></h4>\n이 릴리스의 SDK는 Blob을 처리하는 동안 오류가 발생한 경우 함수 재시도에 대한 지원을 추가합니다. BlobTrigger는 지정된 최대 재시도 횟수까지 처리됩니다(기본값은 5회).\n\n임계값에 도달하고 함수가 5번 실행되면 SDK는 \"webjobs-blobtrigger-poison\"이라는 메시지를 큐에 넣습니다. 이 큐에서 QueueTrigger를 사용하여 함수를 트리거하고 메시지의 사용자 지정 오류 처리를 수행할 수 있습니다. 큐 메시지에는 JSON 직렬화된 문자열로 다음 정보가 포함됩니다.\n<ul>\n <li>FunctionId – Blob이 처리된 함수의 ID입니다.</li>\n <li>BlobType – Blob 유형(예: PageBlob 또는 BlockBlob)</li>\n <li>Blob의 ContainerName</li>\n <li>BlobName</li>\n <li>ETag – 오류를 발생시킨 Blob의 버전입니다.</li>\n</ul>\n다음 함수는 Blob의 오류 처리를 처리하는 방법을 보여 줍니다.\n<pre class=\"prettyprint\">public class Program\n{\n    static void Main()\n    {  \n        JobHost host = new JobHost();\n        host.RunAndBlock();\n    }\n\n    public static void ProcessBlob([BlobTrigger(\"test/{name}\")] string input)\n    {\n        throw new Exception();\n    }\n    public static void BlobErrorHandler(\n        [QueueTrigger(\"webjobs-blobtrigger-poison\")] BlobTriggerErrorMessage message)\n    {\n\n    }\n    public class BlobTriggerErrorMessage\n    {\n        public string FunctionId { get; set; }\n        public string BlobType { get; set; }\n        public string ContainerName { get; set; }\n        public string BlobName { get; set; }\n        public string ETag { get; set; }\n    }\n}</pre>\n또한 이 샘플에서는 메시지가 JSON 직렬화된 문자열이고 SDK를 사용하여 JSON 직렬화된 개체를 POCO(일반 이전 CLR 개체)에 바인딩할 수 있으므로 BlobTriggerPosionMessage라는 클래스에 큐 메시지를 강력하게 입력하는 방법을 보여 줍니다.\n\n다음 코드에서는 Blob 처리를 위해 재시도 횟수를 구성하는 방법을 설명합니다. 큐에 대한 포이즌 메시지를 처리하는 데 사용되는 것과 동일한 구성 개체입니다. 즉, 이 설정은 Blob 또는 큐를 처리하는 함수 재시도 횟수를 제어합니다.\n<pre class=\"prettyprint\">public class Program\n{\n    static void Main()\n    {  \n        JobHostConfiguration config = new JobHostConfiguration();\n        config.Queues.MaxDequeueCount = 2;\n        JobHost host = new JobHost(config);\n        host.RunAndBlock();\n    }\n}</pre>\n<h2><strong>샘플</strong></h2>\nWebJobs SDK에 대한 샘플은 다음에서 찾을 수 있습니다. <a href=\"https://github.com/Azure/azure-webjobs-sdk-samples\">https://github.com/Azure/azure-webjobs-sdk-samples</a>\n<ul>\n<ul>\n <li>Blob, 테이블, 큐 및 Service Bus 트리거 및 바인딩을 사용하는 방법에 대한 샘플을 찾을 수 있습니다.</li>\n <li>고객이 Blob Storage에서 해당 그림을 처리하는 함수를 트리거하는 그림을 업로드할 수 있는 이미지 처리 웹 사이트인 PhluffyShuffy라는 샘플이 있습니다.</li>\n</ul>\n</ul>\n<h2><strong>설명서</strong></h2>\n<ul>\n<ul>\n <li><a href=\"https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs\">자습서: Windows Azure WebJobs SDK 시작</a></li>\n <li><a href=\"https://channel9.msdn.com/Shows/Web+Camps+TV/Making-Your-Jobs-Easier-With-Windows-Azure-WebJobs-SDK\">Windows Azure WebJobs SDK를 사용하여 작업을 더 쉽게 만드는 채널 9 비디오</a></li>\n <li><a href=\"https://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx\">Scott Hanselman의 WebJobs 및 SDK 소개</a></li>\n <li>WebJobs를 사용하여 빌드되고 <a href=\"https://twitter.com/bradygaster\">Brady Gaster</a>가 ASP.NET 웹 사이트 모니터</li>\n <li><a href=\"https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/azure-webjobs-recommended-resources\">Azure WebJobs – 권장 리소스</a></li>\n <li><a href=\"https://channel9.msdn.com/Tags/azurefridaywebjobs\">Azure Friday의 WebJobs 비디오 시리즈</a></li>\n</ul>\n</ul>\n<h2></h2>\n<h2><strong>Azure Websites에 SDK를 사용하여 WebJobs 배포</strong></h2>\nAzure SDK 2.4를 사용한 Visual Studio 2013 업데이트 3에는 WebJobs를 Azure Websites에 게시하는 Visual Studio 도구 지원이 추가되었습니다. 자세한 내용은 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/websites-dotnet-deploy-webjobs/\">Azure WebJobs를 Azure Websites에 배포하는 방법을</a> 참조 <a name=\"how-to-deploy-azure-webjobs-to-azure-websites\"></a> 하세요.\n<h2></h2>\n<h2><strong>0.4.0-beta에서 0.5.0-beta로 마이그레이션할 때 알려진 문제</strong></h2>\n<h3><strong>공용 클래스에 정의된 공용 함수만 인덱싱됩니다.</strong></h3>\n이 릴리스부터 SDK는 공용 클래스에 정의된 공용 함수만 찾습니다. 프라이빗 함수가 있거나 프라이빗 클래스에 정의된 경우 함수는 인덱싱되지 않으며 SDK는 해당 함수를 호출할 수 없습니다.\n<h2><strong>피드백 제공 및 도움말 보기</strong></h2>\nMicrosoft Azure 웹 사이트 및 Microsoft Azure WebJobs SDK의 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs/\">WebJobs</a> 기능은 미리 보기로 제공됩니다. 이 환경을 개선하기 위한 모든 피드백은 항상 환영합니다.\n\n자습서와 직접 관련이 없는 질문이 있는 경우 <a href=\"https://azure.microsoft.com/en-us/support/forums/\">Azure 포럼</a>, <a href=\"https://forums.asp.net/1247.aspx\">ASP.NET 포럼</a> 또는 <a href=\"https://stackoverflow.com/\">StackOverflow.com</a> 게시할 수 있습니다. Twitter용 <a href=\"https://twitter.com/search?q=AzureWebJobs\">#AzureWebJobs</a> SDK 및 StackOverflow에 대한 태그 Azure-WebJobsSDK 사용합니다."
