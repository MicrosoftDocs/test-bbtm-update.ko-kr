### YamlMime:Yaml
ms.openlocfilehash: dc91737f078f8f58cc79b7923b570df0fe2dcab1
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139900358"
Slug: start-writing-applications-today-with-the-new-microsoft-authentication-sdks
Title: 새 Microsoft 인증 SDK를 사용하여 오늘 애플리케이션 작성 시작
Summary: 빌드 2016에서는 Microsoft ID용 새로운 세대의 인증 SDK인 .NET용 MSAL(Microsoft 인증 라이브러리)의 첫 번째 개발자 미리 보기를 발표했습니다. 오늘 MSAL .NET, MSAL iOS, MSAL Android 및 MSAL Javascript의 프로덕션 준비 미리 보기 릴리스를 발표하게 되어 기쁩니다.
Content: >-
  <p>빌드 2016에서는 Microsoft ID용 새로운 세대의 인증 SDK인 .NET용 MSAL(Microsoft 인증 라이브러리)의 첫 번째 개발자 미리 보기를 <a href="https://blogs.technet.microsoft.com/enterprisemobility/2016/03/31/microsoft-identity-at-build-2016/">발표</a> 했습니다.</p>


  <p>오늘 MSAL .NET, MSAL iOS, MSAL Android 및 MSAL Javascript의 프로덕션 준비 미리 보기 릴리스를 발표하게 되어 기쁩니다.</p>


  <p>지난 한 해 동안 Azure AD 및 Azure AD B2C의 v2 프로토콜 엔드포인트 기능을 발전시키는 데 상당한 진전을 이루었습니다. 새 MSLL은 이러한 새로운 기능을 활용하며, 첫 번째 미리 보기에 대해 제공했던 훌륭한 피드백과 결합하면 이전과는 달리 앱에서 인증 기능 통합을 간소화할 수 있습니다.</p>


  <p>오늘 릴리스하는 라이브러리는 아직 미리 보기 상태입니다. 즉&rsquo;, 아직 피드백을 제공하고 API 표면 &ndash; 을 변경할 시간이 있지만 프로덕션에서 완전히 지원됩니다. 앱에서 자신 있게 사용할 수 있으며 문제가&rsquo; 있는 경우 완전히 출시된 제품에 모든 일반적인 지원 채널을 사용할 수 있습니다. 아래 세부 정보를 참조하세요.</p>


  <h2>MSAL 소개</h2>


  <p>MSAL은 Microsoft ID로 보호되는 웹 API에 액세스하는 데 필요한 토큰을 쉽게 얻을 수 있도록 하는 SDK입니다. 즉, Azure AD의 v2 프로토콜 엔드포인트(회사 및 학교 계정 또는 개인 Microsoft 계정), Azure AD B2C 또는 새 ASP.NET Core ID로 말합니다. 웹 API의 예로는 Microsoft Graph 같은 Microsoft Cloud API 또는 Microsoft ID에서 발급한 토큰을 수락하도록 구성된 다른 타사 API(사용자 포함)가 있습니다.</p>


  <p>MSAL은 필수 기본 형식 집합을 제공하므로 간결한 코드 줄이 거의 없는 토큰을 사용할 수 있습니다.</p>


  <p>내부적으로 MSAL은 사용자가 직접 코딩해야 하는 복잡하고 위험 수준이 높은 많은 프로그래밍 작업을 처리합니다. 특히 MSAL은 적절한 경우 인증 및 동의 UX를 표시하고, 현재 시나리오에 적합한 프로토콜 흐름을 선택하고, 올바른 권한 부여 메시지를 내보내고, 관련 응답을 처리하고, 정책 기반 인증 수준을 협상하고, 디바이스 인증 기능을 활용하고, 나중에 사용할 토큰을 저장하고, 투명한 갱신 등을 처리합니다. &rsquo;OAuth2 또는 OpenId 커넥트 사양을 한 줄도 읽지 않더라도 보안 API 및 고급 엔터프라이즈급 액세스 제어 기능을 활용할 수 있는 정교한 논리가 적용되었습니다. &rsquo;Azure AD 내부 요소에 대해 알아볼 필요도 없습니다. 사용자와 관리자 모두 MSLL을 사용하면 전용 코드 없이도 런타임에 액세스 정책이 자동으로 적용된다는 확신을 가질 수 있습니다.</p>


  <p>MSAL 또는 ADAL(Active Directory 인증 라이브러리)을 사용해야 하는지 궁금할 수 있습니다. 대답은 간단합니다. Azure AD 회사 및 학교 계정과 Microsoft 개인 계정(Azure AD의 v2 프로토콜 엔드포인트 사용)을 모두 지원해야 하는 애플리케이션을 빌드하거나 Azure AD B2C를 사용하는 앱을 빌드하는 경우 MSAL을 사용합니다. Azure AD 회사 및 학교 계정만 지원해야 하는 애플리케이션을 빌드하는 경우&rsquo; ADAL을 사용합니다. 나중에&rsquo; 모든 앱이 MSAL을 사용하지만 아직 사용하지 않는 것이 좋습니다. 아직 MSAL 및 Azure AD의 v2 프로토콜 엔드포인트에서 수행해야 할 작업이 조금 더 있습니다. 게시물의 뒷부분에서 ADAL에 대한 자세한 내용을 참조하세요.</p>


  <h2>MSAL 프로그래밍 모델</h2>


  <p>MSAL을 사용하여 개발하는 것은 간단합니다.</p>


  <p>모든 것은 <a href="https://apps.dev.microsoft.com/">Azure AD, Azure AD B2C 또는 ASP.NET Core ID의 v2 프로토콜 엔드포인트</a>에 앱을 등록하는 것으로 시작합니다. <a href="https://portal.azure.com/"></a> 여기서 앱&rsquo;에 대한 몇 가지 기본 정보를 지정합니다(모바일 앱인가요? 웹앱 또는 웹 API인가요?) 앱의 식별자를 다시 가져옵니다. 회사 &amp; 학교 및 MSA 계정(Azure AD의 v2 프로토콜 엔드포인트)에서 작업하기 위한 .NET 데스크톱 애플리케이션을 만들고 있다고 가정해 보겠습니다&rsquo;.</p>


  <p>코드에서는 항상 Azure AD 앱의 코드에 표현인 *ClientApplication 인스턴스를 만드는 것으로 시작합니다. 이 경우&rsquo; PublicClientApplication의 새 인스턴스를 초기화하여 등록 시 얻은 식별자를 전달합니다.</p>


  <div class="wlWriterSmartContent" id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:fa74bad8-c5d0-48d4-af4b-d5b95051204d" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px">

  <pre style="white-space: normal">

  [sourcecode language=&#39;csharp&#39; padlinenumbers=&#39;true&#39;] string clientID = &quot;a7d8cef0-4145-49b2-a91d-95c54051fa3f&quot;; PublicClientApplication myApp = new PublicClientApplication(clientID); [/sourcecode]</pre>

  </div>


  <p>Microsoft Graph 호출하여 사용자의 전자 메일 메시지에 액세스하려는 경우를 가정해 봅니다. 호출하려는 API에 필요한 범위(이 경우 Mail.Read)를 지정하여 AcquireTokenAsync를 호출하기만 하면 됩니다.</p>


  <div class="wlWriterSmartContent" id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:183272d1-a3dc-4b6b-b07b-e72c1ecb5ea6" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px">

  <pre style="white-space: normal">

  [sourcecode language=&#39;csharp&#39; ] string[] scopes = { &quot;Mail.Read&quot; }; AuthenticationResult ar = await myApp.AcquireTokenAsync(scopes); [/sourcecode]</pre>

  </div>


  <p>AcquireTokenAsync를 호출하면 팝업이 표시되어 사용자가 선택한 계정으로 인증하라는 메시지가 표시되고, 사용자&rsquo; 디렉터리의 관리자가 설정한 인증 정책을 적용합니다. 예를 들어 해당 코드를 실행하고 microsoft.com 계정을 사용하는 경우 2단계 인증 &ndash; 을 사용해야 하는 반면, ID&rsquo;가 내 테스트 테넌트에서 사용자를 사용하는 경우 사용자 이름과 암호만 요청합니다.</p>


  <p>인증에 성공하면 사용자는 요청된 권한 및 개인 정보 액세스와 관련된 기타 사용 권한(예: 이름 등)에 대한 동의를 부여하도록 승격됩니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/9ea1c020-cd27-4646-b63f-5acf44af6d92.png"><img alt="MSALconsentPrompt" border="0" height="963" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/cb5d3730-0737-485d-acc9-6c3f51d7e38b.png" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" title="MSALconsentPrompt" width="855"></a></p>


  <p><a name="_msocom_1"></a></p>


  <p>사용자가 수락하는 즉시 AcquireTokenAsync 호출은 토큰 획득 흐름을 완료하고 AuthenticationResult에서 토큰 획득 흐름을 반환합니다(기타 유용한 정보 포함). 당신이해야 할 모든 (ar를 통해) 추출하는 것입니다. AccessToken) 및 API 호출에 포함합니다.</p>


  <p>MSAL은 모든 AcquireTokenAsync 호출 시 토큰을 자동으로 캐시하는 정교한 토큰 저장소를 제공합니다. MSAL은 캐시를 투명하게 검사하여 필요한 특성(범위, 사용자 등)이 이미 있는지 또는 사용자에게 UX를 표시하지 않고 가져올 수 있는지를 확인하기 위해 캐시를 투명하게 검사하는 또 다른 기본 형식인 AcquireTokenSilentAsync를 제공합니다. Azure AD는 강력한 새로 고침 토큰을 발급하며, 새 범위 또는 다른 조직에 대해서도 새 액세스 토큰을 자동으로 가져오는 데 사용할 수 있으며 MSAL은 이러한 기능을 활용하여 프롬프트를 최소화하도록 모든 논리를 코딩합니다. 즉, 지금부터 메일 API를 호출해야 할 때마다 아래와 같이 AcquireTokenSilentAsync를 호출하고 항상 새 액세스 토큰을 다시 가져올 수 있음을 알 수 있습니다. 그리고 문제가 발생하는 경우(예: 사용자가 내 앱에 대한 동의를 취소한 경우) 항상 AcquireTokenAsync로 대체하여 사용자에게 다시 메시지를 표시할 수 있습니다.</p>


  <div class="wlWriterSmartContent" id="scid:C89E2BDB-ADD3-4f7a-9810-1B7EACF446C1:36458724-a50c-4299-9f94-6114021fcf2f" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px">

  <pre style="white-space: normal">

  [sourcecode language=&#39;csharp&#39; ] try { ar = await App.AcquireTokenSilentAsync(scopes, myApp.Users.FirstOrDefault()); } catch (MsalUiRequiredException UiEx) { ar = await App.PCA.AcquireTokenAsync(scopes); } [/sourcecode]</pre>

  </div>


  <p>이것이 주요 MSAL 사용 패턴입니다. 다른 모든 항목은 플랫폼, 프로그래밍 언어, 애플리케이션 유형 및 시나리오 &ndash; 간의 차이점을 설명하는 변형이지만, 본질적으로 이 몇 가지 호출을 마스터하면 MSAL의 작동 방식을 알 수 있습니다.</p>


  <h2>플랫폼 라인업</h2>


  <p>여러 플랫폼에서 MSAL을 사용할 수 있도록 하고 있습니다. 개념은 전반적으로 동일하게 유지되지만 각 대상 플랫폼의 일반적인 기본 형식 및 모범 사례를 사용하여 사용자에게 노출됩니다.</p>


  <p>지난 3년 동안 ID 부서에서 가져온 모든 라이브러리와 마찬가지로 MSAL은 OSS이며 github에서 사용할 수 있습니다. 우리는 공개적으로 MSAL을 개발하고, 우리는 지역 사회 기여를 환영합니다. 예를 들어 .NET Standard 대상을 사용하도록 MSAL을 리팩터링하는 데 중요한 역할을 했던 BlueMetal 및 Microsoft MVP의 수석 설계자인 Oren Novotny를 인정하고 싶습니다. 감사합니다, 오렌!</p>


  <p>아래에서 오늘 릴리스하는 MSLL 미리 보기에 대한 몇 가지 세부 정보를 찾을 수 있습니다.</p>


  <h3>MSAL .NET</h3>


  <p>에서 소스를 <a href="https://github.com/AzureAD/microsoft-authentication-library-for-dotnet">https://github.com/AzureAD/microsoft-authentication-library-for-dotnet</a>찾을 수 있습니다.</p>


  <p>MSAL .NET은 Nuget.org 통해 배포됩니다. 에서 패키지를 <a href="https://www.nuget.org/packages/Microsoft.Identity.Client">https://www.nuget.org/packages/Microsoft.Identity.Client</a>찾을 수 있습니다.</p>


  <p>MSAL .NET은 .NET Desktop(4.5 이상), .NET Standard 1.4, .NET Core, UWP 및 iOS/Android/UWP용 Xamarin Forms에서 작동합니다.</p>


  <p>MSAL.NET 네이티브 앱(데스크톱, 콘솔, 모바일) 및 웹앱(예: ASP.NET 웹앱의 코드 숨김)의 개발을 지원합니다.</p>


  <p>선택할 수 있는 많은 코드 샘플이 있습니다&rsquo;. <a href="https://azure.microsoft.com/en-us/resources/samples/active-directory-dotnet-desktop-msgraph-v2/">하나는 WPF 앱 개발에</a>, 하나는 <a href="https://azure.microsoft.com/en-us/resources/samples/active-directory-xamarin-native-v2/">UWP/iOS/Android를 대상으로 하는 Xamarin Forms 앱을 개발하는</a> 것, <a href="https://azure.microsoft.com/en-us/resources/samples/active-directory-dotnet-webapp-openidconnect-v2/">증분 동의를 사용하여 웹앱을 개발하는</a> 것, <a href="https://github.com/Azure-Samples/active-directory-dotnet-daemon-v2">서버 간 통신</a>을 통한 웹앱 개발, 앞으로 몇 주 안에 추가될 well&rsquo; 등입니다. 또한 Well&rsquo;에는 <a href="https://github.com/Azure-Samples/active-directory-b2c-xamarin-native">Xamarin Forms 앱,</a> <a href="https://github.com/Azure-Samples/active-directory-b2c-dotnet-webapp-and-webapi/blob/msal-update/TaskWebApp/App_Start/Startup.Auth.cs">.Net WebApp, .NET Core WebApp 및 .Net</a> <a href="https://github.com/Azure-Samples/active-directory-b2c-dotnet-desktop">WPF 앱</a>과 같은 B2C에서 MSAL <a href="https://github.com/Azure-Samples/active-directory-b2c-dotnetcore-webapp"></a> 을 사용하는 방법을 보여 주는 다양한 샘플이 있습니다.</p>


  <h3>MSAL JavaScript</h3>


  <p>에서 소스를 <a href="https://github.com/AzureAD/microsoft-authentication-library-for-js">https://github.com/AzureAD/microsoft-authentication-library-for-js</a>찾을 수 있습니다.</p>


  <p>라이브러리&rsquo; 추가 정보에서 설명한 대로 NPM을 사용하여 MSAL JS를 설치할 수 있습니다. CDN 항목<a href="https://secure.aadcdn.microsoftonline-p.com/lib/0.1.0/js/msal.min.js">https://secure.aadcdn.microsoftonline-p.com/lib/0.1.0/js/msal.min.js</a>도 있습니다.</p>


  <p>여기에서 간단한 SPA를 보여주는 샘플을 찾을 수 <a href="https://azure.microsoft.com/en-us/resources/samples/active-directory-javascript-singlepageapp-dotnet-webapi-v2/">있습니다</a>. B2C에서 MSAL JS를 사용하는 것을 보여 주는 샘플은 <a href="https://github.com/Azure-Samples/active-directory-b2c-javascript-msal-singlepageapp">여기에서</a> 찾을 수 있습니다.</p>


  <h3>MSAL iOS</h3>


  <p>에서 소스를 <a href="https://github.com/AzureAD/microsoft-authentication-library-for-objc">https://github.com/AzureAD/microsoft-authentication-library-for-objc</a>찾을 수 있습니다.</p>


  <p>MSAL iOS는 <a href="https://github.com/Carthage/Carthage">carthage</a>를 통해 GitHub 직접 배포됩니다.</p>


  <p>iOS 샘플은 <a href="https://github.com/Azure-Samples/active-directory-ios-swift-native-v2">여기에서</a> 찾을 수 있습니다. B2C에서 MSAL iOS의 사용을 보여 주는 샘플은 <a href="https://github.com/Azure-Samples/active-directory-b2c-ios-swift-native-msal">여기에서</a> 찾을 수 있습니다.</p>


  <h3>MSAL Android</h3>


  <p>에서 소스를 &ndash; <a href="https://github.com/AzureAD/microsoft-authentication-library-for-android">https://github.com/AzureAD/microsoft-authentication-library-for-android</a>찾을 수 있습니다.</p>


  <p>리포지토리&rsquo; 추가 정보처럼 <strong>Gradle</strong>을 통해 이진 파일을 가져올 수 있습니다.</p>


  <p>MSAL Android의 정식 사용을 보여 주는 샘플은 <a href="https://github.com/Azure-Samples/active-directory-android-native-v2">여기에서</a> 찾을 수 있습니다.</p>


  <h3>시스템 웹 보기</h3>


  <p>MSAL iOS 및 MSAL Android는 각각 SafariViewController 및 Chrome 사용자 지정 탭과 같은 OS 수준 기능을 활용하는 인증 및 동의 UX를 표시합니다.</p>


  <p>이 방법은 ADAL에 사용되는 포함된 브라우저 컨트롤 뷰에 비해 다양한 장점이 있습니다. 디바이스 브라우저를 통해 액세스하는 네이티브 앱과 웹앱 간에 SSO 공유를 허용하고, 디바이스에서 SSL 인증서를 활용할 수 있으며, 일반적으로 더 나은 보안 보장을 제공합니다.</p>


  <p>시스템 웹 보기를 사용하면 MSAL이 <a href="https://tools.ietf.org/html/draft-ietf-oauth-native-apps-10">OAuth2 for Native Apps</a> 모범 사례 문서에 제공된 지침에 맞춰집니다.</p>


  <h2>프로덕션 지원 미리 보기&rdquo;는 실제로 무엇을 의미하&ldquo;나요?</h2>


  <p>MSAL iOS, MSAL Android 및 MSAL JS는 이번 주에 데뷔합니다. MSAL .NET에는 작년&rsquo; 미리 보기에서 사용할 수 없는 Azure AD 및 Azure AD B2C의 v2 프로토콜 엔드포인트 기능이 통합되어 있습니다.</p>


  <p>여전히 피드백을 듣고 통합할 수 있는 자유를 유지해야 합니다. 즉, 장기적으로 커밋하기 전에 API 표면을 변경해야 할 수 있습니다. 또한 Azure AD 및 B2C의 v2 프로토콜 엔드포인트는 여전히 다각적인 SDK 릴리스의 일부여야 한다고 생각되는 <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-v2-limitations">기능을 추가하고</a> 있으며, 이러한 기능을 위한 디자인이 이미 있지만 현재 사용 가능한 기능과 동일한 미리 보기 프로세스를 거쳐야 합니다.</p>


  <p>즉, MSAL 비트는 철저히 테스트되었으며 프로덕션에서 사용할 수 있다고 확신하지만 아직 일반 공급된 라이브러리를 호출할 준비가 되지 않았습니다&rsquo;.</p>


  <p>MSAL이 프로덕션 지원 미리 보기&rdquo;라고 말하는 것은 &ldquo;이번 주에 릴리스된 MSAL 미리 보기에 대한 golive 라이선스를 부여한다는 것을 의미합니다. 프로덕션 앱에서 이러한 MSLL을 사용할 수 있으며 일반적인 Microsoft 지원 채널(프리미어 지원, StackOverflow 등)을 통해 지원을 받을 수 있다고 확신할&rsquo; 수 있습니다.</p>


  <p>그러나 이것은 개발자 미리 보기로 남아 있습니다. 즉, 개발자를 선택하면&rsquo; 진행 중인 작업의 일부 먼지를 처리할 준비를 해야 합니다. 구체적으로 말하려면:</p>


  <ul>
   <li>이후의 각 미리 보기 새로 고침은 API 표면을 변경할 수 있습니다(그리고 그럴 가능성이 있음). 즉, 사용자에게 영향을 주는 버그를 수정하기 위해 다음 새로 고침을 기다리는 경우 해당 변경 내용이 영향을 주는 버그와 관련이 없는 경우에도 새 릴리스 &ndash; 를 수집할 때 코드를 변경할 준비를 해야 하며 동일한 릴리스에서 나올 수 있습니다.</li>
   <li>MSAL이 일반 공급에 도달하면 6개월 동안 SDK의 GA 버전을 사용하도록 앱을 업데이트해야 합니다. 6개월이 경과하면 더 이상 미리 보기 라이브러리 &ndash; 를 지원하지 않으며,&rsquo; 이를 방지하기 위해 최선을 다하지만 Azure AD 및 Azure AD B2C의 v2 프로토콜 엔드포인트가 미리 보기 비트로 계속 작동하도록 보장하지는 않습니다&rsquo;.</li>
  </ul>


  <p>가능한 한 빨리 일반 공급에 도달하려고 합니다. 그러나 우리의 기준은 날짜 기반이 아니라 품질 중심입니다. MSAL은 많은 애플리케이션의 중요한 경로에 있으며 well&rsquo;이 올바르게 작동하는지 확인하려고 합니다. 좋은 소식은 이제 차단을 해제하고 프로덕션 앱에서 Microsoft ID를 자신 있게 활용할 수 있다는 것입니다.</p>


  <h2>ADAL은 어떤가요?</h2>


  <p>모든 의도 및 목적을 위해 MSAL은 ADAL vNext로 간주될 수 있습니다. 대부분의 기본 형식은 동일하게 유지되며(AcquireTokenAsync, AcquireTokenSilentAsync, AuthenticationResults 등) 프로토콜 전문가가 되지 않고도 API에 쉽게 액세스할 수 있도록 하는 목표는 동일하게 유지됩니다. &rsquo;ADAL&rsquo;을 사용하여 개발했다면 MSAL을 사용하여 집에서 바로 느낄 수 있습니다. 리포&rsquo;지토리를 뒤적거리는 경우 라이브러리 간에 상당한 DNA 횡적 전송이 있었다는 것을 알 수 있습니다.</p>


  <p>동시에 MSAL은 훨씬 더 큰 범위를 가지고 있습니다. 반면 ADAL은 Azure AD 및 ADFS를 통해 회사 및 학교 계정에서만 작동하며, MSAL은 회사 및 학교 계정, MSA, Azure AD B2C 및 ASP.NET Core ID에서 작동하며, 결국에는 ADFS&hellip;를 단일 일관된 개체 모델에서 모두 사용합니다. 그와 함께 Azure AD v1과 v2 엔드포인트 간의 차이는 중요 &ndash; 하며 증분 동의, 리소스 대신 범위, 리소스 소유자 암호 부여 제거 등 SDK에 불가피하게 반영됩니다.</p>


  <p>또한 여러 버전의 ADAL(ADAL.NET nuget만 약 280만 번 다운로드됨)을 통해 축적된 환경과 피드백은 프로그래밍 모델의 몇 가지 중요한 변경 사항, 동일한 SDK의 주요 버전 간에 일반적으로 예상하는 호환성이 손상되는 변경 사항을 넘어서는 변경&rsquo; 사항을 도입하도록 이끌었습니다.</p>


  <p>이러한 이유로 Microsoft 인증 라이브러리의 확대 범위를 &ndash; 더 잘 반영하는 새 이름을 선택하여 차이점을 명확하게 나타내기로 결정했습니다.</p>


  <p><a>ADAL에 상당한 투자가 있는 경우</a> 걱정하지 마세요&rsquo;. ADAL은 완전히 지원되며 Azure AD 회사 및 학교 계정만 지원해야 하는 애플리케이션을 빌드할 때 올바른 선택으로 유지됩니다.</p>


  <h2>피드백</h2>


  <p>빌드 중이고 MSAL의 작동을 확인하려면 목요일 오후 4시에 세션 B8084를 중지합니다. 세션 녹음은 24~48시간 후에 <a href="https://channel9.msdn.com/Events/Build/2017/B8084">https://channel9.msdn.com/Events/Build/2017/B8084</a>표시됩니다.</p>


  <p><a href="https://feedback.azure.com/forums/169401-azure-active-directory/category/164757-developer-experiences">UserVoice</a> 및 Twitter(<a href="https://twitter.com/azuread">@azuread</a><a href="https://twitter.com/vibronet">@vibronet</a>,)에서 좋은 피드백을 계속 제공해 주세요. 질문이 있는 경우 Stack Overflow를 사용하여 도움을 받으세요(<a href="https://stackoverflow.com/questions/tagged/MSAL">MSAL</a>&lsquo; 태그 사용&lsquo;).</p>


  <p><a name="_msocom_1"></a></p>


  <p>감사합니다.</p>


  <p>비토리오 베르토치 (트위터: 블로그: <a href="https://twitter.com/vibronet">@vibronet</a> &ndash; <a href="https://www.cloudidentity.com/">https://www.cloudidentity.com/</a>)</p>


  <p>주 프로그램 관리자</p>


  <p>Microsoft ID 부서</p>
