### YamlMime:Yaml
ms.openlocfilehash: 42cc77bc922307edb83951ca631b970b5846cdf4
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139897949"
Slug: microsoft-365-boosts-usage-analytics-with-azure-cosmos-db
Title: Microsoft 365 Azure Cosmos DB를 사용하여 사용 현황 분석을 향상시킵니다.
Summary: 이 게시물은 조직이 Azure Cosmos DB를 사용하여 실제 요구 사항을 충족하는 방법과 이러한 요구 사항에 미치는 차이에 대한 2부로 구성된 시리즈의 일부입니다.
Content: >-
  <p><i>이 게시물은 조직이 실제 요구 사항을 충족하기 위해 Azure Cosmos DB를 사용하는 방법과 이를 위한 차이점&rsquo;에 대한 2부로 구성된 시리즈의 일부입니다. 이 첫 번째 게시물에서는 Microsoft 365 사용 현황 분석 팀이 조치를 취하도록 유도한 과제, 새 솔루션의 아키텍처 및 프로덕션 워크로드의 마이그레이션을 살펴봅니다. <a href="https://azure.microsoft.com/en-us/blog/microsoft-365-boosts-usage-analytics-with-azure-cosmos-db-part-2/">2</a>&rsquo;부에서는 추가 구현 세부 정보 및 팀의&rsquo; 노력으로 인한 결과를 검토합니다.</i></p>


  <h2>과제: 1억 5천만 명 이상의 활성 사용자의 동작 이해</h2>


  <p>Office 365 Microsoft 365 Enterprise 솔루션 내의 주력 서비스로, 매달 수백만 명의 상용 고객과 1억 5천만 명 이상의 활성 상용 사용자가 있습니다. Office 365 라이선스 할당, 제품 수준 사용량, 사용자 수준 활동, 사이트 활동, 그룹 활동, 스토리지 사용량 등을 포함하여 서비스를 사용하는 방법에 대해 각 회사 내의 관리자에게 광범위한 보고를 제공합니다. Microsoft 365 사용 현황 분석 팀은 더 많은 Office 365 서비스를 다루는 새 보고서를 증분 방식으로 추가합니다.</p>


  <h3>이전 아키텍처</h3>


  <p>이러한 보고서를 생성하는 데 필요한 원격 분석 데이터는 최근까지 MongoDB의 커뮤니티 버전에서 실행된 사용 현황 분석이라는 시스템에서 수집되었습니다. 아래 이미지는 Azure Blob Storage에서 수집된 로그 스트림을 MongoDB에 쓰는 데 사용되는 가져오기 웹 서비스가 있는 데이터 흐름을 보여 줍니다. OData 웹 서비스는 API를 노출하여 Microsoft 365 관리 센터 내의 보고와 Microsoft Graph 통해 액세스하기 위해 저장된 데이터를 추출합니다. 매일 전체 새로 고침의 일환으로 수십억 개의 데이터 행이 시스템에 추가되었습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e3810240-a3a5-42c7-85b0-a5648bc74d25.png"><img alt="Data flow of architecture (using MongoDB as a primary data store)." border="0" height="391" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d77002ba-096f-4fe8-af07-a488d022e66b.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="" width="640"></a></p>


  <p>Office 365 제공되는 각 기본 지역에는 독립적인 사용 현황 분석 리포지토리가 있으며 모두 유사한 아키텍처를 사용합니다. 각 지역에서 데이터는 두 개의 MongoDB 클러스터에 저장되었으며, 각 클러스터는 Azure Virtual Machines에서 호스트되고 MongoDB를 실행하는 최대 50개의 VM(가상 머신)으로 구성됩니다. 각 지역의 두 클러스터는 기본/백업 구성에서 작동했습니다. 데이터는 두 클러스터 모두에 개별적으로 기록되었으며 정상 작동 시 모든 읽기가 주 클러스터에서 수행되었습니다.</p>


  <p>각 클러스터는 쓰기 작업이 많은 워크로드를 위해 설계되었습니다. 쓰기 속도를 높이기 위해 MongoDB 분할 키와 같은 GUID(임의 전역 고유 식별자)를 사용하여 개별 클러스터 노드 간에 데이터를 분할했습니다. 매일 몇 시간 동안 Azure Blob Storage의 새 데이터가 다중 스레드 가져오기를 사용하여 작성되었습니다. 각 스레드는 모든 클러스터 노드에 한 번에 2,000개의 레코드 일괄 처리를 작성하고 모든 레코드가 완료될 때까지 기다렸다가 다음 일괄 처리인 2,000개부터 시작합니다.</p>


  <h3>문제 및 고통</h3>


  <p>이 아키텍처는 과도한 관리 노력과 비용에서 제한된 성능, 안정성, 가용성 및 확장성에 이르기까지 Microsoft 365 사용 현황 분석 팀에 몇 가지 문제를 제시했습니다. 몇 가지 특정 통증이 포함되었습니다.</p>


  <ul>
   <li><b>성능이 저하되었습니다.</b> 읽기는 비효율적이었고 모든 노드를 쿼리해야 하는 분할 키로 임의의 GUID를 사용했기 때문에 보고서가 시간 초과되는 경우가 있습니다. 또한 새 데이터를 가져오는 데 매일 몇 시간 동안 쓰기 및 읽기가 동시에 주 클러스터 노드에 도달하면서 성능이 저하되었습니다. 설상가상으로 내부 데이터베이스 오류로 인해 자주 발생하는 일괄 처리 쓰기 중에 실패한 경우 2,000개의 레코드를 모두 다시 작성해야 했습니다.</li>
   <li><b>전임 관리.</b> MongoDB 클러스터의 유지 관리는 수동적이고 시간이 많이 걸리기 때문에 인적 자원이 클러스터 관리에 시간을 할애해야 했습니다. 이로 인해 팀에 불필요한 리소스 제약이 발생하므로 대역폭을 사용하여 새 보고서를 시장에 출시합니다. 또한 MongoDB 3.2의 버그로 모든 서버를 매주 다시 시작해야 했습니다. 또한 가상 네트워크 내의 각 클러스터 노드에서 보안 인증서를 갱신하려면 매년 완료해야 했으며 클러스터당 2주간의 추가 작업이 필요했습니다. 이러한 일상적인 관리 작업 중에 한 클러스터 노드에서 작업이 실패한 경우 문제가 해결될 때까지 전체 클러스터가 중단되었습니다.</li>
   <li><b>높은 비용.</b> MongoDB 백업 클러스터를 실행하는 데 상당한 비용이 발생했으며 대부분의 경우 유휴 상태로 유지되었습니다. 이러한 비용은 Office 365 사용량이 증가함에 따라 계속 증가했습니다.</li>
   <li><b>확장성이 제한적입니다. </b> MongoDB가 처음 배포된 지 3년도 채 되지 않아 가장 큰 리포지토리는 거의 최대 용량이었습니다. 여분의 용량은 더 많은 제품과 보고서가 추가됨에 따라 6 개월 이내에 소진 될 것으로 예상되었으며 쉽게 확장 할 수있는 방법이 없었습니다.</li>
  </ul>


  <p>팀은 기존 솔루션의 아키텍처 제한 사항을 처리하는 동안 사용 현황 분석 공간에서 고객을 위해 사용하도록 설정하고자 하는 새로운 대규모 기능의 라인업을 앞세우고 있었습니다. 팀은 MongoDB를 실행하는 자체 유지 관리 VM에서 완전 관리형 데이터베이스 서비스로 전환할 수 있는 새롭고 비용 효율적이고 유지 관리가 낮은 솔루션을 모색하기 시작했습니다.</p>


  <h2>Azure Cosmos DB의 지리적 배포: 향상된 아키텍처의 키</h2>


  <p>이 팀은 옵션을 살피고 MongoDB를 글로벌 배포 및 거의 무제한 탄력적 확장성을 위해 설계된 완전 관리형 글로벌 분산 다중 모델 데이터베이스 서비스인 <a href="https://azure.microsoft.com/en-us/services/cosmos-db/">Azure Cosmos DB</a>로 바꾸기로 결정했습니다. 첫 번째 단계는 필요한 인프라를 배포하는 것이었습니다.</p>


  <p>이 팀은 MongoDB에서 사용한 2개 클러스터 구성인 기본/백업과 달리 Azure Cosmos DB에서 활성 데이터의 턴키 전역 배포를 활용했습니다. 데이터 <a href="https://azure.microsoft.com/en-us/global-infrastructure/regions/">복제를 위해</a> 여러 <a href="https://azure.microsoft.com/en-us/global-infrastructure/regions/">Azure 지역을</a> 사용하면 Azure Cosmos DB를 사용하여 활성 데이터 복제 및 데이터 일관성을 투명하게 처리하면서 모든 지역에 쉽게 쓰고, 모든 지역에서 읽고, 데이터베이스 인스턴스&mdash;에서 워크로드의 균형을 더 잘 조정하는 방법을 제공했습니다.</p>


  <p>&ldquo;진정한 지역 복제는 MongoDB와 관련이 없는 것으로 간주되었기 때문에 이전 아키텍처는 주 클러스터와 백업 클러스터&rdquo; 모두에 데이터를 별도로 작성했다고 Microsoft 365 사용 현황 분석 팀의 소프트웨어 엔지니어인 Xiaodong Wang은 말합니다. &ldquo;Azure Cosmos DB를 사용하면 투명한 지역 배포를 구현하는 데 마우스 클릭 몇 분&mdash;이 걸렸습니다.&rdquo;</p>


  <p>아래 이미지는 현재 사용 현황 분석 시스템의 내부 아키텍처를 보여 줍니다. Office 365 제공되는 각 기본 지역은 해당 지리 내의 두 Azure 지역에 지리적으로 복제된 Cosmos 데이터베이스에서 제공됩니다. 정상적인 작동 조건에서 읽기는 둘 다로 라우팅되는 동안 각 지리 내의 한 지역으로 쓰기가 전송됩니다. 어떤 이유로 한 지역에서 읽기를 제공하지 못하는 경우 해당 읽기는 동일한 지리를 제공하는 다른 지역으로 자동으로 라우팅됩니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8f19d688-c2e7-4d8d-9c55-2f357a1e4820.png"><img alt="New usage analytics architecture, with geographically distributed reads and writes. (Two of n geographies shown; others follow a similar pattern.)" border="0" height="306" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/dafd8ce5-1890-4c78-86c7-228a53bfea59.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="" width="640"></a></p>


  <h3>프로덕션 워크로드를 Azure Cosmos DB로 마이그레이션</h3>


  <p>개발자는 <a href="https://docs.microsoft.com/en-us/azure/cosmos-db/sql-api-introduction">Azure Cosmos DB SQL(Core) API</a>를 사용하여 읽기 및 쓰기를 수용하기 위해 새 인프라에 새 데이터 액세스 계층을 작성하기 시작했습니다. 새 시스템을 온라인으로 가져온 후 팀은 이전 시스템과 새 시스템 모두에 새로운 프로덕션 데이터를 쓰기 시작했으며, 이전 시스템에서 프로덕션 보고서를 계속 제공하기 시작했습니다.</p>


  <p>개발자는 새 솔루션에 대해 복제해야 하는 보고서를 한 번에 하나씩 처리하기 시작했습니다. 대부분의 보고서에 대해 데이터베이스 내에 별도의 Cosmos 컨테이너가 만들어졌으므로 시스템이 온라인 상태가 된 후 각 컬렉션을 별도로 확장할 수 있습니다. 가장 큰 보고서는 먼저 Azure Cosmos DB가 처리할 수 있도록 해결되었으며, 새 보고서가 확인되면 팀은 새 환경에서 서비스를 제공하기 시작했습니다.</p>


  <p>Azure Cosmos DB에서 모든 기능과 보고서를 제공하고 모든 기능이 예상대로 실행된 후 팀은 이전 시스템에 새 데이터 쓰기를 중지하고 MongoDB 환경을 서비스 해제했습니다. 개발 팀은 Azure Cosmos DB로 이동하고, 데이터 액세스 계층을 다시 작성하고, 서비스 중단 없이 모든 지역에 대한 모든 보고서를 최종 사용자에게 마이그레이션할 수 있었습니다.</p>


  <p>이 시리즈의 <a href="https://azure.microsoft.com/en-us/blog/microsoft-365-boosts-usage-analytics-with-azure-cosmos-db-part-2/">2부</a>에서는 Azure Cosmos DB의 Microsoft 365 사용 현황 분석 팀&rsquo; 구현으로 인한 추가 구현 세부 정보 및 결과를 다룰&#39;있습니다.</p>
