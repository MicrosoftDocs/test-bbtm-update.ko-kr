### YamlMime:Yaml
ms.openlocfilehash: aa75252317c906c5352db5d247c51ee8f970a6d7
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899882"
Slug: backing-up-documentdb-databases
Title: DocumentDB 데이터베이스 백업
Summary: 고객 피드백에 따라 DocumentDB 팀은 모든 고객이 성공적인 백업 계획을 수립할 수 있도록 백업 전략을 개발하고 확인했습니다.
Content: >-
  <p>2016년 9월 23일 현재 업데이트: 이제 자동 온라인 백업 및 복원 기능을 사용할 수 있으며 DocumentDB 설명서 문서를 사용하여 <a href="https://azure.microsoft.com/documentation/articles/documentdb-online-backup-and-restore/"><em>자동 온라인 백업 및 복원</em></a> 에 설명되어 있습니다.</p>


  <p><a href="https://azure.microsoft.com/services/documentdb/">DocumentDB</a> 팀이 자주 묻는 질문 중 하나는 내 데이터베이스를 백업하는 데 권장되는 패턴은 &ldquo;무엇인가요?&rdquo; 백업은 BCDR(비즈니스 연속성 및 재해 복구) 계획의 기본 구성 요소이며, 절대적으로 잘못될 여유가 없는 것입니다.</p>


  <p>DocumentDB 서비스는 내부적으로 지역 중복성으로 백업됩니다. 이는 지역별 오류 발생에도 고객 데이터가 안전하게 유지되도록 하기 위해 수행하는 데이터 보호 조치입니다. 그러나 고객으로부터 개별 비즈니스 요구 사항에 따라 보관 및 복원할 수 있는 자체 추가 백업을 갖고 싶다는 소식을 들었습니다. 고객과의 관계를 통해 모든 고객이 성공적인 BCDR 계획을 수립할 수 있도록 백업 전략을 개발하고 확인했습니다.</p>


  <h1>시나리오</h1>


  <p>BCDR 응답을 트리거하는 일반적인 이벤트는 다음 두 가지 시나리오로 나눌 수 있습니다.</p>


  <h4><em>이런! 실수로 데이터를 삭제했습니다.</em></h4>


  <p>데이터가 실수로 삭제되거나 잘못된 형식이 되는 프로그래밍 방식 또는 사용자 오류입니다.</p>


  <h4><em>어 오! 데이터 센터에 대한 파이버 링크는 백 hoe에 의해 절단되었습니다!</em></h4>


  <p>서비스 지역을 오프라인으로 전환한 인시던트에 영향을 주는 가용성입니다.</p>


  <h2>Blob 기반 백업, &ldquo;Oops&rdquo; 시나리오</h2>


  <p>이 실패 사례에 대한 비즈니스 연속성을 제공하는 권장 전략은 DocumentDB 계정에 있는 모든 데이터의 컬렉션 수준 백업을 유지하는 것입니다.</p>


  <p>구현에는 다음 두 가지 옵션이 있습니다.</p>


  <ol>
   <li>Azure Data Factory를 사용한 In-Cloud 백업: 이 작업을 수행하는 방법에 대한 정보는 <a href="https://azure.microsoft.com/en-us/documentation/articles/data-factory-azure-documentdb-connector/">Azure Data Factory를 사용하여 DocumentDB 간에 데이터를 이동하는</a> 방법을 참조하세요. 이 옵션은 보다 균일한 데이터 집합 및 대규모로 잘 작동합니다.</li>
   <li><a href="https://www.microsoft.com/download/details.aspx?id=46436">DocumentDB 데이터 마이그레이션 도구를</a> 사용하는 온-프레미스(+ 클라우드) 백업: 이 도구를 사용하여 물리적 또는 가상 Windows 머신(원본: <a href="https://github.com/azure/azure-documentdb-datamigrationtool">GitHub</a>)을 사용하여 백업을 수행할 수 있습니다. 이를 통해 로컬 스토리지 또는 Azure Blob Storage에 데이터를 출력할 수 있습니다(추가 지역 중복성을 위해).</li>
  </ol>


  <h3>DocumentDB 마이그레이션 도구 사용</h3>


  <p><a href="https://azure.microsoft.com/en-us/documentation/articles/documentdb-import-data/#export-to-json-file">여기에</a> 설명된 대로 내보내기 작업을 실행하려면 이 도구를 사용합니다. 요약 페이지에서 내보내기 작업을 실행하는 대신 다음 스크린샷과 같이 데이터 마이그레이션 도구 창의 오른쪽 위에 있는 [보기 명령] 단추를 눌러 명령을 볼 수 있습니다. 그런 다음 기본 명령이 명령줄 미리 보기 창에 표시됩니다.</p>


  <p><strong>참고:</strong> 원본 정보 창의 컬렉션 필드에 정규식이 허용됩니다.</p>


  <p><img alt="Backing up DocumentDB Databases" border="0" height="521" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/bc32d59b-bb84-4b10-a7b0-7a659a510968.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="DocumentDB 데이터베이스 백업" width="624"></p>


  <p>이제 이 명령을 데이터 마이그레이션 도구의&nbsp; 명령줄 코어로 사용하고, 복사하고, 실행할 수 dt.exe.</p>


  <p>일반 일정에 따라 이 명령을 실행하는 쉬운 방법은 Windows 작업 스케줄러를 사용하는 것입니다.</p>


  <p>작업 스케줄러를 시작하려면 Win+S(검색)를 누르고 작업 스케줄러를 입력하기만 하면 됩니다. 오른쪽 창에서 아래 창이 표시되는 작업 만들기를 클릭합니다. 여기서 작업의 이름을 지정하고 설명을 추가할 수 있습니다. 사용자가 로그인했는지 여부에 관계없이 작업을 실행하도록 설정할 수도 있습니다(권장).</p>


  <p><img alt="Backing up DocumentDB Databases" border="0" height="449" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/63922a04-93d6-4e0e-875e-3d967ede52de.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="DocumentDB 데이터베이스 백업" width="624"><br>

  트리거 탭으로 전환하고 새로 만들기를 클릭하여 트리거를 설정합니다. 여기서 태스크가 실행되도록 하는 조건을 설정할 수 있습니다. 아래 스크린샷에서 작업은 매일 오전 12시에 트리거됩니다. 확인을 눌러 해당 트리거를 저장합니다.</p>


  <p><img alt="Backing up DocumentDB Databases" border="0" height="504" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/41a9d6c3-1707-4fbb-9326-d500a7850360.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="DocumentDB 데이터베이스 백업" width="624"></p>


  <p>작업 탭으로 전환하고 새로 만들기를 클릭하여 실제 백업 작업을 시작하는 명령을 설정합니다. 찾아보기를 클릭하고 마이그레이션 도구의 압축을 푼 폴더에서 dt.exe 선택합니다.</p>


  <p>인수 추가(선택 사항) 텍스트 상자에서 마이그레이션 도구에서 복사한 명령을 지나갔습니다.</p>


  <p>[확인]을 눌러 새 작업 창을 닫은 다음[확인]을 눌러 [작업 만들기]를 저장하고 닫습니다.</p>


  <p><img alt="Backing up DocumentDB Databases" border="0" height="508" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b869d798-023b-40ae-8c06-7e5086dfa335.png" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="DocumentDB 데이터베이스 백업" width="624"></p>


  <p>이 예약된 작업은 이제 예약할 때 구성한 설정을 사용하여 마이그레이션 도구를 시작하고 DocumentDB 데이터베이스에 대한 백업을 자동화합니다.</p>


  <p>판독기는 두 번째 실행에서 백업을 덮어쓸 가능성이 있으므로 이 작업으로 인해 오류가 발생할 수 있음을 알아차렸을 수 있습니다. 스냅샷을 유지하는 방법은 dt.exe 호출하기 전에 고유한 문자(예: 날짜)로 새 출력 파일 이름을 생성하는 PowerShell 스크립트에서 dt.exe 명령을 래핑하는 것입니다.</p>


  <h3>데이터 복원</h3>


  <p>데이터가 Azure Blob 저장소에 저장된 경우 Azure Data Factory를 사용하여 Document DB의 새 컬렉션(또는 잘못된 쓰기의 경우 삭제 및 다시 만들기)에 신속하게 다시 쓸 수 있습니다. 이 옵션은 균일한 구조의 큰 데이터 세트에 적합합니다.</p>


  <p>데이터를 복원하는 다른 옵션은 원본 및 대상이 반대로 바뀌는 마이그레이션 도구를 실행하는 것입니다. 즉, 원본은 백업 파일이고 대상은 DocumentDB 계정입니다.</p>


  <h2>이중 쓰기,&ldquo;Outage&rdquo; 시나리오</h2>


  <p>이 시나리오는 다른 지역의 보조 DocumentDB 데이터베이스 계정에 이중 쓰기를 수행하는 것이 가장 좋습니다. 권장 패턴은 다음 중 하나입니다.</p>


  <ul>
   <li>두 DocumentDB 계정에 대한 쓰기를 투명하게 이중 커밋하도록 애플리케이션&rsquo; 데이터 액세스 계층을 디자인합니다.</li>
   <li>DocumentDB 계정에 대한 모든 요청이 전달되는 간단한 REST 인터페이스를 노출하는 <a href="https://azure.microsoft.com/services/app-service/web/">Azure Web App</a> 을 실행합니다. 이 통과 서비스는 모든 클라이언트에 대한 모든 쓰기의 이중 커밋을 관리합니다. 이 패턴은 클라이언트의 내구성 부담을 줄이는 이점이 있습니다.</li>
   <li>정기적인 일정에 따라 다음 단계를 수행하는 <a href="https://azure.microsoft.com/services/cloud-services/">Azure Cloud Service</a> 를 실행합니다. <ul>
    <li>이 작업이 마지막으로 실행된 &ldquo;시간보다 큰 ts&rdquo; 속성이 있는 모든 문서를 찾습니다.</li>
    <li>백업 지역의 데이터베이스에서 각 문서(고유 ID로 주소 지정)를 만들거나 업데이트합니다. 이 패턴은 쓰기 대기 시간을 줄이고 처리량을 늘리기 위해 초 미만 복구 지점 목표(데이터 손실의 최대 시간 기간)를 대체합니다.</li>
   </ul>
   </li>
  </ul>


  <h3>데이터 복원</h3>


  <p>주 지역의 가용성에 영향을 주는 경우 읽기 및 쓰기는 보조 지역으로 계속 이동할 수 있습니다. 주 지역을 다시 사용할 수 있는 경우 가장 쉬운 복구 전략은 클라이언트에서 보조 지역으로의 쓰기를 일시 중단하고 DocumentDB 마이그레이션 도구를 사용하여 주 지역을 다시 빌드하는 것입니다.</p>


  <p>Windows 환경에서 실행하지 않는 경우 다음 두 가지 옵션이 있습니다.</p>


  <ul>
   <li>Azure에서 Windows VM을 시작하여 마이그레이션 도구를 실행합니다.</li>
   <li>보조 지역을 쿼리하고 모든 JSON 개체를 주 지역에 다시 쓰는 DocumentDB SDK를 사용하여 복구 스크립트를 작성합니다.</li>
  </ul>


  <h1>장단점</h1>


  <p>위의 제안된 패턴에는 다음과 같은 절전이 포함됩니다.</p>


  <div align="center">

  <table align="center" border="0" cellpadding="2" cellspacing="0" width="773">
   <tbody>
    <tr>
     <td valign="top" width="218"><strong>기능</strong></td>
     <td valign="top" width="277"><strong>Blob 기반 백업</strong></td>
     <td valign="top" width="276"><strong>이중 쓰기</strong></td>
    </tr>
    <tr>
     <td valign="top" width="218">
     <p align="left"><strong>지정 시간 백업</strong></p>
     </td>
     <td valign="top" width="277">
     <p align="left">클라이언트에서 쓰기를 일시 중단해야 합니다.</p>
     </td>
     <td valign="top" width="276">
     <p align="left">클라이언트에서 쓰기를 일시 중단해야 합니다.</p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="218">
     <p align="left"><strong>컬렉션 간 일관성</strong></p>
     </td>
     <td valign="top" width="277">
     <p align="left">클라이언트에서 쓰기를 일시 중단해야 합니다.</p>
     </td>
     <td valign="top" width="276">
     <p align="left">클라이언트에서 두 쓰기가 항상 성공하도록 하는 경우 컬렉션 간 일관성을 유지할 수 있습니다.</p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="218">
     <p align="left"><strong>지리적 중복도</strong></p>
     </td>
     <td valign="top" width="277">
     <p align="left">온-프레미스 스토리지를 사용하는 경우 낮음, Blob Storage를 사용하는 경우 더 높습니다.</p>
     </td>
     <td valign="top" width="276">
     <p align="left">데이터의 지리적 분리로 인한 중복성 높음</p>
     </td>
    </tr>
    <tr>
     <td valign="top" width="218">
     <p align="left"><strong>잘못된 쓰기 롤백</strong></p>
     </td>
     <td valign="top" width="277">
     <p align="left">가능</p>
     </td>
     <td valign="top" width="276">
     <p align="left">을 통해 누수하고 백업에 기록합니다.</p>
     </td>
    </tr>
   </tbody>
  </table>

  </div>


  <h1>요약</h1>


  <p>위의 전략 중 하나 이상을 사용하여 DocumentDB 관리자는 자연 재해 또는 기타 중단이 발생할 경우 데이터를 안전하게 사용할 수 있도록 할 수 있습니다. 위의 두 가지 전략을 동시에 사용하면 논의된 두 시나리오를 모두 다루고 가장 포괄적인 안전망을 제공합니다.</p>


  <p>DocumentDB 팀은 서비스에 대한 백업 지원을 적극적으로 개선하고 있지만 현재 지침은 핫 토픽이므로 공유하고 싶었습니다.</p>


  <p>DocumentDB에 대한 자세한 내용은 <a href="https://azure.microsoft.com/services/documentdb/">DocumentDB 제품 페이지를 참조하세요</a>. 도움이 필요하거나 질문이나 피드백이 있는 경우 <a href="https://stackoverflow.com/questions/tagged/azure-documentdb">Stack Overflow의 개발자 포럼에</a> 문의하거나 DocumentDB 엔지니어링 팀과 1:1 채팅을 예약하세요.</p>


  <p>Twitter <a href="https://twitter.com/DocumentDB">@DocumentDB</a>에서 팔로우하여 최신 DocumentDB 뉴스 및 기능을 최신 상태로 유지하세요.</p>
