### YamlMime:Yaml
ms.openlocfilehash: 66492934eb136e2632ebbe981c93310d98593ecb
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908235"
Slug: new-multi-tenant-patterns-for-building-saas-applications-on-sql-database
Title: SQL Database SaaS 애플리케이션을 빌드하기 위한 새로운 다중 테넌트 패턴
Summary: SQL Database 서로 다른 데이터베이스 테넌시 모델을 사용하여 확장된 샘플 SaaS 애플리케이션 세트의 가용성을 발표하게 되어 기쁩니다.
Content: >-
  <p>Were&rsquo;는 각각 SQL Database 다른 데이터베이스 테넌시 모델을 사용하여 확장된 샘플 SaaS 애플리케이션 세트의 가용성을 발표하게 되어 기쁩니다. 각 샘플에는 고유한 SaaS 앱 프로젝트를 시작하는 데 도움이 되는 일련의 관리 스크립트와 자습서가 포함되어 있습니다. 이러한 샘플은 SQL Database SaaS 애플리케이션 개발을 가속화할 수 있는 다양한 SaaS 중심 디자인 및 관리 패턴을 보여 줍니다.</p>


  <p><a href="https://azure.microsoft.com/en-us/blog/saas-patterns-accelerate-saas-application-development-on-sql-database/">이는 올해 초 출시된 샘플 Wingtip SaaS 애플리케이션</a>의 확장입니다.</p>


  <h2>SaaS 앱 패턴 SQL Database</h2>


  <p>각 샘플에서 동일한 Wingtip Tickets 애플리케이션이 구현됩니다. 이 앱은 간단한 이벤트 목록 및 티켓팅 SaaS 앱으로, 각 장소는 이벤트, 티켓 가격, 고객 및 티켓 판매가 있는 테넌트입니다. 관리 스크립트 및 자습서와 함께 앱을 통해 엔드투엔드 SaaS 시나리오를 보여 줍니다. 여기에는 테넌트 프로비전, 성능 모니터링 및 관리, 스키마 관리, 테넌트 간 보고 및 분석이 모두 대규모로 포함됩니다.</p>


  <p>세 가지 샘플은 사용되는 기본 데이터베이스 테넌시 모델에서 다릅니다. 첫 번째는 단일 테넌트 애플리케이션과 격리된 단일 테넌트 데이터베이스를 사용합니다. 두 번째는 다중 테넌트 앱과 테넌트별 데이터베이스를 사용합니다. 세 번째 샘플은 다중 테넌트 앱과 분할된 다중 테넌트 데이터베이스를 사용합니다.</p>


  <p><img alt="Different versions of Wingtip tickets SaaS application" border="0" height="757" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8a42dbac-00ba-4357-ae3f-65edceccf25d.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="Wingtip 티켓 SaaS 애플리케이션의 다른 버전" width="1888"></p>


  <h3>독립 실행형 애플리케이션</h3>


  <p>이 샘플에서는 단일 테넌트 데이터베이스가 있는 단일 테넌트 애플리케이션을 사용합니다. 샘플은 여러 테넌트에 대해 배포할 수 있습니다. 각 테넌트&rsquo; 앱은 별도의 Azure 리소스 그룹에 배포됩니다. 서비스 공급자&rsquo; 구독 또는 테넌트 구독에 있을 수 있으며 테넌&rsquo;&rsquo;트 대신 공급자가 관리할 수 있습니다. 이 패턴은 가장 크게 테넌트를 격리할 수 있지만 여러 테넌트 간에 리소스를 공유할 수 없기 때문에 비용이 가장 높은 편입니다.</p>


  <p>이 SaaS 패턴에 관심이 있는 경우 GitHub <a href="https://aka.ms/wingtipticketssaas-sa" target="_blank">대한 자습서</a> 및 <a href="https://github.com/Microsoft/WingtipTicketsSaaS-StandaloneApp">코드를</a> 확인하세요.</p>


  <h3>테넌트별 데이터베이스</h3>


  <p>테넌트별 데이터베이스 모델은 테넌트 격리와 관련이 있고 공유 리소스를 비용 효율적으로 사용할 수 있는 중앙 집중식 서비스를 실행하려는 서비스 공급자에게 효과적입니다. 데이터베이스는 각 장소(또는 테넌트)에 대해 만들어지며, 모든 데이터베이스가 중앙에서 관리됩니다. 탄력적 풀에서 호스트하여 테넌트에서 예측할 수 없는 사용 패턴을 활용하는 비용 효율적이고 쉬운 성능 관리를 제공할 수 있습니다. 카탈로그 데이터베이스는 테넌트와 해당 데이터베이스 간의 매핑을 포함합니다. 이 매핑은 Elastic Database 클라이언트 라이브러리의 분할된 데이터베이스 맵 관리 기능을 사용하여 관리되며, 애플리케이션에 대한 효율적인 연결 관리도 제공합니다.</p>


  <p>이 SaaS 패턴에 관심이 있는 경우 GitHub <a href="https://aka.ms/wingtipticketssaas-dpt">대한 자습서</a> 및 <a href="https://github.com/Microsoft/WingtipTicketsSaaS-DbPerTenant">코드를</a> 확인하세요.</p>


  <h3>분할된 다중 테넌트 데이터베이스</h3>


  <p>다중 테넌트 데이터베이스는 더 낮은 비용과 간단한 관리를 찾는 서비스 공급자에게 효과적이며 테넌트 격리를 줄여도 괜찮습니다. 이 모델을 사용하면 많은 수의 테넌트가 단일 데이터베이스로 압축되어 테넌트당 비용이 절감됩니다. 이 모델은 테넌트당 소량의 데이터 스토리지만 필요한 경우 잘 작동합니다. 이 모델에서는 더 많은 유연성을 사용할 수 있으므로 동일한 데이터베이스의 여러 테넌트에서 비용을 최적화하거나 데이터베이스의 단일 테넌트에서 격리를 최적화할 수 있습니다. 테넌트가 프로비전된 경우 또는 나중에 애플리케이션 디자인에 영향을 주지 않고 테넌트별로 선택할 수 있습니다.</p>


  <p>이 SaaS 패턴에 관심이 있는 경우 GitHub <a href="https://aka.ms/wingtipticketssaas-mt">대한 자습서</a> 및 <a href="https://github.com/Microsoft/WingtipTicketsSaaS-MultiTenantDB">코드를</a> 확인하세요.</p>


  <h2>시작</h2>


  <p>위에서 설명한 <a href="https://docs.microsoft.com/en-us/azure/sql-database/saas-tenancy-app-design-patterns">SaaS 앱 패턴에</a> 대해 자세히 알아봅니다. 자습서를 확인하여 이러한 SaaS 앱 패턴 중 하나를 시작 <a href="https://aka.ms/wingtipticketssaas">합니다</a>. 여기서 앱 배포 및 관리에 대한 지침이 표시됩니다. 샘플 및 패턴에 대해 어떻게 생각하는지, 그리고 다음에 추가되는 것을 보고 싶은 것을&rsquo; 알려주세요<a target="_blank">saasfeedback@microsoft.com</a>.</p>
