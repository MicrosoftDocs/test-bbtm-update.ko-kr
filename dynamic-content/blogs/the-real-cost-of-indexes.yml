### YamlMime:Yaml
ms.openlocfilehash: 5a347bfef6dc95179b66d7922e2c973258c4ccf2
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139899590"
Slug: the-real-cost-of-indexes
Title: 인덱스의 실제 비용
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] 이전 블로그 게시물에서 성능을 향상시키고 I/O 사용량을 줄이기 위해 적용된 인덱스를 만드는 방법을 설명했습니다. 적용된 인덱스는 비 유형입니다-...'
Content: "<p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>이전 블로그 게시물에서 성능을 향상시키고 I/O 사용량을 줄이기 위해 적용된 인덱스를 만드는 방법을 설명했습니다. 적용된 인덱스는 모든 데이터의 테이블 검색보다 더 나은 성능을 만들기 위해 쿼리의 모든 열을 \"포괄\"하는 비클러스터형 인덱스의 유형입니다. 한 관찰 독자는 적용된 인덱스를 만드는 것과 관련된 재정적 비용이 있다고 지적했습니다. 그는 옳았다, SQL Azure 우리의 서버에 덮여 인덱스 저장 하는 데 필요한 방에 대 한 요금. 나는 내 커버 인덱스의 비용을 결정하기 위해 몇 가지 Transact SQL 쿼리를 작성하는 것이 재미있을 것이라고 생각; 그건 내가이 블로그 게시물에서 무엇을 할 것입니다.</p>  <h2>적용된 인덱스 리소스 사용</h2>  <p>무료 적용된 인덱스 같은 것은 없습니다. SQL Server 또는 SQL Azure 적용된 인덱스에 있는지 여부에 관계없이 리소스를 사용합니다. SQL Server 사용하면 인덱스의 추가 RAM 및 하드 드라이브 공간을 구입하여 SQL Server 실행하기 위해 컴퓨터를 구입할 때 일부 비용을 선불로 지불합니다. 보증, 백업, 전원, 냉각 및 유지 관리와 같은 온-프레미스 SQL Server 관련된 다른 비용이 있습니다. 이러한 모든 작업은 매월 계산하기 어렵고, 시간이 지남에 따라 컴퓨터를 감가상각해야 하며, 일부 비용은 하드 드라이브 오류와 같이 가변적이고 계획되지 않습니다. 이는 전체 서버 운영 비용이며, 단일 적용 대상 인덱스의 비용을 드릴다운하고 확인할 수 있는 방법은 없습니다. 이 경우 Transact-SQL 문을 실행하여 인덱스의 월별 비용을 계산하는 것이 좋지 않을까요? SQL Azure 사용하면 그렇게 할 수 있습니다.</p>  <h2>SQL Azure 가격 책정</h2>  <p>현재 SQL Azure 매월 기가바이트당 $9.99의 요금이 부과됩니다(공식 가격은 여기에서 확인할 수 있음). 이는 저장하려는 데이터의 실제 크기가 데이터베이스의 상한 크기가 아닌 범위의 비용입니다. 즉, 1GB 웹 버전 데이터베이스에 몇 메가바이트만 저장하는 경우 비용은 한 달에 $9.99입니다. 범위는 1, 5, 10, 20, 30, 40 및 50기가바이트이며, 데이터를 저장하기 위해 바이트당 비용을 낮추는 크기에 가깝습니다. 다음은 바이트당 비용을 계산하는 Transact-SQL 문입니다.</p>  <pre class=\"csharpcode\"><span class=\"kwrd\">DECLARE</span> @SizeInBytes bigint  <span class=\"kwrd\">SELECT</span> @SizeInBytes =  (<span class=\"kwrd\">SUM</span>(reserved_page_count) * 8192)      <span class=\"kwrd\">FROM</span> sys.dm_db_partition_stats    <span class=\"kwrd\">DECLARE</span> @Edition sql_variant  <span class=\"kwrd\">SELECT</span>  @Edition =DATABASEPROPERTYEX ( DB_Name() , <span class=\"str\">'Edition'</span> )    <span class=\"kwrd\">SELECT</span>    (<span class=\"kwrd\">CASE</span>       <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 1 <span class=\"kwrd\">THEN</span> (<span class=\"kwrd\">CASE</span> @Edition <span class=\"kwrd\">WHEN</span> <span class=\"str\">'Web'</span> <span class=\"kwrd\">THEN</span> 9.99 <span class=\"kwrd\">ELSE</span> 99.99 <span class=\"kwrd\">END</span>)      <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 5 <span class=\"kwrd\">THEN</span> (<span class=\"kwrd\">CASE</span> @Edition <span class=\"kwrd\">WHEN</span> <span class=\"str\">'Web'</span> <span class=\"kwrd\">THEN</span> 49.95 <span class=\"kwrd\">ELSE</span> 99.99 <span class=\"kwrd\">END</span>)       <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 10 <span class=\"kwrd\">THEN</span> 99.99        <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 20 <span class=\"kwrd\">THEN</span> 199.98      <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 30 <span class=\"kwrd\">THEN</span> 299.97                   <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 40 <span class=\"kwrd\">THEN</span> 399.96                    <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 50 <span class=\"kwrd\">THEN</span> 499.95                        <span class=\"kwrd\">END</span>)  / @SizeInBytes</pre>    <h2>적용된 인덱스의 비용</h2>    <p>이제 바이트당 실제 비용을 파악했으므로 각 인덱스 비용을 파악해 보겠습니다. Transact-SQL 클러스터되지 않은 모든 인덱스에서 인덱스가 적용되는 인덱스를 알 수 없으며 인덱스 작성자만 인덱스가 생성된 이유를 알 수 있습니다.</p>    <p>다음은 클러스터되지 않은 각 인덱스당 월별 비용을 가져오기 위한 몇 가지 Transact SQL.</p>    <pre class=\"csharpcode\"><span class=\"kwrd\">DECLARE</span> @SizeInBytes bigint  <span class=\"kwrd\">SELECT</span> @SizeInBytes =  (<span class=\"kwrd\">SUM</span>(reserved_page_count) * 8192)      <span class=\"kwrd\">FROM</span> sys.dm_db_partition_stats    <span class=\"kwrd\">DECLARE</span> @Edition sql_variant  <span class=\"kwrd\">SELECT</span>  @Edition =DATABASEPROPERTYEX ( DB_Name() , <span class=\"str\">'Edition'</span> )    <span class=\"kwrd\">DECLARE</span> @CostPerByte <span class=\"kwrd\">float</span>    <span class=\"kwrd\">SELECT</span>    @CostPerByte = (<span class=\"kwrd\">CASE</span>       <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 1 <span class=\"kwrd\">THEN</span> (<span class=\"kwrd\">CASE</span> @Edition <span class=\"kwrd\">WHEN</span> <span class=\"str\">'Web'</span> <span class=\"kwrd\">THEN</span> 9.99 <span class=\"kwrd\">ELSE</span> 99.99 <span class=\"kwrd\">END</span>)      <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 5 <span class=\"kwrd\">THEN</span> (<span class=\"kwrd\">CASE</span> @Edition <span class=\"kwrd\">WHEN</span> <span class=\"str\">'Web'</span> <span class=\"kwrd\">THEN</span> 49.95 <span class=\"kwrd\">ELSE</span> 99.99 <span class=\"kwrd\">END</span>)       <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 10 <span class=\"kwrd\">THEN</span> 99.99        <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 20 <span class=\"kwrd\">THEN</span> 199.98      <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 30 <span class=\"kwrd\">THEN</span> 299.97                   <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 40 <span class=\"kwrd\">THEN</span> 399.96                    <span class=\"kwrd\">WHEN</span> @SizeInBytes/1073741824.0 &lt; 50 <span class=\"kwrd\">THEN</span> 499.95                        <span class=\"kwrd\">END</span>)  / @SizeInBytes</pre>    <pre class=\"csharpcode\"><span class=\"kwrd\">SELECT</span> idx.name, <span class=\"kwrd\">SUM</span>(reserved_page_count) * 8192 <span class=\"str\">'bytes'</span>,    (<span class=\"kwrd\">SUM</span>(reserved_page_count) * 8192) * @CostPerByte <span class=\"str\">'cost'</span>  <span class=\"kwrd\">FROM</span> sys.dm_db_partition_stats <span class=\"kwrd\">AS</span> ps      <span class=\"kwrd\">INNER</span> <span class=\"kwrd\">JOIN</span> sys.indexes <span class=\"kwrd\">AS</span> idx <span class=\"kwrd\">ON</span> idx.object_id = ps.object_id <span class=\"kwrd\">AND</span> idx.index_id = ps.index_id  <span class=\"kwrd\">WHERE</span> type_desc = <span class=\"str\">'NONCLUSTERED'</span>  <span class=\"kwrd\">GROUP</span> <span class=\"kwrd\">BY</span> idx.name  <span class=\"kwrd\">ORDER</span> <span class=\"kwrd\">BY</span> 3 <span class=\"kwrd\">DESC</span></pre>    <p>    <p>Adventure Works 데이터베이스의 결과는 다음과 같습니다.</p>    <p><a href=\"\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"clip_image001\" border=\"0\" alt=\"clip_image001\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2806.clip_5F00_image001_5F00_thumb_5F00_53B6D7BE.png\" width=\"518\" height=\"294\"></a></p>    <p>가장 많은 비용 인덱스는 주소 테이블에 대한 조회 시간을 늘리기 위해 적용되는 인덱스인 <b>IX_Address_AddressLine1_AddressLine2_City_StateProvince_PostalCode_CountryRegion </b>. 그것은 나에게 거의 비용 50 매월 센트. 이 정보를 사용하여 이 적용된 인덱스를 사용할 경우의 성능 이점에 대한 비용 비교를 수행하고 유지할지 여부를 결정할 수 있습니다. </p>    <h2>모든 것을 관점으로 유지</h2>    <p><b>IX_Address_AddressLine1_AddressLine2_City_StateProvince_PostalCode_CountryRegion </b>인덱스가 삭제되면 비용을 절감하나요? 그것은 내가 에 속하는 범위를 변경하지 않는 경우. Adventure Works 데이터베이스가 1기가바이트 미만이므로 매월 $9.99를 지불합니다. 범위의 위쪽을 넘지 않는 한 다른 클러스터형 인덱스 만들기는 더 이상 비용이 들지 않습니다. 이러한 방식으로 보면 데이터베이스를 완전히 채우지 않는 적용된 인덱스 만들기는 기본적으로 무료입니다. 데이터에 필요한 범위에 대한 비용을 지출하기 위해 최선을 다한 후에는 최대 크기에 맞게 적용된 인덱스를 최대한 많이 만들어야 합니다(성능 향상).</p>    <p>이는 기본적으로 온-프레미스 SQL Server 동일하며, 서버에 대한 비용을 지출하기로 한 후에는 컴퓨터 리소스 내에 클러스터형 인덱스를 추가해도 더 이상 비용이 들지 않습니다.</p>    <h2>고지 사항</h2>    <p>SQL Azure 가격 및 최대 데이터베이스 크기는 향후 변경될 수 있습니다. 인덱스 비용이 정확한지 확인하기 위해 제공된 쿼리와 현재 비용을 비교해야 합니다.</p>    <h2>요약</h2>    <p>동일한 작업을 수행하는 더 좋은 방법이 있나요? 아래의 의견에 게시합니다. 질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>"
