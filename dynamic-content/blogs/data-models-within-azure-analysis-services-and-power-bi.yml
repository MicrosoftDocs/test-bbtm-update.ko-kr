### YamlMime:Yaml
ms.openlocfilehash: 5e70c70bb18b898d290695c7dc451260a2f467a4
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908443"
Slug: data-models-within-azure-analysis-services-and-power-bi
Title: Azure Analysis Services 및 Power BI 내의 데이터 모델
Summary: 셀프 서비스 및 배달 속도가 모든 보고 BI 솔루션의 주요 우선 순위인 환경에서는 포괄적이고 성능이 좋은 데이터 의미 체계 모델 계층을 만드는 것의 중요성이 간과되기도 합니다.
Content: >-
  <p>셀프 서비스 및 배달 속도가 모든 보고 BI 솔루션의 주요 우선 순위인 환경에서는 포괄적이고 성능이 좋은 데이터 의미 체계 모델 계층을 만드는 것의 중요성이 간과되기도 합니다.</p>


  <p>Azure SQL Database 및 Azure SQL Data Warehouse와 같은 관계형 데이터 저장소가 잘 구조화된 경우 보고 계층이 SQL Server 보고 서비스인지 Power BI 잘 표시되지만 성능은 예상대로 되지 않습니다.</p>


  <p>데이터 의미 체계 모델로 드릴다운하기 전에 항상 데이터를 이해하고 데이터를 제시하고 보고하는 방법을 이해하는 것이 중요합니다. 데이터 경험을 통해 최종 소비자를 사용하는 보고서를 만드는 것은 양수 보고서와 잘못된 보고서의 차이입니다. 보고서 디자인은 누가 소비하고 있는지, 보고서에서 무엇을 달성하고자 하는지를 고려해야 합니다. 예를 들어 추가 측정값 또는 KPI를 사용하여 하위 수준의 계층적 데이터를 확인해야 하는 소비자가 적은 경우 첫 번째 페이지에서 이를 시각화하는 것이 적합하지 않을 수 있습니다. 대부분의 소비자는 데이터의 더 집계된 뷰를 보려고 할 수 있습니다. 이 예제에서는 보고서의 첫 번째 페이지가 데이터를 반환하는 데 시간이 오래 걸리므로 대부분의 소비자에게 느리게 실행되는 보고서에 대한 인식을 제공할 수 있습니다. 더 나은 환경을 달성하기 위해 세부 수준이 상위 수준 데이터 요소에 영향을 주지 않도록 데이터 경험을 통해 소비자를 안내할 수 있습니다.</p>


  <p>올바른 서비스 수준 계약 및 성능 기대치를 설정하는 것이 중요합니다. 데이터가 2백만 개의 행인 경우 2초 미만의 SLA를 설정할 수 있습니다. 하지만 20억 행이라면 여전히 충족될 수 있을까요? 달성 가능한 것을 이해하는 데는 여러 가지 요인이 있으며 데이터 세트 크기도 그 중 하나입니다. 네트워크, 컴퓨팅, 아키텍처 패턴, 데이터 계층 구조, 측정값, KPI, 소비자 디바이스, 소비자 위치 및 실시간 및 일괄 처리 보고는 최종 소비자에 대한 성능 인식에 영향을 줄 수 있는 다른 영향입니다.</p>


  <p>그러나 데이터 의미 체계 모델 계층을 만들고/또는 최적화하면 전체 성능에 큰 영향을 미칩니다.</p>


  <h2>기본 사항</h2>


  <p>경우에 따라 더 많은 컴퓨팅 능력과 Azure 사용으로 데이터 레이크 또는 운영 SQL Server 직접 보고할 수 없는 이유는 무엇인가요? 대답은 데이터의 보고가 OLTP(온라인 트랜잭션 처리) 접근 방식에서 데이터를 작성하고 읽는 것과는 매우 다르다는 것입니다.</p>


  <p>Kimball에서 개발한 차원 모델링은 이제 데이터 웨어하우스에서 입증된 방법론이었으며 지난 20년 동안 널리 사용되었습니다. 차원 모델링의 이면에 있는 이념은 소비자가 계산을 검색하고, 데이터를 집계하고, 비즈니스 KPI를 표시할 수 있는 대화형 보고를 생성할 수 있다는 것입니다.</p>


  <p>별모양 또는 눈송이 스키마 내에서 차원 모델을 만들기 때문에 일반적으로 OLTP 데이터베이스 디자인과 관련된 읽기 및 쓰기가 아닌 검색 및 읽기용으로 설계된 스키마로 인해 데이터를 보다 성능이 뛰어난 방식으로 검색할 수 있습니다.</p>


  <p>별모양 또는 눈송이 스키마에는 팩트 테이블과 여러 차원 테이블이 있습니다. 팩트 테이블에는 메트릭 및 KPI와 함께 차원 테이블과 관련된 외신 키가 포함되어 있습니다. 차원 테이블에는 해당 특정 차원 테이블과 연결된 특성이 포함됩니다. 이 예제는 월, 일 및 연도를 특성으로 포함하는 날짜 차원 테이블일 수 있습니다.</p>


  <p>SQL Server 또는 Azure SQL Data Warehouse와 같은 데이터 웨어하우징에 대한 차원 모델링을 만들면 보고 솔루션에서 달성하려는 작업에 도움이 됩니다. 다시 말하지만, 전통적인 창고는 지난 20 년 동안 널리 배포되었습니다. 이 방법을 사용하더라도 웨어하우스 위에 데이터 의미 체계 모델을 만들면 동시성을 개선하고 최종 소비자와 원본 웨어하우스 데이터 간에 추가 보안 계층을 추가하는 등의 작업뿐만 아니라 성능을 향상시킬 수 있습니다. SQL Server Analysis Services 및 이제 Azure Analysis Services는 이러한 용도로 설계되었습니다. 기본적으로 웨어하우스에서 필요한 데이터를 아래와 같이 사용할 수 있는 모델로 제공할 수 있습니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6a9cb218-47e9-43f3-8b54-736722666e00.png"><img alt="image" border="0" height="188" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/b4ed4595-07a6-476e-92cf-ae7f01aa861e.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="582"></a></p>


  <p>전통적으로 아키텍처는 정확했습니다. 웨어하우스에서 Analysis Services 인스턴스에 있는 큐브로 데이터를 수집하고, 큐브를 처리한 다음, SQL Server Reporting Services, Excel 등의 작업을 수행합니다. 빅 데이터 채택과 SQL, Spark, CSV, JSON 등 광범위한 데이터 원본을 사용하려는 최종 소비자와 함께 지난 5~10년 동안 데이터 수집 환경이 변경되었습니다.</p>


  <p>이제 최신 BI 보고는 이 데이터를 수집하고, 매시하고, 정리한 다음, 제공해야 합니다. 따라서 데이터 의미 체계 계층은 민첩해야 하지만 성능도 제공해야 합니다. 그러나 차원 모델링에 맞는 모델을 디자인하는 원칙은 여전히 핵심입니다.</p>


  <p>Azure의 데이터 서비스 환경에서 Analysis Services 및 Power BI 데이터 웨어하우징 차원 모델링을 기반으로 데이터 의미 체계 모델을 빌드할 수 있는 좋은 후보입니다. 이러한 서비스의 기본 원칙은 지금까지 Microsoft BI 솔루션의 토대를 형성해 왔지만, 지금까지는 최신 메모리 내 아키텍처를 사용하고 셀프 서비스에 민첩성을 허용하고 있습니다.</p>


  <h2>Power BI 및 Analysis Services 테이블 형식 모델</h2>


  <p>SQL Server Analysis Services 테이블 형식 모델, Azure Analysis Services 및 Power BI 동일한 밑줄 기본 사항 및 원칙을 공유합니다. 모두 2012년 SQL Server 처음 출시된 테이블 형식 모델을 사용하여 빌드되었습니다.</p>


  <p>SQL Server Analysis Services 다차원은 다른 아키텍처이며 설치 지점의 서버 구성 섹션에서 설정됩니다.</p>


  <p>Analysis Service 테이블 형식 모델(Power BI)은 VertiPaq 엔진을 형성하는 열 형식 메모리 내 아키텍처를 기반으로 합니다.</p>


  <p><a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4bbbd56c-1271-4cbb-a36f-0e3856e1eb4e.png"><img alt="image" border="0" height="182" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/77710497-d17f-433d-9164-737b30d4d925.png" style="border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" title="이미지" width="250"></a></p>


  <p>처리 시 데이터 행은 열로 변환되고 인코딩되고 압축되므로 더 많은 데이터를 저장할 수 있습니다. 데이터가 메모리에 저장되기 때문에 분석 보고는 디스크 기반 시스템에서 데이터를 검색하는 것과 비교해 고성능을 제공합니다. 메모리 내 테이블 형식 모델의 목적은 보고 목적으로 읽기 시간을 최소화하는 것입니다. 다시 말하지만 소비자 보고 동작을 이해하는 것이 핵심이며 테이블 형식 모델은 적은 수의 열을 검색하도록 설계되었습니다. 여기서 균형은 많은 수의 열을 검색할 때 엔진이 데이터 행으로 다시 정렬하고 압축을 풉니다. 이는 컴퓨팅에 영향을 줍니다.</p>


  <h2>데이터 모델링 모범 사례</h2>


  <p>아래 모범 사례는 특히 SQL Server Analysis Services, Azure Analysis Services 또는 Power BI 데이터 의미 체계 모델을 만들 때 지난 몇 년 동안 보았던 몇 가지 주요 관찰 사항입니다.</p>


  <ul>
   <li>다른 원본에서 데이터를 수집하더라도 차원 모델 별 및/또는 눈송이를 만듭니다.</li>
   <li>차원 테이블에 정수 서로게이트 키를 만들어야 합니다. 자연 키는 모범 사례가 아니며 나중에 변경해야 하는 경우 문제가 발생할 수 있습니다. 자연 키는 일반적으로 문자열이므로 크기가 더 크고 다른 테이블에 조인할 때 성능이 저조할 수 있습니다. 테이블 형식 모델의 성능과 관련된 핵심 사항은 자연 키가 압축에 최적이 아니라는 것입니다. 자연 키를 사용하는 프로세스는 다음과 같습니다.
   <ul>
    <li>
    <ul>
     <li>인코딩된 해시/사전 인코딩</li>
    </ul>

    <ul>
     <li>차원 테이블과 관련된 팩트 테이블에 인코딩된 외세 키, 다시 해시/사전 인코딩.</li>
    </ul>

    <ul>
     <li>관계를 빌드합니다.</li>
    </ul>
    </li>
   </ul>
   </li>
   <li>이는 성능에 영향을 미치고 데이터에 사용할 수 있는 메모리를 비율로 줄여 사전 인코딩에 필요합니다.</li>
   <li>정수 서로게이트 키 또는 값 인코딩만 모델에 가져오고 차원 테이블에서 자연 키를 제외합니다.</li>
   <li>차원 테이블에서 팩트 테이블의 외화 키 또는 정수 서로게이트 키만 모델에 가져옵니다.</li>
   <li>분석에 필요한 열만 모델에 가져오면 필요하지 않은 열을 제외하거나 데이터를 필터링하여 분석 중인 데이터만 가져올 수 있습니다.</li>
   <li>값 고유성을 줄일 수 있도록 카디널리티를 줄여 훨씬 더 큰 압축을 허용합니다.</li>
   <li>모델에 날짜 차원을 추가합니다.</li>
   <li>가능한 경우 컴퓨팅 계층에서 계산을 실행하는 것이 좋습니다.</li>
  </ul>


  <p>위에서 언급한 모범 사례는 모두 소비자 환경의 성능을 향상시키기 위해 부분적으로 또는 전체적으로 사용되었습니다. 모범 사례에 맞게 데이터 의미 체계 모델을 만든 후에는 성능 기대치를 측정하고 SLA&rsquo;에 맞출 수 있습니다. 위의 모범 사례에 대한 주요 초점은 VertiPaq 메모리 내 아키텍처를 활용하는 것입니다. 이 작업의 상당 부분은 데이터를 가능한 한 많이 압축하여 모델 내에 더 많은 데이터를 저장할 수 있을 뿐만 아니라 데이터를 효율적으로 보고할 수 있도록 하는 것입니다.</p>


  <p>다음 블로그에서는 Microsoft Power BI 데이터 의미 체계 모델을 통합할 수 있도록 더 많은 Analysis Services 네이티브 기능을 노출하는 방법을 보여 줍니다.</p>


  <ul>

  </ul>
