### YamlMime:Yaml
ms.openlocfilehash: 4eff16a4b0171a39ccc4a7fb15a2f7e7e7fa753b
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139897066"
Slug: winform-application-streaming-from-sql-azure
Title: SQL Azure WinForm 애플리케이션 스트리밍
Summary: '[이 문서는 SQL Azure 팀에서 제공했습니다.] 이 블로그 게시물에서는 이미지를 SQL Azure PictureBox 컨트롤로 스트리밍하는 샘플 WinForm 애플리케이션에 대한 코드를 증명하고 있습니다. 우리의 목표는 ...'
Content: '<p>[이 문서는 SQL Azure 팀에서 제공했습니다.]</p><p>이 블로그 게시물에서는 이미지를 SQL Azure PictureBox 컨트롤로 스트리밍하는 샘플 WinForm 애플리케이션에 대한 코드를 증명하고 있습니다. 목표는 SQL Azure <b>varbinary(max)</b> 열에서 WinForm 애플리케이션(이 경우 이미지)으로 큰 BLOB 데이터를 스트리밍하는 방법을 보여 주는 것입니다. 스트리밍 데이터에 대한 좋은 점 중 하나는 프로세스 표시줄 컨트롤을 업데이트하여 사용자에게 모든 데이터를 다운로드하는 데 걸리는 시간을 표시할 수 있다는 것입니다. 이 블로그 게시물은 <b>SqlStream</b> 클래스를 소개하는 이 블로그 게시물의 확장입니다.</p>  <p><a href=""><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="clip_image002" border="0" alt="clip_image002" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2021.clip_5F00_image002_5F00_thumb_5F00_1AAC27B4.jpg" width="358" height="333"></a></p>  <p>이 코드 샘플의 목표는 다음과 같습니다.</p>  <ul>   <li>WinForm 애플리케이션에서 SQL Azure 호출하는 예제 코드를 표시합니다. </li>    <li>응답을 PictureBox 컨트롤로 스트리밍합니다. </li>    <li>다운로드가 진행률 표시줄 컨트롤을 업데이트합니다. </li>    <li>이 블로그 게시물에 설명된 대로 SQL Azure 연결하는 모범 사례인 로그인 및 암호를 묻는 메시지를 표시합니다. </li> </ul>  <h2>Adventure Works 뷰어</h2>  <p>샘플 애플리케이션은 adventure Works for SQL Azure 데이터베이스의 SalesLT.Products 테이블에 있는 썸네일 이미지를 봅니다. 여기에서 이 데이터베이스를 다운로드할 수 <a href="https://msftdbprodsamples.codeplex.com/releases/view/37304">있습니다</a>. 애플리케이션이 시작되면 사용자에게 SQL Azure 데이터베이스에 대한 로그인 및 암호를 묻는 메시지를 표시합니다. 그런 다음, 이미지를 포함하는 데이터베이스의 모든 제품 이름으로 드롭다운 목록을 채웁니다. 사용자가 다운로드 단추를 클릭하면 애플리케이션은 데이터베이스를 쿼리하여 이미지의 크기를 확인합니다. 크기는 진행률 표시줄을 정확하게 구성하는 데 필요합니다. 그런 다음 이미지가 SQL Azure 스트리밍되고 표시됩니다. 다운로드하는 동안 사용자에게 이미지의 다운로드 속도 및 크기를 표시하도록 상태 표시줄이 업데이트됩니다.</p>  <h5>드롭다운 목록 채우기</h5>  <p>아래 코드는 드롭다운 목록을 제품 이름으로 채웁니다.</p>  <pre class="csharpcode">private <span class="kwrd">Dictionary</span>&lt;Int32, Int32&gt; ProductId = <span class="kwrd">new</span> <span class="kwrd">Dictionary</span>&lt;<span class="kwrd">int</span>, <span class="kwrd">int</span>&gt;();<br><br>private void FillDropDownList()<br>{<br>    productComboBox.Items.Clear();<br><br>    <span class="kwrd">using</span> (SqlConnection sqlConnection =<br>        <span class="kwrd">new</span> SqlConnection(ConnectionString))<br>    {<br>        sqlConnection.<span class="kwrd">Open</span>();<br>        String <span class="kwrd">sql</span> = &quot;<span class="kwrd">SELECT</span> [ProductId], [Name] <span class="kwrd">FROM</span>&quot; +<br>            &quot;[SalesLT].[Product] <span class="kwrd">WHERE</span> <span class="kwrd">NOT</span> [ThumbNailPhoto] <span class="kwrd">IS</span> <span class="kwrd">NULL</span>&quot;;<br>        <span class="kwrd">using</span> (SqlCommand sqlCommand = <span class="kwrd">new</span> SqlCommand(<span class="kwrd">sql</span>, sqlConnection))<br>        {<br>            <span class="kwrd">using</span> (SqlDataReader sqlDataReader = sqlCommand.ExecuteReader())<br>            {<br>                <span class="kwrd">while</span> (sqlDataReader.<span class="kwrd">Read</span>())<br>                {<br>                    Int32 <span class="kwrd">index</span> = productComboBox.Items.<span class="kwrd">Add</span>(<br>                        (String)sqlDataReader[&quot;Name&quot;]);<br>                    ProductId[<span class="kwrd">index</span>] = (Int32)sqlDataReader[&quot;ProductId&quot;];<br>                }<br>            }<br>        }<br>    }<br><br>    <span class="kwrd">if</span> (productComboBox.Items.<span class="kwrd">Count</span> &gt; 0)<br>        productComboBox.SelectedIndex = 0;<br>}<br><br>private void Form1_Load(<span class="kwrd">object</span> sender, EventArgs e)<br>{<br>    FillDropDownList();<br>}</pre>    <p>    <h5>사용자에게 자격 증명을 묻는 메시지 표시</h5>    <p>연결 문자열 속성은 사용자에게 로그인 및 암호를 묻는 메시지를 표시하여 프라이빗 속성에 저장하고 <b>SqlConnection</b> 생성자에 사용되는 연결 문자열을 생성합니다.</p>    <pre class="csharpcode">String Server { get; set; }<br>String Login { get; set; }<br>String Password { get; set; }<br><br>String ConnectionString<br>{<br>    get<br>    {<br>        <span class="kwrd">if</span> (String.IsNullOrEmpty(Login))<br>        {<br>            LoginDialog loginDialog = <span class="kwrd">new</span> LoginDialog();<br>            <span class="kwrd">switch</span> (loginDialog.ShowDialog())<br>            {<br>                <span class="kwrd">case</span> DialogResult.OK:<br>                    Login = loginDialog.Login;<br>                    Password = loginDialog.Password;<br>                    <span class="kwrd">break</span>;<br>                <span class="kwrd">default</span>:<br>                    <span class="kwrd">throw</span> (<span class="kwrd">new</span> OperationCanceledException());<br>            }<br>        }<br><br>        <span class="kwrd">return</span> (<br>            String.Format(<br>            <span class="str">&quot;Server=tcp:{0}.database.windows.net;&quot;</span> +<br>            <span class="str">&quot;Database=AdventureWorksLTAZ2008R2;&quot;</span> +<br>            <span class="str">&quot;User ID={1}@{0};Password={2};&quot;</span> +<br>            <span class="str">&quot;Trusted_Connection=False;Encrypt=True;&quot;</span>,<br>            Server, Login, Password));<br>    }<br>}</pre>    <p>    <h2>이미지 스트리밍</h2>    <p>단추 클릭 이벤트가 발생하면 코드는 <b>SqlStream</b> 클래스를 사용하여 SQL Azure 이미지를 <b>MemoryStream</b>으로 스트리밍합니다. 이 메모리 스트림은 그림 상자 컨트롤의 이미지 속성에 할당된 <b>비트맵</b> 클래스의 인스턴스를 만드는 데 사용됩니다.</p>    <pre class="csharpcode"><span class="kwrd">private</span> <span class="kwrd">void</span> button1_Click(<span class="kwrd">object</span> sender, EventArgs e)<br>{<br>    button1.Enabled = <span class="kwrd">false</span>;<br>    Cursor.Current = Cursors.WaitCursor;<br>    progressBar1.Value = 0;<br><br>    <span class="kwrd">using</span> (SqlConnection sqlConnection =<br>        <span class="kwrd">new</span> SqlConnection(ConnectionString))<br>    {<br>        sqlConnection.Open();<br><br>        <span class="rem">// WWB: Convert the Selected Index To a Product Id</span><br>        Int32 productId = ProductId[productComboBox.SelectedIndex];<br><br>        <span class="rem">// WWB: The Length Can Be Great Than Int32.MaxValue</span><br>        Int64 length = FetchLength(sqlConnection, productId);<br>        Int32 scale = 1;<br><br>        <span class="rem">// WWB: If the Length Is Greater Than Int32.MaxValue</span><br>        <span class="rem">// Scale it down to fit within Int32.MaxValue, Since</span><br>        <span class="rem">// the Progress Bar supports Int32</span><br>        <span class="kwrd">while</span> (length &gt; Int32.MaxValue)<br>        {<br>            <span class="rem">// WWB: Track the Scale, We Will Need</span><br>            <span class="rem">// It To Increment the Progress Bar</span><br>            scale = scale * 2;<br>            length = length / 2;<br>        }<br><br>        <span class="rem">// Set the Maximum Length of the Progres Bar</span><br>        progressBar1.Maximum = (Int32)length;<br>        <br>        <span class="kwrd">using</span> (SqlStream sqlStream = <span class="kwrd">new</span> SqlStream(<br>            sqlConnection, <span class="str">&quot;SalesLT&quot;</span>, <span class="str">&quot;Product&quot;</span>,<br>            <span class="str">&quot;ThumbNailPhoto&quot;</span>, <span class="str">&quot;ProductID&quot;</span>, <br>            SqlDbType.Int, productId))<br>        {<br>            Byte[] buffer = <span class="kwrd">new</span> Byte[8192];<br>            Int32 read = 0;<br><br>            <span class="kwrd">using</span> (BinaryReader binaryReader =<br>                            <span class="kwrd">new</span> BinaryReader(sqlStream))<br>            {<br>                <span class="kwrd">using</span> (MemoryStream memoryStream = <span class="kwrd">new</span> MemoryStream())<br>                {<br>                    <span class="kwrd">using</span> (BinaryWriter binaryWriter<br>                        = <span class="kwrd">new</span> BinaryWriter(memoryStream))<br>                    {<br>                        <span class="kwrd">do</span><br>                        {<br>                            <span class="rem">// WWB: Read From SQL Azure</span><br>                            read = binaryReader.Read(buffer, 0, 8192);<br>                            <span class="rem">// WWB: Write To the Memory Stream</span><br>                            binaryWriter.Write(buffer, 0, read);<br>                            <span class="rem">// WWB: Increment the Progress Bar</span><br>                            progressBar1.Increment(read / scale);<br>                        } <span class="kwrd">while</span> (read &gt; 0);<br><br>                        <span class="rem">// WWB: Reset the Memory Stream</span><br>                        memoryStream.Position = 0;<br><br>                        <span class="rem">// WWB: Load the Memory Stream Into The Image</span><br>                        Bitmap bitmap = <span class="kwrd">new</span> Bitmap(memoryStream);<br><br>                        <span class="rem">// WWB: Assign the BitMap to the Picture Box</span><br>                        pictureBox1.Image = bitmap;<br>                    }<br><br>                }<br>            }<br>        }<br>    }<br><br>    Cursor.Current = Cursors.Default;<br>    button1.Enabled = <span class="kwrd">true</span>;<br>}</pre>    <p>    <p>프로젝트 파일을 포함한 아래의 전체 코드 샘플을 다운로드할 수 있습니다.</p>    <h2>요약</h2>    <p>질문, 우려 사항, 의견이 있나요? 아래에 게시하고 우리는 그들을 해결하기 위해 노력할 것입니다.</p>'
