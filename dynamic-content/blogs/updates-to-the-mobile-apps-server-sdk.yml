### YamlMime:Yaml
ms.openlocfilehash: bd89a6b1f84c90b4cfa169c080dd3a225ae89735
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139912311"
Slug: updates-to-the-mobile-apps-server-sdk
Title: Mobile Apps 서버 SDK에 대한 업데이트
Summary: 오늘 Mobile Apps .NET Server SDK에 대한 업데이트를 발표하게 되어 기쁘게 생각합니다. 우리는 SDK와 그 주변의 고객 피드백을 잘 살펴보았으며 이를 수정하기 위해 열심히 노력해 왔습니다.
Content: >-
  3월에<a title="는 기존 Mobile Services 제품의 새 버전인 Mobile Apps의 미리 보기를 포함하는 Azure App Serviceannounced" href="https://azure.microsoft.com/blog/2015/03/24/announcing-azure-app-service/"></a> Azure App Service를 발표했습니다. Mobile Apps를 사용하면 개발자가 뛰어난 App Service 기능을 활용하여 모바일 디바이스에서 사용하기 쉬운 확장 가능하고 기능이 풍부한 백 엔드를 쉽게 빌드할 수 있습니다.


  오늘 Mobile Apps .NET Server SDK에 대한 업데이트를 발표하게 되어 기쁘게 생각합니다. 우리는 SDK와 그 주변의 고객 피드백을 잘 살펴보았으며 이를 수정하기 위해 열심히 노력해 왔습니다. 이 업데이트를 사용하면 몇 가지 호환성이 손상되는 변경 내용이 있으므로 부 버전 번호가 증가했으며 이제 버전 0.2.549에 있습니다. SDK는 미리 보기로 유지되므로 주 버전은 여전히 0입니다.


  원래 SDK는 ASP.NET 파이프라인을 인수하고 구성 설정을 수정하는 데 상당히 공격적이었습니다. 이는 고급 사용자에게 문제가 되었으며, ASP.NET MVC와 같은 특정 기능을 사용할 수 없다는 것을 의미했으며, 하이브리드 웹 및 모바일 애플리케이션 개발자에게는 큰 제한이 있었습니다. 이 업데이트의 주요 목표는 SDK가 모든 ASP.NET 사이트와 잘 구성되도록 하는 것이었고, 또한 개발자에게 사이트 실행 방식을 훨씬 더 잘 제어할 수 있도록 했습니다.

  <h3>.NET 서버 SDK 사용</h3>

  새 SDK를 시작하는 가장 쉬운 방법은 Azure 관리 미리 보기 포털에서 빠른 시작 프로젝트를 다운로드하는 것입니다. 이러한 단계를 안내 <a href="https://azure.microsoft.com/en-us/documentation/articles/app-service-mobile-dotnet-backend-ios-get-started-preview/">하는 모바일 앱 만들기</a> 자습서 중 하나를 사용해 보세요. 또는 최신 <a href="https://www.nuget.org/packages/Microsoft.Azure.Mobile.Server/">Microsoft.Azure.Mobile.Server NuGet 패키지를</a> ASP.NET 사이트에 설치하기만 하면됩니다.


  Mobile Apps 서버 SDK를 시작하려면 약간의 코드만 있으면 됩니다. WebApiConfig.cs에서는 일반적으로 Register() 메서드에 전달된 HttpConfiguration 개체를 가져옵니다. 해당 개체를 "config"라고 하는 경우 해당 메서드의 시작 부분에 다음을 추가하기만 하면 됩니다.

  <pre class="prettyprint">new MobileAppConfiguration()
   .ApplyTo(config);
  </pre>

  이렇게 하면 시작되지만 실제로 멋진 모바일 기능을 사용하도록 설정하지는 않습니다. 가져온 항목과 사용하도록 설정하는 기능을 더 자세히 제어할 수 있도록 패키지를 약간 분해하기로 결정했습니다. 다음은 서버 SDK 패키지에 대한 종속성 그래프입니다.


  <a href="https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/07/15/MobileAppsServerSDKDependencies.png"><img class="alignnone size-medium wp-image-318551" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/MobileAppsServerSDKDependencies-636x306.png" alt="MobileAppsServerSDKDependencies" width="636" height="306" /></a>


  빠르게 시작하려면 빠른 시작 패키지를 가져와서 다른 패키지를 끌어올 수 있습니다. 또한 MobileAppConfiguration에 대한 UseDefaultConfiguration() 확장 메서드를 제공하여 모든 항목을 이전 버전의 SDK와 유사하게 설정합니다. 다음과 같이 사용할 수 있습니다.

  <pre class="prettyprint">new MobileAppConfiguration()
   .UseDefaultConfiguration()
   .ApplyTo(config);
  </pre>

  그리고 그와 마찬가지로, 당신은 당신의 다음 좋은 응용 프로그램에 대한 준비가 완전한 기능을 갖춘 모바일 백 엔드가 있습니다.


  또는 기본 메서드를 개별적으로 호출할 수 있으며 필요하지 않은 메서드를 제거할 수 있습니다.

  <pre class="prettyprint">new MobileAppConfiguration()
   .AddMobileAppHomeController()             // from the Home package
   .MapApiControllers()
   .AddTables(                               // from the Tables package
    new MobileAppTableConfiguration()
     .MapTableControllers()
     .AddEntityFramework()     // from the Entity package
    )
   .AddAppServiceAuthentication()            // from the Authentication package
   .AddPushNotifications()                   // from the Notifications package
   .MapLegacyCrossDomainController()         // from the CrossDomain package
   .ApplyTo(config);
  </pre>

  <h3>그 밖에 무엇이 변경되었나요?</h3>

  기능 변경의 관점에서, 첫 번째는 위에서 설명한 대로입니다. 이제 기능을 명시적으로 사용하도록 설정해야 합니다. 일반적으로 더 이상 원하는 동작을 가정하지 않습니다. 이로 인해 Autofac에 대한 종속성을 제거하는 등의 변경이 발생했습니다. 이제 선택한 모든 종속성 주입 프레임워크를 사용할 수 있습니다.


  사용자가 알아차릴 한 가지 주요 차이점은 [AuthorizeLevel] 특성이 더 이상 없다는 것입니다. 대신 표준 ASP.NET [Authorize] 특성으로 컨트롤러를 데코레이트하도록 사용자에게 요청합니다. 또한 기본적으로 API에 대한 애플리케이션 키 보호를 더 이상 가정하지 않으며, 실제로 애플리케이션 키와 마스터 키는 더 이상 SDK에서 사용되지 않습니다. 이는 SDK 버전 간에 전환하는 고객에게 중요합니다.


  이 릴리스의 또 다른 변경 사항은 ApiControllers가 기본적으로 모든 경로에 매핑되거나 모바일 관련 구성을 제공하지 않는다는 것입니다. 이렇게 하면 모바일 전용 ApiControllers와 함께 고유한 비 모바일 ApiController를 사용할 수 있습니다. ApiController를 모바일 컨트롤러로 지정하려면 클래스에서 [MobileAppController] 특성을 지정합니다.


  이러한 항목 외에 SDK는 기존 고객에게 매우 친숙해야 합니다. 이제 Mobile Apps를 사용하여 수행할 수 있는 작업이 훨씬 더 많으며, 빌드한 항목을 확인해 보시기 기대합니다!


  새 SDK를 사용해 보고 의견, <a href="https://social.msdn.microsoft.com/forums/azure/en-US/home?forum=azuremobile">포럼</a> 또는 Twitter( <a href="https://twitter.com/AzureMobile">@AzureMobile</a>)에서 피드백을 보내주세요. 우리는 항상 당신의 생각을 듣고 사랑 해요!


  즐겨보세요!
