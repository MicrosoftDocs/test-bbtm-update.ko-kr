### YamlMime:Yaml
ms.openlocfilehash: 668785ba88f126b9428fff1f7ccfc744c1044a33
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139908562"
Slug: basic-monitoring-with-batch-powershell-2
Title: Batch PowerShell을 사용한 기본 모니터링
Summary: Azure PowerShell SDK의 0.8.15 릴리스에는 4개의 새로운 BatchPowerShell cmdlet이 제공됩니다.
Content: "지난 10월에는 대부분의 작업을 수행하는 데 도움이 되는 PowerShell cmdlet과 함께 새 Azure Batch 서비스를 출시했습니다. Azure PowerShell SDK의 0.8.15 릴리스에는 <strong>Get-AzureBatchPool, Get-AzureBatchWorkItem</strong>, <strong>Get-AzureBatchJob</strong> 및 <strong>Get-AzureBatchTask</strong>라는 4개의 새로운 BatchPowerShell cmdlet이 제공됩니다. <strong></strong> 이러한 cmdlet을 사용하여 Batch 워크로드의 상태를 모니터링할 수 있습니다.\n\n&nbsp;\n<h4>시작하기</h4>\nAzure PowerShell SDK를 설치하고 Batch 계정을 만드는 방법에 대한 자세한 내용은 <a href=\"https://blogs.technet.com/b/windowshpc/archive/2014/10/28/using-azure-powershell-to-manage-azure-batch-account.aspx\" target=\"_blank\">이 이전 게시물을</a> 확인하세요. 계정이 있으면 Get-AzureBatchAccountKeys cmdlet을 호출하고 출력 BatchAccountContext를 변수에 저장합니다.\n<pre class=\"prettyprint\">$context = Get-AzureBatchAccountKeys \"&lt;account&gt;\"</pre>\n&nbsp;\n\n이 BatchAccountContext 개체는 계정 이름과 키를 저장합니다. Batch 서비스와 상호 작용하는 모든 cmdlet에는 이 BatchAccountContext 개체를 전달해야 하는 –BatchContext 매개 변수가 있습니다. 기본적으로 기본 키는 인증에 사용되지만 BatchAccountContext의 KeyInUse 속성을 변경하여 사용할 키를 명시적으로 선택할 수 있습니다.\n<pre class=\"prettyprint\">$context.KeyInUse = \"Secondary\"</pre>\n<h4></h4>\n&nbsp;\n<h4>데이터 쿼리</h4>\nGet-AzureBatchWorkItem cmdlet을 사용하여 WorkItems를 확인합니다. 다른 매개 변수 없이 BatchAccountContext 개체를 전달하는 경우 계정 아래의 모든 WorkItems를 쿼리합니다.\n<pre class=\"prettyprint\">Get-AzureBatchWorkItem -BatchContext $context</pre>\n&nbsp;\n\n–Filter 인수를 사용하여 OData 필터를 제공하여 관심 있는 WorkItems만 다시 가져올 수도 있습니다.\n<pre class=\"prettyprint\">$filter = \"startswith(name,'myWork') and state eq 'active'\"\n\nGet-AzureBatchWorkItem -Filter $filter -BatchContext $context \n</pre>\n&nbsp;\n\n–Name 매개 변수를 사용하여 이름으로 특정 WorkItem을 쿼리할 수도 있습니다.\n<pre class=\"prettyprint\">Get-AzureBatchWorkItem -Name \"myWorkItem\" -BatchContext $context</pre>\n&nbsp;\n\nWorkItem이 있으면 Get-AzureBatchJob cmdlet을 사용하여 해당 작업을 쿼리할 수 있습니다. Get-AzureBatchWorkItem 출력을 Get-AzureBatchJob으로 파이프하는 경우 WorkItem에서 작업을 쿼리하고 OData 필터를 제공할 수도 있습니다.\n<pre class=\"prettyprint\">Get-AzureBatchWorkItem -Name \"myWorkItem\" -BatchContext $context | Get-AzureBatchJob -Filter \"state eq 'active'\" -BatchContext $context</pre>\n&nbsp;\n\nWorkItem 및 작업 이름을 직접 지정하여 특정 작업을 가져올 수도 있습니다.\n<pre class=\"prettyprint\">Get-AzureBatchJob -WorkItemName \"myWorkItem\" -Name \"job-0000000001\" -BatchContext $context</pre>\n&nbsp;\n\n마찬가지로 Get-AzureBatchJob 출력을 Get-AzureBatchTask 파이프하여 작업에서 작업을 쿼리할 수 있습니다.\n<pre class=\"prettyprint\">Get-AzureBatchJob -WorkItemName \"myWorkItem\" -Name \"job-0000000001\" -BatchContext $context | Get-AzureBatchTask -BatchContext $context</pre>\n&nbsp;\n\nWorkItem, Job 및 Task 이름을 지정하여 특정 작업을 가져올 수도 있습니다.\n<pre class=\"prettyprint\">Get-AzureBatchTask \"myWorkItem\" \"job-0000000001\" \"task1\" -BatchContext $context</pre>\n\n<h4></h4>\n<h4>최대 개수</h4>\n기본적으로 각 cmdlet은 최대 1,000개의 개체를 반환합니다. 이 제한에 도달하면 필터를 구체화하여 개체 수를 줄이거나 –MaxCount 매개 변수를 사용하여 최대 개수를 명시적으로 설정할 수 있습니다. 상한을 제거하려면 MaxCount를 0 이하로 설정합니다.\n<pre class=\"prettyprint\">Get-AzureBatchWorkItem -MaxCount 2500 -BatchContext $context \n</pre>"
