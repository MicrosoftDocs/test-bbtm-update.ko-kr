### YamlMime:Yaml
ms.openlocfilehash: 728cf6f06a9f83953809f71f1c6432244bf14816
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139898508"
Slug: application-request-routing-in-csf
Title: CSF의 애플리케이션 요청 라우팅
Summary: >-
  편집자 주: 이 문서는 AzureCAT 팀의 Christain Maritnez가 작성했습니다.


  애플리케이션 요청 라우팅(또는 ARR)은 아마도 가장 적은 이야기 중 하나이지만 매우 중요합니다...
Content: >-
  <strong>편집기 참고 사항: </strong> 이 문서는 AzureCAT 팀의 <a href="https://social.msdn.microsoft.com/profile/christian.martinez/">Christain Maritnez</a> 에 의해 작성되었습니다.


  <a href="https://www.iis.net/downloads/microsoft/application-request-routing" target="_blank">애플리케이션 요청 라우팅</a>(또는 ARR)은 아마도 Microsoft에서 사용되는 가장 중요하지만 가장 중요한 기술 중 하나일 것이며<a href="https://azure.microsoft.com/en-us/services/web-sites/" target="_blank">, Azure 웹 사이트, Outlook.com</a> 및 기타 많은 대용량 중요한 애플리케이션과 같은 기능을 Windows 데 도움이 됩니다. 그런 다음 Windows Azure 애플리케이션에서 직접 사용하는 것이 훨씬 덜 논의된다는 것을 추론할 수 있습니다. CSF에서 보여 주는 패턴 중 하나는 여러 클라우드 서비스 간에 작업을 분할하고 사용자를 기반으로 클라우드 서비스에 대한 선호도를 투명하게 만드는 것이므로 클라우드 서비스 기본 사항에서 사용했습니다. 이 방법은 클라우드 서비스가 배율 단위로 사용되었고 높은 지역(데이터를 사용하여 코드에 가깝음)이 성능 이점을 제공하는 대규모 고객과의 이전 경험을 기반으로 합니다. ARR은 요구 사항을 충족하는 데 도움이 되는 자연스러운 적합성입니다.


  처음에는 여러 Cloud Services가 들릴 때 "잠깐만요... 따라서 여러 클라우드 서비스가 있습니다. WINDOWS AZURE TRAFFIC MANAGER(WATM)만 사용하세요."! 실제로 성능 또는 비즈니스 연속성 이유로 여러 클라우드 서비스 간에 작업을 분할한 경우 대부분의 라우팅 요구 사항에 대해 WATM이 적합한 선택일 수 있습니다. 그러나 이 경우 요구 사항을 충족하지 못했습니다. WATM은 부하 분산의 세 가지 방법을 제공합니다.

  <ul>
   <li>성능</li>
   <li>장애 조치 </li>
   <li>라운드 로빈</li>
  </ul>

  이들은 훌륭하지만 그 중 어느 것도 (쿠키에 의해 결정된 대로) 누구인지에 따라 클라우드 서비스에 사용자를 보내는 요구 사항을 충족하지 않습니다.


  ARR을 사용하려면 다음 4가지가 필요했습니다.

  <ol>
   <li>ARR을 호스트하는 웹 역할로 구성된 Windows Azure Cloud Service</li>
   <li>ARR을 설치하고 구성하는 스크립트</li>
   <li>ARR 규칙 구성</li>
   <li>사용자가 이전 방문에서 쿠키를 가지고 있지 않은 경우 수행할 작업 결정</li>
  </ol>

  모든 세부 정보 및 코드는 <a href="https://code.msdn.microsoft.com/Cloud-Service-Fundamentals-4ca72649">여기에서</a> 찾을 수 있습니다. 이러한 단계의 대부분은 Azure에서 ARR을 활용하는 모든 솔루션에 일반적이므로 여기서는 두 CSF 관련 부분만 설명합니다.

  <ul>
   <li>경로별 쿠키 규칙 – CSF에 대한 ARR 라우팅 규칙은 어떤 모습인가요?</li>
   <li>쿠키 없음 - 쿠키가 없을 때 무엇을 했고 어떻게 했는지.</li>
  </ul>

  <h4>쿠키 규칙별 경로</h4>

  쿠키로 사용자를 라우팅하는 논리는 다음과 같습니다.


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7128.aa_.png-550x0.png"><img class="alignnone size-full wp-image-134111" alt="7128.aa.png-550x0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7128.aa_.png-550x0.png" width="550" height="142" /></a>


  규칙 구성은 다소 <a href="https://www.iis.net/learn/extensions/url-rewrite-module/url-rewrite-module-configuration-reference#Rewrite_Rule_Configuration" target="_blank">복잡한 항목</a> 일 수 있지만 위의 논리는 기본적으로 영어로 표시됩니다.


  <em>요청이 SSL을 초과하고 상대 경로이고 userpod=(일부 숫자) 양식의 사용자 쿠키를 포함하는 경우 같음 기호 다음에 쿠키 부분을 캡처하고 캡처된 값을 삽입하여 대상 URL을 다시 작성합니다.</em>


  물론, 그것은 조금 이상한 보일 수 있습니다 하지만 당신은 잠시 후 그것에 익숙해질 것 이다.

  <h4>쿠키 없음</h4>

  그러나 쿠키가 검색되지 않는 경우 어떻게 해야 할까요? 여러 가지 방법으로 해결할 수 있지만 <a href="https://www.iis.net/learn/extensions/url-rewrite-module/developing-a-custom-rewrite-provider-for-url-rewrite-module" target="_blank">IRewriteProvider 및 IProviderDescriptor</a>라는 두 인터페이스를 구현하는 클래스를 만들기로 결정했습니다. 첫 번째 인터페이스를 사용하면 코드를 사용하여 요청 입력에 따라 사용자 지정 URL을 반환할 수 있고 두 번째 인터페이스를 사용하면 사용자 지정 입력의 간단한 구성을 제공할 수 있습니다.공급자에 대한 코드는 단순히 구성된 Pod를 가져와서 쿠키가 없는 요청이 올 때마다 라운드 로빈 방식으로 선택했습니다. 이는 정수 증분 후 마지막 지점에 도달할 때 주위를 돌고 있다는 측면에서 흥미로운 코드가 아닙니다.


  구성 코드는 약간 더 흥미롭지만 그다지 흥미롭지는 않습니다.


  <a href="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7167.bb_.png-350x0.png"><img class="alignnone size-full wp-image-134101" alt="7167.bb.png-350x0" src="https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7167.bb_.png-350x0.png" width="350" height="107" /></a>


  그러면 지정된 Pod에 URL을 입력할 수 있는 표가 생성됩니다. 따라서 이 모든 것의 순효과는 쿠키가 없는지 선택할 수 있는 설정된 수의 주소로 구성할 수 있는 코드가 있었습니다.

  <h4>맺음말</h4>

  ARR은 Microsoft 전체에서 널리 사용되는 강력한 도구입니다. 이 블로그는 CSF 시나리오에 사용한 이유를 알려주었지만 이 시나리오는 ARR이 수행할 수 있는 작업의 표면만 긁혔습니다. 예를 들어 클라우드 서비스 <em>내에서</em> 일반적으로 사용되는 한 가지는 라우팅 및 부하 분산을 원하는 패턴으로 사용할 수 있도록 하는 것입니다. WATM 또는 다른 미리 빌드된 서비스가 요구 사항을 충족할 수 있지만 이 강력하고 다재다능한 옵션을 간과할 수 없다면 좋습니다.
