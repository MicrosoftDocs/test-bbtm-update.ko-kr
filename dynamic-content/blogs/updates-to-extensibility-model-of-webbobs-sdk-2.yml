### YamlMime:Yaml
ms.openlocfilehash: 472ec28cfb58c3676d2697825a210f2a685a7a34
ms.sourcegitcommit: d03bdc7fe5447adb6530886aab848b75fe8fa8ee
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 03/11/2022
ms.locfileid: "139912316"
Slug: updates-to-extensibility-model-of-webbobs-sdk-2
Title: Azure WebJobs SDK의 업데이트(1.1.0-alpha2)
Summary: 최근에 고유한 트리거 및 바인더를 작성할 수 있는 새로운 확장성 모델을 여는 것 외에도 새로운 기능 및 버그 수정을 포함한 WebJobs SDK의 미리 보기를 출시했습니다.
Content: >-
  <p>최근에 WebJobs SDK의 미리 보기를 릴리스했습니다. 다른 새로운 기능 및 버그 수정 외에도 릴리스는 고유한 트리거 및 바인더를 작성할 수 있는 새로운 확장성 모델을 엽니다. 이 최신 릴리스에서는 특정 작업 함수의 단일 인스턴스만 지정된 시간에 실행되도록 선언적으로 지정할 수 있는 Singleton 기능을 도입하는 것 외에도 확장 트리거 및 바인더를 추가했습니다.</p>


  <p>NuGet 갤러리에서 WebJobs SDK를 다운로드하고 NuGet 패키지 관리자 콘솔을 사용하여 NuGet 갤러리에서 이러한 패키지를 설치할 수 있습니다.</p>


  <ul>
   <li>WebJobs의 경우: 설치 - <a href="https://www.nuget.org/packages/Microsoft.Azure.WebJobs">Microsoft.Azure.WebJobs</a> 패키지</li>
   <li>Service Bus: 설치 - <a href="https://www.nuget.org/packages/Microsoft.Azure.WebJobs.ServiceBus/">Microsoft.Azure.WebJobs.ServiceBus</a> 패키지</li>
   <li>새 확장성 모델을 기반으로 빌드된 새 트리거 및 바인더의 경우: 설치 - <a href="https://www.nuget.org/packages/Microsoft.Azure.WebJobs.Extensions/">Microsoft.Azure.WebJobs.Extensions</a> 패키지</li>
  </ul>


  <h1>Singleton</h1>


  <p>Singleton을 사용하면 워크로드를 여러 인스턴스로 확장할 때 하나의 함수 인스턴스만 실행되도록 할 수 있습니다. 다음은 예를 보여 주는 코드입니다.</p>


  <p>&nbsp;</p>


  <pre class="prettyprint">
      public class Program
      {
          static void Main(string[] args)
          {
              var host = new JobHost();
              host.RunAndBlock();
          }

          [Singleton]
          public static async Task SingletonJob()
          {
              // Process only once when scaled out
              await Task.Delay(10 * 1000);
          }

          // Only a single instance of this function will be invoked at a time for the specified scope.
          [Singleton(@&quot;{Region}\{Zone}&quot;)]
          public static async Task SingletonScopeJob(
              [QueueTrigger(&quot;singleton-test&quot;)] WorkItem workItem, TraceWriter trace)
          {
              trace.Info(&quot;Singleton method started&quot;);
              await Task.Delay(10 * 1000);
              trace.Info(&quot;Singleton method completed&quot;);
          }

          public class WorkItem
          {
              public int ID { get; set; }
              public string Region { get; set; }
              public int Zone { get; set; }
              public int Category { get; set; }
              public string Description { get; set; }
          }
      }
  </pre>


  <p>&nbsp;</p>


  <p>Singleton 특성에 범위 식/값을 지정하여 해당 <strong>범위</strong> 에서 함수의 모든 실행이 serialize되도록 할 수도 있습니다. 예를 들어 위 코드에서 큐에 지역 동부&rdquo;, &ldquo;동부&rdquo; 및 &ldquo;서부&rdquo;에 각각 3개의 &ldquo;메시지가 포함된 경우 지역 &ldquo;동부&rdquo;가 있는 메시지는 직렬로 실행되고 서부&rdquo; 지역이 &ldquo;있는 메시지는 해당 메시지와 병렬로 실행됩니다. 이 기능은 함수가 다른 분산 리소스에 액세스하거나 동시에 수행할 수 없거나 수행할 수 없는 다른 작업을 수행해야 하는 경우에 유용합니다. 전체 샘플은 <a href="https://github.com/Azure/azure-webjobs-sdk-samples/blob/master/BasicSamples/MiscOperations/Functions.cs#L83">여기에서</a> 액세스할 수 있습니다.</p>


  <p>이제 <strong>타이머 트리거는</strong> 이 싱글톤 기능을 사용하여 워크로드를 여러 인스턴스로 스케일 아웃할 때 타이머 트리거 인스턴스만 발생하도록 합니다. 즉, 예약된 작업의 경우 한 번만 알림을 받을 각 일정 발생 &ndash; 에 대해 여러 스케일 아웃 인스턴스를 호출하지 않도록&rsquo; 합니다.</p>


  <h1>Community 스포트라이트: Redis 트리거</h1>


  <p>새 확장성 모델을 사용하여 커뮤니티 구성원 중 한 명이 작성한 트리거의 예를 강조 표시하려고 했습니다. Jason Haley(<a href="https://twitter.com/haleyjason">@haleyjason</a>)는 Redis 이벤트를 기반으로 함수를 트리거하는 데 사용할 수 있는 Redis 트리거를 작성했습니다. 예를 들어 Redis에 항목을 삽입할 때마다 함수를 트리거할 수 있습니다. <a href="https://github.com/JasonHaley/Redis.WebJobs.Extensions">여기에서</a> 이 오픈 소스 프로젝트를 찾고 진행 상황을 따를 수 있습니다.</p>


  <p>다음 코드에서는 Redis에 대해 트리거할 수 있는 함수를 보여 줍니다.</p>


  <pre class="prettyprint">

  public static void ReceivePubSubMessage([RedisTrigger(&quot;messages&quot;, Mode.PubSub)] string message,
                     TextWriter log)
  {
         log.WriteLine(&ldquo;Message=&rdquo;+message);
  }

  </pre>


  <p>&nbsp;</p>


  <h1>이 릴리스의 다른 업데이트</h1>


  <p>이 릴리스의 모든 향상된 기능에 대한 자세한 목록은 <a href="https://github.com/Azure/azure-webjobs-sdk/issues?q=is%3Aissue+is%3Aclosed+milestone%3A1.1.0-alpha2">수정</a>된 릴리스 <a href="https://github.com/Azure/azure-webjobs-sdk/wiki/Release-Notes">정보</a> 및 버그를 참조하세요. 나는 여기에 주요 것들을 강조하고있다.</p>


  <h4>로깅/추적 확장성</h4>


  <ul>
   <li>이제 로깅 시스템을 확장할 수 있으므로 TraceWriters를 연결하고 사용자 고유의 로깅 솔루션을 SDK와 통합할 수 있습니다.</li>
   <li>JobHostConfiguration.Tracing을 통해 사용자 지정 TraceWriter를 호스트에 연결하도록 허용</li>
   <li>JobHostConfiguration.Tracing.ConsoleLevel을 통해 콘솔 출력 TraceLevel을 사용자 지정할 수 있도록 허용</li>
   <li>함수가 TraceWriter에 바인딩할 수 있도록 하는 새 TraceWriter 바인딩(TextWriter와 유사) 추가됨</li>
   <li>여기에서 샘플을 찾 <a href="https://github.com/Azure/azure-webjobs-sdk-samples/blob/master/BasicSamples/MiscOperations/Program.cs#L54">습니다</a>.</li>
  </ul>


  <h4>Service Bus 메시징 개선 사항</h4>


  <ul>
   <li>기본적으로 메시지 처리 동시성 지원(이전에는 동시성이 없음)</li>
   <li>ServiceBusConfiguration.MessagingProvider를 통해 메시지 처리에 대한 심층 사용자 지정 허용</li>
   <li>MessagingProvider는 ServiceBus MessagingFactory 및 NamespaceManager의 사용자 지정을 지원합니다.</li>
   <li>새 MessageProcessor 전략 패턴을 사용하면 큐/토픽당 프로세서를 지정할 수 있습니다.</li>
   <li>*ServiceBusConfiguration.MessageOptions를 통해 *OnMessageOptions의 간편한 사용자 지정</li>
   <li>여기에서 샘플을 찾 <a href="https://github.com/Azure/azure-webjobs-sdk-samples/blob/master/BasicSamples/MiscOperations/Program.cs#L70">습니다</a>.</li>
  </ul>


  <h1>야간 빌드에 추가된 새 바인더(SendGrid)</h1>


  <p>오픈 소스의 일환으로, 우리는 MyGet에 <a href="https://github.com/Azure/azure-webjobs-sdk/wiki/%22Nightly%22-Builds">우리의 야간 빌드를</a> 게시하고있다. 최근에 SendGrid를 사용하여 전자 메일을 보낼 수 있는 SendGrid 바인더를 추가했습니다.</p>


  <p>Imagine 큐 메시지에 주문 정보가 포함된 주문 처리 WebJob이 있는 시나리오입니다. 성공적인 주문 처리 시 전자 메일을 보내고 오류가 발생할 때 자신에게 알릴 수도 있습니다.</p>


  <p>다음 코드에서는 WebJob에서 쉽게 통합할 수 있는 방법을 보여줍니다. Microsoft.Azure.WebJobs.Extensions.SendGrid NuGet 패키지를 설치해야 합니다.</p>


  <pre class="prettyprint">

  public class Program
      {
          static void Main(string[] args)
          {
              var hostConfig = new JobHostConfiguration();
              hostConfig.UseSendGrid();
              var host = new JobHost(hostConfig);
              host.RunAndBlock();
          }
          public static void ProcessOrder(
             [QueueTrigger(@&quot;samples-orders&quot;)] Order order,
             [SendGrid] SendGridMessage message)
          {
              message.AddTo(order.CustomerEmail);
              message.Subject = $&quot;Thanks for your order (#{order.OrderId})!&quot;;
              message.Text = $&quot;{order.CustomerName}, we&#39;ve received your order ({order.OrderId}) and have begun processing it!&quot;;
          }
          public static void ProcessOrderFailure(
           [QueueTrigger(@&quot;samples-orders-poison&quot;)] string queueMessage,
           [SendGrid] SendGridMessage message)
          {
              message.AddTo(&quot;AdminEmail&quot;);
              message.Subject = &quot;Order processing failed&quot;;
              message.Text = queueMessage;
          }
          public class Order
          {
              public int OrderId { get; set; }
              public string CustomerName { get; set; }
              public string CustomerEmail { get; set; }
          }
      }Open Source</pre>

  <pre class="prettyprint">


  &nbsp;</pre>


  <p>SDK, 확장성 시스템 및 관련 리포지토리에 대한 소스 코드는 여기에서 사용할 수 있습니다.</p>


  <ul>
   <li><a href="https://github.com/Azure/azure-webjobs-sdk/" title="https://github.com/Azure/azure-webjobs-sdk/">https://github.com/Azure/azure-webjobs-sdk/</a></li>
   <li><a href="https://github.com/Azure/azure-webjobs-sdk-extensions" title="https://github.com/Azure/azure-webjobs-sdk-extensions">https://github.com/Azure/azure-webjobs-sdk-extensions</a></li>
   <li><a href="https://github.com/Azure/azure-webjobs-sdk-samples/" title="https://github.com/Azure/azure-webjobs-sdk-samples/">https://github.com/Azure/azure-webjobs-sdk-samples/</a></li>
  </ul>


  <p>해결하려는 문제에 대한 피드백을 제공하고 PRS&rsquo;를 보내주세요. 추가하려는 다양한 유형의 트리거 및 바인더를 기대하고 있습니다.</p>


  <h1>샘플</h1>


  <ul>
   <li><a href="https://github.com/Azure/azure-webjobs-sdk-samples">WebJobs SDK 샘플</a></li>
   <li><a href="https://github.com/Azure/azure-webjobs-sdk-extensions">WebJobs SDK 확장성 샘플</a></li>
  </ul>


  <h1>설명서</h1>


  <ul>
   <li><a href="https://github.com/Azure/azure-webjobs-sdk-extensions/wiki/Binding-Extensions-Overview">새 트리거 및 바인더 작성을 위한 지침</a></li>
   <li><a href="https://channel9.msdn.com/Shows/Cloud+Cover/Episode-183-Azure-WebJobs-Update-with-Pranav-Rastogi">WebJobs SDK를 사용하는 확장 가능한 트리거 및 바인더의 Channel 9 비디오</a></li>
   <li><a href="https://www.hanselman.com/blog/IntroducingWindowsAzureWebJobs.aspx">Scott Hanselman의 WebJobs 및 SDK 소개</a></li>
   <li>WebJobs를 사용하여 빌드되고 <a href="https://twitter.com/bradygaster">Brady Gaster</a>가 ASP.NET 웹 사이트 모니터</li>
   <li><a href="https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/azure-webjobs-recommended-resources">Azure WebJobs &ndash; 권장 리소스</a></li>
   <li><a href="https://channel9.msdn.com/Tags/azurefridaywebjobs">Azure Friday의 WebJobs 비디오 시리즈</a></li>
   <li>매그너스 마틴슨의 비디오 시리즈</li>
   <li><a href="https://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/getting-started-with-windows-azure-webjobs">자습서: Microsoft Azure WebJobs SDK 시작</a></li>
  </ul>


  <h1>피드백 제공 및 도움말 보기</h1>


  <p>질문이 있는 경우 <a href="https://azure.microsoft.com/en-us/support/forums/">Azure 포럼</a>, <a href="https://forums.asp.net/1247.aspx">ASP.NET 포럼</a> 또는 <a href="https://stackoverflow.com/">StackOverflow.com</a> 질문할 수 있습니다. Twitter에서 AzureWebJobs를 사용하고 StackOverflow에서 <font style="background-color: #ffff00"><span style="background-color: #ffffff">Azure-WebJobsSDK 태그</span></font>를 사용합니다<font style="background-color: #ffff00"><span style="background-color: #ffffff"></span></font><a href="https://twitter.com/search?q=AzureWebJobs"><font style="background-color: #ffff00"><span style="background-color: #ffffff">#</span></font></a>.</p>
