{
    "Slug": "a-comprehensive-tool-for-azure-media-services",
    "Title": "Azure Media Services 위한 포괄적인 도구",
    "Summary": "With most of the key components of Azure Media Services currently or soon to be in GA (General Availability), the author would like to share his comprehensive AMS tool.",
    "Content": "AMS(<a href=\"https://azure.microsoft.com/en-us/services/media-services/\">Azure Media Services</a>)에서 전문적인 수준의 온라인 비디오 스트리밍 솔루션을 빌드할 때는 데이터 흐름이 매우 다양합니다. 라이브 스트리밍을 예로 들어 보겠습니다.\n<ol>\n <li>첫 번째이자 가장 중요한 것은 물론 비디오 흐름입니다. 캡처, 피드 장거리, 인코딩, AMS로 수집, 보관, 동적 패키징/보호, CDN, 마지막으로 클라이언트 플레이어에 도착. 예쁜 사진을 화면에 배치하는 것은 첫 번째 부분일 뿐이며 가장 어려운 부분은 아닐 수도 있습니다. 실제로 화면에 예쁜 사진을 표시하는 것은 \"쉬운\"입니다, \"하드\"는 \"예쁜 사진을 표시하지 않는\"방법 (DRM 보호), 사용자가 예쁜 그림 이외의 물건을 볼 수 있도록하는 방법 (동적으로 삽입 광고, CC, 게임 점수와 운동 선수 정보와 같은 메타 데이터, 긴급 발표, 날씨 지연 메시지 등).</li>\n <li>두 번째는 광고 흐름입니다. 광고 마커 삽입부터 스트리밍 형식에 따라 다양한 SCTE 형식으로 광고 표식을 동적으로 패키징하는 것, 플레이어 구문 분석 광고 표식, 광고 결정 및 광고 배달, 마지막으로 광고 재생까지.</li>\n <li>CC 흐름: 텍스트 콘텐츠가 생성되어 기여 피드에 추가되고 비디오 콘텐츠가 포함된 전체 경로를 통해 전달됩니다.</li>\n <li>메타데이터 흐름: 첫 번째 메타데이터는 다양한 하위 시스템에 생성된 다음 웹 포털로 흐르는 콘텐츠 관리 스토리지뿐만 아니라 표시 또는 장애 조치(failover)와 같은 기타 목적을 위해 클라이언트 플레이어에 추가됩니다. 예를 들어 AMS에서 자산을 게시하고 스트리밍 URL을 생성한 후 URL은 자동화되고 통합된 방식으로 다음 방향으로 전달되어야 할 수 있습니다.\n<ul>\n <li>URL은 최종 사용자 검색, 검색 및 재생을 위해 고객에게 비디오 포털을 제공하는 CMS 데이터베이스로 전달되어야 합니다.</li>\n <li>URL은 메타데이터의 한 조각으로 고객의 광고 공급자로 전달되어야 합니다.</li>\n <li>원본 문제가 발생하는 경우 플레이어가 장애 조치(failover)할 수 있도록 기본 URL 및 보조 URL과 같은 비디오 플레이어 클라이언트에 메타데이터를 제공하는 엔드포인트(예: WebAPI 서비스)로 URL을 전달해야 합니다.</li>\n</ul>\n</li>\n <li>콘텐츠 보호 흐름: 콘텐츠 키 생성, 동적 콘텐츠 보호 설정, 인증 토큰 발급, DRM 라이선스 또는 암호 해독 키 제공, 마지막으로 클라이언트 플레이어의 콘텐츠 암호 해독,</li>\n <li>분석 흐름: 클라이언트 플레이어에서 클라우드의 데이터 집계로, 다른 흐름을 제어하기 위한 의사 결정 또는 표시를 위한 프런트 엔드로</li>\n <li>OTT 시나리오에서 더 중요한 계정 프로비저닝, 청구, 최종 사용자용 포털, 사용자 인증, 권한 부여, EPG(전자 프로그래밍 가이드) 및 EMS는 포함되지 않았습니다.</li>\n</ol>\n이러한 모든 데이터 \"흐름\"은 적절한 속도(대상 그룹 크기/수요, 네트워크 대역폭, 클라이언트 CPU 기준)에서 올바른 방향으로 이동하고 적절한 순간(초 또는 프레임 정확도 수준까지)에 도착해야 합니다. 따라서 이러한 모든 \"흐름\"이 함께 작동하도록 이러한 \"흐름\"을 제어하는 \"컨트롤러\"가 필요합니다. 종종 이 \"컨트롤러\"를 CMS라고 합니다.\n\n이러한 CMS를 더 빠르고 더 잘 빌드하려면 어떻게 해야 할까요? 활용할 수 있는 것이 있나요?\n\nAzure Media Services 비디오 솔루션을 빌드할 때 다음과 같은 시나리오가 있을 수 있습니다.\n<ol>\n <li>고객은 자동화된 워크플로를 위해 기존 시스템과 통합된 CMS 도구를 빌드하도록 선택할 수 있습니다.</li>\n <li>고객이 Azure Media Services 기반으로 비디오 솔루션을 빌드하는 데 도움이 되는 SI(시스템 통합자)는 패키지된 SDK 또는 소프트웨어 프레임워크를 빌드하여 이러한 프로젝트가 0부터 시작하지 않도록 선택할 수 있습니다. 이 접근 방식은 출시 시간을 단축하고, 프로젝트 제공을 더 반복 가능하게 하며, 시장에서 SI의 경쟁력을 높입니다.</li>\n</ol>\n이러한 상황에서 고객/SIS에 필요한 것은 인간을 위한 독립 실행형 도구가 아니라 자동화된 워크플로를 사용하여 완전히 통합된 솔루션을 빌드하는 더 빠른 방법이 될 수 있습니다. 작성자가 이러한 솔루션에 사용된 도구 집합을 공유하려고 합니다. 코드는 시나리오 기반이 되는 방식으로 구조화됩니다. 이 도구 집합의 값은 소스 코드를 사용할 수 있도록 하는 것입니다. 소스 코드는 샘플 코드로 사용하거나 솔루션에서 직접 사용하거나 이러한 솔루션의 설계 및 계획에 활용할 수 있습니다.\n\n소스 코드는 MIT 라이선스에 따라 MICROSOFT LCA for OSS 릴리스에 의해 승인되었으며 <a href=\"https://github.com/MicrosoftDX/AMSOpsTool\">GitHub</a> 찾을 수 있습니다.\n\n포괄적인 도구 집합이며 Azure Media Services 모든 주요 영역을 다룹니다.\n<ol>\n <li>라이브</li>\n <li>VOD</li>\n <li>VOD 라이브 관리 및 라이브 보관 진단</li>\n <li>PlayReady 보호(라이브 및 VOD 모두)</li>\n <li>AES-128 암호화(라이브 및 VOD 모두)</li>\n <li>광고 삽입(Aventus 라이브 인코더의 경우)</li>\n</ol>\n이 도구에 포함된 기능은 실제 솔루션/사용 사례를 기반으로 합니다. 이 도구는 \"전투 테스트\"되었습니다.\n<ol>\n <li>이 도구는 Azure Media Services 릴리스 로그오프 테스트 프로세스의 일부로 NBC Sports 솔루션의 시나리오를 테스트하는 데 사용됩니다.</li>\n <li>이 도구는 iStreamPlanet CMS 도구가 준비되기 전에 <a href=\"https://www.nbcsports.com/\">NBC Sports 이벤트 라이브 스트리밍</a> 에 사용되었습니다.</li>\n <li>이 도구는 NBC 스포츠와 Deltatre 모두에서 소치 올림픽 스트리밍을 지원하는 데 광범위하게 사용되었습니다(진단 기능용).</li>\n <li>이 도구는 <a href=\"https://news.microsoft.com/2014/02/06/nbc-olympics-production-of-the-2014-olympic-winter-games-to-utilize-microsoft-for-live-and-on-demand-streaming/\">NBC 스포츠/소치 올림픽 프로젝트의</a> 엔지니어링 프로세스 전반에 걸쳐 북아메리카, 유럽 및 아시아의 15개 공급업체가 사용하는 24x7 라이브 스트리밍 엔지니어링 환경을 운영하는 데 사용되었습니다.</li>\n <li>이 도구는 <a href=\"https://news.microsoft.com/2014/02/06/nbc-olympics-production-of-the-2014-olympic-winter-games-to-utilize-microsoft-for-live-and-on-demand-streaming/\">NBC 스포츠/소치 올림픽 프로젝트의</a> VOD 하위 시스템에 대해 <a href=\"https://msdn.microsoft.com/en-us/library/azure/dn673582.aspx\">Azure 미디어 프로세서</a>와 카약 미디어 프로세서 모두에서 모든 VOD 코드 변환 워크플로 성능 테스트에 사용되었습니다.</li>\n <li>이 도구의 소스 코드 대부분은 <a href=\"https://news.microsoft.com/2014/02/06/nbc-olympics-production-of-the-2014-olympic-winter-games-to-utilize-microsoft-for-live-and-on-demand-streaming/\">NBC 스포츠/소치 올림픽 솔루션을</a> 운영하기 위한 CMS 도구를 개발하기 위해 <a href=\"https://www.istreamplanet.com/\">iStreamPlanet</a>과 공유되었습니다.</li>\n <li>이 도구의 소스 코드 중 일부는 소치 올림픽 프로젝트 중 몇 가지 중요한 기능에 대해 <a href=\"https://www.deltatre.com\">Deltatre</a> 와 공유되었습니다.</li>\n <li>이 도구는 <a href=\"https://azure.microsoft.com/blog/2014/11/17/an-end-to-end-prototype-of-playready-protection-with-acs-authentication-and-acs-token-authorization/\">엔드 투 엔드 PlayReady 보호 프로토타입</a> 및 <a href=\"https://azure.microsoft.com/blog/2014/11/26/an-end-to-end-prototype-of-aes-encryption-with-acs-authentication-and-acs-token-authorization/\">엔드 투 엔드 AES 암호화 프로토타입을</a> 만드는 데도 사용되었습니다.</li>\n</ol>\n&nbsp;\n<h1>기능 강조 표시</h1>\n이 도구의 범위와 기능을 강조하기 위해 NBC <a href=\"https://news.microsoft.com/2014/02/06/nbc-olympics-production-of-the-2014-olympic-winter-games-to-utilize-microsoft-for-live-and-on-demand-streaming/\">Sports/Sochi Olympics 솔루션</a>과 같은 실제 솔루션에 모두 사용되는 이 도구의 기능 하위 집합을 나열하고 있습니다. 이는 NBC Sports가 일상적인 스포츠 스트리밍을 위해 사용하는 LOB(기간 업무) 솔루션입니다.\n<h2>ACS 중복성</h2>\nREST 또는 .NET API에 관계없이 모든 AMS API 호출에는 유효한 ACS 전달자 토큰이 필요하며 이 ACS 토큰은 AMS ACS에서 가져온 것으로 잘 알려져 있습니다. 중요한 라이브 이벤트 중에 단일 ACS 인스턴스를 사용하지 않으려는 것은 당연합니다. 라이브 이벤트 중에 ACS 토큰을 가져올 수 없는 경우 미디어 서비스의 모든 항목에 액세스할 수 없게 되며 이는 비참한 일입니다. 이 도구는 여러 AMS ACS 인스턴스 간의 자동 장애 조치(failover)에 대한 구현을 제공하고 \"기본 설정 ACS\"와 함께 \"고정\"을 제공합니다. 특히 이 도구의 ACS 중복 기능은 다음과 같은 라이브 프로덕션 요구 사항을 충족하며, <a href=\"https://news.microsoft.com/2014/02/06/nbc-olympics-production-of-the-2014-olympic-winter-games-to-utilize-microsoft-for-live-and-on-demand-streaming/\">2014 소치 올림픽 라이브 스트리밍</a>을 실행하는 데 사용할 수 있을 만큼 충분합니다.\n<table border=\"1\" width=\"719\" cellspacing=\"0\" cellpadding=\"2\">\n<tbody>\n<tr>\n<td valign=\"top\" width=\"193\"><b>요구 사항</b></td>\n<td valign=\"top\" width=\"524\"><b>요구 사항 세부 정보</b></td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"193\"><b>ACS 자동 장애 조치(failover)</b></td>\n<td valign=\"top\" width=\"524\">현재 ACS가 실패할 때 다른 ACS로 자동으로 전환할 수 있어야 합니다.</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"193\"><b>ACS 토큰 재사용</b></td>\n<td valign=\"top\" width=\"524\">Media Services SDK 3.0에서 새 기능을 사용해야 합니다. ACS 토큰이 만료되지 않은 경우 CloudMediaContext를 만들 때 다시 사용합니다.</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"193\"><b>ACS 토큰 자동 갱신</b></td>\n<td valign=\"top\" width=\"524\">ACS 토큰이 만료된 경우 CLOUDMediaContext를 만들기 전에 먼저 ACS 토큰을 갱신합니다.</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"193\"><b>여러 컨텍스트 인스턴스 지원</b></td>\n<td valign=\"top\" width=\"524\">애플리케이션은 여러 미디어 서비스와 상호 작용해야 하므로 CloudMediaContext의 여러 인스턴스와 상호 작용할 수 있어야 합니다.</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"193\"><b>SDK 변경에 대한 미래 방지</b></td>\n<td valign=\"top\" width=\"524\">향후 AMS SDK 릴리스에서는 CloudMediaContext 생성자에서 ACS 토큰이 갱신되지 않을 수 있습니다. 코드에서 ACS 토큰 만료 검사 및 ACS 토큰 갱신을 수행해야 합니다(수동 ACS 토큰 갱신).</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"193\"><b>ACS \"스티커\"</b></td>\n<td valign=\"top\" width=\"524\">장애 조치(failover)를 기다리는 대신 사용 가능한 한 \"기본 설정\" ACS 인스턴스를 사용해야 합니다.</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"193\"><b>ACS 인스턴스 지원</b></td>\n<td valign=\"top\" width=\"524\">모든 AMS ACS 인스턴스를 지원해야 합니다.</td>\n</tr>\n<tr>\n<td valign=\"top\" width=\"193\"><b>단일 ACS 지원</b></td>\n<td valign=\"top\" width=\"524\">SwitchACSEnabled 및 PreferredACSEnabled 설정을 false로 설정하면 단일 ACS 인스턴스를 사용할 수 있습니다. 일부 환경에서는 단일 AMS ACS 인스턴스만 사용할 수 있습니다.</td>\n</tr>\n</tbody>\n</table>\n&nbsp;\n<h2>Azure Blob을 AMS 자산으로 변환</h2>\nAzure Storage에 Blob으로 물리적 비디오 파일이 있는 경우가 많으며 AMS IAsset로 변환해야 합니다. 이 도구는 다음 시나리오에서 변환을 제공합니다.\n<ol>\n <li>Blob은 작업 중인 미디어 서비스와 연결된 스토리지에 있습니다.</li>\n <li>Blob은 작업 중인 미디어 서비스와 연결되지 않은 스토리지에 있습니다.</li>\n</ol>\n&nbsp;\n<h2>CDN 데이터 센터에서 일관된 URL 만들기</h2>\nAMS의 라이브 프로그램에 대한 URL 형식은 https://[origin_name]-[media_service_name].streaming.mediaservices.windows.net/[locator_id]/[manifest_file_name].ism입니다. 예를 들어 <a href=\"\"></a> 일반적으로 로케이터 ID는 생성된 GUID입니다. 중복성을 위해 두 개의 데이터 센터를 사용하는 경우 동일한 라이브 채널 및 프로그램에 대해 두 개의 URL이 호스트 이름 부분에서만 다르고 가상 경로에서 동일해야 합니다. 이렇게 하려면 두 개의 개별 데이터 센터에 두 개의 해당 프로그램을 만들 때 로케이터 ID(따라서 로케이터 경로)가 정확히 동일하고 매니페스트 파일 이름이 정확히 동일해야 합니다. 이 도구는 라이브 스트리밍을 위한 프로그램을 만드는 데 이 기능을 제공합니다.\n<h4></h4>\n<h2>지정된 Storage 프로그램 만들기</h2>\nAzure Media Services 단일 미디어 서비스에 여러 Azure Storage를 사용할 수 있습니다. 안정성을 높이기 위해 미디어 서비스는 라이브 보관 파일 또는 주문형 자산을 저장하기 위해 여러 기본 Azure Blob Storage를 사용할 수 있습니다. 이 도구를 사용하면 프로그램을 만들 때 사용할 스토리지를 지정할 수 있습니다. 이렇게 하면 여러 동시 채널이 여러 Blob Storage에 보관 부하를 분산할 수 있습니다.\n<h4></h4>\n<h2>라이브 보관 진단</h2>\n이 도구는 정상적인 작업을 제공하는 것 외에도 라이브 스트리밍 및 라이브 보관에 대한 진단도 제공합니다. 라이브 스트리밍 도중 및 후에 라이브 보관 문제를 빠르게 검색할 수 있습니다. 예를 들어 이 도구는 다음 문제를 진단하고 보고할 수 있습니다.\n<ol>\n <li>라이브 보관의 \"들쭉날쭉한 시작\"과 첫 번째 조각이 누락된 품질 수준입니다. 라이브 아카이브에는 종종 \"들쭉날쭉한 시작\"이 있습니다. WAMS 팀에 따르면 이것은 거의 버그가 아니지만 조각이 다른 시간에 도착한다는 사실 때문에 발생합니다.</li>\n</ol>\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/01/26/tool01.jpg\"><img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border: 0px;\" title=\"tool01\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/tool01_thumb.jpg\" alt=\"tool01\" width=\"767\" height=\"153\" border=\"0\" /></a>\n<ol>\n <li>Aventus 피드와 Azure 수집 간의 네트워크 지연: Aventus 버퍼에서 지연 및 버스트. 일반적으로 6초 GOP를 사용하는 경우 연속 fragblob 쓰기 간의 시간 차이는 6초의 인근에 있어야 합니다. 아래 두 번째 열은 연속된 두 fragblobs에서 6초를 뺀 값 사이의 실제 시간 차이를 보여줍니다.</li>\n</ol>\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/01/26/clip_image005.jpg\"><img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border: 0px;\" title=\"clip_image005\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image005_thumb.jpg\" alt=\"clip_image005\" width=\"761\" height=\"304\" border=\"0\" /></a>\n<ol>\n <li>라이브 아카이브에서 fragblobs 누락: 연속된 두 fragblobs 간의 시작 시간 차이는 약 6초여야 합니다. 그보다 훨씬 더 큰 경우, 누락 된 fragblobs가있다.</li>\n</ol>\n<a href=\"https://acom.azurecomcdn.net/80C57D/blogmedia/blogmedia/2015/01/26/clip_image007.jpg\"><img style=\"padding-top: 0px; padding-left: 0px; padding-right: 0px; border: 0px;\" title=\"clip_image007\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/clip_image007_thumb.jpg\" alt=\"clip_image007\" width=\"758\" height=\"262\" border=\"0\" /></a>\n<h4></h4>\n<h2>Content Protection</h2>\n<ol>\n <li>주문형 스트리밍의 동적 PlayReady 보호;</li>\n <li>라이브 스트리밍의 동적 PlayReady 보호;</li>\n <li>스토리지 암호화 없이 자산의 주문형 스트리밍을 위한 동적 AES 암호화;</li>\n <li>스토리지 암호화를 사용하여 자산의 주문형 스트리밍을 위한 동적 AES 암호화</li>\n</ol>\n콘텐츠 보호에는 동적 보호/암호화, 라이선스/키 배달, 플레이어 클라이언트를 인증하고 권한 부여 토큰, 원본 및 플레이어 발급을 위한 STS와 같은 여러 하위 시스템이 솔루션에 포함됩니다. <a href=\"https://azure.microsoft.com/blog/topics/media-services/\">Azure Blog – Media Services</a> 게시된 엔드 투 엔드 콘텐츠 보호 디자인 및 구현에 대한 다음 두 블로그를 참조하세요.\n<ol>\n <li><a href=\"https://azure.microsoft.com/blog/2014/11/26/an-end-to-end-prototype-of-aes-encryption-with-acs-authentication-and-acs-token-authorization/\">ACS 인증 및 ACS 토큰 권한 부여를 사용하는 AES 암호화의 엔드투엔드 프로토타입</a></li>\n <li><a href=\"https://azure.microsoft.com/blog/2014/11/17/an-end-to-end-prototype-of-playready-protection-with-acs-authentication-and-acs-token-authorization/\">ACS 인증 및 ACS 토큰 권한 부여를 사용하는 PlayReady Protection의 엔드투엔드 프로토타입</a></li>\n</ol>\n두 개의 엔드투엔드 프로토타입/디자인이 SWT 외에 JWT 토큰 인증으로 업그레이드되었습니다.\n<h3></h3>\n<h1>제한 사항</h1>\n이 도구에는 제한 사항이 있습니다. 주요 제한 사항은 사용자에게 친숙한 UI가 없다는 것입니다. 이 도구는 색으로 구분된 UI에 대한 색 콘솔 사용자 지정 클래스와 함께 Windows 콘솔 유형 Visual Studio 프로젝트(라이브용, 주문형 및 광고 표식 삽입용으로 하나씩)입니다. 개인적으로 도구를 사용하는 가장 편리한 방법은 \"Visual Studio 사용자 인터페이스로 사용\"하는 것입니다(입력 매개 변수 변경, 컴파일 및 실행). 물론 이를 위해서는 사용자가 기본 C# 구문을 이해해야 합니다. 이상적인 UI는 다음에서 지원되는 웹 UI입니다.\n<ul>\n <li>Azure Active Directory; 인증</li>\n <li>여러 고객이 자신의 미디어 서비스에 대해 사용할 수 있도록 다중 테넌트</li>\n <li>사용자가 설치/설치할 필요가 없도록 Azure에서 SaaS로 호스팅됨</li>\n</ul>\n나는 이 날이 멀지 않을 것이라고 확신합니다.\n\n<b>승인:</b> 특별한 인정은 지난 몇 년 동안 그들의 도움과 통찰력에 대한 Azure Media Services 팀의 많은 구성원에게 간다."
}