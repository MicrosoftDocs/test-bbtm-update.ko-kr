{
    "Slug": "always-on-real-time-threat-protection-with-azure-cosmos-db-part-one",
    "Title": "Azure Cosmos DB를 사용하여 항상 실시간 위협 방지 - 1부",
    "Summary": "Microsoft Azure Advanced Threat Protection is a cloud-based security service that uses customers’ on-premises Azure Active Directory signals to identify, detect, and investigate advanced threats, compromised identities, and malicious insider actions.",
    "Content": "<p><em>이 두 부분으로 구성된 블로그 게시물은 조직이 Azure Cosmos DB를 사용하여 실제 요구 사항을 충족하는 방법과 이러한 요구 사항에 미치는 차이&rsquo;에 대한 시리즈의 일부입니다. 1부에서는 Microsoft Azure Advanced Threat Protection 팀이 Azure Cosmos DB를 채택하도록 이끈 과제와 이를 사용하는 방법을&rsquo; 살펴봅니다. <a href=\"https://azure.microsoft.com/en-us/blog/always-on-real-time-threat-protection-with-azure-cosmos-db-part-two/\" target=\"_blank\">2</a>&rsquo;부에서는 팀의&rsquo; 노력으로 인한 결과를 살펴보겠습니다.</em></p>\n\n<h2>실시간 보안 솔루션을 클라우드 규모로 변환</h2>\n\n<p>Microsoft Azure Advanced Threat Protection은 고객&rsquo; 온-프레미스 Azure Active Directory 신호를 사용하여 고급 위협, 손상된 ID 및 악의적인 내부자 작업을 식별, 감지 및 조사하는 클라우드 기반 보안 서비스입니다. 2018년에 출시된 이 솔루션은 온-프레미스 솔루션인 Microsoft Advanced Threat Analytics가 Azure로 발전한 것을 나타냅니다. 두 제품 모두 다음 두 가지 주요 구성 요소로 구성됩니다.</p>\n\n<ol>\n <li>각 조직&rsquo; 도메인 컨트롤러에 설치되는 에이전트 또는 센서입니다. 센서는 도메인 컨트롤러에서 생성된 ETW(Windows 이벤트 추적)와 함께 사용자에서 도메인 컨트롤러로 전송된 트래픽을 검사하여 해당 정보를 중앙 집중식 백 엔드로 보냅니다.</li>\n <li>모든 센서의 정보를 집계하는 중앙 집중식 백 엔드 또는 센터는 조직&rsquo; 사용자 및 컴퓨터의 동작을 학습하고 악의적인 활동을 나타낼 수 있는 변칙을 찾습니다.</li>\n</ol>\n\n<p>Advanced Threat Analytics&rsquo; 센터는 MongoDB의 온-프레미스 인스턴스를 주 데이터베이스&mdash;로 사용했으며 현재도 온-프레미스 설치를 위해 수행합니다. 그러나 클라우드에서 관리되는 서비스인 Azure Advanced Threat Protection 센터를 개발할 때 Microsoft는 더 성능이 높고 확장성이 뛰어난 것이 필요했습니다. &ldquo;Azure Advanced Threat Protection의 백 엔드는 대규모로 확장되고, 매주 업그레이드되고, 지속적으로 진화하는 고급 검색 알고리즘&mdash;을 실행하여 Azure에서 제공하는&rdquo; 모든 기능과 인텔리전스를 최대한 활용해야 한다고 Microsoft의 Advanced Threat Analytics의 수석 그룹 엔지니어링 관리자인 Yaron Hagai는 설명합니다.</p>\n\n<p>Azure Advanced Threat Protection에 가장 적합한 데이터베이스를 검색하여 엔터티를 저장하고 프로파일링합니다&mdash;. 각 조직&rsquo; 사용자 및 컴퓨터&mdash;Hagais&rsquo; 팀에 대한 모든 센서에서 실시간으로 학습한 데이터는 다음 주요 요구 사항을 매핑했습니다.</p>\n\n<ul>\n <li><strong>탄력적 고객별 확장성:</strong> Azure Advanced Threat Protection을 채택하는 각 조직은 수백 개의 센서를 설치하여 초당 수만 개의 이벤트를 생성할 수 있습니다. 각 조직의&rsquo; 기준을 학습하고 변칙 검색 알고리즘을 실시간으로 적용하기 위해 Azure Advanced Threat Protection에는 효율적이고 비용 효율적으로 확장할 수 있는 데이터베이스가 필요했습니다.</li>\n <li><strong>마이그레이션 용이성:</strong> Azure Advanced Threat Protection 데이터 모델은 검색 논리의 변경을 지원하기 위해 지속적으로 진화하고 있습니다. Hagais&rsquo; 팀은 서비스&rsquo; 코드와 끊임없이 변화하는 데이터 모델 간의 호환성을 지속적으로 유지하는 것에 대해 걱정하지 않았습니다&rsquo;. 즉, 배포한 Azure Advanced Threat Protection에 대한 거의 모든 새로운 업데이트로 빠르고 쉬운 데이터 마이그레이션을 지원할 수 있는 데이터베이스가 필요했습니다.</li>\n <li><strong>지역에서 복제:</strong> 모든 Azure 서비스와 마찬가지로 Advanced Threat Protection은 데이터 센터 오류의 가능성이 매우 낮은 이벤트를 포함하여 고객에게&rsquo; 중요한 재해 복구 및 비즈니스 연속성 요구를 지원해야 합니다. 지역 복제를 사용하면 고객&rsquo; 데이터를 기본 데이터 센터에서 백업 데이터 센터로 복제할 수 있으며, 기본 데이터 센터 오류가 발생할 경우 Azure Advanced Threat Protection 워크로드를 백업 데이터 센터로 전환할 수 있습니다.</li>\n</ul>\n\n<h2>클라우드에서 관리되는 확장성 있는 스키마 없는 데이터베이스</h2>\n\n<p>팀은 Azure Cosmos DB를 Azure Advanced Threat Protection의 백 엔드 데이터베이스로 선택했습니다. &ldquo;Azure에서 유일하게 관리되는 확장성 있는 스키마 없는 데이터베이스인 Azure Cosmos DB는 확실한 선택&rdquo;이었다고 Hagai는 말합니다. &ldquo;증가하는 고객 기반을 지원하는 데 필요한 확장성과 백 엔드 서비스에 대한 성장 부하를 제공했습니다. 또한 각 조직과 해당 컴퓨터 및 사용자에 저장하는 데이터 측면에서 필요한 유연성을 제공했습니다. 또한 지속적으로 새로운 검색을 추가하고 기존 검색을 수정하는 데 필요한 유연성을 제공했으며, 이를 위해서는 Azure Cosmos DB 컨테이너에 저장된 데이터를 지속적으로 변경할 수 있어야 합니다.&rdquo;</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/df089b93-20cf-4e7a-91c5-86db20701215.png\"><img alt=\"Azure Advanced Threat Protection diagram\" border=\"0\" height=\"468\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/26f5efba-060f-47c9-9308-2f436924f276.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"Azure Advanced Threat Protection 다이어그램\" width=\"776\"></a></p>\n\n<h3>컨테이너 및 분할</h3>\n\n<p><a href=\"https://www.azurecosmosdb.com/\" target=\"_blank\">Azure Cosmos DB</a>에서 지원하는 많은 API 중 개발 팀은 SQL API와 Azure Advanced Threat Protection용 Azure Cosmos DB API for MongoDB를 모두 고려했습니다. 결국 SQL API를 선택했는데, 이는 글로벌 지역에서 멀티 호밍을 지원하고 짧은 대기 시간을 위한 직접 연결 모드를 지원하는 풍부한 Microsoft 제작 클라이언트 SDK에 대한 액세스 권한을 부여했기 때문입니다. 개발자는 테넌트 또는 고객당 하나의 Azure Cosmos DB 데이터베이스를 할당하기로 결정했습니다. 각 데이터베이스에는 각각 단일 파티션으로 시작하는 5개의 컨테이너가 있습니다. &ldquo;이를 통해 고객이 Azure Advanced Threat Protection&rdquo; 사용을 중지하는 경우 고객의 데이터를 쉽게 삭제할 수 있다고 Hagai는 설명합니다. &ldquo;그러나 더 중요한 것은 온-프레미스 센서에서 생성된 처리량에 따라 각 고객&rsquo; 컨테이너의 크기를 독립적으로 조정할 수 있습니다.&rdquo;</p>\n\n<p>고객당 컨테이너 집합 중 두 개는 일반적으로 둘 이상의 파티션으로 증가합니다.</p>\n\n<ul>\n <li><em>UniqueEntity</em>는 Active Directory에서 동기화된 대로 조직의 컴퓨터 및 사용자에 대한 모든 메타데이터를 포함합니다.</li>\n <li><em>UniqueEntityProfile은 UniqueEntity</em> 컨테이너의 각 엔터티에 대한 동작 기준을 포함하고 검색 논리에서 손상된 사용자 또는 컴퓨터 또는 악의적인 내부자를 암시하는 동작 변칙을 식별하는 데 사용됩니다.</li>\n</ul>\n\n<p>&ldquo;두 컨테이너 모두 <a href=\"https://docs.microsoft.com/en-ca/azure/cosmos-db/request-units\" target=\"_blank\">초당 요청 단위(RU/s)</a>&rdquo;가 큰 읽기/쓰기 처리량이 매우 높다고 Hagai는 설명합니다. &ldquo;Azure Cosmos DB는 성장함에 따라 컨테이너 스토리지를 원활하게 확장하며, 일부 대규모 고객은 컨테이너당 최대 테라바이트 크기로 확장했으며, VM의 MongoDB에서는 불가능했습니다.&rdquo;</p>\n\n<p>각 고객에 대한 다른 세 개의 컨테이너는 일반적으로 1,000개 미만의 문서를 포함하며 단일 파티션을 지나서 증가하지 않습니다. 다음과 같은 변경 내용이 해당됩니다.</p>\n\n<ul>\n <li><em>SystemProfile</em>- 테넌트에 대해 학습되고 동작 기반 검색에 적용된 데이터를 포함합니다.</li>\n <li><em>SystemEntity</em>- 테넌트에 대한 구성 정보 및 데이터를 포함합니다.</li>\n <li><em>Azure</em> Advanced Threat Protection에 의해 생성 및 업데이트되는 경고가 포함된 경고입니다.</li>\n</ul>\n\n<h3>마이그레이션</h3>\n\n<p>Azure Advanced Threat Protection 검색 논리가 지속적으로 발전하고 개선됨에 따라 각 고객&rsquo; UniqueEntityProfile 컨테이너에 저장된 동작 데이터도 향상됩니다. 오래된 스키마와의 이전 버전과의 호환성을 방지하기 위해 Azure Advanced Threat Protection은 데이터 모델의 변경 내용을 포함하는 서비스로 업그레이드할 때마다 실행되는 두 가지 마이그레이션 메커니즘을 유지 관리합니다.</p>\n\n<ul>\n <li><strong>즉석에서:</strong> Azure Advanced Threat Protection은 Azure Cosmos DB에서 문서를 읽을 때 해당 버전 필드를 확인합니다. 버전이 오래된 경우 Azure Advanced Threat Protection은 Hagais&rsquo; 개발자 팀이 작성한 명시적 변환 논리를 사용하여 문서를 현재 버전으로 마이그레이션합니다.</li>\n <li><strong>일괄 처리:</strong> 업그레이드가 성공하면 Azure Advanced Threat Protection은 예약된 작업을 실행하여 모든 고객의 모든 문서를 최신 버전으로 마이그레이션합니다. 즉석 메커니즘에 의해 이미 마이그레이션된 문서는 제외됩니다.</li>\n</ul>\n\n<p>이러한 두 마이그레이션 메커니즘을 함께 사용하면 서비스가 업그레이드되고 데이터 액세스 계층 코드가 변경된 후 오래된 문서 구문 분석으로 인해 오류가 발생하지 않습니다. 후속 버전에서 항상 제거되는 명시적 마이그레이션 코드 외에 이전 버전과의 호환성 코드가 필요하지 않습니다.</p>\n\n<h3>탄력적 크기 조정 및 자동 백업</h3>\n\n<p>읽기/쓰기 처리량이 매우 높은 컨테이너는 container에 <a href=\"https://docs.microsoft.com/en-ca/azure/cosmos-db/set-throughput\" target=\"_blank\">대해 프로비전된 RU/s 제한에</a> 도달하면 속도가 제한되는 경우가 많습니다. 서비스&rsquo; 노드 중 하나가 가상 머신이고, 컨테이너에 대해 작업을 수행하고<a href=\"https://docs.microsoft.com/en-us/rest/api/cosmos-db/http-status-codes-for-cosmosdb\" target=\"_blank\">, 429 너무 많은 요청&rdquo; 속도 제한 예외를 가져오&ldquo;</a>면 Azure Service Fabric 원격을 사용하여 처리량 증가를 위해 중앙 집중식 탄력적 크기 조정 서비스를 통해 요청을 보냅니다. 중앙 집중식 서비스는 여러 노드에서 이러한 요청을 집계하여 짧은 시간 내에 처리량이 두 번 이상 증가하지 않도록 합니다. 이는 여러 노드에 영향을 주는 단일 처리량 버스트에 의해 발생할 수 있기 때문입니다. 전체 RU/s 비용을 최소화하기 위해 유사한 정기적인 스케일 다운 프로세스는 각 고객이&rsquo; 근무하지 않는 시간 동안과 같이 적절한 경우 프로비전된 처리량을 줄입니다.</p>\n\n<p>Azure Advanced Threat Protection은 <a href=\"https://docs.microsoft.com/en-us/azure/cosmos-db/online-backup-and-restore\" target=\"_blank\">Azure Cosmos DB의 자동 백업 기능을</a> 활용하여 각 컨테이너를 보호합니다. 백업은 Azure Blob Storage에 상주하며 GRS(지역 중복 스토리지)를 사용하여 다른 지역에 복제됩니다. 또한 Azure Advanced Threat Protection은 고객 구성 데이터를 다른 지역에 복제하므로 재해 발생 시 신속하게 복구할 수 있습니다. &ldquo;이 작업은 주로 원본 데이터베이스가 손실&rdquo;된 경우 IT 관리자가 수백 개의 센서를 다시 구성할 필요가 없도록 센서 구성 데이터를&mdash; 보호하기 위해 수행됩니다.</p>\n\n<p>Azure Advanced Threat Protection은 최근 전체 지역 복제를 온보딩하기 시작했습니다. &ldquo;Weve&rsquo;는 프로덕션 데이터를 다른 지역으로 원활하고 쉽게 복제하기 위해 지역 복제 및 다중 지역&rdquo; 쓰기를 사용하도록 설정하기 시작했다고 Hagai는 말합니다. &ldquo;이를 통해 서비스 가용성을 더욱 개선하고 보장할 수 있으며, 자체 고가용성 메커니즘을 유지 관리하는 대신 서비스 제공을 간소화할 수 있습니다.&rdquo;</p>\n\n<p>Azure Cosmos DB의 Azure Advanced Threat Protection 팀&rsquo; 구현으로 인한 결과를 설명하는 <a href=\"https://azure.microsoft.com/en-us/blog/always-on-real-time-threat-protection-with-azure-cosmos-db-part-two/\" target=\"_blank\">2부</a>를 계속 진행합니다.</p>\n"
}