{
    "Slug": "announcing-app-service-authentication-authorization",
    "Title": "App Service 인증/권한 부여 확장",
    "Summary": "Today we are expanding the Authentication/Authorization feature for Azure App Service to include new identity providers, new sign-in options and greater flexibility in access control.",
    "Content": "<p>작년 이 무렵, 제 동료 <a href=\"https://azure.microsoft.com/en-us/blog/author/byvinyal/\">Byron Tardif</a> 는 <a href=\"https://azure.microsoft.com/en-us/blog/azure-websites-authentication-authorization/\">Azure Websites 인증/권한 부여</a>를 소개하는 게시물을 작성했습니다. 이 기능을 사용하면 사용자가 몇 번의 클릭만으로 Azure Active Directory 사용하여 사이트를 신속하게 보호할 수 있습니다. Weve&rsquo;는 사용 편의성에 대해 많은 것을 들었지만, 많은 고객은 특히 API 시나리오를 중심으로 더 많은 유연성을 원했습니다.</p>\n\n<p>그런 다음, 3월에는 Web Apps Mobile Apps를 결합한 Azure App Service 도입했습니다. 단일 제품의 API Apps 및 Logic Apps. 여기에는 사이트 간에 공유 인증을 허용하고 Mobile Services 로그인 지원을 확장한 App Service 게이트웨이가 포함되었습니다. 그러나 고객으로부터 들었던 한 가지 주요 요청은 개별 애플리케이션 수준에서 인증의 유연성을 높이는 것이었습니다.</p>\n\n<p>현재 이러한 접근 방식을 병합하고 App Service 인증/권한 부여 기능을 확장하여 새 ID 공급자, 새 로그인 옵션 및 액세스 제어의 유연성을 높이고 있습니다. 이렇게 하면 고객에게 게이트웨이의 모든 풍요로움을 제공하지만 사이트별 및 향상된 관리 환경을 제공합니다. 웹 및 모바일 애플리케이션은 앞으로 App Service 게이트웨이 대신 이 기능을 사용하는 것이 좋습니다.</p>\n\n<h2>시작</h2>\n\n<p>App Service 인증/권한 부여는 Azure Preview 관리 포털에 노출됩니다. 사용하도록 설정하려면 웹 또는 모바일 앱의 <strong>설정</strong> 블레이드를 탐색하고 <strong>인증/권한 부여</strong>를 선택합니다. 스위치를 켜기로 전환하여 사이트 보호 옵션을 봅니다.</p>\n\n<p><img alt=\"Enabling Authentication / Authorization\" border=\"0\" height=\"414\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/31481b46-df1f-40ef-9b30-77e003f6a3a3.png\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto\" title=\"인증/권한 부여 사용\" width=\"610\"></p>\n\n<p>주요 변경 사항 중 하나는 Azure Active Directory뿐만 아니라 페이스 북, 구글, 마이크로 소프트 계정 및 트위터를 포함하도록 공급자 선택을 확장했다는 것입니다. 이러한 옵션 중 하나를 클릭하면 사용자가 해당 공급자와 로그인할 수 있는 설정을 구성할 수 있습니다. Facebook 및 Microsoft 계정 블레이드는 로그인 시 요청할 수 있는 선택적 범위 목록을 노출하여 애플리케이션이 사용자에 대한 자세한 정보를 얻을 수 있도록 합니다.</p>\n\n<p><img alt=\"Facebook configuration settings\" border=\"0\" height=\"480\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/86a5fbae-f0c6-4b7a-8c25-ac6f23f56f0b.png\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto\" title=\"Facebook 구성 설정\" width=\"460\"></p>\n\n<p>&nbsp;</p>\n\n<p>AAD 대한 여러 모드를 제공하며, 몇 번의 클릭만으로 구성하기 위해 <strong>Express</strong> 옵션을 사용하도록 선택할 수 있습니다. 원하는 경우 <strong>고급</strong> 옵션을 사용하여 수동으로 AAD 구성을 제공할 수 있습니다. 각 공급자 구성에 대한 자세한 내용은 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-service-mobile-how-to-configure-active-directory-authentication/\">Azure Active Directory</a>, <a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-service-mobile-how-to-configure-facebook-authentication/\">Facebook</a>, <a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-service-mobile-how-to-configure-google-authentication/\">Google</a>, <a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-service-mobile-how-to-configure-microsoft-authentication/\">Microsoft 계정</a> 및 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-service-mobile-how-to-configure-twitter-authentication/\">Twitter</a> 항목을 참조하세요.</p>\n\n<h2>지연된 권한 부여</h2>\n\n<p>많은 애플리케이션에는 애플리케이션의 여러 부분에 대해 다양한 액세스 제한이 있습니다. 일부 API는 공개적으로 사용할 수 있도록 하고 다른 API는 로그인하도록 할 수 있습니다. 원래 인증/권한 부여 기능은 전체 사이트에서 로그인을 요구하므로 전부 아니면 전무였습니다. 이 옵션은 여전히 존재하지만 애플리케이션 코드가 액세스 결정을 렌더링하도록 허용합니다. 인증된 경우 사용자 정보로 ThreadPrincipal을 설정하므로 지금은 ASP.NET 사이트에서 가장 잘 수행됩니다. 그런 다음, 애플리케이션은 보호가 필요한 모든 작업에 [Authorize] 특성을 사용할 수 있지만 다른 작업은 허용됩니다. 다른 플랫폼을 사용하는 애플리케이션은 전체 사이트 보호 옵션을 사용하거나 쿠키 또는 토큰의 유효성을 수동으로 검사하려고 합니다.</p>\n\n<p>인증/권한 부여를 사용하도록 설정하면 애플리케이션 코드는 기본적으로 액세스 결정을 담당합니다. 사이트에서 인증되지 않은 모든 트래픽을 특정 공급자로 리디렉션하려면 <strong>요청이 인증되지 않은 드롭다운 시 수행할 작업</strong> 에서 해당 공급자를 선택합니다.</p>\n\n<p><img alt=\"Selecting action for when client is unauthenticated\" border=\"0\" height=\"144\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/70dbfbc0-04f1-4fe2-99df-ba809e03d1c4.png\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; border-top-width: 0px; margin-right: auto\" title=\"클라이언트가 인증되지 않은 경우에 대한 작업 선택\" width=\"480\"></p>\n\n<p>한 번에 여러 ID 공급자를 구성할 수 있지만 전체 사이트 보호를 위해 하나만 구성할 수 있습니다. 여러 공급자를 사용하는 대부분의 애플리케이션은 인증되지 않은 요청에 대해 No action&rdquo; 옵션을 사용하여 &ldquo;애플리케이션에서 사용자 로그인 시기와 방법을 결정할 수 있습니다.</p>\n\n<h2>로그인 옵션</h2>\n\n<p>인증되지 않은 요청이 사이트에 도달했을 때 브라우저를 리디렉션하여 원래 인증/권한 부여에서만 로그인을 허용했습니다. 이제 개발자는 이 동작을 활용하거나 로그인 흐름을 명시적으로 시작할 수 있습니다.</p>\n\n<p>애플리케이션은 사용자를 사이트의 /.auth/login/&lt;provider&gt; 엔드포인트로 이동하여 동일한 리디렉션 자체를 트리거할 수 있습니다. 여기서 <em>&lt;공급자&gt;</em> 는 <em>aad, facebook, google, microsoftaccount</em> 및<em> twitter</em> 중 하나입니다. 이 옵션은 로그인 단추가 있는 사이트와 많은 모바일 애플리케이션에 적합합니다.</p>\n\n<p>또는 클라이언트가 공급자 SDK를 사용하여 토큰을 가져와 세션 토큰으로 교환할 수 있습니다. 키 &ldquo;access_token(또는 &ldquo;Microsoft 계정에 대한 authenticationToken&rdquo;)에서 JSON 본문의 공급자 토큰을 사용하여 동일한 엔드포인트에 HTTP POST를 제출하기&rdquo;만 하면 됩니다. 공급자 SDK를 플랫폼에서 사용할 수 있고 많은 웹 및 API 애플리케이션에서도 작동하는 경우 모바일 애플리케이션에 대한 기본 솔루션입니다.</p>\n\n<p>실제로 이 지원은 App Service 헤드리스 인증을 허용할 수 있음을 의미합니다. 디먼 프로세스 또는 인터페이스 없이 API에 액세스해야 하는 다른 클라이언트가 있는 경우 AAD 서비스 주체를 사용하여 토큰을 요청하고 애플리케이션 인증에 사용할 수 있습니다. AAD 경우 전달자 토큰 사양에 따라 세션 토큰을 우회하고 권한 부여 헤더에 AAD 토큰을 포함할 수도 있습니다.</p>\n\n<p>현재 업데이트가 진행되는 현재 Mobile Apps 클라이언트 SDK는 이제 LoginAsync() 메서드에서 앞서 언급한 두 흐름을 모두 지원합니다.</p>\n\n<h2>토큰 저장소</h2>\n\n<p>포털에서 유의할&rsquo; 다른 옵션 중 하나는 토큰 저장소를 사용하거나 사용하지 않도록 설정하는 기능입니다. 이 기능을 사용하면 연결된 사용자의 컨텍스트에서만 액세스할 수 있는 기본 공급자 토큰을 애플리케이션에 저장할 수 있습니다. 이 옵션은 현재 기본적으로 설정되며 모바일 시나리오에 필요합니다.</p>\n\n<p>그래프 호출에 필요한 토큰뿐만 아니라 추가 사용자 정보를 검색하려면 사이트의 /.auth/me 엔드포인트에 GET을 실행하기만 하면 됩니다. 요청에 유효한 세션 쿠키 또는 세션 토큰이 포함되어 있으면 현재 사용자에 대한 정보가 반환됩니다. Mobile Apps 서버 SDK는 이 API를 쉽게 사용할 수 있는 GetAppServiceIdentityAsync() 메서드를 제공합니다.</p>\n\n<h2>계속 진행하여 인증</h2>\n\n<p>이를 통해 App Service 애플리케이션에서 인증을 시작하는 데 필요한 모든 것이 있어야 합니다. Well&rsquo;은 이 기능 및 해당 API와 관련된 설명서 집합을 확장하기 위해 노력하고 있으므로 추가 기능 개선 사항도 여기에서 다시 확인하세요.</p>\n\n<p>App Service 인증/권한 부여를 사용해 보시고 여러분이 좋아하거나 하지 않는&rsquo; 것을 알려드릴 수 있기를 바랍니다. <a href=\"https://feedback.azure.com/forums/34192--general-feedback\">언제든지 Azure 피드백 사이트</a> 및 <a href=\"https://social.msdn.microsoft.com/Forums/azure/en-US/home\">MSDN 포럼</a>에서 팀에 연결하거나 아래 의견에 회신을 남길 수 있습니다.</p>\n"
}