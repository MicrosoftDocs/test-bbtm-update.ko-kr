{
    "Slug": "10-github-samples-with-azure-documentdb-you-shouldn-t-miss",
    "Title": "Azure DocumentDB를 사용하여 10개의 GitHub 샘플을 놓치지 마세요!",
    "Summary": "Azure DocumentDB is a fully managed, multi-model, scalable, queryable, schema-free NoSQL database service built for modern applications: mobile, web, IoT, bots, AI, etc. Recently, I went on GitHub…",
    "Content": "<p><strong>2017년 5월 10일 현재</strong></p>\n\n<p><strong>Azure Cosmos DB는 전역적으로 분산된 Microsofts&rsquo; 다중 모델 데이터베이스입니다. Azure Cosmos DB는 글로벌 배포 및 수평적 확장을 핵심으로 처음부터 빌드되었습니다. 사용자가 어디에 있든 데이터를 투명하게 스케일링하고 복제하여 모든 수의 Azure 지역에 턴키 글로벌 배포를 제공합니다. 전 세계적으로 처리량 및 스토리지를 탄력적으로 확장하고 필요한 처리량 및 스토리지에 대해서만 비용을 지불합니다. Azure Cosmos DB는 전 세계 어디서나 99번째 백분위수에서 한 자리 밀리초의 대기 시간을 보장하고, 성능을 미세 조정하기 위해 잘 정의된 여러 일관성 모델을 제공하며, 업계 최고의 SLA(서비스 수준 계약)가 지원하는 멀티 호밍 기능으로 고가용성을&mdash; 보장합니다.&nbsp;</strong></p>\n\n<p><strong>Azure Cosmos DB는 스키마에 구애받지 않습니다. 스키마 및 인덱스 관리를 처리할 필요 없이 모든 데이터를 자동으로 인덱싱합니다. &rsquo;또한 문서, 키-값, 그래프 및 열 패밀리 데이터 모델을 기본적으로 지원하는 다중 모델도 제공합니다. Azure Cosmos DB를 사용하면 DocumentDB SQL(문서), MongoDB(문서), Azure Table Storage(키-값) 및 Gremlin(그래프)이 모두 기본적으로 지원되므로 원하는 API를 사용하여 데이터에 액세스할 수 있습니다.</strong></p>\n\n<hr>\n<p><a href=\"https://azure.microsoft.com/en-us/services/documentdb/\">Azure DocumentDB</a>는 모바일, 웹, IoT, 봇, AI 등 최신 애플리케이션용으로 빌드된 완전 관리형 다중 모델, 확장 가능하고 쿼리 가능한 스키마 없는 NoSQL 데이터베이스 서비스입니다. 최근에, 나는 GitHub 가서 유용한 자료와 단계별 자습서 및 예제에 대한 링크를 많이 발견했다. 다음은 행성 규모의 NoSQL을 통해 지원되는 앱을 빌드하기 시작하는 모든 사용자가 알아야 할 상위 10개 항목입니다. 더 많은 것이 있습니다. 따라서 이 멋진 새로운 NoSQL 행성 규모 데이터베이스 서비스에 대해 알아보세요.</p>\n\n<p><img alt=\"\" height=\"487\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/0451fcb0-60cc-4b19-9ff7-6e271fff4b5c.png\" width=\"865\"></p>\n\n<h2>1. <a href=\"https://github.com/Azure/azure-documentdb-dotnet\">Azure/azure-documentdb-dotnet</a></h2>\n\n<p>이 <a href=\"https://github.com/Azure/azure-documentdb-dotnet\">리포지토리</a>에서는 <a href=\"https://azure.microsoft.com/en-us/resources/samples/\">Azure DocumentDB 및 .NET SDK와</a> 관련된 <a href=\"https://github.com/Azure/azure-documentdb-dotnet/tree/master/samples\"><strong>샘플</strong></a> 및 유틸리티와 사용 방법을 찾을 수 있습니다. 샘플은 .NET SDK의 모든 방법과 작업을 사용하는 방법을 보여 줍니다. <strong>searchabletodo</strong>는 DocumentDB를 사용하여 ASP.NET MVC 웹 애플리케이션을 빌드한 다음 <a href=\"https://azure.microsoft.com/en-us/services/search/\">Azure Search</a>를 사용하여 더 보강하는 방법을 보여 주는 샘플 ASP.NET MVC 웹 애플리케이션입니다. 이 리포지토리의 또 다른 좋은 예는 DocumentDB 기본 제공 권한 부여 엔진을 사용하여 <a href=\"https://github.com/Azure/azure-documentdb-dotnet/tree/2fe1fad6a1a7f684d7253190640ecb301828b35f/samples/xamarin/UserItems\"><strong>Xamarin</strong></a> 모바일 앱에 대한 사용자별 데이터 패턴을 구현하는 방법을 보여주는 <a href=\"https://azure.microsoft.com/en-us/blog/announcing-azure-documentdb-sdk-for-xamarin/\"><strong>Xamarin 샘플입니다</strong></a>. 사용자가 Facebook Auth를 사용하여 로그인하고 항목을 관리할 수 있는 간단한 다중 사용자 ToDo 목록 앱입니다. 이 샘플을 사용한 후 Xamarin으로 더 나아가 DocumentDB 위에 IoS 또는 Android 앱을 빌드할 수 있습니다.</p>\n\n<p><img alt=\"\" height=\"434\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/705ab951-ae53-4cc6-8641-f77434a08b3e.png\" width=\"772\"></p>\n\n<p>샘플에서는 클라이언트 SDK를 사용하여 서비스와 가장 잘 상호 작용하는 방법을 안내합니다. 특히 다음 사항에 주의하세요.</p>\n\n<ul>\n    <li><strong>CollectionManagement </strong>&ndash; 는 DocumentCollection 리소스에 대한 CRUD 작업을 보여 줍니다.</li>\n    <li><strong>DatabaseManagent</strong> &ndash; 는 데이터베이스 리소스에 대한 CRUD 작업을 보여 줍니다.</li>\n    <li><strong>DocumentManagement</strong> &ndash; 는 문서 리소스에 대한 CRUD 작업을 보여 줍니다.</li>\n    <li><strong>IndexManagement</strong> &ndash; 는 필요한 경우 컬렉션에 대한 인덱싱 정책을 사용자 지정하는 방법에 대한 샘플을 보여 줍니다.</li>\n    <li><strong>분할</strong> &ndash; .NET SDK를 사용하는 일반적인 분할 시나리오에 대한 샘플이 포함되어 있습니다.</li>\n    <li><strong>쿼리</strong> &ndash;&nbsp; 는 LINQ 및 SQL 사용하여 쿼리하는 방법을 보여줍니다.</li>\n    <li><strong>ServerSideScripts</strong> &ndash; 에서는 저장 프로시저, 트리거 및 사용자 정의 함수를 만들고 실행하는 방법을 보여 줍니다.</li>\n    <li><strong>UserManagement</strong> &ndash; 는 사용자 및 권한 리소스에 대한 CRUD 작업을 보여 줍니다.</li>\n    <li><strong>공간</strong> &ndash; 에서는 GeoJSON 및 DocumentDB 지리 공간적 기능을 사용하는 방법을 보여 줍니다.</li>\n</ul>\n\n<p>이러한 샘플을 살펴보고 나면 Azure에서 NoSQL 서비스와 상호 작용하는 다양한 API를 사용하는 방법과 방법을 잘 이해해야 합니다.</p>\n\n<h2>2. <a href=\"https://github.com/mingaliu/DocumentDBStudio\">mingaliu/DocumentDBStudio</a></h2>\n\n<p><img alt=\"\" height=\"438\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/45042989-9d82-446f-9874-d77ee4731e36.png\" width=\"779\"></p>\n\n<p>이 <a href=\"https://github.com/mingaliu/DocumentDBStudio\">리포지토리</a>에는 DocumentDB 서비스에 대한 클라이언트 관리 뷰어/탐색기 DocumentDBStudio <a href=\"https://github.com/mingaliu/DocumentDBStudio\"><strong></strong></a> -&nbsp; 가 포함되어<strong> </strong> 있습니다. 현재는 다음을 지원합니다.</p>\n\n<ol>\n    <li>DocumentDB 리소스를 쉽게 검색할 수 있으므로 DocumentDB 리소스 모델을 매우 빠르게 학습할 수 있습니다.</li>\n    <li>모든 DocumentDB 리소스 및 리소스 피드에 대한 CRUD(만들기, 읽기, 업데이트, 삭제) 및 쿼리 작업</li>\n    <li>SQL 또는 UDF 쿼리 지원 Javascript 저장 프로시저를 실행하거나 DocumentDBStudio에서 바로 트리거할 수 있습니다.</li>\n    <li>모든 요청 작업에 대한 헤더 검사(할당량, 사용량, RG 요금 등) 또한 TCP, HTTPDirect 및 게이트웨이의 세 가지 연결 모드를 지원합니다.</li>\n    <li>다양한 RequestOptions(사전/사후 트리거, sessionToken, 일관성 모델 등), FeedOptions(페이징, enableScanforQuery 등), IndexingPolicy(indexingMode, indexingType, indexingPath 등)를 지원합니다.</li>\n    <li>출력 JSON을 PrettyPrint합니다.</li>\n    <li>JSON 파일을 대량으로 가져옵니다.</li>\n</ol>\n\n<p>DocumentDB의 네이티브&rdquo;에게 좋은 IDE&rdquo;일 뿐입니다&ldquo;.&ldquo; 시도해 보세요.</p>\n\n<h2>3. <a href=\"https://github.com/Azure/azure-documentdb-node\">Azure/azure-documentdb-node</a></h2>\n\n<p>이 <a href=\"https://github.com/Azure/azure-documentdb-node\">리포지토리</a> 는 다양한 도구 및 애플리케이션 개발에 적합한 오픈 소스 플랫폼 간 JavaScript 런타임 환경인 Node.js 사용하여 Azure DocumentDB와 쉽게 상호 작용할 수 있는 <a href=\"https://azure.microsoft.com/en-us/develop/nodejs/\">Node.js모듈 </a> 을 제공합니다. Node.js 많은 입력/출력 작업뿐만 아니라 실시간 웹 애플리케이션(예: 실시간 통신 프로그램 및 브라우저 게임)을 통해 웹 애플리케이션의 처리량 및 확장성을 최적화하는 것을 목표로 합니다. DocumentDB 서비스와 결합하면 앱을 빌드한 다음 매우 빠르게 확장할 수 있는 매우 강력한 조합과 민첩성을 제공합니다.</p>\n\n<p><img alt=\"\" height=\"390\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/85123496-b3f7-427b-b7d1-c6bbab7ff775.png\" width=\"693\"></p>\n\n<p>Node.js 사용하여 개발하고 DocumentDB와 결합하는 경우 <a href=\"https://azure.microsoft.com/en-us/develop/nodejs/\">Node.js 개발자 센터</a> 및 Microsoft Azure DocumentDB Node.js SDK 설명서를 참조하세요. 또한 시작하려면 이 <a href=\"https://www.youtube.com/watch?v=UAE7h9PCZjA\">YouTube 동영상을</a> 시청하세요. 리포지토리의 <a href=\"https://github.com/Azure/azure-documentdb-node/tree/master/samples\">샘플</a>은 <a href=\"https://www.visualstudio.com/vs/node-js/\"> Visual StudioNode.js 도구를</a> 사용하여 빌드되었으며 이에 따라 njsproj 파일을 포함합니다. 그러나 이러한 샘플을 실행하기 위해 Visual Studio 필요가 없습니다. 원하는 경우 nsjprof 파일을 무시하고 선택한 편집기(예: Visual Studio Code 또는 Sublime와 같은 텍스트 편집기)에서 <a href=\"https://code.visualstudio.com/\">app.js</a> 엽니다. 선택은 당신의 것입니다!</p>\n\n<h2>4. <a href=\"https://github.com/Azure/azure-documentdb-datamigrationtool\">Azure/azure-documentdb-datamigrationtool</a></h2>\n\n<p>이 리포지토리에는 쉽고 간편하게 다양한 원본에서 DocumentDB로 데이터를 가져오는 오픈 소스 솔루션인 <a href=\"https://github.com/Azure/azure-documentdb-datamigrationtool\">DocumentDB 데이터 마이그레이션 도구</a> - 가 포함되어 있습니다. 마이그레이션 도구는 다음 원본에서 데이터 마이그레이션을 지원합니다.</p>\n\n<ul>\n    <li>Azure Tables</li>\n    <li>JSON 파일</li>\n    <li>MongoDB</li>\n    <li>SQL Server</li>\n    <li>CSV 파일</li>\n    <li>RavenDB</li>\n    <li>Amazon DynamoDB</li>\n    <li>HBase</li>\n    <li>DocumentDB 컬렉션</li>\n</ul>\n\n<p>가져오기 도구는 그래픽 사용자 인터페이스(dtui.exe)를 포함하지만 명령줄(dt.exe)에서 구동할 수도 있습니다. 실제로 UI를 통해 가져오기를 설정한 후 관련 명령을 출력하는 옵션이 있습니다. 가져오기 중에 계층 관계(하위 문서)를 만들 수 있도록 테이블 형식 원본 데이터(예: SQL Server 또는 CSV 파일)를 변환할 수 있습니다. 데이터 원본 옵션, 각 원본에서 가져올 샘플 명령줄, 대상 옵션 및 가져오기 결과 보기에 대해 자세히 알아보려면 확인하세요.</p>\n\n<p><img alt=\"\" height=\"511\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a1545530-a301-444f-9d74-b8f90adde912.png\" width=\"908\"></p>\n\n<h2>5. <a aria-label=\"GitHub repo featuring Python sample solutions\" href=\"https://github.com/Azure/azure-documentdb-python\">Azure/azure-documentdb-python</a></h2>\n\n<p>이 <a aria-label=\"GitHub repo featuring Python sample solutions\" href=\"https://github.com/Azure/azure-cosmos-python\">리포지토리</a> 에는 Azure DocumentDB에서 일반적인 작업을 보여 주는 Python 샘플 솔루션이 포함되어 있습니다. Azure DocumentDB를 사용하여 Azure에 호스트된 Python 웹 애플리케이션에서 데이터를 저장하고 액세스하는 방법을 알아보고 Python 및 Azure 웹 사이트를 사용한 몇 가지 이전 경험이 있다고 가정합니다. <img alt=\"\" height=\"438\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/cbb22141-c222-48a0-b557-a6f2424a6300.png\" width=\"779\"> 후속 조치를 위한 또 다른 좋은 자습서는 <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-python-application\">DocumentDB를 사용한 Python Flask 웹 애플리케이션 개발입니다. 여기서 DocumentDB</a>에 대해 Python을 사용하여 설문 조사에 투표할 수 있는 간단한 투표 애플리케이션을 빌드합니다.</p>\n\n<h2>6. <a href=\"https://github.com/Azure/azure-documentdb-node-q\">Azure/azure-documentdb-node-q</a></h2>\n\n<p>이 리포지토리에는 DocumentDB Node.js Q promise 래퍼가 있습니다. Q 약속에 대해 잘 모르는&rsquo; 경우 Javascript With Q에서 Promise를 읽어 보세요. 리포지토리 프로젝트는 Azure DocumentDB와 매우 쉽게 상호 작용할 수 있도록 Q promise&rdquo;를 사용하는 Hello World 예제 코드를 제공합니다&ldquo;. 여기서는 DocumentDB가 JSON 및 JavaScript에 대한 심층적인 노력으로 빌드된 것을 진지하게 확인할 수 있습니다. 최신 T-SQL&rdquo; JavaScript의 &ldquo;이러한 접근 방식을 통해 애플리케이션 개발자는 형식 시스템 불일치 및 개체 관계형 매핑 기술의 복잡성을 방지할 수 있습니다. 이 리포지토리의 샘플은 JavaScript SDK를 사용하여 <a href=\"https://azure.microsoft.com/services/documentdb\">Azure DocumentDB</a> 서비스와 상호 작용하는 데 도움이 됩니다.<img alt=\"\" height=\"472\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/89986f4b-802f-4821-992d-61fc949741a7.png\" width=\"838\"></p>\n\n<h2>7. <a href=\"https://github.com/Azure/azure-documentdb-js-server\">Azure/azure-documentdb-js-server</a></h2>\n\n<p>이 리포지토리로 향하기 전에 먼저 이 <a href=\"https://channel9.msdn.com/Blogs/Azure/Azure-Demo-A-Quick-Intro-to-Azure-DocumentDBs-Server-Side-Javascript\">비디오를</a> 시청하여 Azure DocumentDB&#39;서버 쪽 프로그래밍 모델을 간략하게 소개합니다. JavaScript의 DocumentDBs&rsquo; 언어 통합 트랜잭션 실행을 통해 개발자가 JavaScript에서 기본적으로 저장 프로시저, 트리거 및 UDF(사용자 정의 함수)를 작성할 수 있는 방법을 알아봅니다. 이를 통해 개발자는 데이터베이스 스토리지 파티션에서 직접 배송 및 실행할 수 있는 애플리케이션 논리를 작성할 수 있습니다.</p>\n\n<p><img alt=\"\" height=\"455\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7e52b9ba-67f5-4135-bdd1-a758d8382852.png\" width=\"809\"></p>\n\n<h2>8. <a href=\"https://github.com/Azure/azure-documentdb-java\">Azure/azure-documentdb-java</a></h2>\n\n<p>이 프로젝트는 Java에서 Azure DocumentDB와 쉽게 상호 작용할 수 있는 클라이언트 라이브러리를 제공합니다. 이 리포지토리에서는 DocumentDB로 작업하는 다양한 Java 코드 샘플을 찾을 수 있습니다. 편안하다고 느끼면 몇 단계만에 <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-java-application\">DocumentDB를 사용하여 전체 Java 웹 애플리케이션</a> 을 빌드할 수 있습니다. 설명서는 Microsoft Azure <a href=\"https://azure.microsoft.com/en-us/develop/java/\">Java 개발자 센터</a> 및 JavaDocs를 참조하세요.</p>\n\n<p><img alt=\"\" height=\"444\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a22dea56-5dfd-404d-98e0-5898cdd2ce56.png\" width=\"789\"></p>\n\n<h2>9. Azure/azure-documentdb-hadoop</h2>\n\n<p>이 리포지토리는 Microsoft Azure DocumentDB가 Hadoop MapReduce, Hive 및 Pig 작업에 대한 입력 원본 또는 출력 싱크 역할을 할 수 있는 Java의 클라이언트 라이브러리를 제공합니다. 이 자습서에서는 DocumentDB&#39;Hadoop 커넥터를 사용하여 Azure HDInsight에서 Apache Hive, Apache Pig 및 Apache Hadoop MR 작업을 실행하는 방법을 보여줍니다. DocumentDB&#39;Hadoop 커넥터를 사용하면 DocumentDB가 Hive, Pig 및 MapReduce 작업의 원본 및 싱크 역할을 할 수 있습니다. 이 자습서에서는 Hadoop 작업의 데이터 원본 및 대상으로 DocumentDB를 사용하고 이를 수행하는 방법을 보여줍니다. DocumentDB 및 HDInsight를 사용하여 Hive 작업을 실행하는 다음 비디오를 시청하여 시작하는 것이 좋습니다.</p>\n\n<p>Hive, Pig 및 MapReduce 작업 <a href=\"https://docs.microsoft.com/en-us/azure/documentdb/documentdb-run-hadoop-with-hdinsight\">이 자습서</a> 에서는 Hadoop 작업의 데이터 원본 및 대상으로 DocumentDB를 사용하고 이를 수행하는 방법을 보여줍니다. DocumentDB 및 HDInsight를 사용하여 Hive 작업을 실행하는 다음 <a href=\"https://sec.ch9.ms/ch9/86a2/50ac21ec-dd12-4739-9c42-702a447886a2/documentdbhadoopconnector_mid.mp4\">비디오를</a> 시청하여 시작하는 것이 좋습니다.</p>\n\n<p><img alt=\"\" height=\"442\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/f738f278-3d36-4fb7-9258-02ab8606f7b3.png\" width=\"786\"></p>\n\n<h2>10. <a href=\"https://github.com/Azure-Samples/documentdb-node-todo-app\">Azure-Samples/documentdb-node-todo-app</a></h2>\n\n<p>마지막으로 <a href=\"https://github.com/Azure-Samples/documentdb-node-todo-app\">이 리포지토리</a> 에는 전체 애플리케이션에 대한 소스 코드가 포함되어 있습니다. 이 샘플에서는 Microsoft Azure DocumentDB 서비스를 사용하여 Azure Websites에 호스트된 Node.js Express 애플리케이션의 데이터를 저장하고 액세스하는 방법을 보여 줍니다.</p>\n\n<p><img alt=\"\" height=\"413\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/31e55f3e-7d7d-4b1c-a1fc-bb5ad27a0f42.png\" width=\"799\"></p>\n\n<p>이 애플리케이션을 만드는 전체 엔드 투 엔드 연습은 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/documentdb-nodejs-application/\">Azure 설명서 페이지의 전체 자습서를</a> 참조하세요. 이 샘플에 포함된 코드는 Azure DocumentDB에 연결하는 간단한 Node.js Express 애플리케이션으로 이동하고 <a href=\"https://www.npmjs.com/package/documentdb\">documentdb npm 패키지를</a> 사용하여 DocumentDB와 상호 작용하는 방법을 보여 줍니다. 확장성 있는 엔터프라이즈급 웹 애플리케이션&rsquo;을 빌드하는 방법에 대한 모범 사례 집합이 아닌 좋은 시작입니다.</p>\n\n<p><a href=\"https://twitter.com/rimmanehme\">@rimmanehme</a></p>\n\n<p>추 신. NoSQL&rsquo;&rdquo;이라는 단어를 &ldquo;들어본 적이 없다면, 우선 &ndash; 와우! 당신은 블로그의 끝에, 여전히 관심을 지불. 정말&rsquo; 대단하군요! 둘째, DocumentDB에 대해 알아보고 작동 중인 것을 확인하는 빠른 방법은 다음 세 단계를 수행하는 것입니다.</p>\n\n<ol>\n    <li>2분 동안 <a href=\"https://azure.microsoft.com/documentation/videos/what-is-azure-documentdb/\">DocumentDB란?</a> DocumentDB 사용의 이점을 소개하는 비디오입니다.</li>\n    <li>Azure Portal을 사용하여 DocumentDB를 시작하는 방법을 강조하는 <a href=\"https://azure.microsoft.com/documentation/videos/create-documentdb-on-azure/\">Azure에서 DocumentDB 만들기</a> 동영상(3분)을 시청합니다.</li>\n    <li>다양한 활동을 통해 DocumentDB에서 사용할 수 있는 풍부한 쿼리 기능에 대해 알아볼 수 있는 <a href=\"https://www.documentdb.com/sql/demo\">쿼리 실습</a>을 방문합니다. 샌드박스 탭으로 이동하여 고유한 사용자 지정 SQL 쿼리를 실행하고 DocumentDB를 시험해 보세요.</li>\n</ol>\n\n<p><img alt=\"\" height=\"475\" role=\"presentation\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/e03710e7-e59f-49e6-ac64-db2566d5e4f5.png\" width=\"845\"></p>\n"
}