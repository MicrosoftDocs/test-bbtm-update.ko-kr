{
    "Slug": "an-introduction-to-eai-bridges",
    "Title": "EAI 브리지 소개",
    "Summary": "As part of the December 2011 Labs of Service Bus we are adding a brand-new set of EAI (Enterprise Application Integration) capabilities which includes bridges (commonly referred to as pipelines),…",
    "Content": "<p>2011년 12월 <a href=\"https://azure.microsoft.com/en-us/home/tour/service-bus/?WT.mc_id=cmp_pst001_blg_post0024\" target=\"_blank\">Service Bus</a> 랩의 일환으로 브리지(일반적으로 파이프라인이라고 함), 변환 및 하이브리드 연결을 포함하는 새로운 EAI(Enterprise 애플리케이션 통합) 기능을 추가하고 있습니다. 우리는 블로그 게시물의 시리즈를 통해 기능의 전체 세트를 통해 이동하지만 우리는 EAI 다리와 그 뒤에 기본 개념을 논의하여 시작하자. 이 게시물에서는 브리지의 필요성을 설명하고 간단한 XML 브리지 배포를 구성 &amp; 하고 이를 통해 메시지를 보내는 방법을 보여 줍니다.</p>  <p>이 용어 &lsquo;브리지&rsquo; 는 두 개의 끝점을 연결하는 무언가를 즉시 상기시켜 줍니다. 여기서 정보 시스템의 맥락에서 우리는 둘 이상의 서로 다른 시스템을 연결하는 브리지에 대해 이야기하고 있습니다. 샘플 시나리오를 통해 이를 더 잘 이해해 보겠습니다. 새 직원이 입사할 때마다 직원 관리 시스템과 HR 시스템이 급여 시스템과 상호 작용하는 조직 내 시나리오 또는 은행 계좌와 같은 직원 변경에 대한 세부 정보를 고려합니다. 직원 mgmt 및 HR 시스템은 SQL, Oracle, SAP 등과 같은 서로 다른 시스템일 수 있습니다.</p>  <p>이러한 시스템은 이해한 형식으로(메시지를 교환하여) 급여 시스템과 상호 작용합니다. 별도의 단위인 급여 시스템은 세 번째 인프라를 사용하여 구현할 수 있습니다. 이러한 시스템은 해당 메시지 형식을 계속 사용할 수 있지만 여전히 서로 통신할 수 있는 방식으로 연결되어야 합니다. 급여 시스템은 다른 두 시스템에서 메시지를 받을 때마다 일반적인 작업 집합을 수행합니다. 이러한 작업 집합을 브리지라는 공통 단위로 통합할 수 있습니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/6036.EAIBridges1.png\" alt=\"\" border=\"0\"></p>  <h1>왜 다리인가요?</h1>  <h2>프로토콜 브리징</h2>  <p>애플리케이션 1이 애플리케이션 2와 통신하려는 시나리오를 고려합니다. 그러나 애플리케이션 1은 REST/POX 프로토콜을 사용하여 메시지를 전송하지만 애플리케이션 2는 SOAP 프로토콜을 통해서만 메시지를 받을 수 있습니다. 이렇게 하려면 애플리케이션 중 하나를 수정하여 다른 애플리케이션이 비용이 많이 드는 연습을 이해하고 대부분의 경우 허용되지 않는 솔루션을 이해하는 형식으로 통신해야 합니다. 이 시나리오는 브리지를 중재자로 사용하여 쉽게 해결할 수 있습니다. 브리지는 REST/POX를 통해 메시지를 수락하지만 SOAP를 통해 메시지를 보냅니다. 브리지는 서로 다른 프로토콜을 통해 두 애플리케이션을 적절하게 연결하는 데 도움이 됩니다.&nbsp;</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3716.EAIBridges2.png\" alt=\"\" border=\"0\"></p>  <h2>구조적 정규화 또는 데이터 계약 변환</h2>  <p>아래 다이어그램에서 왼쪽의 애플리케이션은 특정 구조로 메시지를 보냅니다. 수신 애플리케이션에는 다른 구조에서 동일한 데이터가 필요합니다. 구조 변환은 서로 통신할 수 있도록 둘 사이에 발생해야 합니다. 브리지는 이러한 구조적 정규화/변환을 달성하는 데 도움이 될 수 있습니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3704.EAIBridges3.png\" alt=\"\" border=\"0\"></p>  <p>이 상황은 여러 개의 서로 다른 애플리케이션이 특정 애플리케이션에 메시지를 보내는 시나리오로 더 확장될 수 있습니다. 수신 애플리케이션/프로세스는 들어오는 모든 메시지를 이해하고 응답 메시지에 대해 그 반대로 수행하는 공통 형식으로 정규화하는 브리지 앞에 브리지를 추가할 수 있습니다. 이 프로세스를 일반적으로 정식화라고 합니다.</p>  <h2>메시지/계약 유효성 검사</h2>  <p>프로세스/애플리케이션이 하나 이상의 형식을 준수하는 메시지만 들어오고 다른 모든 것을 거부하도록 허용하는 간단한 상황을 고려합니다. 이를 위해 복잡하고 비용이 많이 드는 유효성 검사 논리를 작성해야 할 수 있습니다. EAI 브리지를 사용하면 몇 가지 매우 기본적인 구성 단계를 통해 이 작업을 수행할 수 있습니다. 브리지는 하나 이상의 스키마에 대해 들어오는 모든 메시지의 유효성을 검사할 수 있습니다. 메시지가 제공된 스키마 중 하나를 준수하는 경우에만 메시지가 애플리케이션으로 전송됩니다. 그렇지 않으면 거부되고 애플리케이션/클라이언트를 보내는 메시지로 적절한 응답이 전송됩니다.</p>  <h2>콘텐츠 기반 라우팅</h2>  <p>대부분의 경우 애플리케이션은 메시지 메타데이터/컨텍스트에 따라 메시지를 다른 애플리케이션으로 라우팅해야 합니다. 예를 들어 대출 처리 시나리오에서 금액 &gt; 이 $10,000이면 application1에 메시지를 보내고, 그렇지 않으면 application2로 보냅니다. 이 콘텐츠 기반 라우팅은 브리지를 사용하여 수행할 수 있습니다. 브리지는 나가는 메시지 메타데이터에 대한 간단한 라우팅 규칙을 사용하여 이를 달성하는 데 도움이 됩니다. 메시지는 클라우드 또는 온-프레미스에 있는 모든 엔드포인트/애플리케이션으로 보낼 수 있습니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3683.EAIBridges4.png\" alt=\"\" border=\"0\"></p>  <p>위의 각 기능에 대해 개별적으로 이야기했지만 격리된 경우는 거의 발생하지 않습니다. 위의 하나 이상을 결합하고 하나 이상의 EAI 브리지를 사용하여 해결할 수 있습니다. 또한 요구 사항에 따라 브리지를 연결하거나 병렬로 사용하거나 모듈화 및 손쉬운 유지 관리를 달성할 수 있습니다.</p>  <h1>구성, 배포 및 코드</h1>  <h3>Service Bus 계정 및 구독에 등록</h3>  <p>EAI 브리지&rsquo; 작업을 시작하기 전에 먼저 Service Bus 포털 내에서 Service Bus 계정에 등록해야 합니다.&nbsp; Service Bus 계정과 연결되는 Windows Live ID(WLID)로 로그인해야 합니다. &rsquo;이렇게 하면 새 Service Bus 구독을 만들 수 있습니다. 나중에 WLID로 로그인할 때마다 계정과 연결된 모든 Service Bus 구독에 액세스할 수 있습니다.</p>  <h3>네임스페이스 만들기</h3>  <p>구독이 설정되면 새 서비스 네임스페이스를 만들 수 있습니다. &rsquo;모든 Service Bus 계정에서 새롭고 고유한 서비스 네임스페이스를 제공해야 합니다. 각 서비스 네임스페이스는 Service Bus 엔터티 집합의 컨테이너 역할을 합니다. 아래 스크린샷은 Harish-Blog&rdquo; 서비스 네임스페이스를 만들 때 인터페이스의 &ldquo;모양을 보여 줍니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1614.EAIBridges5.png\" alt=\"\" border=\"0\"></p>  <p>계정 설정 및 네임스페이스 만들기에 대한 자세한 내용은 12월 CTP 릴리스와 함께 제공되는 사용자 가이드에서 찾을 수 있습니다.</p>  <h3>브리지 구성 및 배포</h3>  <p>Microsoft Visual Studio 일부로 제공한 간단한 UI 디자이너 표면을 사용하여 브리지를 구성할 수 있습니다. 이 환경을 사용하도록 설정하려면 여기에서 SDK를 다운로드합니다. SDK를 설치한 후 Visual Studio 이동하여 Visual C# -&gt; ServiceBus에서 찾을 수 있는 새 EAI 프로젝트를 만듭니다. 그런 다음 <a href=\"https://msdn.microsoft.com/en-us/library/windowsazure/hh689797.aspx\" target=\"_blank\">여기</a>&nbsp;(XML One-Way Bridge의 경우) 또는 여기&nbsp;(XML Request-Reply Bridge의 경우)에 설명된 단계에 따라 브리지를 구성하고 배포합니다.&nbsp;</p>  <p>아래 스냅샷은 Service Bus 큐(Queue1)에 연결된 단방향 브리지(bridge1), Service Bus 릴레이(OneWayRelay1) 및 클라우드에서 호스트되는 단방향 서비스(OneWayExternalService1)를 보여 줍니다. 브리지에 오는 메시지는 처리되고 이러한 3개의 끝점 중 하나로 라우팅됩니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/3240.EAIBridges6.png\" alt=\"\" style=\"border-style: initial; border-color: initial;\" border=\"0\"></p>  <p>아래 스냅샷은 요청-응답 브리지와 관련된 다양한 단계를 보여 주고 브리지를 구성할 수 있는 위치에서 표면을 형성합니다.</p>  <p><img src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2251.EAIBridges-7.png\" alt=\"\" border=\"0\"></p>  <h3>브리지에 메시지 보내기</h3>  <p>브리지를 구성하고 배포한 후에 메시지를 보낼 차례입니다. 간단한 웹 클라이언트 또는 WCF 클라이언트를 사용하여 브리지에 메시지를 보낼 수 있습니다. 또한 REST/POX 또는 SOAP를 통해 전송할 수 있습니다. 샘플 다운로드의 일부로 메시지를 보내는 데 사용할 수 있는 샘플 클라이언트를 제공했습니다. 클라이언트를 보내는 이러한 메시지를 사용하려면 여기에서 샘플을 다운로드합니다.</p>  <h1>피드백 래핑 및 요청</h1>  <p>바라건대이 게시물은 Service Bus 새로운 12 월 CTP에 도입되는 EAI 브리지 기능을 시작하는 방법을 보여 줍니다. Weve&rsquo;는 이곳에서 빙산의 일각만 보았습니다. Well&rsquo;은 향후 게시물에서 더 많은 깊이와 기능을 제공합니다.</p>  <p>마지막으로 CTP 릴리스의 주요 목표 중 하나는 서비스 및 기능에 대한 피드백을 얻는 것입니다. &rsquo;이러한 통합 기능에 대해 어떻게 생각하는지 듣고자 합니다. 브리지의 구성 및 배포 환경과 지금까지 그 일환으로 노출한 다양한 다른 기능에 대한 의견을 얻기 위해 특히 촉각을 곤두세우고 있습니다.</p>  <p>다른 제안, 비판, 칭찬 또는 질문은 Labs <a href=\"https://social.msdn.microsoft.com/forums/en-US/servicebuslabs\" target=\"_blank\">포럼</a>에서 알려주세요. 피드백은 사용자와 사용자 같은 다른 사용자를 위해 서비스를 개선하는 데 도움이 됩니다.&nbsp;</p>"
}