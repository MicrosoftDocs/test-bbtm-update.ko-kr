{
    "Slug": "announcing-azure-sdk-2-8-1-for-net",
    "Title": ".NET용 Azure SDK 2.8.1 발표",
    "Summary": "Today, we’re excited to announce Azure SDK 2.8.1 for Visual Studio 2013 and Visual Studio 2015. This SDK update offers some great new features for Azure App Service developers to complement the new release of App Service API Apps and general availability of Mobile Apps .NET server SDK.",
    "Content": "<p>오늘 Visual Studio 2013&rsquo; 및 Visual Studio 2015용 Azure SDK 2.8.1을 발표하게 되어 기쁩니다. 이 SDK 업데이트는 Azure App Service 개발자가 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-service-value-prop-what-is/\">App Service</a> API Apps의 새로운 릴리스와 Mobile Apps .NET 서버 SDK의 일반 공급 기능을 보완할 수 있는 몇 가지 새로운 기능을 제공합니다. 이러한 서비스 및 도구 업데이트는 ASP.NET 5 RC&rsquo;에 대한 최신 업데이트의 최신 업데이트로 Azure에서 웹, 모바일 및 REST API를 개발하는 데 흥미 진진한 시간입니다. 이 게시물은 Azure SDK 2.8.1에서 릴리스되는 새로운 기능을 요약합니다.</p>\n\n<p><a href=\"https://azure.microsoft.com/en-us/downloads/\">.NET용 Azure SDK 2.8.1</a><br>\n[VS 2015 | 다운로드 VS 2013]</p>\n\n<ul>\n    <li><b>새로운 최신 App Service 만들기 환경</b>: Weve&rsquo;는 전체 App Service 도구를 다시 상상하고 다시 설계했으며 <a href=\"https://azure.microsoft.com/en-us/documentation/services/app-service/web/\">웹</a>, <a href=\"https://azure.microsoft.com/en-us/documentation/services/app-service/mobile/\">모바일</a> 및 <a href=\"https://azure.microsoft.com/en-us/documentation/services/app-service/api/\">API</a> 앱 개발자를 위한 앱 만들기 및 게시 환경을 통합하는 데 중요한 조치를 취했습니다.</li>\n    <li><b>API 및 Mobile Apps에 대한 Project 템플릿 업데이트: </b>REST API 및 모바일&rsquo; 개발자용 최신 업데이트를 사용하려는 개발자를 지원하기 위해 Visual Studio 템플릿을 업데이트했습니다.</li>\n    <li><b>Resource Manager 템플릿 내보내기:</b> 새 도구는 다른 리소스 그룹 또는 다른 Azure 구독에서 토폴로지 다시 만들 수 있도록 만드는 데 필요한 리소스&rsquo;의 원클릭 JSON 파일 내보내기를 제공합니다.</li>\n    <li><b>향상된 REST API 클라이언트 생성: </b> Azure SDK 팀에서&rsquo; 제공하는 간소화된 사용자 환경 및 기본 코드 생성 개선 사항( <a href=\"https://github.com/azure/autorest\">AutoRest</a>라고도 함) 오픈 소스 Swagger 기반 생성기입니다.</li>\n</ul>\n\n<h1>Visual Studio App Service 개발자 환경 통합</h1>\n\n<p>각 리소스 유형 &ndash; Mobiles&rsquo; ID에서 공유되는 App Service 기능이 너무 많기 때문에 더 광범위하게 사용 가능한 자산뿐만 아니라 모든 곳에서 API 정의 기능을 사용할 수 있게 되었기 때문에 &ndash; App Service 개발자 환경이 동일한 맥락에서 모델링하는 데 필요하다고 결정했습니다. 하나의 웹 애플리케이션은 동일한 리소스 그룹에 보관된 수많은 REST API를 사용할 수 있으며 나중에 모바일 애플리케이션으로 보완될 수 있습니다. App Service 항상 새로운 것이 있을 것이라는 증거를 감안할 때 게시 환경을 통합하고 웹,&rsquo; 모바일 및 API 앱을 게시하여 App Service 훨씬 더 간단한 보기를 제공합니다.</p>\n\n<p><img alt=\"clip_image001\" border=\"0\" height=\"285\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7aae5529-19d5-4d1d-be10-c50cfaa15c6e.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image001\" width=\"360\"></p>\n\n<h1>더 많은 옵션이 있는 재설계되고 유익하며 기능적인 UI</h1>\n\n<p>이 통일&rsquo;과 함께 App Service 도구 경험의 전반적인 모양과 느낌에서 몇 가지 놀라운 진전을 이루었습니다. 이러한&rsquo; 새로운 UI 개선 사항은 App Service 도구 팀에서 엄청난 재 엔지니어링 노력&rsquo;의 첫 번째 물결이기 때문에 매우 기쁩니다. 연결된 서비스 및 새로운 Office 도구와 같은 새로운 Visual Studio UI 개념을 에뮬레이트하기 위해 디자인의 새로운 단계를 수행하는 데 이 첫 번째 재설계 작업을 집중했습니다. 새 UI 아래에는 코드 개선의 톤, 새로운 서비스 조명을 보다 효율적인 파트너 및 고객 중심으로 만들기 위한 조정이 있습니다. &rsquo;Azure Tools가 향후 게시물에서 제공할 새로운 확장성에 대해 자세히 알아보겠지만, 지금은&rsquo; 앱 선택 및 만들기 환경의 새롭고 개선된 디자인을 살펴보겠습니다.</p>\n\n<h1>원하는 앱을 완화&ldquo;하시겠습니까?&rdquo;</h1>\n\n<p>Azure에 많은 앱을 게시하는 고객 및 동료로부터 받은 일관된 피드백 중 하나는 목록이 관리 불가능해졌으며 대상이 되어야 하는 앱을 추측&rdquo;하거나 알기가 점점 더 어려워졌&ldquo;다는 것입니다. 리소스 그룹 <i>및 </i>리소스 유형 보기를 모두 제공하는 클라우드 탐색기 디자인 개념에서 차용한 Weve&rsquo;&rsquo;를 사용하면 기존&rdquo; 항목 선택 대화 상자에서 &ldquo;앱을 더 쉽게 그룹화할 수 있습니다.</p>\n\n<p><img alt=\"clip_image002\" border=\"0\" height=\"362\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/44f644f2-a4e5-43e7-99dc-9db059c85ff7.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image002\" width=\"480\"></p>\n\n<p>구독의 잠재적 게시 대상 수가 많기 때문에 다시 그룹화가 충분하지 않으면&rsquo; 하나의 훌륭한 기능 &ndash; <b>검색</b>이 추가되었습니다.&rsquo; 이제 대화 상자에서 검색 쿼리를 자유롭게 입력하고 용어와 일치하는 앱을 필터링할&rsquo; 수 있습니다. 검색도 고정되므로 리소스 그룹과 형식 간에 보기를 검색하고 변경하면 검색이 유지되고 일치 항목만 표시됩니다. &rsquo;이제 구독&rsquo; 리소스 목록에서 게시 대상을 더 쉽게 찾을 수 있습니다.</p>\n\n<p><img alt=\"clip_image003\" border=\"0\" height=\"361\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/8d1cf024-d820-49bd-893e-f528d897a2fa.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image003\" width=\"480\"></p>\n\n<h1>새 App Service 만들기 업데이트</h1>\n\n<p>App Service 만들기 환경에 최적화하기 위해 수행한 가장 큰 단계는&rsquo; 앱 만들기/프로비전 프로세스일 것입니다. 아래에 표시된 새 대화 상자는 앱을 만드는 동안 사용할 수 있는 기회에 대한 다양한 시각적 신호를 제공합니다. Weve&rsquo;는 2 탭 환경의 첫 번째 탭에 모든 중요한 호스팅 기능을 유지했습니다. 클라우드&rsquo;의 새 앱만 있으면 새 앱에 사용할 리소스 그룹 및 호스팅 계획이&rsquo; 이미 있는 경우 이 프로세스는 새 App Service 만들기 대화 상자에서 <b>만들기</b>를 클릭하는 것만큼 간단합니다.</p>\n\n<p><img alt=\"clip_image004\" border=\"0\" height=\"360\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/1294ac30-1d1a-45de-a679-829088adc7b3.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image004\" width=\"480\"></p>\n\n<p>새 App Service 계획이 필요한 경우&rsquo; 새 App Service 새로 만들기는 <b>새</b> 단추를 한 번 클릭하는 것입니다. App Service 계획 화면에서&rsquo; 포털에서 사용할 수 있는 가능한 크기 중 하나에서 계획을 만들 수 있습니다.</p>\n\n<p><img alt=\"clip_image005\" border=\"0\" height=\"360\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ec253eb3-2d67-4edb-b4d4-64cae8b08f27.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image005\" width=\"320\"></p>\n\n<p>앱을 게시할 새 리소스 그룹을 만들려면 리소스 그룹 콤보 상자에 입력하기만 하면 됩니다. 이렇게 하면 대화 상자에서 새 리소스 그룹을 만들 것임을 알&rsquo; 수 있는 다양한 시각적 신호를 제공합니다( <b>호스팅</b> 탭의 파란색 아이콘 표시기에서 동일한 메시지를 반영).</p>\n\n<p><img alt=\"clip_image006\" border=\"0\" height=\"360\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/36b5ecf6-a66e-4a81-92e5-2c8e9757895c.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image006\" width=\"480\"></p>\n\n<h1>앱에 필요할 수 있는 추가 서비스 만들기</h1>\n\n<p>새 App Service 만들기 화면의 두 번째 탭은 앱에 필요할 수 있는 추가 서비스를 선택할 수 있는 기회를 제공합니다. 이 릴리스&rsquo;에서는 App Service 만들기 프로세스에서 SQL 서버 및 데이터베이스에 대한 지원을 유지 관리합니다. 그러나&rsquo; 이제는 단일 데이터베이스로 제한되지 않습니다. 대화 상자 내에서 직접 필요한 만큼 SQL 서버 또는 데이터베이스를 만들 수 있습니다.</p>\n\n<p><img alt=\"clip_image007\" border=\"0\" height=\"362\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/772af24d-2df6-41b9-bc90-d9672bacec1e.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image007\" width=\"480\"></p>\n\n<p>SQL 2.8.1 SDK 기간 동안 릴리스되는 유일한 공급자이지만 이&rsquo; 대화 상자를 사용하도록 설정하기 위해 몇 가지 주요 엔지니어링 작업을 수행했으며, 그 중 일부는 파트너 팀이 서비스 조명을 확장하기 위해 작업할 수 있는 확장 가능한 모델을 만드는 것이었습니다. Weve&rsquo;는 동일한 대화 상자에서 Redis 프로비저닝을 조명하는 환경과 Azure Key Vault 및 Document DB 팀과의 몇 가지 토론을 프로토타입으로 작성했습니다. 그리 멀지 않은 미래에&rsquo; 이 환경에 확장을 설치할 수 있습니다(그리고 Visual Studio Visual Studio 확장 갤러리 통합에서 자주 또는 옵트인 업데이트의 이점을 얻을 수 있습니다).</p>\n\n<h1>미러 환경을 만드는 데 사용할 수 있도록 Azure 토폴로지 내보내기</h1>\n\n<p>App Service 만들기 대화 상자를 진행하면서 서비스를 구성하고 추가하면 추가하는 각 리소스가 초기 호스팅 탭&rsquo; 검토 영역에 표시됩니다. 이 &ldquo;리소스 카트&rdquo; 는 구독에서 만들려는 모든 리소스&rsquo;의 스냅샷을 제공합니다.</p>\n\n<p><img alt=\"clip_image008\" border=\"0\" height=\"373\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/7488a742-bb5b-455f-9567-d298e5bf3212.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image008\" width=\"480\"></p>\n\n<p>카트에 추가한 리소스&rsquo; 수가 늘어나면 Azure Resource Manager JSON 템플릿이 메모리에 추가된 동적으로 만들어집니다. &rsquo;앱이&rsquo; 카트에 작동하는 데 필요한 모든 리소스를 추가했으면 내보내기 단추를 간단히 클릭하면 카트의 모든 항목을 나타내는 JSON 템플릿을 저장하려는 위치를&rsquo; 묻는 메시지가 표시됩니다. 그런 다음 Azure PowerShell 모듈을 사용하여 템플릿을 다른 리소스 그룹 또는 다른 Azure 구독으로 실행할 수 있습니다. 이 기능을 사용하면 수동으로 템플릿을 수동으로 편집하고 구성할 필요 없이 애플리케이션 토폴로지의 재현 가능한 템플릿을 사용할 수 있습니다. 토폴로지 추가로 사용자 지정해야 하는 경우 템플릿 편집 기능이 내보낸 JSON 파일에서 JSON 스키마를 인식하므로 이전에 릴리스된 기본 제공 리소스 관리자 템플릿 편집기 기능이 잘 통합됩니다.</p>\n\n<p><img alt=\"clip_image009\" border=\"0\" height=\"335\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/ee6559f0-9d95-4eff-ad19-e2cfa5098b65.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image009\" width=\"610\"></p>\n\n<h1>프로젝트 템플릿 업데이트 App Service</h1>\n\n<p>모바일 및 API 리소스&rsquo;의 새로운 변경 내용을 수용하기 위해 기능 영역의 새로운 향상된 기능을 활용하기 위해 Visual Studio 템플릿을 업데이트했습니다.</p>\n\n<h1>모바일 앱 템플릿 개선 사항</h1>\n\n<p>App Service Mobile을 사용하면 데이터를 오프라인으로 사용하고, 사용자를 인증하고, 푸시 알림을 보내는 모바일 애플리케이션을 쉽게 빌드할 수 있습니다. 모바일 앱 .NET 서버 SDK에 대한 <a href=\"https://azure.microsoft.com/blog/\">일반 공급 지원을</a> 발표했습니다. 이를 통해 모바일 클라이언트에 사용자 지정 논리뿐만 아니라 이러한 기능을 제공하는 App Service 애플리케이션을 빌드할 수 있습니다. 이 릴리스와 함께 현재 Visual Studio 모바일 앱 프로젝트를 만들고 관리하기 위한 지원을 업데이트하고 있습니다. 시작하려면 파일 &gt; &gt; 새로 만들기 Project 새 Project&hellip; 대화 상자를 열고 템플릿 Visual C#을 &gt; 확장하고 웹&quot;을 선택합니다&quot;. ASP.NET 웹 애플리케이션&quot;을 선택하고 &quot;프로젝트 이름을 입력한 다음 확인을 클릭합니다. ASP.NET 4.5.2 템플릿&quot;에서 &quot;Azure 모바일 앱을 선택합니다&quot;.&quot;</p>\n\n<p><img alt=\"clip_image010\" border=\"0\" height=\"476\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/2d8b8f73-0281-4208-896c-e1306b93d8d4.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image010\" width=\"610\"></p>\n\n<p>확인을 클릭합니다. 애플리케이션이 만들어지고 솔루션 탐색기 표시됩니다. 이 템플릿은 Mobile Apps 또는 Mobile Services 사용하는 고객에게 친숙해야 합니다. 주요 차이점은 구성에 있습니다. 이제 템플릿은 OWIN 시작에서 모든 항목을 구성하고 추가되지 않는&rsquo; 구성 요소에 대한 보다 세부적인 제어를 제공합니다.</p>\n\n<p><img alt=\"clip_image011\" border=\"0\" height=\"360\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/fac0bda4-5bc2-42a5-9964-5c37c1820684.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image011\" width=\"257\"></p>\n\n<p>이 프로젝트는 간단한 할 일 목록 애플리케이션을 나타냅니다. 모바일 클라이언트는 <b>TableController</b>에서 파생된 <b>TodoItemController</b>를 통해 SQL 저장된 데이터를 사용할 수 있습니다. TableController는 모바일 친화적인 API를 원하는 데이터 백 엔드(이 경우 SQL)에서 이해할 수 있는 CRUD 작업으로 변환합니다. 또한 오프라인 계약을 준수하므로 Mobile Apps 오프라인 동기화 기능을 즉시 활용할 수 있습니다. 컨트롤러 폴더를 마우스 오른쪽 단추로 클릭하고 &quot;컨트롤러 추가를 선택하여 더 많은 테이블 컨트롤러 또는 모바일 친화적인 API 컨트롤러&quot; 를 추가할 &gt; 수 있습니다. 그런 다음 <b>, Azure Mobile Apps 테이블 컨트롤러</b> 또는 <b>Azure Mobile Apps 사용자 지정 컨트롤러</b> 를 선택하고 마법사에 따라 엔드포인트를 만듭니다.</p>\n\n<p><img alt=\"clip_image012\" border=\"0\" height=\"336\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/d5309bf6-e1c0-4d81-8fd4-8eebdf090bd0.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image012\" width=\"610\"></p>\n\n<p>프로젝트가 준비되면 문서의 앞부분에서 설명한 대로 새 게시 대화 상자를 사용하여 App Service 게시할 수 있습니다. 모바일 앱은 이제 App Service 만들기 대화 상자의 옵션 메뉴에서 최상위 게시 대상으로 지원됩니다.</p>\n\n<p><img alt=\"clip_image013\" border=\"0\" height=\"84\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/622daa55-a00f-4b61-b723-94a5e6275669.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image013\" width=\"360\"></p>\n\n<h1>API 앱 템플릿 개선 사항</h1>\n\n<p>API 앱 모델은 초기 미리 보기부터 발전했습니다. 그&rsquo; 이후로 로컬 디버깅이 중요하다는 소식을 고객으로부터 들었으므로 이제 새 API Apps 템플릿에서 사용하도록 설정되었습니다. 이 템플릿은 리소스 관리 템플릿 또는 API App Gateway 관련 파일에 대한 종속성이 적어 보다 간단한 전체 구조를 만듭니다. API Apps 템플릿은 기본적으로 웹 API 템플릿이며 <a href=\"https://www.nuget.org/packages/swashbuckle\">Swashbuckle</a>이라고 하는 오픈 소스 Swagger 지원 NuGet 패키지를 추가합니다. 또한 Weve&rsquo;는 Swagger UI를 기본적으로 사용하지 않도록 설정하도록 이전에 수행한 <b>SwaggerConfig.cs</b> 파일 변경 내용을 포함했으며 Swagger 작업 ID 생성에 대한 접근 방식을 개선하는 작업 필터를 포함했습니다(<a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-service-api-dotnet-swashbuckle-customize/\">Azure.com Swashbuckle 사용자 지정에 대한 자세한 정보</a> 참조).</p>\n\n<p><img alt=\"clip_image014\" border=\"0\" height=\"360\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c4e2aa25-0758-4ca2-8724-c24c3d00e388.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image014\" width=\"260\"></p>\n\n<h1>REST API 생성 개선 사항</h1>\n\n<p>API Apps 및 API Management 같은 App Service 팀이 Swagger&rsquo;를 사용하여 투자한 것을 반영하여 API Apps에서 노출한 Swagger 메타데이터를 기반으로 코드 생성에 대한 투자를 계속합니다. Visual Studio 대부분의 C# 프로젝트를 클릭하고 <b>REST API 클라이언트 추가 &gt;</b> 제스처를 선택하면 간소화된 REST API 클라이언트 생성기 대화 상자가 나타납니다. <b>찾아보기</b> 단추를 클릭하면 API 정의 엔드포인트가 설정된 App Service&rdquo; 선택할 수 있는 App Service 선택 대화 상자로 이동&ldquo;됩니다.</p>\n\n<p><img alt=\"clip_image015\" border=\"0\" height=\"596\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/236c97f9-7050-442d-9ffc-2a3cc4703409.png\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" title=\"clip_image015\" width=\"610\"></p>\n\n<h1>요약</h1>\n\n<p>Azure 계정이 아직 없는&rsquo; 경우 <a href=\"https://azure.microsoft.com/en-us/pricing/free-trial/\">무료 평가판</a> 에 등록하고 현재 위의 모든 기능을 사용할 수 있습니다. 그런 다음 <a href=\"https://azure.microsoft.com/en-us/get-started/\">, Azure 개발자 센터를</a> 방문하여 앱을 빌드하는 방법에 대해 자세히 알아보세요. 커넥트 통해 버그, UserVoice를 통한 제안, Visual Studio IDE에서 <a href=\"https://go.microsoft.com/fwlink/?linkid=517102&amp;clcid=0x409\">웃는 얼굴 보내기</a>를 통해 빠른 생각 또는 아이디어를 제출하세요. 이 릴리스는 App Service 도구에 대한 새로운 방향의 초기 단계이므로&rsquo; 피드백을 듣고, 리소스 카트에 불을 붙이고 싶은 서비스를&rsquo; 알아보고, 입력을 계속 제공하여 보다 간소화된 앱 개발을 제공하는 데 도움이 됩니다. 이 SDK 릴리스와 관련된 세부 정보 또는 알려진 문제는 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/azure-sdk-dotnet-release-notes-2_8/\">Azure SDK 2.8 및 2.8.1 릴리스 정보 페이지를</a> 확인하세요.&nbsp;</p>\n\n<h3>크레딧</h3>\n\n<p>이 블로그 게시물은 여러 사람의 공동 작업입니다. <a href=\"https://twitter.com/mattchenderson\">매튜 헨더슨</a>과 이 릴리스에서 열심히 일한 모든 팀원들에게 큰 감사를 드립니다.</p>\n"
}