{
    "Slug": "accelerated-spark-on-gpu-enabled-clusters-in-azure",
    "Title": "Azure의 GPU 지원 클러스터에서 가속화된 Spark",
    "Summary": "AZTK lets you to provision on-demand GPU enabled Spark clusters on top of Azure Batch's infrastructure, helping you take your high-performance GPU code and distribute it across your Spark cluster.",
    "Content": "<p>GPU 지원 클러스터에서 Spark를 실행하는 기능은 빅 데이터와 HPC(고성능 컴퓨팅) 기술의 고유한 수렴을 보여줍니다. 지난 몇 년 동안 전 세계 기업들이 AI 및 기타 HPC 워크플로를 비즈니스에 통합함에 따라 GPU 시장이 폭발적이는 것을&#39;. 숫자 계산 및 신경망에 GPU를 활용하도록 설계된 프레임워크인 Tensorflow는 AI의 증가와 결과적으로 GPU에 대한 수요를 입증하는 인기로 급증했습니다. 동시에 수백 개의 회사가 페타바이트 범위에서 데이터를 수집하기 시작하면서 빅 데이터 및 강력한 데이터 처리 엔진에 대한 필요성이 그 어느 때보다 커졌습니다.</p>\n\n<p>Spark와 같은 빅 데이터 엔진을 사용하여 GPU와 같은 고성능 하드웨어에 대한 인프라를 제공하면 데이터 과학자 및 데이터 엔지니어는 그렇지 않으면 달성하기 어려운 많은 시나리오를 사용할 수 있습니다.</p>\n\n<p><a href=\"https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes-gpu\" target=\"_blank\">최신 GPU SKU의 최근</a> 릴리스와 함께 <a href=\"https://github.com/Azure/aztk/\" target=\"_blank\">AZTK(Azure Distributed Data Engineering Toolkit)</a>를 사용하여 GPU 지원 클러스터에서 Spark 실행을 지원한다는 사실을 공유하게 되어&#39;. 단일 명령에서 AZTK를 사용하면 Azure Batch&#39;인프라를 기반으로 주문형 GPU 지원 Spark 클러스터를 프로비전할 수 있으므로 일반적으로 단일 노드 전용인 고성능 구현을 수행하여 Spark 클러스터에 배포할 수 있습니다.</p>\n\n<p>이 릴리스에서는 Anaconda, Jupyter 및 PySpark로 패키지된 Python 이미지와 Tidyverse, RStudio-Server 및 SparklyR로 패키지된 R 이미지를 포함하여 AZTK에 대한 몇 가지 추가 GPU 지원 Docker 이미지를 만들었습니다.</p>\n\n<ul>\n    <li><a href=\"https://hub.docker.com/r/aztk/gpu/\" target=\"_blank\">Aztk/gpu:spark2.2.0</a></li>\n    <li><a href=\"https://hub.docker.com/r/aztk/python/\" target=\"_blank\">Aztk/python:spark2.2.0-python3.6.2-gpu</a></li>\n    <li><a href=\"https://hub.docker.com/r/aztk/r-base\">aztk/r-base:spark2.1.0-r3.4.1-gpu</a></li>\n</ul>\n\n<p>이러한 이미지는 <a href=\"https://github.com/NVIDIA/nvidia-docker\" target=\"_blank\">NVIDIA Docker 엔진</a> 을 사용하여 호스트&#39;GPU에 대한 Docker 이미지 액세스를 제공합니다. AZTK는 완전히 컨테이너화된 방식으로 Spark를 실행하므로 사용자는 자신의 GPU Docker 이미지를 특정 요구 사항에 맞게 사용자 지정할 수 있습니다. 그러나 단순히 GPU 지원 클러스터에서 Spark를 실행하려는 사용자의 경우 Docker에 대해서도 걱정할 필요 없이 실행할 수 있습니다. AZTK는 적절한 이미지를 자동으로 끌어오기 때문에 호스트 컴퓨터에서 GPU가 감지되면 GPU에 액세스할 수 있습니다.</p>\n\n<p>다음은&#39;AZTK를 사용하여 4노드 GPU 지원 Spark 클러스터(총 메모리 224GB, GPU 1개 = K80 카드 1개, vCPU 24개)를 만드는 방법의 예입니다.</p>\n\n<pre class=\"prettyprint\">\n$ aztk spark cluster create --id my_gpu_cluster --size 4 --vm-size standard_nc6</pre>\n\n<p>AZTK는 표준 NC6 VM이 NVIDIA&#39;Tesla K80s와 함께 제공된다는 것을 알고 있으므로 AZTK는 클러스터를 프로비전할 때 GPU 지원 Docker 이미지 중 하나를 자동으로 선택합니다. 또는 --docker-repo 플래그를 설정하여 사용할 이미지를 수동으로 지정할 수도 있습니다.</p>\n\n<p>또한 GpU와 함께 GPU를 사용하는 <a href=\"https://github.com/Azure/aztk/blob/master/node_scripts/jupyter-samples/GPU%2Bvs%2BCPU%2Busing%2BNumba.ipynb\" target=\"_blank\">간단한 PySpark 작업</a> 과 CPU를 사용하여 GPU를 사용하여 Spark 작업을 실행할 때 얻을 수 있는 성능 향상을 강조하는 샘플을 제공합니다.</p>\n\n<p>Tensoflow/Tensorframes와 같은 AI 워크플로용 GPU와 함께 Spark를 사용하든, 분산 CTNK를 사용하든, 단순히 이를 사용하여 계산 비용이 많이 드는 Spark 작업을 가속화하든, HPC 및 빅 데이터 기술의 이 고유한 수렴을 활용하는 방법에 대해 알려주세요.</p>\n\n<p>이러한 기능을 사용하고 피드백을 듣기를 기대합니다. 피드백을 받으려면 문의 <a href=\"mailto:askaztk@microsoft.com\">askaztk@microsoft.com</a> 하거나 <a href=\"https://www.github.com/Azure/aztk\" target=\"_blank\">Github 리포지토리</a>에 자유롭게 참여하세요.</p>\n\n<h3>추가 정보</h3>\n\n<ul>\n    <li><a href=\"https://www.github.com/azure/aztk\" target=\"_blank\">AZTK(Azure Distributed Data Engineering Toolkit)</a> 다운로드 및 시작</li>\n    <li><a href=\"https://www.github.com/Azure/thunderbolt/issues\" target=\"_blank\">Github를 통해 문제를 자유롭게 제출하세요.</a></li>\n</ul>\n\n<h3>추가 자료</h3>\n\n<ul>\n    <li>Azure Distributed Data Engineering <a href=\"https://www.github.com/Azure/thunderbolt/issues\" target=\"_blank\">Toolkit</a> 사용하는 기본 Azure 서비스인 Azure Batch 참조하세요.</li>\n    <li><a href=\"https://azure.microsoft.com/en-us/solutions/high-performance-computing\" target=\"_blank\">Azure의 범용 HPC</a></li>\n</ul>\n"
}