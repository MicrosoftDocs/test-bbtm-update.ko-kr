{
    "Slug": "announcing-node-for-azure-mobile-apps",
    "Title": "Azure Mobile Apps에 대한 Node.js 지원 발표",
    "Summary": "Announcing the release of a Node SDK for Azure Mobile Apps which will enable you to build and run mobile backends using Node.js on App Service, as well as add push notifications, mobile auth, offline sync and other mobile features and backend APIs to any Node.js app running on App Service.",
    "Content": "<p>지난 달, 개발자가 .NET에서 모바일 백 엔드 API를 신속하게 빌드하고, 기존 ASP.NET 웹앱에 모바일 기능을 추가하고, .NET 모바일 백 엔드에 웹 페이지를 추가할 수 있는 Azure App Service Mobile Apps 기능에 대한 중요한 업데이트를 <a href=\"https://azure.microsoft.com/en-us/blog/azure-mobile-apps-august-2015-update/\">발표</a>했습니다.</p>\n\n<p>현재 Azure Mobile Apps용 Node SDK를 릴리스하여 Node.js 앱과 유사한 환경을 확장합니다. 이렇게 하면 App Service Node.js 사용하여 모바일 백 엔드를 빌드하고 실행할 수 있으며 App Service 실행되는 모든 Node.js 앱에 푸시 알림, 모바일 인증, 오프라인 동기화 및 기타 모바일 기능 및 백 엔드 API를 추가할 수 있습니다.</p>\n\n<p>이 SDK는 MIT 라이선스에 따라 오픈 소스로 릴리스되며 <a href=\"https://github.com/Azure/azure-mobile-apps-node/blob/master/contributor.md\">커뮤니티의 기여를</a> 환영합니다.</p>\n\n<h1 id=\"getting-started-with-node-and-azure-mobile-apps\">노드 및 Azure Mobile Apps 시작</h1>\n\n<p>진행하려면 추가 설명에 포함된 짧고 쉬운 <a href=\"https://github.com/Azure/azure-mobile-apps-node#quickstart\">빠른 시작</a> 단계를 수행합니다.</p>\n\n<ol>\n <li>\n <p>여기에 있는 지침을 사용하여&nbsp; Azure Mobile App을 만듭니 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-service-mobile-dotnet-backend-ios-get-started-preview/#create-a-new-azure-mobile-app-backend\">다</a>. 모바일 앱 환경은 API, 모바일 및 Web Apps 사용할 수 있으므로 웹 또는 API 앱을 사용할 수도 있습니다.</p>\n </li>\n <li>\n <p>새 디렉터리를 만들고, git를 초기화하고, npm을 초기화합니다.</p>\n\n <pre class=\"prettyprint\">\n<code>mkdir quickstart\ngit init\nnpm init\n</code></pre>\n </li>\n <li>\n <p>azure-mobile-apps 및 express 패키지를 설치(npm 포함)합니다.</p>\n\n <pre class=\"prettyprint\">\n<code>npm install express azure/azure-mobile-apps-node --save\n</code></pre>\n </li>\n <li>\n <p>server.js 파일을 만들고 파일에 다음 코드를 추가합니다.</p>\n\n <pre class=\"prettyprint\">\n<code>var app = require(&#39;express&#39;)(); // Create an instance of an Express app\nvar mobileApp = require(&#39;azure-mobile-apps&#39;)(); // Create an instance of a Mobile App with default settings\n\nmobileApp.tables.add(&#39;TodoItem&#39;); // Create a Table for &#39;TodoItem&#39; with default settings\n\nmobileApp.attach(app); // Attach the mobileApp to express\napp.listen(process.env.PORT || 3000);\n</code></pre>\n </li>\n <li>\n <p>실행하여 로컬로 프로젝트 실행 <code>node server.js.</code></p>\n </li>\n <li>\n <p>프로젝트를 원격으로 추가하고 변경 내용을 푸시하여 기존 Azure Mobile App에 게시합니다.</p>\n\n <pre class=\"prettyprint\">\n<code>git remote add azure https://{user}@{sitename}.scm.azurewebsites.net:443/{sitename}.git\n\ngit add package.json server.js\n\ngit commit -m &#39;Quickstart created&#39;\n\ngit push azure master\n</code></pre>\n </li>\n</ol>\n\n<p>4-5단계의 경우 <a href=\"https://github.com/Azure/azure-mobile-services-quickstarts\">클라이언트 서버 빠른 시작에 있는 모든 클라이언트 &amp;</a> 를 사용하여 테스트할 수 있습니다. 로컬로 테스트하려면 클라이언트를 가리키 <code>https://localhost:3000</code>도록 설정합니다.</p>\n\n<p>express <a href=\"https://expressjs.com/\">를 사용하여 사이트를</a> 실행할&#39;있음을 확인하셨나요? &nbsp;이는 Web 및 Mobile Apps가 하나의 응집력 있는 환경이라는 이점의 한 예입니다. 즉 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-nodejs-develop-deploy-mac/\">, 웹앱처럼 배포</a> 되고 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-staged-publishing/\">배포 슬롯</a> 및 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/web-sites-create-web-jobs/\">WebJobs</a>와 같은 기능을 사용할 수 있습니다.</p>\n\n<h2 id=\"using-mobile-apps-tables\">Azure Mobile Apps 테이블 사용</h2>\n\n<p>모바일 앱 테이블은 Azure Mobile Apps 클라이언트가 애플리케이션&#39;데이터에 액세스할 수 있도록 하는 데이터 저장소 위에 있는 계층입니다. 현재 프로덕션 애플리케이션에 Azure SQL DB 및 SQL Server 지원합니다. &#39;프로덕션 목적으로는 사용할 수 없지만 데모 및 개발 목적으로 편리할 수 있는 메모리 내 저장소도&#39;. 첫 번째 요청에서 모바일 앱에 테이블을 추가하면 SQL Server 경우 SDK에서 테이블을 만듭니다. 테이블에는 ID 및 타임스탬프와 같은 SDK에 대한 몇 가지 중요한 열이 있습니다. 또한 테이블 정의에 지정된 열이 있으며 동적 스키마를 사용하도록 설정한 경우 본문에 포함된 열도 추가되지만 테이블에는 추가되지 않습니다.</p>\n\n<p>한 줄의 코드로 테이블을 추가할 수 있다는 것은 매우 멋진 일이지만 CRUD 작업을 사용자 지정하려면 어떻게 해야 할까요? 이를 쉽게 수행할 수 있는 편리한 테이블 구성 개체가 있습니다. 이를 디렉터리의 별도 파일에서 <code>./tables</code> 정의하는 것이 가장 좋습니다. 따라서 TodoItem.js 파일을 만들&#39;있습니다.</p>\n\n<pre class=\"prettyprint\">\n<code>// TodoItem.js\nvar todoTable = require(&#39;azure-mobile-apps&#39;).table(&#39;TodoItem&#39;);\n// Export our table\nmodule.exports = todoTable;\n//todoTable.columns = {&quot;text&quot;:&quot;string&quot;, &quot;complete&quot;:&quot;boolean&quot;} //Dynamic schema will create these for us. It&#39;s on by default.\ntodoTable.dynamicSchema = true; // this is the default setting\n\ntodoTable.read(function(context){\n  return context.execute();\n});\n</code></pre>\n\n<p>삽입, 읽기, 업데이트, 삭제라는 해당 메서드를 사용하여 클래식 CRUD 작업을 지원&nbsp;합니다. API 설명서에서 테이블 작업에 대해 자세히 알아보세요.</p>\n\n<p>컨텍스트 개체는 작업에 따라 다른 속성을 노출합니다. read는 쿼리 개체를 노출하고 삽입 및 업데이트는 항목 개체를 노출합니다. 이렇게 하면 CRUD 작업의 동작을 기본값에서 수정할 수 있습니다.</p>\n\n<pre class=\"prettyprint\">\n<code>// TodoItem.js continued\n// Attach a user id to the item that was inserted\ntable.insert(function (context) {\n  context.item.user = context.user.id;\n  return context.execute();\n});\n\n// Only return items where the user id matches the current user\ntable.read(function (context) {\n  context.query.where({\n    user: context.user.id\n  });\n  return context.execute();\n});\n</code></pre>\n\n<p>테이블(및 디렉터리의 다른 테이블<code>./tables</code>)을 포함 <code>TodoItem</code> 하려면 server.js 파일에 가져오기 줄을 추가하면됩니다.</p>\n\n<pre class=\"prettyprint\">\n<code>// server.js\nvar app = require(&#39;express&#39;)(); // Create an instance of an Express app\nvar mobileApp = require(&#39;azure-mobile-apps&#39;)(); // Create an instance of a Mobile App with default settings\n\nmobileApp.tables.import(&#39;./tables&#39;); // Import tables from &#39;./tables&#39;\n\nmobileApp.attach(app); // Attach the mobileApp to express\napp.listen(process.env.PORT || 3000);\n</code></pre>\n\n<p>앱 설정에서 데이터베이스를 지정하지&#39;경우(포털에서 도움이 됨) 프로덕션 목적으로 사용해서는 안 되는 메모리 내 저장소를 사용합니다. 현재 SDK는 SQL Server만 지원하지만 다른 옵션을 조사할&#39;있으며 이 영역의 기여에 대해 다시 열어 둘&#39;있습니다. GitHub 페이지를 방문하여 로컬에서 SQL 수 있도록 <a href=\"https://github.com/Azure/azure-mobile-apps-node\">로컬 환경 변수를 설정하는 방법을 알아보세요</a>.</p>\n\n<h2 id=\"using-auth-with-mobile-apps-node\">Azure Mobile Appsand&nbsp; 노드에서 인증 사용</h2>\n\n<p>다음 질문은 해당 개체와 관련이 있습니다 <code>context.user</code> . 어떻게 거기에 도착합니까? &#39;Azure Mobile Apps 통합 인증 기능의 일부입니다. 인증을 설정하는 방법에 대해 자세히 알아보려면 인증 자습서를 통해 <a href=\"https://azure.microsoft.com/en-us/documentation/articles/app-service-mobile-dotnet-backend-ios-get-started-users-preview/\">시작</a> 따라야 합니다. &#39;완료되면 다음 코드를 사용하여 지정된 테이블 작업에 대한 인증을 요구할 수 있습니다.</p>\n\n<pre class=\"prettyprint\">\n<code>table.insert.authorise = true;\n</code></pre>\n\n<p>전체 테이블을 보호하려면 다음을 사용합니다.</p>\n\n<pre class=\"prettyprint\">\n<code>table.authorise = true;\n</code></pre>\n\n<p>인증을 로컬로 작동하도록 설정하려면 나중에 다룰&#39;몇 가지 추가 단계가 필요합니다.</p>\n\n<h1 id=\"feedback-and-thanks\">피드백 및 감사</h1>\n\n<p>이 릴리스 이전의 초기 피드백을 통해 도움을 주신 모든 커뮤니티 구성원&nbsp;에게 특별한 감사의 말씀을 전합니다. 모든 사용자가 제품 또는 사용 환경에 대한 피드백을 제공하도록 권장&nbsp;할&#39;있습니다. 버그 또는 새로운 기능에 대한 GitHub <a href=\"https://github.com/Azure/azure-mobile-apps-node/blob/master/contributor.md#submitting-an-issue\">문제를 자유롭게 남겨</a> 주세요.</p>\n\n<p>푸시는 곧 제공 될 예정이며 출시 전에 SDK를 계속 구체화함에 따라 더 많은 블로그와 설명서가 제공 될&#39;있습니다. 그래서 눈을 밖으로 유지하고 몇 가지 응용 프로그램을 구축 시작!</p>\n\n<p>자세한 뉴스 및 정보는 다음을 수행합니다.</p>\n\n<ul>\n <li><a href=\"https://twitter.com/azuremobile\">팔로우하기 @AzureMobile</a></li>\n <li>StackOverflow에 대한 질문하기</li>\n</ul>\n"
}