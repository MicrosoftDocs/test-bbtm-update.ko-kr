{
    "Slug": "announcing-sql-parameterization-in-documentdb",
    "Title": "DocumentDB에서 SQL 매개 변수 지정 발표(영문)",
    "Summary": "We are pleased to announce support for parameterized SQL queries in the Azure DocumentDB REST API and SDKs.",
    "Content": "<p><a href=\"https://azure.microsoft.com/en-us/services/documentdb/\" target=\"_blank\">Azure DocumentDB </a>REST API 및 SDK에서 매개 변수가 있는 SQL 쿼리에 대한 지원을 발표하게 되어 기쁘게 생각합니다. 이제 이 기능을 사용하여 매개 변수가 있는 SQL 쿼리를 작성할 수 있습니다. 매개 변수가 있는 SQL 사용자 입력의 강력한 처리 및 이스케이프를 제공하여 SQL 삽입&rdquo; *을 통해 &ldquo;실수로 데이터가 노출되는 것을 방지합니다. &#39;.NET SDK를 사용하여 샘플을 살펴보겠습니다. 일반 SQL 문자열 및 LINQ 식 외에도 매개 변수가 있는 쿼리를 작성하는 데 사용할 수 있는 새 SqlQuerySpec 클래스를 추가한&#39;있습니다. 다음은 작성자 이름에 대한 단일 사용자 제공 매개 변수를 사용하여 Books&quot; 컬렉션을 쿼리&quot;하는 샘플&#39;.</p>\n\n<pre class=\"prettyprint\">\nIQueryable&lt;Book&gt; queryable = client.CreateDocumentQuery&lt;Book&gt;(\n                collectionSelfLink,\n                new SqlQuerySpec\n        {\n                    QueryText = &quot;SELECT * FROM books b WHERE (b.Author.Name = @name)&quot;, \n                    Parameters = new SqlParameterCollection() \n            { \n                          new SqlParameter(&quot;@name&quot;, &quot;Herman Melville&quot;)\n                    }\n        });</pre>\n\n<p>여기서 유의해야 할 몇 가지 흥미로운 사항은 다음과 같습니다.</p>\n\n<ul>\n    <li>DocumentDB의 SQL 매개 변수는 T-SQL 빌린 친숙한 @ 표기법을 사용합니다.</li>\n    <li>매개 변수 값은 유효한 모든 JSON(문자열, 숫자, 부울, null, 배열 또는 중첩된 JSON)일 수 있습니다.</li>\n    <li>DocumentDB는 스키마가 없으므로 모든 형식에 대해 매개 변수의 유효성이 검사되지 않습니다.</li>\n    <li>SqlParameterCollection에 추가 SqlParameters를 추가하여 추가 매개 변수를 쉽게 제공할 수 있습니다.</li>\n</ul>\n\n<p>DocumentDB REST API는 매개 변수화도 기본적으로 지원합니다. 위에 표시된 .NET 샘플은 다음 REST API 호출로 변환됩니다. 매개 변수가 있는 쿼리를 사용하려면 아래와 같이 Content-Type 헤더를 <em><b>application/query+json</b></em> 으로 지정하고 쿼리를 본문에 JSON으로 지정해야 합니다.</p>\n\n<pre class=\"prettyprint\">\nPOST https://contosomarketing.documents.azure.com/dbs/XP0mAA==/colls/XP0mAJ3H-AA=/docs\nHTTP/1.1 x-ms-documentdb-isquery: True \nx-ms-date: Mon, 18 Aug 2014 13:05:49 GMT \nauthorization: type%3dmaster%26ver%3d1.0%26sig%3dkOU%2bBn2vkvIlHypfE8AA5fulpn8zKjLwdrxBqyg0YGQ%3d \nx-ms-version: 2014-08-21 \nAccept: application/json \nContent-Type: application/query+json \nHost: contosomarketing.documents.azure.com \nContent-Length: 50 \n{      \n    &quot;query&quot;: &quot;SELECT * FROM books b WHERE (b.Author.Name = @name)&quot;,     \n    &quot;parameters&quot;: [          \n        {&quot;name&quot;: &quot;@name&quot;, &quot;value&quot;: &quot;Herman Melville&quot;}         \n    ] \n}</pre>\n\n<p>위에 표시된 방법을 사용하여 문서 컬렉션뿐만 아니라 데이터베이스, DocumentCollections 및 첨부 파일과 같은 시스템 메타데이터 컬렉션에 대해 쿼리를 실행할 수 있습니다. 이를 시도하려면 지원되는 플랫폼(.NET, Java, Node.js, JavaScript 또는 Python)에서 DocumentDB SDK의 최신 빌드를 다운로드합니다.</p>\n\n<blockquote><em>*DocumentDB는 쿼리가 엄격하게 읽기 전용 작업이므로 권한&rdquo; 상승으로 이어지는 &ldquo;가장 일반적인 종류의 삽입 공격에 취약하지 않습니다. 그러나 사용자가 악의적인 SQL 쿼리를 만들어 동일한 컬렉션 내에서 액세스해야 하는&rsquo; 데이터에 액세스할 수 있습니다. SQL 매개 변수화 지원은 이러한 종류의 공격을 방지하는 데 도움이 됩니다.</em></blockquote>\n"
}