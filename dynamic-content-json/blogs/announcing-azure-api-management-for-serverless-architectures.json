{
    "Slug": "announcing-azure-api-management-for-serverless-architectures",
    "Title": "서버리스 아키텍처에 대한 Azure API Management 발표",
    "Summary": "Azure API Management is a fully managed service that enables customers to publish, secure, transform, maintain, and monitor APIs. ",
    "Content": "<p><a href=\"https://azure.microsoft.com/en-us/services/api-management/\" target=\"_blank\">Azure API Management</a> 고객이 API를 게시, 보안, 변환, 유지 관리 및 모니터링할 수 있는 완전 관리형 서비스입니다. Azure Portal 몇 번의 클릭으로 외부 및 내부 애플리케이션이 Azure에서 실행되는 사용자 지정 빌드 백 엔드 서비스에서 구현한 데이터 또는 비즈니스 논리(예: &ldquo;App Service 또는 Azure Kubernetes Service)에 액세스할 수 있는 현관&rdquo; 역할을 하는 API&ccedil; 페이드를 만들 수 있습니다. 또는 Azure 외부, 프라이빗 데이터 센터 또는 온-프레미스에서 호스트됩니다. API Management는 요청 인증 및 권한 부여, 속도 제한 및 할당량 적용, 요청 및 응답 변환, 로깅 및 추적, API 버전 관리를 비롯하여 API 호출 처리와 관련된 모든 작업을 처리합니다.</p>\n\n<p>오늘부터 Azure 고객은 새 API Management 인스턴스를 만들 때 새 소비 계층을 선택할 수 있습니다. 기본적으로 서버리스 원칙을 중심으로 설계 및 구현된 API Management 변형된 이 소비 계층은 더 많은 고객이 API 관리의 이점을 누릴 수 있게 하며 서버<a href=\"https://azure.microsoft.com/en-us/solutions/serverless/\" target=\"_blank\">리스</a> 기술을 사용하여 구축된 새로운 유형의 애플리케이션에 보다 유기적으로 적합해질 것입니다.</p>\n\n<p>APIM 소비 계층을 사용하면 고객으로부터 듣고 있는 다음과 같은 주요 사용 사례를 사용할 수 있습니다.</p>\n\n<ul>\n <li>Functions 및 Logic Apps와 같은 서버리스 기술을 사용하여 구현된 마이크로 서비스에 대한 API 게이트웨이입니다.</li>\n <li>서버리스 Azure 리소스(예: Service Bus 큐 및 토픽, Azure Storage 등)를 위한 간소화되고 안전한 페이&ccedil;드를 제공하는 API 게이트웨이입니다.</li>\n <li>API 트래픽이 급증하지만 대부분의 시간 동안 낮게 유지되는 기존 백 엔드에 대한 API 게이트웨이입니다.</li>\n</ul>\n\n<p>위의 사용 사례가 관련성이 있는 경우 새 계층에 시도를 제공하고 사용자가 어떻게 생각하는지 알려 주시기 바랍니다.</p>\n\n<h2>비교된 계층</h2>\n\n<p>새 계층의 본질을 이해하려면 기존 계층과 비교할 수&rsquo; 있습니다.</p>\n\n<p>API Management 두 계층으로 시작됨 &ndash; 개발자 및 표준. 시간이 지남에 따라 엔터프라이즈 고객을 위한 고급 기능이 포함된 Premium 계층과 기본 계층을 엔트리 레벨 프로덕션 계층으로 추가했습니다. 이러한 모든 계층에는 각 API Management 서비스 인스턴스에 전용 용도로 예약된 리소스 집합이 할당되는 공통 아키텍처가 있습니다. 보안 격리, 즉시 사용 가능한 용량 및 시끄러운 이웃으로부터의 보호가 이 방법의 주요 이점 중 하나입니다. 그러나 비교적 높은 프로비전 및 크기 조정 대기 시간 및 비소비 기반 가격 책정과 함께 몇 가지 부작용이 발생했으며, 이는 서버리스 애플리케이션 모델을 기반으로 하는 새로운 솔루션 종류와 잘 맞지 않습니다&rsquo;.</p>\n\n<p>소비 계층은 이전 계층과 동일한 기본 서비스 구성 요소를 사용하지만 동적으로 할당된 공유 리소스를 기반으로 완전히 다른 아키텍처를 사용합니다. 따라서 서버리스 컴퓨팅 모델( 즉, 관리할 인프라 없음, 유휴 용량 없음, 고가용성, 자동 크기 조정 및 사용량 기반 가격 책정)과 완벽하게 일치하므로 서버리스 리소스를 API로 노출하는 솔루션에 특히 적합합니다. 소비 계층을 선택할 때 몇 가지 장단점이 있습니다. 가장 중요한 두 가지는 <a href=\"https://aka.ms/apimfeatures\">큐레이팅된 기능 집합 </a>및 적용된 사용 제한입니다. 아래 표에서는 계층 간 비교의 핵심 사항을 요약합니다.</p>\n\n<table border=\"1\" cellpadding=\"2\">\n <tbody>\n  <tr>\n   <td valign=\"top\"><strong>소비</strong><sup> NEW</sup></td>\n   <td valign=\"top\"><strong>개발자 </strong>| <strong> 기본</strong> | <strong> 표준 </strong>| <strong> Premium</strong></td>\n  </tr>\n  <tr>\n   <td valign=\"top\">프로비전하거나 관리할 인프라 없음</td>\n   <td valign=\"top\">프로비전하거나 관리할 인프라 없음</td>\n  </tr>\n  <tr>\n   <td valign=\"top\">기본 제공되는 고가용성</td>\n   <td valign=\"top\">기본 제공 고가용성<sup>1</sup></td>\n  </tr>\n  <tr>\n   <td valign=\"top\">기본 제공 자동 크기 조정(0으로 축소)</td>\n   <td valign=\"top\">수동 또는 외부 자동 크기 조정<sup>2</sup></td>\n  </tr>\n  <tr>\n   <td valign=\"top\">소비 기반 마이크로 청구</td>\n   <td valign=\"top\">예약된 용량에 따른 청구</td>\n  </tr>\n  <tr>\n   <td valign=\"top\">예약된 용량 없음</td>\n   <td valign=\"top\">예약 용량</td>\n  </tr>\n  <tr>\n   <td valign=\"top\">공유 리소스</td>\n   <td valign=\"top\">전용 리소스</td>\n  </tr>\n  <tr>\n   <td valign=\"top\">주문형 활성화</td>\n   <td valign=\"top\">Always On</td>\n  </tr>\n  <tr>\n   <td valign=\"top\">큐레이팅된 기능 집합</td>\n   <td valign=\"top\">전체 기능 집합<sup>3</sup></td>\n  </tr>\n  <tr>\n   <td valign=\"top\"><a href=\"https://aka.ms/apimlimits\" target=\"_blank\">사용 제한</a></td>\n   <td valign=\"top\">관리되지 않음</td>\n  </tr>\n </tbody>\n</table>\n\n<p><sup>1</sup> 개발자 계층을 제외하고</p>\n\n<p><sup>2개</sup> 표준 및 Premium 계층에서 사용할 수 있는 Azure Monitor 자동 크기 조정</p>\n\n<p><sup>3</sup> 몇 가지 기능의 가용성은 계층에 따라 다릅니다.</p>\n\n<h2>새로운 기능</h2>\n\n<p>이제 소비 계층에서만 사용할 수 있는 다음 두 가지 새로운 기능은 곧 나머지 API Management 계층에서 사용할 수 있습니다.</p>\n\n<p><strong>BYOC(Bring Your Own Cache): </strong> 응답 캐싱은 API 대기 시간을 개선하고 API 백 엔드의 부하를 줄이는 데 효과적이고 널리 사용되는 기술입니다. 이 기능을 사용하면 고객이 <a href=\"https://aka.ms/apimbyoc\">외부에서 프로비전된 Redis 호환 캐시를 사용하도록</a> API Management 서비스를 구성할 수 있습니다. 캐시 구성, 캐시 콘텐츠를 미리 로드 및 제거하는 기능, 캐시를 사용하는 API Management 서비스 인스턴스와 독립적으로 캐시 크기를 조정하는 기능이 BYOC의 주요 이점입니다. 다른 계층과 달리 기본 제공 캐시가 제공되지 않으므로&rsquo; 소비 계층에서 응답 캐싱을 사용하도록 설정하는 유일한 옵션이기도 합니다. 기존 <a href=\"https://docs.microsoft.com/en-us/azure/api-management/api-management-caching-policies#CachingPolicies\" target=\"_blank\">캐싱 정책을</a> 수정하여 통합 및 외부 캐시 구성 모두에서 원활하게 작동하도록 했습니다.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/4359badb-d747-4ef9-aea3-05b57c7e9af1.png\"><img alt=\"Bring your own cache in the Consumption tier\" border=\"0\" height=\"568\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/76610001-5efe-4896-9caf-d1d91672af53.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"소비 계층에서 사용자 고유의 캐시 가져오기\" width=\"1233\"></a></p>\n\n<p><strong>더 유연한 구독:</strong> <a href=\"https://aka.ms/apimsubscriptions\">구독 </a>은 기본적으로 API 키 집합에 대한 명명된 컨테이너입니다(정확히 두 개 - 기본 및 보조). 이전에는 구독을 사용자가 소유하고 단일 API 제품 범위를 지원해야 했습니다. 키 관리를 간소화하기 위해 몇 가지 변경을&#39;. 이제 사용자와 연결되지 않은 독립 실행형&quot; 구독을 허용&quot;합니다. 또한 두 개의 구독 범위(모든 API 및 단일 API)를 추가했습니다. 이제 제품을 만들고 API(또는 모든 API)를 먼저 추가할 필요 없이 API(또는 API Management 인스턴스 내의 모든 API)에 대한 액세스 권한을 부여하는 키를 만들 수&#39;있습니다. 또한 각 API Management 인스턴스에는 이제 변경할 수 없는 모든 API 구독이 제공되므로 테스트 콘솔 내에서 API를 테스트하고 디버그하는 것이 훨씬 더 간단합니다.</p>\n\n<p><a href=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/a4e7db6f-410f-441b-bad3-ed9d4702937a.png\"><img alt=\"Subscription options\" border=\"0\" height=\"601\" src=\"https://azurecomcdn.azureedge.net/mediahandler/acomblog/media/Default/blog/c5ca1752-3d5b-44f0-a369-167045cf1ef2.png\" style=\"border: 0px currentcolor; border-image: none; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;\" title=\"구독 옵션\" width=\"1430\"></a></p>\n\n<h2>남은 작업 시간</h2>\n\n<p>우리는 지난 봄부터 소비 계층에서 작업해 왔으며 마침내 당신과 공유하게되어 매우 기쁩니다. 그러나 아직 해야 할 일이 남아 있습니다. 다음은 앞으로 몇 달 동안 예상되는 몇 가지 중요한 기능 및 개선 사항입니다.</p>\n\n<ul>\n <li>사용자 지정 호스트 이름 및 인증서</li>\n <li>&quot;더 높은 API Management 계층으로 원클릭&quot; 업그레이드</li>\n <li>더 빠른 프로비전 시간(&rsquo;이전 계층에 비해 이미 매우 빠르지만 더 향상되기를 희망합니다).</li>\n <li>&ldquo;콜드 시작&rdquo; 대기 시간 감소(아직 이 영역에서 많은 작업을 수행하지 않았으며&rsquo; 대기 시간은 필요한 위치와는 거리가 멀다).</li>\n <li>공용 Azure 지역의 광범위한 가용성(API Management 사용할 수 있는 모든 지역에서 사용 가능한 전체 소비 계층을 포함할 계획임)</li>\n <li>&ldquo;추가 서버리스 및 PaaS 리소스에 대한 API&rdquo; 환경 추가(API 추가 페이지에서 새 타일이 표시됨)</li>\n</ul>\n\n<h2>가용성</h2>\n\n<p>미국 중북부, 미국 서부, 서유럽, 북유럽, 동남 아시아 및 오스트레일리아 동부 지역에서 미리 보기로 <a href=\"https://aka.ms/apimpricing\" target=\"_blank\">소비 계층</a> 의 즉각적인 가용성을 발표하게 되어 기쁩니다.</p>\n\n<p><a href=\"https://portal.azure.com/#create/Microsoft.ApiManagement\" target=\"_blank\"></a> &ndash; 새 서비스를 <a href=\"https://docs.microsoft.com/en-us/azure/api-management/get-started-create-service-instance\" target=\"_blank\">만들고</a> <a href=\"https://docs.microsoft.com/en-us/azure/api-management/import-function-app-as-api\" target=\"_blank\">함수</a> 또는 <a href=\"https://docs.microsoft.com/en-us/azure/api-management/import-logic-app-as-api\" target=\"_blank\">논리 앱을</a> 가져와서 API를 게시하는 것이 얼마나 쉬운지 확인하세요.</p>\n\n<p>서버리스 API를 빌드하는 방법에 대해 자세히 알아보고 싶으신가요? 웹 세미나를 확인하고 Azure Functions &ldquo;<a href=\"https://info.microsoft.com/ww-ondemand-build-serverless-api-with-nodejs.html\" target=\"_blank\">Node.js 사용하여 서버리스 API를 빌드합니다</a>.&rdquo;</p>\n\n<p><a href=\"https://aka.ms/apimso\" target=\"_blank\">당신이 어떻게 생각하는지 알려주세요</a>!</p>\n\n<p style=\"text-align: center;\"><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"270\" scrolling=\"no\" src=\"https://channel9.msdn.com/Shows/Azure-Friday/Azure-API-Management-for-serverless-applications/player?format=ny\" width=\"480\"></iframe></p>\n"
}